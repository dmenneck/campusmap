"use strict";

var _react = _interopRequireDefault(require("react"));

var _TestUtil = _interopRequireDefault(require("../Util/TestUtil"));

var _Toolbar = _interopRequireDefault(require("./Toolbar"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

/*eslint-env jest*/
var testChildren = [_react["default"].createElement("div", {
  key: "testdiv1",
  id: "testdiv1"
}), _react["default"].createElement("div", {
  key: "testdiv2",
  id: "testdiv2"
}), _react["default"].createElement("div", {
  key: "testdiv3",
  id: "testdiv3"
})];
describe('<Toolbar />', function () {
  var wrapper;
  beforeEach(function () {
    wrapper = _TestUtil["default"].mountComponent(_Toolbar["default"]);
  });
  it('is defined', function () {
    expect(_Toolbar["default"]).not.toBeUndefined();
  });
  it('can be rendered', function () {
    expect(wrapper).not.toBeUndefined();
  });
  it('contains div having class "horizontal-toolbar" by default', function () {
    var rootDiv = wrapper.find('div.horizontal-toolbar');
    expect(rootDiv).not.toBeUndefined();
    expect(rootDiv.length).toBe(1);
  });
});
describe('<Toolbar /> - CSS-class "vertical-toolbar"', function () {
  var wrapper;
  beforeEach(function () {
    wrapper = _TestUtil["default"].mountComponent(_Toolbar["default"], {
      alignment: 'vertical',
      children: testChildren
    });
  });
  it('can be rendered', function () {
    expect(wrapper).not.toBeUndefined();
  });
  it('contains div having class "vertical-toolbar"', function () {
    var rootDiv = wrapper.find('div.vertical-toolbar');
    expect(rootDiv).not.toBeUndefined();
    expect(rootDiv.length).toBe(1);
  });
  it('contains three child elements', function () {
    var rootDivChildren = wrapper.find('div.vertical-toolbar').children();
    expect(rootDivChildren).toBeTruthy();
    expect(rootDivChildren.getElements().length).toBe(3);
  });
});
describe('<Toolbar /> - CSS-class "horizontal-toolbar"', function () {
  var wrapper;
  beforeEach(function () {
    wrapper = _TestUtil["default"].mountComponent(_Toolbar["default"], {
      alignment: 'horizontal',
      children: testChildren
    });
  });
  it('can be rendered', function () {
    expect(wrapper).not.toBeUndefined();
  });
  it('contains div having class "horizontal-toolbar"', function () {
    var rootDiv = wrapper.find('div.horizontal-toolbar');
    expect(rootDiv).not.toBeUndefined();
    expect(rootDiv.length).toBe(1);
  });
  it('contains three child elements', function () {
    var rootDivChildren = wrapper.find('div.horizontal-toolbar').children();
    expect(rootDivChildren).toBeTruthy();
    expect(rootDivChildren.getElements()).toHaveLength(3);
  });
});