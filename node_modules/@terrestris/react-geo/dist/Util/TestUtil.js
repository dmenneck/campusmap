"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.TestUtil = void 0;

var _react = _interopRequireDefault(require("react"));

var _enzyme = require("enzyme");

var _View = _interopRequireDefault(require("ol/View"));

var _Map = _interopRequireDefault(require("ol/Map"));

var _Vector = _interopRequireDefault(require("ol/source/Vector"));

var _Vector2 = _interopRequireDefault(require("ol/layer/Vector"));

var _Feature = _interopRequireDefault(require("ol/Feature"));

var _Point = _interopRequireDefault(require("ol/geom/Point"));

var _PointerEvent = _interopRequireDefault(require("ol/pointer/PointerEvent"));

var _MapBrowserPointerEvent = _interopRequireDefault(require("ol/MapBrowserPointerEvent"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/**
 * A set of some useful static helper methods.
 *
 * @class
 */
var TestUtil = function TestUtil() {
  _classCallCheck(this, TestUtil);
};

exports.TestUtil = TestUtil;

_defineProperty(TestUtil, "mapDivId", 'map');

_defineProperty(TestUtil, "mapDivHeight", 256);

_defineProperty(TestUtil, "mapDivWidth", 256);

_defineProperty(TestUtil, "mountComponent", function (Component, props, options) {
  var wrapper = (0, _enzyme.mount)(_react["default"].createElement(Component, props), options);
  return wrapper;
});

_defineProperty(TestUtil, "mountMapDiv", function () {
  var div = document.createElement('div');
  var style = div.style;
  style.position = 'absolute';
  style.left = '-1000px';
  style.top = '-1000px';
  style.width = TestUtil.mapDivWidth + 'px';
  style.height = TestUtil.mapDivHeight + 'px';
  div.id = TestUtil.mapDivId;
  document.body.appendChild(div);
  return div;
});

_defineProperty(TestUtil, "unmountMapDiv", function () {
  var div = document.querySelector("div#".concat(TestUtil.mapDivId));

  if (!div) {
    return;
  }

  var parent = div.parentNode;

  if (parent) {
    parent.removeChild(div);
  }

  div = null;
});

_defineProperty(TestUtil, "createMap", function (mapOpts) {
  var source = new _Vector["default"]();
  var layer = new _Vector2["default"]({
    source: source
  });
  var targetDiv = TestUtil.mountMapDiv();
  var defaultMapOpts = {
    target: targetDiv,
    layers: [layer],
    view: new _View["default"]({
      center: [829729, 6708850],
      resolution: 1,
      resolutions: mapOpts ? mapOpts.resolutions : undefined
    })
  };
  Object.assign(defaultMapOpts, mapOpts);
  var map = new _Map["default"](defaultMapOpts);
  map.renderSync();
  return map;
});

_defineProperty(TestUtil, "removeMap", function (map) {
  if (map instanceof _Map["default"]) {
    map.dispose();
  }

  TestUtil.unmountMapDiv();
});

_defineProperty(TestUtil, "simulatePointerEvent", function (map, type, x, y, opt_shiftKey, dragging) {
  var viewport = map.getViewport(); // Calculated in case body has top < 0 (test runner with small window).

  var position = viewport.getBoundingClientRect();
  var shiftKey = opt_shiftKey !== undefined ? opt_shiftKey : false;
  var event = new _PointerEvent["default"](type, {
    clientX: position.left + x + TestUtil.mapDivWidth / 2,
    clientY: position.top + y + TestUtil.mapDivHeight / 2,
    shiftKey: shiftKey
  });
  map.handleMapBrowserEvent(new _MapBrowserPointerEvent["default"](type, map, event, dragging));
});

_defineProperty(TestUtil, "createVectorLayer", function (properties) {
  var source = new _Vector["default"]();
  var layer = new _Vector2["default"]({
    source: source
  });
  layer.setProperties(properties);
  return layer;
});

_defineProperty(TestUtil, "generatePointFeature", function () {
  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {
    ATTR_1: Math.random() * 100,
    ATTR_2: 'Borsigplatz 9',
    ATTR_3: 'Dortmund'
  };
  var coords = [Math.floor(Math.random() * 180) - 180, Math.floor(Math.random() * 90) - 90];
  var geom = new _Point["default"](coords);
  var feat = new _Feature["default"]({
    geometry: geom
  });
  feat.setProperties(props);
  return feat;
});

var _default = TestUtil;
exports["default"] = _default;