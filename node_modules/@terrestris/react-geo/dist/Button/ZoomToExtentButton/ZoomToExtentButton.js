"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _Map = _interopRequireDefault(require("ol/Map"));

var _SimpleGeometry = _interopRequireDefault(require("ol/geom/SimpleGeometry"));

var _easing = require("ol/easing");

var _SimpleButton = _interopRequireDefault(require("../SimpleButton/SimpleButton"));

var _constants = require("../../constants");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { if (i % 2) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } else { Object.defineProperties(target, Object.getOwnPropertyDescriptors(arguments[i])); } } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/**
 * Class representing a zoom to extent button.
 *
 *
 * @class The ZoomToExtentButton
 * @extends React.Component
 */
var ZoomToExtentButton =
/*#__PURE__*/
function (_React$Component) {
  _inherits(ZoomToExtentButton, _React$Component);

  function ZoomToExtentButton() {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck(this, ZoomToExtentButton);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ZoomToExtentButton)).call.apply(_getPrototypeOf2, [this].concat(args)));

    _defineProperty(_assertThisInitialized(_this), "className", "".concat(_constants.CSS_PREFIX, "zoomtoextentbutton"));

    return _this;
  }

  _createClass(ZoomToExtentButton, [{
    key: "onClick",
    value: function onClick() {
      var _this$props = this.props,
          map = _this$props.map,
          extent = _this$props.extent,
          fitOptions = _this$props.fitOptions;
      var view = map.getView();
      var defaultFitOptions = ZoomToExtentButton.defaultProps.fitOptions;

      if (!view) {
        // no view, no zooming
        return;
      }

      if (view.getAnimating()) {
        view.cancelAnimations();
      }

      var finalFitOptions = _objectSpread({}, defaultFitOptions, {}, fitOptions);

      view.fit(extent, finalFitOptions);
    }
    /**
     * The render function.
     */

  }, {
    key: "render",
    value: function render() {
      var _this$props2 = this.props,
          className = _this$props2.className,
          fitOptions = _this$props2.fitOptions,
          passThroughProps = _objectWithoutProperties(_this$props2, ["className", "fitOptions"]);

      var finalClassName = className ? "".concat(className, " ").concat(this.className) : this.className;
      return _react["default"].createElement(_SimpleButton["default"], _extends({
        className: finalClassName,
        onClick: this.onClick.bind(this)
      }, passThroughProps));
    }
  }]);

  return ZoomToExtentButton;
}(_react["default"].Component);

_defineProperty(ZoomToExtentButton, "propTypes", {
  /**
   * The className which should be added.
   * @type {String}
   */
  className: _propTypes["default"].string,

  /**
   * Instance of OL map this component is bound to.
   * @type {ol.Map}
   */
  map: _propTypes["default"].instanceOf(_Map["default"]).isRequired,

  /**
   * The extent `[minx, miny, maxx, maxy]` in the maps coordinate system or an
   * instance of ol.geom.SimpleGeometry that the map should zoom to.
   * @type {Array<Number>|OlSimpleGeometry}
   */
  extent: _propTypes["default"].oneOfType([_propTypes["default"].arrayOf(_propTypes["default"].number), _propTypes["default"].instanceOf(_SimpleGeometry["default"])]).isRequired,

  /**
   * Options for fitting to the given extent. See
   * https://openlayers.org/en/latest/apidoc/module-ol_View-View.html#fit
   * @type {Object}
   */
  fitOptions: _propTypes["default"].object
  /**
   * The default properties.
   * @type {Object}
   */

});

_defineProperty(ZoomToExtentButton, "defaultProps", {
  fitOptions: {
    constrainResolution: false,
    duration: 250,
    easing: _easing.easeOut
  }
  /**
   * Called when the button is clicked.
   *
   * @method
   */

});

var _default = ZoomToExtentButton;
exports["default"] = _default;