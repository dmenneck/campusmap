"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.CircleMenuItem = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _constants = require("../../constants");

require("./CircleMenuItem.less");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/**
 * The CircleMenuItem.
 *
 * @class CircleMenuItem
 * @extends React.Component
 */
var CircleMenuItem =
/*#__PURE__*/
function (_React$Component) {
  _inherits(CircleMenuItem, _React$Component);

  function CircleMenuItem() {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck(this, CircleMenuItem);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CircleMenuItem)).call.apply(_getPrototypeOf2, [this].concat(args)));

    _defineProperty(_assertThisInitialized(_this), "className", "".concat(_constants.CSS_PREFIX, "circlemenuitem"));

    _defineProperty(_assertThisInitialized(_this), "_ref", null);

    return _this;
  }

  _createClass(CircleMenuItem, [{
    key: "componentDidMount",

    /**
     * A react lifecycle method called when the component did mount.
     * It calls the applyTransformation method right after updating.
     */
    value: function componentDidMount() {
      setTimeout(this.applyTransformation.bind(this), 1);
    }
    /**
     * A react lifecycle method called when the component did update.
     * It calls the applyTransformation method right after updating.
     */

  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      setTimeout(this.applyTransformation.bind(this), 1);
    }
    /**
     * Applies the transformation to the component.
     */

  }, {
    key: "applyTransformation",
    value: function applyTransformation() {
      var _this$props = this.props,
          rotationAngle = _this$props.rotationAngle,
          radius = _this$props.radius;
      this._ref.style.transform = "rotate(".concat(rotationAngle, "deg) translate(").concat(radius, "px) rotate(-").concat(rotationAngle, "deg)");
    }
    /**
     * The render function.
     */

  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props2 = this.props,
          rotationAngle = _this$props2.rotationAngle,
          radius = _this$props2.radius,
          animationDuration = _this$props2.animationDuration,
          className = _this$props2.className,
          passThroughProps = _objectWithoutProperties(_this$props2, ["rotationAngle", "radius", "animationDuration", "className"]);

      var finalClassName = className ? "".concat(className, " ").concat(this.className) : this.className;
      return _react["default"].createElement("div", _extends({
        className: finalClassName,
        ref: function ref(i) {
          return _this2._ref = i;
        },
        style: {
          display: 'block',
          top: '50%',
          left: '50%',
          margin: '-1.3em',
          position: 'absolute',
          transform: 'rotate(0deg) translate(0px) rotate(0deg)',
          transition: "transform ".concat(animationDuration, "ms")
        }
      }, passThroughProps), this.props.children);
    }
  }]);

  return CircleMenuItem;
}(_react["default"].Component);

exports.CircleMenuItem = CircleMenuItem;

_defineProperty(CircleMenuItem, "propTypes", {
  className: _propTypes["default"].string,

  /**
   * The duration of the animation in milliseconds. Pass 0 to avoid animation.
   * Default is 300.
   *
   * @type {Number}
   */
  animationDuration: _propTypes["default"].number,

  /**
   * The radius of the CircleMenu in pixels.
   *
   * @type {Number}
   */
  radius: _propTypes["default"].number.isRequired,

  /**
   * The children of the CircleMenuItem. Should be just one Node.
   *
   * @type {Node}
   */
  children: _propTypes["default"].node,

  /**
   * The rotation Angle in degree.
   *
   * @type {Number}
   */
  rotationAngle: _propTypes["default"].number.isRequired
});

_defineProperty(CircleMenuItem, "defaultProps", {
  animationDuration: 300
});

var _default = CircleMenuItem;
exports["default"] = _default;