{"ast":null,"code":"/**\n * @module ol/render/canvas\n */\nimport { getFontFamilies } from '../css.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { clear } from '../obj.js';\nimport LRUCache from '../structs/LRUCache.js';\nimport { create as createTransform } from '../transform.js';\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle]\n * @property {string} [currentLineCap]\n * @property {Array<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {string} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {string} [lineCap]\n * @property {Array<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {string} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {string} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n * @property {string} [placement]\n * @property {number} [maxAngle]\n * @property {boolean} [overflow]\n * @property {import(\"../style/Fill.js\").default} [backgroundFill]\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke]\n * @property {number} [scale]\n * @property {Array<number>} [padding]\n */\n\n/**\n * Container for decluttered replay instructions that need to be rendered or\n * omitted together, i.e. when styles render both an image and text, or for the\n * characters that form text along lines. The basic elements of this array are\n * `[minX, minY, maxX, maxY, count]`, where the first four entries are the\n * rendered extent of the group in pixel space. `count` is the number of styles\n * in the group, i.e. 2 when an image and a text are grouped, or 1 otherwise.\n * In addition to these four elements, declutter instruction arrays (i.e. the\n * arguments to {@link module:ol/render/canvas~drawImage} are appended to the array.\n * @typedef {Array<*>} DeclutterGroup\n */\n\n/**\n * @const\n * @type {string}\n */\n\nexport var defaultFont = '10px sans-serif';\n/**\n * @const\n * @type {import(\"../color.js\").Color}\n */\n\nexport var defaultFillStyle = [0, 0, 0, 1];\n/**\n * @const\n * @type {string}\n */\n\nexport var defaultLineCap = 'round';\n/**\n * @const\n * @type {Array<number>}\n */\n\nexport var defaultLineDash = [];\n/**\n * @const\n * @type {number}\n */\n\nexport var defaultLineDashOffset = 0;\n/**\n * @const\n * @type {string}\n */\n\nexport var defaultLineJoin = 'round';\n/**\n * @const\n * @type {number}\n */\n\nexport var defaultMiterLimit = 10;\n/**\n * @const\n * @type {import(\"../color.js\").Color}\n */\n\nexport var defaultStrokeStyle = [0, 0, 0, 1];\n/**\n * @const\n * @type {string}\n */\n\nexport var defaultTextAlign = 'center';\n/**\n * @const\n * @type {string}\n */\n\nexport var defaultTextBaseline = 'middle';\n/**\n * @const\n * @type {Array<number>}\n */\n\nexport var defaultPadding = [0, 0, 0, 0];\n/**\n * @const\n * @type {number}\n */\n\nexport var defaultLineWidth = 1;\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * @type {LRUCache<HTMLCanvasElement>}\n * @api\n */\n\nexport var labelCache = new LRUCache();\n/**\n * @type {!Object<string, number>}\n */\n\nexport var checkedFonts = {};\n/**\n * @type {CanvasRenderingContext2D}\n */\n\nvar measureContext = null;\n/**\n * @type {!Object<string, number>}\n */\n\nexport var textHeights = {};\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\n\nexport var checkFont = function () {\n  var retries = 60;\n  var checked = checkedFonts;\n  var size = '32px ';\n  var referenceFonts = ['monospace', 'serif'];\n  var len = referenceFonts.length;\n  var text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  var interval, referenceWidth;\n\n  function isAvailable(font) {\n    var context = getMeasureContext(); // Check weight ranges according to\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Fallback_weights\n\n    for (var weight = 100; weight <= 700; weight += 300) {\n      var fontWeight = weight + ' ';\n      var available = true;\n\n      for (var i = 0; i < len; ++i) {\n        var referenceFont = referenceFonts[i];\n        context.font = fontWeight + size + referenceFont;\n        referenceWidth = context.measureText(text).width;\n\n        if (font != referenceFont) {\n          context.font = fontWeight + size + font + ',' + referenceFont;\n          var width = context.measureText(text).width; // If width and referenceWidth are the same, then the fallback was used\n          // instead of the font we wanted, so the font is not available.\n\n          available = available && width != referenceWidth;\n        }\n      }\n\n      if (available) {\n        // Consider font available when it is available in one weight range.\n        //FIXME With this we miss rare corner cases, so we should consider\n        //FIXME checking availability for each requested weight range.\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  function check() {\n    var done = true;\n\n    for (var font in checked) {\n      if (checked[font] < retries) {\n        if (isAvailable(font)) {\n          checked[font] = retries;\n          clear(textHeights); // Make sure that loaded fonts are picked up by Safari\n\n          measureContext = null;\n          labelCache.clear();\n        } else {\n          ++checked[font];\n          done = false;\n        }\n      }\n    }\n\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    var fontFamilies = getFontFamilies(fontSpec);\n\n    if (!fontFamilies) {\n      return;\n    }\n\n    for (var i = 0, ii = fontFamilies.length; i < ii; ++i) {\n      var fontFamily = fontFamilies[i];\n\n      if (!(fontFamily in checked)) {\n        checked[fontFamily] = retries;\n\n        if (!isAvailable(fontFamily)) {\n          checked[fontFamily] = 0;\n\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n}();\n/**\n * @return {CanvasRenderingContext2D} Measure context.\n */\n\nfunction getMeasureContext() {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n\n  return measureContext;\n}\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\n\n\nexport var measureTextHeight = function () {\n  var span;\n  var heights = textHeights;\n  return function (font) {\n    var height = heights[font];\n\n    if (height == undefined) {\n      if (!span) {\n        span = document.createElement('span');\n        span.textContent = 'M';\n        span.style.margin = span.style.padding = '0 !important';\n        span.style.position = 'absolute !important';\n        span.style.left = '-99999px !important';\n      }\n\n      span.style.font = font;\n      document.body.appendChild(span);\n      height = heights[font] = span.offsetHeight;\n      document.body.removeChild(span);\n    }\n\n    return height;\n  };\n}();\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\n\nexport function measureTextWidth(font, text) {\n  var measureContext = getMeasureContext();\n\n  if (font != measureContext.font) {\n    measureContext.font = font;\n  }\n\n  return measureContext.measureText(text).width;\n}\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\n\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\nexport var resetTransform = createTransform();\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} scale Scale.\n */\n\nexport function drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale) {\n  var alpha;\n\n  if (opacity != 1) {\n    alpha = context.globalAlpha;\n    context.globalAlpha = alpha * opacity;\n  }\n\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  context.drawImage(image, originX, originY, w, h, x, y, w * scale, h * scale);\n\n  if (alpha) {\n    context.globalAlpha = alpha;\n  }\n\n  if (transform) {\n    context.setTransform.apply(context, resetTransform);\n  }\n}","map":{"version":3,"sources":["../../../src/ol/render/canvas.js"],"names":["const","let"],"mappings":"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","sourcesContent":["/**\n * @module ol/render/canvas\n */\nimport {getFontFamilies} from '../css.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {clear} from '../obj.js';\nimport LRUCache from '../structs/LRUCache.js';\nimport {create as createTransform} from '../transform.js';\n\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle\n */\n\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle]\n * @property {string} [currentLineCap]\n * @property {Array<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {string} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {string} [lineCap]\n * @property {Array<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {string} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n\n\n/**\n * @typedef {Object} StrokeState\n * @property {string} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle\n */\n\n\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n * @property {string} [placement]\n * @property {number} [maxAngle]\n * @property {boolean} [overflow]\n * @property {import(\"../style/Fill.js\").default} [backgroundFill]\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke]\n * @property {number} [scale]\n * @property {Array<number>} [padding]\n */\n\n\n/**\n * Container for decluttered replay instructions that need to be rendered or\n * omitted together, i.e. when styles render both an image and text, or for the\n * characters that form text along lines. The basic elements of this array are\n * `[minX, minY, maxX, maxY, count]`, where the first four entries are the\n * rendered extent of the group in pixel space. `count` is the number of styles\n * in the group, i.e. 2 when an image and a text are grouped, or 1 otherwise.\n * In addition to these four elements, declutter instruction arrays (i.e. the\n * arguments to {@link module:ol/render/canvas~drawImage} are appended to the array.\n * @typedef {Array<*>} DeclutterGroup\n */\n\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n\n/**\n * @const\n * @type {import(\"../color.js\").Color}\n */\nexport const defaultFillStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultLineCap = 'round';\n\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultLineJoin = 'round';\n\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n\n/**\n * @const\n * @type {import(\"../color.js\").Color}\n */\nexport const defaultStrokeStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextAlign = 'center';\n\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextBaseline = 'middle';\n\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * @type {LRUCache<HTMLCanvasElement>}\n * @api\n */\nexport const labelCache = new LRUCache();\n\n\n/**\n * @type {!Object<string, number>}\n */\nexport const checkedFonts = {};\n\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const checkFont = (function() {\n  const retries = 60;\n  const checked = checkedFonts;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  function isAvailable(font) {\n    const context = getMeasureContext();\n    // Check weight ranges according to\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Fallback_weights\n    for (let weight = 100; weight <= 700; weight += 300) {\n      const fontWeight = weight + ' ';\n      let available = true;\n      for (let i = 0; i < len; ++i) {\n        const referenceFont = referenceFonts[i];\n        context.font = fontWeight + size + referenceFont;\n        referenceWidth = context.measureText(text).width;\n        if (font != referenceFont) {\n          context.font = fontWeight + size + font + ',' + referenceFont;\n          const width = context.measureText(text).width;\n          // If width and referenceWidth are the same, then the fallback was used\n          // instead of the font we wanted, so the font is not available.\n          available = available && width != referenceWidth;\n        }\n      }\n      if (available) {\n        // Consider font available when it is available in one weight range.\n        //FIXME With this we miss rare corner cases, so we should consider\n        //FIXME checking availability for each requested weight range.\n        return true;\n      }\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    for (const font in checked) {\n      if (checked[font] < retries) {\n        if (isAvailable(font)) {\n          checked[font] = retries;\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          labelCache.clear();\n        } else {\n          ++checked[font];\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function(fontSpec) {\n    const fontFamilies = getFontFamilies(fontSpec);\n    if (!fontFamilies) {\n      return;\n    }\n    for (let i = 0, ii = fontFamilies.length; i < ii; ++i) {\n      const fontFamily = fontFamilies[i];\n      if (!(fontFamily in checked)) {\n        checked[fontFamily] = retries;\n        if (!isAvailable(fontFamily)) {\n          checked[fontFamily] = 0;\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n\n/**\n * @return {CanvasRenderingContext2D} Measure context.\n */\nfunction getMeasureContext() {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  return measureContext;\n}\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function() {\n  let span;\n  const heights = textHeights;\n  return function(font) {\n    let height = heights[font];\n    if (height == undefined) {\n      if (!span) {\n        span = document.createElement('span');\n        span.textContent = 'M';\n        span.style.margin = span.style.padding = '0 !important';\n        span.style.position = 'absolute !important';\n        span.style.left = '-99999px !important';\n      }\n      span.style.font = font;\n      document.body.appendChild(span);\n      height = heights[font] = span.offsetHeight;\n      document.body.removeChild(span);\n    }\n    return height;\n  };\n})();\n\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  const measureContext = getMeasureContext();\n  if (font != measureContext.font) {\n    measureContext.font = font;\n  }\n  return measureContext.measureText(text).width;\n}\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n\nexport const resetTransform = createTransform();\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} scale Scale.\n */\nexport function drawImage(context,\n  transform, opacity, image, originX, originY, w, h, x, y, scale) {\n  let alpha;\n  if (opacity != 1) {\n    alpha = context.globalAlpha;\n    context.globalAlpha = alpha * opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  context.drawImage(image, originX, originY, w, h, x, y, w * scale, h * scale);\n\n  if (alpha) {\n    context.globalAlpha = alpha;\n  }\n  if (transform) {\n    context.setTransform.apply(context, resetTransform);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}