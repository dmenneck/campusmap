{"ast":null,"code":"/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\n\nvar DoubleClickZoom =\n/*@__PURE__*/\nfunction (Interaction) {\n  function DoubleClickZoom(opt_options) {\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n    var options = opt_options ? opt_options : {};\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.delta_ = options.delta ? options.delta : 1;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  if (Interaction) DoubleClickZoom.__proto__ = Interaction;\n  DoubleClickZoom.prototype = Object.create(Interaction && Interaction.prototype);\n  DoubleClickZoom.prototype.constructor = DoubleClickZoom;\n  return DoubleClickZoom;\n}(Interaction);\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n * doubleclick) and eventually zooms the map.\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {DoubleClickZoom}\n */\n\n\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n\n  if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n    var browserEvent =\n    /** @type {MouseEvent} */\n    mapBrowserEvent.originalEvent;\n    var map = mapBrowserEvent.map;\n    var anchor = mapBrowserEvent.coordinate;\n    var delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n    var view = map.getView();\n    zoomByDelta(view, delta, anchor, this.duration_);\n    mapBrowserEvent.preventDefault();\n    stopEvent = true;\n  }\n\n  return !stopEvent;\n}\n\nexport default DoubleClickZoom;","map":{"version":3,"sources":["../../../src/ol/interaction/DoubleClickZoom.js"],"names":["super","const","let"],"mappings":"AAAA;;;AAGA,OAAO,mBAAP,MAAgC,2BAAhC;AACA,OAAO,WAAP,IAAqB,WAArB,QAAuC,kBAAvC;;;;;;;;;;;;;AAeA,IAAM,eAAe;AAAoB;AAAA,UAAA,WAAA,EAAA;AAKvC,WAAA,eAAA,CAAY,WAAZ,EAAyB;AACvBA,IAAAA,WAAAA,CAAAA,IAAAA,CAAK,IAALA,EAAM;AACJ,MAAA,WAAW,EAAE;AADT,KAANA;AAIAC,QAAM,OAAO,GAAG,WAAW,GAAG,WAAH,GAAiB,EAA5CA;;;;;;AAMA,SAAK,MAAL,GAAc,OAAO,CAAC,KAAR,GAAgB,OAAO,CAAC,KAAxB,GAAgC,CAA9C;;;;;;AAMA,SAAK,SAAL,GAAiB,OAAO,CAAC,QAAR,KAAqB,SAArB,GAAiC,OAAO,CAAC,QAAzC,GAAoD,GAArE;;;;;AAED,EAAA,eAAA,CAAA,SAAA,CAAA,WAAA,GAAA,eAAA;;CAxBsC,CAAX,WAAW,CAAzC;;;;;;;;;;AAoCA,SAAS,WAAT,CAAqB,eAArB,EAAsC;AACpCC,MAAI,SAAS,GAAG,KAAhBA;;AACA,MAAI,eAAe,CAAC,IAAhB,IAAwB,mBAAmB,CAAC,QAAhD,EAA0D;AACxDD,QAAM,YAAY;AAAA;AAA8B,IAAA,eAAe,CAAC,aAAhEA;AACAA,QAAM,GAAG,GAAG,eAAe,CAAC,GAA5BA;AACAA,QAAM,MAAM,GAAG,eAAe,CAAC,UAA/BA;AACAA,QAAM,KAAK,GAAG,YAAY,CAAC,QAAb,GAAwB,CAAC,KAAK,MAA9B,GAAuC,KAAK,MAA1DA;AACAA,QAAM,IAAI,GAAG,GAAG,CAAC,OAAJ,EAAbA;AACA,IAAA,WAAW,CAAC,IAAD,EAAO,KAAP,EAAc,MAAd,EAAsB,KAAK,SAA3B,CAAX;AACA,IAAA,eAAe,CAAC,cAAhB;AACA,IAAA,SAAS,GAAG,IAAZ;AACD;;AACD,SAAO,CAAC,SAAR;AACD;;AAED,eAAe,eAAf","sourcesContent":["/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    super({\n      handleEvent: handleEvent\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n}\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n * doubleclick) and eventually zooms the map.\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {DoubleClickZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  let stopEvent = false;\n  if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n    const browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n    const map = mapBrowserEvent.map;\n    const anchor = mapBrowserEvent.coordinate;\n    const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n    const view = map.getView();\n    zoomByDelta(view, delta, anchor, this.duration_);\n    mapBrowserEvent.preventDefault();\n    stopEvent = true;\n  }\n  return !stopEvent;\n}\n\nexport default DoubleClickZoom;\n"]},"metadata":{},"sourceType":"module"}