{"ast":null,"code":"/**\n * @module ol/render/Event\n */\nimport { inherits } from '../util.js';\nimport Event from '../events/Event.js';\n/**\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {module:ol/render/EventType} type Type.\n * @param {module:ol/render/VectorContext=} opt_vectorContext Vector context.\n * @param {module:ol/PluggableMap~FrameState=} opt_frameState Frame state.\n * @param {?CanvasRenderingContext2D=} opt_context Context.\n * @param {?module:ol/webgl/Context=} opt_glContext WebGL Context.\n */\n\nconst RenderEvent = function (type, opt_vectorContext, opt_frameState, opt_context, opt_glContext) {\n  Event.call(this, type);\n  /**\n   * For canvas, this is an instance of {@link module:ol/render/canvas/Immediate}.\n   * @type {module:ol/render/VectorContext|undefined}\n   * @api\n   */\n\n  this.vectorContext = opt_vectorContext;\n  /**\n   * An object representing the current render frame state.\n   * @type {module:ol/PluggableMap~FrameState|undefined}\n   * @api\n   */\n\n  this.frameState = opt_frameState;\n  /**\n   * Canvas context. Only available when a Canvas renderer is used, null\n   * otherwise.\n   * @type {CanvasRenderingContext2D|null|undefined}\n   * @api\n   */\n\n  this.context = opt_context;\n  /**\n   * WebGL context. Only available when a WebGL renderer is used, null\n   * otherwise.\n   * @type {module:ol/webgl/Context|null|undefined}\n   * @api\n   */\n\n  this.glContext = opt_glContext;\n};\n\ninherits(RenderEvent, Event);\nexport default RenderEvent;","map":null,"metadata":{},"sourceType":"module"}