{"ast":null,"code":"/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.2.2\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar events_1 = require(\"../events\");\n\nvar propertyKeys_1 = require(\"../propertyKeys\");\n\nvar gridOptionsWrapper_1 = require(\"../gridOptionsWrapper\");\n\nvar utils_1 = require(\"../utils\");\n\nvar ComponentUtil =\n/** @class */\nfunction () {\n  function ComponentUtil() {}\n\n  ComponentUtil.getEventCallbacks = function () {\n    if (!ComponentUtil.EVENT_CALLBACKS) {\n      ComponentUtil.EVENT_CALLBACKS = [];\n      ComponentUtil.EVENT_CALLBACKS_NO_PREFIX = [];\n      ComponentUtil.EVENTS.forEach(function (eventName) {\n        ComponentUtil.EVENT_CALLBACKS.push(ComponentUtil.getCallbackForEvent(eventName));\n        ComponentUtil.EVENT_CALLBACKS_NO_PREFIX.push(eventName);\n      });\n    }\n\n    return ComponentUtil.EVENT_CALLBACKS;\n  };\n\n  ComponentUtil.copyAttributesToGridOptions = function (gridOptions, component, skipEventDeprecationCheck) {\n    if (skipEventDeprecationCheck === void 0) {\n      skipEventDeprecationCheck = false;\n    }\n\n    checkForDeprecated(component); // create empty grid options if none were passed\n\n    if (typeof gridOptions !== 'object') {\n      gridOptions = {};\n    } // to allow array style lookup in TypeScript, take type away from 'this' and 'gridOptions'\n\n\n    var pGridOptions = gridOptions; // add in all the simple properties\n\n    ComponentUtil.ARRAY_PROPERTIES.concat(ComponentUtil.STRING_PROPERTIES).concat(ComponentUtil.OBJECT_PROPERTIES).concat(ComponentUtil.FUNCTION_PROPERTIES).forEach(function (key) {\n      if (typeof component[key] !== 'undefined') {\n        pGridOptions[key] = component[key];\n      }\n    });\n    ComponentUtil.BOOLEAN_PROPERTIES.forEach(function (key) {\n      if (typeof component[key] !== 'undefined') {\n        pGridOptions[key] = ComponentUtil.toBoolean(component[key]);\n      }\n    });\n    ComponentUtil.NUMBER_PROPERTIES.forEach(function (key) {\n      if (typeof component[key] !== 'undefined') {\n        pGridOptions[key] = ComponentUtil.toNumber(component[key]);\n      }\n    });\n    ComponentUtil.getEventCallbacks().forEach(function (funcName) {\n      if (typeof component[funcName] !== 'undefined') {\n        pGridOptions[funcName] = component[funcName];\n      }\n    }); // purely for event deprecation checks (for frameworks - wouldn't apply for non-fw versions)\n\n    if (!skipEventDeprecationCheck) {\n      ComponentUtil.EVENT_CALLBACKS_NO_PREFIX.forEach(function (funcName) {\n        // react uses onXXX...not sure why this is diff to the other frameworks\n        var onMethodName = ComponentUtil.getCallbackForEvent(funcName);\n\n        if (typeof component[funcName] !== 'undefined' || typeof component[onMethodName] !== 'undefined') {\n          gridOptionsWrapper_1.GridOptionsWrapper.checkEventDeprecation(funcName);\n        }\n      });\n    }\n\n    return gridOptions;\n  };\n\n  ComponentUtil.getCallbackForEvent = function (eventName) {\n    if (!eventName || eventName.length < 2) {\n      return eventName;\n    } else {\n      return 'on' + eventName[0].toUpperCase() + eventName.substr(1);\n    }\n  };\n\n  ComponentUtil.processOnChange = function (changes, gridOptions, api, columnApi) {\n    if (!changes) {\n      return;\n    }\n\n    checkForDeprecated(changes); // to allow array style lookup in TypeScript, take type away from 'this' and 'gridOptions'\n\n    var pGridOptions = gridOptions; // check if any change for the simple types, and if so, then just copy in the new value\n\n    ComponentUtil.ARRAY_PROPERTIES.concat(ComponentUtil.OBJECT_PROPERTIES).concat(ComponentUtil.STRING_PROPERTIES).forEach(function (key) {\n      if (changes[key]) {\n        pGridOptions[key] = changes[key].currentValue;\n      }\n    });\n    ComponentUtil.BOOLEAN_PROPERTIES.forEach(function (key) {\n      if (changes[key]) {\n        pGridOptions[key] = ComponentUtil.toBoolean(changes[key].currentValue);\n      }\n    });\n    ComponentUtil.NUMBER_PROPERTIES.forEach(function (key) {\n      if (changes[key]) {\n        pGridOptions[key] = ComponentUtil.toNumber(changes[key].currentValue);\n      }\n    });\n    ComponentUtil.getEventCallbacks().forEach(function (funcName) {\n      if (changes[funcName]) {\n        pGridOptions[funcName] = changes[funcName].currentValue;\n      }\n    });\n\n    if (changes.enableCellTextSelection) {\n      api.setEnableCellTextSelection(ComponentUtil.toBoolean(changes.enableCellTextSelection.currentValue));\n    }\n\n    if (changes.showToolPanel) {\n      api.showToolPanel(ComponentUtil.toBoolean(changes.showToolPanel.currentValue));\n    }\n\n    if (changes.quickFilterText) {\n      api.setQuickFilter(changes.quickFilterText.currentValue);\n    }\n\n    if (changes.rowData) {\n      api.setRowData(changes.rowData.currentValue);\n    }\n\n    if (changes.pinnedTopRowData) {\n      api.setPinnedTopRowData(changes.pinnedTopRowData.currentValue);\n    }\n\n    if (changes.pinnedBottomRowData) {\n      api.setPinnedBottomRowData(changes.pinnedBottomRowData.currentValue);\n    }\n\n    if (changes.columnDefs) {\n      api.setColumnDefs(changes.columnDefs.currentValue, \"gridOptionsChanged\");\n    }\n\n    if (changes.datasource) {\n      api.setDatasource(changes.datasource.currentValue);\n    }\n\n    if (changes.headerHeight) {\n      api.setHeaderHeight(ComponentUtil.toNumber(changes.headerHeight.currentValue));\n    }\n\n    if (changes.paginationPageSize) {\n      api.paginationSetPageSize(ComponentUtil.toNumber(changes.paginationPageSize.currentValue));\n    }\n\n    if (changes.pivotMode) {\n      columnApi.setPivotMode(ComponentUtil.toBoolean(changes.pivotMode.currentValue));\n    }\n\n    if (changes.groupRemoveSingleChildren) {\n      api.setGroupRemoveSingleChildren(ComponentUtil.toBoolean(changes.groupRemoveSingleChildren.currentValue));\n    }\n\n    if (changes.suppressRowDrag) {\n      api.setSuppressRowDrag(ComponentUtil.toBoolean(changes.suppressRowDrag.currentValue));\n    }\n\n    if (changes.gridAutoHeight) {\n      api.setGridAutoHeight(ComponentUtil.toBoolean(changes.gridAutoHeight.currentValue));\n    }\n\n    if (changes.suppressClipboardPaste) {\n      api.setSuppressClipboardPaste(ComponentUtil.toBoolean(changes.suppressClipboardPaste.currentValue));\n    }\n\n    if (changes.sideBar) {\n      api.setSideBar(changes.sideBar.currentValue);\n    }\n\n    if (changes.datasource) {\n      api.setDatasource(changes.datasource.currentValue);\n    } // copy changes into an event for dispatch\n\n\n    var event = {\n      type: events_1.Events.EVENT_COMPONENT_STATE_CHANGED,\n      api: gridOptions.api,\n      columnApi: gridOptions.columnApi\n    };\n\n    utils_1._.iterateObject(changes, function (key, value) {\n      event[key] = value;\n    });\n\n    api.dispatchEvent(event);\n  };\n\n  ComponentUtil.toBoolean = function (value) {\n    if (typeof value === 'boolean') {\n      return value;\n    } else if (typeof value === 'string') {\n      // for boolean, compare to empty String to allow attributes appearing with\n      // not value to be treated as 'true'\n      return value.toUpperCase() === 'TRUE' || value == '';\n    } else {\n      return false;\n    }\n  };\n\n  ComponentUtil.toNumber = function (value) {\n    if (typeof value === 'number') {\n      return value;\n    } else if (typeof value === 'string') {\n      return Number(value);\n    } else {\n      return undefined;\n    }\n  }; // all the events are populated in here AFTER this class (at the bottom of the file).\n\n\n  ComponentUtil.EVENTS = [];\n  ComponentUtil.STRING_PROPERTIES = propertyKeys_1.PropertyKeys.STRING_PROPERTIES;\n  ComponentUtil.OBJECT_PROPERTIES = propertyKeys_1.PropertyKeys.OBJECT_PROPERTIES;\n  ComponentUtil.ARRAY_PROPERTIES = propertyKeys_1.PropertyKeys.ARRAY_PROPERTIES;\n  ComponentUtil.NUMBER_PROPERTIES = propertyKeys_1.PropertyKeys.NUMBER_PROPERTIES;\n  ComponentUtil.BOOLEAN_PROPERTIES = propertyKeys_1.PropertyKeys.BOOLEAN_PROPERTIES;\n  ComponentUtil.FUNCTION_PROPERTIES = propertyKeys_1.PropertyKeys.FUNCTION_PROPERTIES;\n  ComponentUtil.ALL_PROPERTIES = propertyKeys_1.PropertyKeys.ALL_PROPERTIES;\n  return ComponentUtil;\n}();\n\nexports.ComponentUtil = ComponentUtil;\n\nutils_1._.iterateObject(events_1.Events, function (key, value) {\n  ComponentUtil.EVENTS.push(value);\n});\n\nfunction checkForDeprecated(changes) {\n  if (changes.rowDeselected || changes.onRowDeselected) {\n    console.warn('ag-grid: as of v3.4 rowDeselected no longer exists. Please check the docs.');\n  }\n}","map":{"version":3,"sources":["/Users/dirkmennecke77/Desktop/Lageplan/node_modules/ag-grid-community/dist/lib/components/componentUtil.js"],"names":["Object","defineProperty","exports","value","events_1","require","propertyKeys_1","gridOptionsWrapper_1","utils_1","ComponentUtil","getEventCallbacks","EVENT_CALLBACKS","EVENT_CALLBACKS_NO_PREFIX","EVENTS","forEach","eventName","push","getCallbackForEvent","copyAttributesToGridOptions","gridOptions","component","skipEventDeprecationCheck","checkForDeprecated","pGridOptions","ARRAY_PROPERTIES","concat","STRING_PROPERTIES","OBJECT_PROPERTIES","FUNCTION_PROPERTIES","key","BOOLEAN_PROPERTIES","toBoolean","NUMBER_PROPERTIES","toNumber","funcName","onMethodName","GridOptionsWrapper","checkEventDeprecation","length","toUpperCase","substr","processOnChange","changes","api","columnApi","currentValue","enableCellTextSelection","setEnableCellTextSelection","showToolPanel","quickFilterText","setQuickFilter","rowData","setRowData","pinnedTopRowData","setPinnedTopRowData","pinnedBottomRowData","setPinnedBottomRowData","columnDefs","setColumnDefs","datasource","setDatasource","headerHeight","setHeaderHeight","paginationPageSize","paginationSetPageSize","pivotMode","setPivotMode","groupRemoveSingleChildren","setGroupRemoveSingleChildren","suppressRowDrag","setSuppressRowDrag","gridAutoHeight","setGridAutoHeight","suppressClipboardPaste","setSuppressClipboardPaste","sideBar","setSideBar","event","type","Events","EVENT_COMPONENT_STATE_CHANGED","_","iterateObject","dispatchEvent","Number","undefined","PropertyKeys","ALL_PROPERTIES","rowDeselected","onRowDeselected","console","warn"],"mappings":"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","sourcesContent":["/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.2.2\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar events_1 = require(\"../events\");\nvar propertyKeys_1 = require(\"../propertyKeys\");\nvar gridOptionsWrapper_1 = require(\"../gridOptionsWrapper\");\nvar utils_1 = require(\"../utils\");\nvar ComponentUtil = /** @class */ (function () {\n    function ComponentUtil() {\n    }\n    ComponentUtil.getEventCallbacks = function () {\n        if (!ComponentUtil.EVENT_CALLBACKS) {\n            ComponentUtil.EVENT_CALLBACKS = [];\n            ComponentUtil.EVENT_CALLBACKS_NO_PREFIX = [];\n            ComponentUtil.EVENTS.forEach(function (eventName) {\n                ComponentUtil.EVENT_CALLBACKS.push(ComponentUtil.getCallbackForEvent(eventName));\n                ComponentUtil.EVENT_CALLBACKS_NO_PREFIX.push(eventName);\n            });\n        }\n        return ComponentUtil.EVENT_CALLBACKS;\n    };\n    ComponentUtil.copyAttributesToGridOptions = function (gridOptions, component, skipEventDeprecationCheck) {\n        if (skipEventDeprecationCheck === void 0) { skipEventDeprecationCheck = false; }\n        checkForDeprecated(component);\n        // create empty grid options if none were passed\n        if (typeof gridOptions !== 'object') {\n            gridOptions = {};\n        }\n        // to allow array style lookup in TypeScript, take type away from 'this' and 'gridOptions'\n        var pGridOptions = gridOptions;\n        // add in all the simple properties\n        ComponentUtil.ARRAY_PROPERTIES\n            .concat(ComponentUtil.STRING_PROPERTIES)\n            .concat(ComponentUtil.OBJECT_PROPERTIES)\n            .concat(ComponentUtil.FUNCTION_PROPERTIES)\n            .forEach(function (key) {\n            if (typeof component[key] !== 'undefined') {\n                pGridOptions[key] = component[key];\n            }\n        });\n        ComponentUtil.BOOLEAN_PROPERTIES.forEach(function (key) {\n            if (typeof component[key] !== 'undefined') {\n                pGridOptions[key] = ComponentUtil.toBoolean(component[key]);\n            }\n        });\n        ComponentUtil.NUMBER_PROPERTIES.forEach(function (key) {\n            if (typeof component[key] !== 'undefined') {\n                pGridOptions[key] = ComponentUtil.toNumber(component[key]);\n            }\n        });\n        ComponentUtil.getEventCallbacks().forEach(function (funcName) {\n            if (typeof component[funcName] !== 'undefined') {\n                pGridOptions[funcName] = component[funcName];\n            }\n        });\n        // purely for event deprecation checks (for frameworks - wouldn't apply for non-fw versions)\n        if (!skipEventDeprecationCheck) {\n            ComponentUtil.EVENT_CALLBACKS_NO_PREFIX.forEach(function (funcName) {\n                // react uses onXXX...not sure why this is diff to the other frameworks\n                var onMethodName = ComponentUtil.getCallbackForEvent(funcName);\n                if (typeof component[funcName] !== 'undefined' ||\n                    typeof component[onMethodName] !== 'undefined') {\n                    gridOptionsWrapper_1.GridOptionsWrapper.checkEventDeprecation(funcName);\n                }\n            });\n        }\n        return gridOptions;\n    };\n    ComponentUtil.getCallbackForEvent = function (eventName) {\n        if (!eventName || eventName.length < 2) {\n            return eventName;\n        }\n        else {\n            return 'on' + eventName[0].toUpperCase() + eventName.substr(1);\n        }\n    };\n    ComponentUtil.processOnChange = function (changes, gridOptions, api, columnApi) {\n        if (!changes) {\n            return;\n        }\n        checkForDeprecated(changes);\n        // to allow array style lookup in TypeScript, take type away from 'this' and 'gridOptions'\n        var pGridOptions = gridOptions;\n        // check if any change for the simple types, and if so, then just copy in the new value\n        ComponentUtil.ARRAY_PROPERTIES\n            .concat(ComponentUtil.OBJECT_PROPERTIES)\n            .concat(ComponentUtil.STRING_PROPERTIES)\n            .forEach(function (key) {\n            if (changes[key]) {\n                pGridOptions[key] = changes[key].currentValue;\n            }\n        });\n        ComponentUtil.BOOLEAN_PROPERTIES.forEach(function (key) {\n            if (changes[key]) {\n                pGridOptions[key] = ComponentUtil.toBoolean(changes[key].currentValue);\n            }\n        });\n        ComponentUtil.NUMBER_PROPERTIES.forEach(function (key) {\n            if (changes[key]) {\n                pGridOptions[key] = ComponentUtil.toNumber(changes[key].currentValue);\n            }\n        });\n        ComponentUtil.getEventCallbacks().forEach(function (funcName) {\n            if (changes[funcName]) {\n                pGridOptions[funcName] = changes[funcName].currentValue;\n            }\n        });\n        if (changes.enableCellTextSelection) {\n            api.setEnableCellTextSelection(ComponentUtil.toBoolean(changes.enableCellTextSelection.currentValue));\n        }\n        if (changes.showToolPanel) {\n            api.showToolPanel(ComponentUtil.toBoolean(changes.showToolPanel.currentValue));\n        }\n        if (changes.quickFilterText) {\n            api.setQuickFilter(changes.quickFilterText.currentValue);\n        }\n        if (changes.rowData) {\n            api.setRowData(changes.rowData.currentValue);\n        }\n        if (changes.pinnedTopRowData) {\n            api.setPinnedTopRowData(changes.pinnedTopRowData.currentValue);\n        }\n        if (changes.pinnedBottomRowData) {\n            api.setPinnedBottomRowData(changes.pinnedBottomRowData.currentValue);\n        }\n        if (changes.columnDefs) {\n            api.setColumnDefs(changes.columnDefs.currentValue, \"gridOptionsChanged\");\n        }\n        if (changes.datasource) {\n            api.setDatasource(changes.datasource.currentValue);\n        }\n        if (changes.headerHeight) {\n            api.setHeaderHeight(ComponentUtil.toNumber(changes.headerHeight.currentValue));\n        }\n        if (changes.paginationPageSize) {\n            api.paginationSetPageSize(ComponentUtil.toNumber(changes.paginationPageSize.currentValue));\n        }\n        if (changes.pivotMode) {\n            columnApi.setPivotMode(ComponentUtil.toBoolean(changes.pivotMode.currentValue));\n        }\n        if (changes.groupRemoveSingleChildren) {\n            api.setGroupRemoveSingleChildren(ComponentUtil.toBoolean(changes.groupRemoveSingleChildren.currentValue));\n        }\n        if (changes.suppressRowDrag) {\n            api.setSuppressRowDrag(ComponentUtil.toBoolean(changes.suppressRowDrag.currentValue));\n        }\n        if (changes.gridAutoHeight) {\n            api.setGridAutoHeight(ComponentUtil.toBoolean(changes.gridAutoHeight.currentValue));\n        }\n        if (changes.suppressClipboardPaste) {\n            api.setSuppressClipboardPaste(ComponentUtil.toBoolean(changes.suppressClipboardPaste.currentValue));\n        }\n        if (changes.sideBar) {\n            api.setSideBar(changes.sideBar.currentValue);\n        }\n        if (changes.datasource) {\n            api.setDatasource(changes.datasource.currentValue);\n        }\n        // copy changes into an event for dispatch\n        var event = {\n            type: events_1.Events.EVENT_COMPONENT_STATE_CHANGED,\n            api: gridOptions.api,\n            columnApi: gridOptions.columnApi\n        };\n        utils_1._.iterateObject(changes, function (key, value) {\n            event[key] = value;\n        });\n        api.dispatchEvent(event);\n    };\n    ComponentUtil.toBoolean = function (value) {\n        if (typeof value === 'boolean') {\n            return value;\n        }\n        else if (typeof value === 'string') {\n            // for boolean, compare to empty String to allow attributes appearing with\n            // not value to be treated as 'true'\n            return value.toUpperCase() === 'TRUE' || value == '';\n        }\n        else {\n            return false;\n        }\n    };\n    ComponentUtil.toNumber = function (value) {\n        if (typeof value === 'number') {\n            return value;\n        }\n        else if (typeof value === 'string') {\n            return Number(value);\n        }\n        else {\n            return undefined;\n        }\n    };\n    // all the events are populated in here AFTER this class (at the bottom of the file).\n    ComponentUtil.EVENTS = [];\n    ComponentUtil.STRING_PROPERTIES = propertyKeys_1.PropertyKeys.STRING_PROPERTIES;\n    ComponentUtil.OBJECT_PROPERTIES = propertyKeys_1.PropertyKeys.OBJECT_PROPERTIES;\n    ComponentUtil.ARRAY_PROPERTIES = propertyKeys_1.PropertyKeys.ARRAY_PROPERTIES;\n    ComponentUtil.NUMBER_PROPERTIES = propertyKeys_1.PropertyKeys.NUMBER_PROPERTIES;\n    ComponentUtil.BOOLEAN_PROPERTIES = propertyKeys_1.PropertyKeys.BOOLEAN_PROPERTIES;\n    ComponentUtil.FUNCTION_PROPERTIES = propertyKeys_1.PropertyKeys.FUNCTION_PROPERTIES;\n    ComponentUtil.ALL_PROPERTIES = propertyKeys_1.PropertyKeys.ALL_PROPERTIES;\n    return ComponentUtil;\n}());\nexports.ComponentUtil = ComponentUtil;\nutils_1._.iterateObject(events_1.Events, function (key, value) {\n    ComponentUtil.EVENTS.push(value);\n});\nfunction checkForDeprecated(changes) {\n    if (changes.rowDeselected || changes.onRowDeselected) {\n        console.warn('ag-grid: as of v3.4 rowDeselected no longer exists. Please check the docs.');\n    }\n}\n"]},"metadata":{},"sourceType":"script"}