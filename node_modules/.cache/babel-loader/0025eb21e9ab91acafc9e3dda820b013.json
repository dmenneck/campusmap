{"ast":null,"code":"/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.2.2\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar gridOptionsWrapper_1 = require(\"../gridOptionsWrapper\");\n\nvar columnController_1 = require(\"../columnController/columnController\");\n\nvar columnApi_1 = require(\"../columnController/columnApi\");\n\nvar rowRenderer_1 = require(\"../rendering/rowRenderer\");\n\nvar context_1 = require(\"../context/context\");\n\nvar eventService_1 = require(\"../eventService\");\n\nvar events_1 = require(\"../events\");\n\nvar dragService_1 = require(\"../dragAndDrop/dragService\");\n\nvar constants_1 = require(\"../constants\");\n\nvar mouseEventService_1 = require(\"./mouseEventService\");\n\nvar focusedCellController_1 = require(\"../focusedCellController\");\n\nvar scrollVisibleService_1 = require(\"./scrollVisibleService\");\n\nvar rowContainerComponent_1 = require(\"../rendering/rowContainerComponent\");\n\nvar paginationProxy_1 = require(\"../rowModels/paginationProxy\");\n\nvar paginationAutoPageSizeService_1 = require(\"../rowModels/paginationAutoPageSizeService\");\n\nvar popupEditorWrapper_1 = require(\"../rendering/cellEditors/popupEditorWrapper\");\n\nvar alignedGridsService_1 = require(\"../alignedGridsService\");\n\nvar pinnedRowModel_1 = require(\"../rowModels/pinnedRowModel\");\n\nvar gridApi_1 = require(\"../gridApi\");\n\nvar animationFrameService_1 = require(\"../misc/animationFrameService\");\n\nvar rowComp_1 = require(\"../rendering/rowComp\");\n\nvar navigationService_1 = require(\"./navigationService\");\n\nvar valueService_1 = require(\"../valueService/valueService\");\n\nvar touchListener_1 = require(\"../widgets/touchListener\");\n\nvar dragAndDropService_1 = require(\"../dragAndDrop/dragAndDropService\");\n\nvar rowDragFeature_1 = require(\"./rowDragFeature\");\n\nvar maxDivHeightScaler_1 = require(\"../rendering/maxDivHeightScaler\");\n\nvar overlayWrapperComponent_1 = require(\"../rendering/overlays/overlayWrapperComponent\");\n\nvar component_1 = require(\"../widgets/component\");\n\nvar autoHeightCalculator_1 = require(\"../rendering/autoHeightCalculator\");\n\nvar columnAnimationService_1 = require(\"../rendering/columnAnimationService\");\n\nvar autoWidthCalculator_1 = require(\"../rendering/autoWidthCalculator\");\n\nvar beans_1 = require(\"../rendering/beans\");\n\nvar componentAnnotations_1 = require(\"../widgets/componentAnnotations\");\n\nvar headerRootComp_1 = require(\"../headerRendering/headerRootComp\");\n\nvar resizeObserverService_1 = require(\"../misc/resizeObserverService\");\n\nvar utils_1 = require(\"../utils\"); // in the html below, it is important that there are no white space between some of the divs, as if there is white space,\n// it won't render correctly in safari, as safari renders white space as a gap\n\n\nvar GRID_PANEL_NORMAL_TEMPLATE = \"<div class=\\\"ag-root ag-unselectable\\\" role=\\\"grid\\\" unselectable=\\\"on\\\">\\n        <ag-header-root ref=\\\"headerRoot\\\" unselectable=\\\"on\\\"></ag-header-root>\\n        <div class=\\\"ag-floating-top\\\" ref=\\\"eTop\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\">\\n            <div class=\\\"ag-pinned-left-floating-top\\\" ref=\\\"eLeftTop\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\"></div>\\n            <div class=\\\"ag-floating-top-viewport\\\" ref=\\\"eTopViewport\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\">\\n                <div class=\\\"ag-floating-top-container\\\" ref=\\\"eTopContainer\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\"></div>\\n            </div>\\n            <div class=\\\"ag-pinned-right-floating-top\\\" ref=\\\"eRightTop\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\"></div>\\n            <div class=\\\"ag-floating-top-full-width-container\\\" ref=\\\"eTopFullWidthContainer\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\"></div>\\n        </div>\\n        <div class=\\\"ag-body-viewport\\\" ref=\\\"eBodyViewport\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\">\\n            <div class=\\\"ag-pinned-left-cols-container\\\" ref=\\\"eLeftContainer\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\"></div>\\n            <div class=\\\"ag-center-cols-clipper\\\" ref=\\\"eCenterColsClipper\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\">\\n                <div class=\\\"ag-center-cols-viewport\\\" ref=\\\"eCenterViewport\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\">\\n                    <div class=\\\"ag-center-cols-container\\\" ref=\\\"eCenterContainer\\\" role=\\\"rowgroup\\\" unselectable=\\\"on\\\"></div>\\n                </div>\\n            </div>\\n            <div class=\\\"ag-pinned-right-cols-container\\\" ref=\\\"eRightContainer\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\"></div>\\n            <div class=\\\"ag-full-width-container\\\" ref=\\\"eFullWidthContainer\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\"></div>\\n        </div>\\n        <div class=\\\"ag-floating-bottom\\\" ref=\\\"eBottom\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\">\\n            <div class=\\\"ag-pinned-left-floating-bottom\\\" ref=\\\"eLeftBottom\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\"></div>\\n            <div class=\\\"ag-floating-bottom-viewport\\\" ref=\\\"eBottomViewport\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\">\\n                <div class=\\\"ag-floating-bottom-container\\\" ref=\\\"eBottomContainer\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\"></div>\\n            </div>\\n            <div class=\\\"ag-pinned-right-floating-bottom\\\" ref=\\\"eRightBottom\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\"></div>\\n            <div class=\\\"ag-floating-bottom-full-width-container\\\" ref=\\\"eBottomFullWidthContainer\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\"></div>\\n        </div>\\n        <div class=\\\"ag-body-horizontal-scroll\\\" ref=\\\"eHorizontalScrollBody\\\" aria-hidden=\\\"true\\\">\\n            <div class=\\\"ag-horizontal-left-spacer\\\" ref=\\\"eHorizontalLeftSpacer\\\"></div>\\n            <div class=\\\"ag-body-horizontal-scroll-viewport\\\" ref=\\\"eBodyHorizontalScrollViewport\\\">\\n                <div class=\\\"ag-body-horizontal-scroll-container\\\" ref=\\\"eBodyHorizontalScrollContainer\\\"></div>\\n            </div>\\n            <div class=\\\"ag-horizontal-right-spacer\\\" ref=\\\"eHorizontalRightSpacer\\\"></div>\\n        </div>\\n        <ag-overlay-wrapper ref=\\\"overlayWrapper\\\"></ag-overlay-wrapper>\\n    </div>\";\n\nvar GridPanel =\n/** @class */\nfunction (_super) {\n  __extends(GridPanel, _super);\n\n  function GridPanel() {\n    var _this = _super.call(this, GRID_PANEL_NORMAL_TEMPLATE) || this;\n\n    _this.scrollLeft = -1;\n    _this.scrollTop = -1;\n    _this.nextScrollTop = -1;\n    _this.resetLastHorizontalScrollElementDebounce = utils_1._.debounce(_this.resetLastHorizontalScrollElement.bind(_this), 500);\n    return _this;\n  }\n\n  GridPanel.prototype.getVScrollPosition = function () {\n    var result = {\n      top: this.eBodyViewport.scrollTop,\n      bottom: this.eBodyViewport.scrollTop + this.eBodyViewport.offsetHeight\n    };\n    return result;\n  };\n\n  GridPanel.prototype.getHScrollPosition = function () {\n    var result = {\n      left: this.eCenterViewport.scrollLeft,\n      right: this.eCenterViewport.scrollLeft + this.eCenterViewport.offsetWidth\n    };\n    return result;\n  };\n\n  GridPanel.prototype.onRowDataChanged = function () {\n    this.showOrHideOverlay();\n  };\n\n  GridPanel.prototype.showOrHideOverlay = function () {\n    var isEmpty = this.paginationProxy.isEmpty();\n    var isSuppressNoRowsOverlay = this.gridOptionsWrapper.isSuppressNoRowsOverlay();\n    var method = isEmpty && !isSuppressNoRowsOverlay ? 'showNoRowsOverlay' : 'hideOverlay';\n    this[method]();\n  };\n\n  GridPanel.prototype.onNewColumnsLoaded = function () {\n    // hide overlay if columns and rows exist, this can happen if columns are loaded after data.\n    // this problem exists before of the race condition between the services (column controller in this case)\n    // and the view (grid panel). if the model beans were all initialised first, and then the view beans second,\n    // this race condition would not happen.\n    if (this.columnController.isReady() && !this.paginationProxy.isEmpty()) {\n      this.hideOverlay();\n    }\n  };\n\n  GridPanel.prototype.init = function () {\n    var _this = this;\n\n    this.scrollWidth = this.gridOptionsWrapper.getScrollbarWidth();\n    this.enableRtl = this.gridOptionsWrapper.isEnableRtl();\n    this.printLayout = this.gridOptionsWrapper.getDomLayout() === constants_1.Constants.DOM_LAYOUT_PRINT; // these elements have different CSS when layout changes\n\n    this.gridOptionsWrapper.addLayoutElement(this.getGui());\n    this.gridOptionsWrapper.addLayoutElement(this.eBodyViewport);\n    this.suppressScrollOnFloatingRow();\n    this.setupRowAnimationCssClass();\n    this.buildRowContainerComponents();\n    this.addEventListeners();\n    this.addDragListeners();\n    this.addScrollListener();\n\n    if (this.gridOptionsWrapper.isRowModelDefault() && !this.gridOptionsWrapper.getRowData()) {\n      this.showLoadingOverlay();\n    }\n\n    this.setCellTextSelection(this.gridOptionsWrapper.isEnableCellTextSelect());\n    this.setPinnedContainerSize();\n    this.setHeaderAndFloatingHeights();\n    this.disableBrowserDragging();\n    this.addMouseListeners();\n    this.addKeyboardEvents();\n    this.addBodyViewportListener();\n    this.addStopEditingWhenGridLosesFocus();\n    this.mockContextMenuForIPad();\n    this.addRowDragListener();\n\n    if (this.$scope) {\n      this.addAngularApplyCheck();\n    }\n\n    this.onDisplayedColumnsWidthChanged();\n    this.gridApi.registerGridComp(this);\n    this.alignedGridsService.registerGridComp(this);\n    this.headerRootComp.registerGridComp(this);\n    this.navigationService.registerGridComp(this);\n    this.heightScaler.registerGridComp(this);\n    this.autoHeightCalculator.registerGridComp(this);\n    this.columnAnimationService.registerGridComp(this);\n    this.autoWidthCalculator.registerGridComp(this);\n    this.paginationAutoPageSizeService.registerGridComp(this);\n    this.beans.registerGridComp(this);\n    this.rowRenderer.registerGridComp(this);\n    this.animationFrameService.registerGridComp(this);\n\n    if (this.rangeController) {\n      this.rangeController.registerGridComp(this);\n    }\n\n    [this.eCenterViewport, this.eBodyViewport].forEach(function (viewport) {\n      var unsubscribeFromResize = _this.resizeObserverService.observeResize(viewport, _this.onCenterViewportResized.bind(_this));\n\n      _this.addDestroyFunc(function () {\n        return unsubscribeFromResize();\n      });\n    });\n  };\n\n  GridPanel.prototype.onDomLayoutChanged = function () {\n    var newPrintLayout = this.gridOptionsWrapper.getDomLayout() === constants_1.Constants.DOM_LAYOUT_PRINT;\n\n    if (this.printLayout !== newPrintLayout) {\n      this.printLayout = newPrintLayout;\n      this.setWidthsOfContainers(); // pinned containers are always hidden for print layout\n\n      this.setPinnedContainerSize();\n    }\n  };\n\n  GridPanel.prototype.onCenterViewportResized = function () {\n    if (utils_1._.isVisible(this.eCenterViewport)) {\n      this.checkViewportAndScrolls();\n    } else {\n      this.bodyHeight = 0;\n    }\n  }; // used by ColumnAnimationService\n\n\n  GridPanel.prototype.setColumnMovingCss = function (moving) {\n    this.addOrRemoveCssClass('ag-column-moving', moving);\n  };\n\n  GridPanel.prototype.setCellTextSelection = function (selectable) {\n    if (selectable === void 0) {\n      selectable = false;\n    }\n\n    [this.eTop, this.eBodyViewport, this.eBottom].forEach(function (ct) {\n      return utils_1._.addOrRemoveCssClass(ct, 'ag-selectable', selectable);\n    });\n  };\n\n  GridPanel.prototype.addRowDragListener = function () {\n    var rowDragFeature = new rowDragFeature_1.RowDragFeature(this.eBodyViewport, this);\n    this.getContext().wireBean(rowDragFeature);\n    this.dragAndDropService.addDropTarget(rowDragFeature);\n  };\n\n  GridPanel.prototype.addStopEditingWhenGridLosesFocus = function () {\n    var _this = this;\n\n    if (!this.gridOptionsWrapper.isStopEditingWhenGridLosesFocus()) {\n      return;\n    }\n\n    var focusOutListener = function (event) {\n      // this is the element the focus is moving to\n      var elementWithFocus = event.relatedTarget; // see if the element the focus is going to is part of the grid\n\n      var clickInsideGrid = false;\n      var pointer = elementWithFocus;\n\n      while (utils_1._.exists(pointer) && !clickInsideGrid) {\n        var isPopup = !!_this.gridOptionsWrapper.getDomData(pointer, popupEditorWrapper_1.PopupEditorWrapper.DOM_KEY_POPUP_EDITOR_WRAPPER);\n        var isBody = _this.eBodyViewport === pointer || _this.eBottom === pointer || _this.eTop === pointer;\n        clickInsideGrid = isPopup || isBody;\n        pointer = pointer.parentNode;\n      }\n\n      if (!clickInsideGrid) {\n        _this.rowRenderer.stopEditing();\n      }\n    };\n\n    this.addDestroyableEventListener(this.eBodyViewport, 'focusout', focusOutListener);\n    this.addDestroyableEventListener(this.eTop, 'focusout', focusOutListener);\n    this.addDestroyableEventListener(this.eBottom, 'focusout', focusOutListener);\n  };\n\n  GridPanel.prototype.addAngularApplyCheck = function () {\n    var _this = this; // this makes sure if we queue up requests, we only execute oe\n\n\n    var applyTriggered = false;\n\n    var listener = function () {\n      // only need to do one apply at a time\n      if (applyTriggered) {\n        return;\n      }\n\n      applyTriggered = true; // mark 'need apply' to true\n\n      window.setTimeout(function () {\n        applyTriggered = false;\n\n        _this.$scope.$apply();\n      }, 0);\n    }; // these are the events we need to do an apply after - these are the ones that can end up\n    // with columns added or removed\n\n\n    this.addDestroyableEventListener(this.eventService, events_1.Events.EVENT_DISPLAYED_COLUMNS_CHANGED, listener);\n    this.addDestroyableEventListener(this.eventService, events_1.Events.EVENT_VIRTUAL_COLUMNS_CHANGED, listener);\n  }; // if we do not do this, then the user can select a pic in the grid (eg an image in a custom cell renderer)\n  // and then that will start the browser native drag n' drop, which messes up with our own drag and drop.\n\n\n  GridPanel.prototype.disableBrowserDragging = function () {\n    this.addGuiEventListener('dragstart', function (event) {\n      if (event.target instanceof HTMLImageElement) {\n        event.preventDefault();\n        return false;\n      }\n    });\n  };\n\n  GridPanel.prototype.addEventListeners = function () {\n    this.addDestroyableEventListener(this.eventService, events_1.Events.EVENT_DISPLAYED_COLUMNS_CHANGED, this.onDisplayedColumnsChanged.bind(this));\n    this.addDestroyableEventListener(this.eventService, events_1.Events.EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED, this.onDisplayedColumnsWidthChanged.bind(this));\n    this.addDestroyableEventListener(this.eventService, events_1.Events.EVENT_PINNED_ROW_DATA_CHANGED, this.setHeaderAndFloatingHeights.bind(this));\n    this.addDestroyableEventListener(this.eventService, events_1.Events.EVENT_ROW_DATA_CHANGED, this.onRowDataChanged.bind(this));\n    this.addDestroyableEventListener(this.eventService, events_1.Events.EVENT_ROW_DATA_UPDATED, this.onRowDataChanged.bind(this));\n    this.addDestroyableEventListener(this.eventService, events_1.Events.EVENT_NEW_COLUMNS_LOADED, this.onNewColumnsLoaded.bind(this));\n    this.addDestroyableEventListener(this.gridOptionsWrapper, gridOptionsWrapper_1.GridOptionsWrapper.PROP_HEADER_HEIGHT, this.setHeaderAndFloatingHeights.bind(this));\n    this.addDestroyableEventListener(this.gridOptionsWrapper, gridOptionsWrapper_1.GridOptionsWrapper.PROP_PIVOT_HEADER_HEIGHT, this.setHeaderAndFloatingHeights.bind(this));\n    this.addDestroyableEventListener(this.gridOptionsWrapper, gridOptionsWrapper_1.GridOptionsWrapper.PROP_GROUP_HEADER_HEIGHT, this.setHeaderAndFloatingHeights.bind(this));\n    this.addDestroyableEventListener(this.gridOptionsWrapper, gridOptionsWrapper_1.GridOptionsWrapper.PROP_PIVOT_GROUP_HEADER_HEIGHT, this.setHeaderAndFloatingHeights.bind(this));\n    this.addDestroyableEventListener(this.gridOptionsWrapper, gridOptionsWrapper_1.GridOptionsWrapper.PROP_FLOATING_FILTERS_HEIGHT, this.setHeaderAndFloatingHeights.bind(this));\n    this.addDestroyableEventListener(this.gridOptionsWrapper, gridOptionsWrapper_1.GridOptionsWrapper.PROP_DOM_LAYOUT, this.onDomLayoutChanged.bind(this));\n  };\n\n  GridPanel.prototype.addDragListeners = function () {\n    var _this = this;\n\n    if (!this.gridOptionsWrapper.isEnableRangeSelection() || // no range selection if no property\n    utils_1._.missing(this.rangeController) // no range selection if not enterprise version\n    ) {\n        return;\n      }\n\n    var containers = [this.eLeftContainer, this.eRightContainer, this.eCenterContainer, this.eTop, this.eBottom];\n    containers.forEach(function (container) {\n      var params = {\n        eElement: container,\n        onDragStart: _this.rangeController.onDragStart.bind(_this.rangeController),\n        onDragStop: _this.rangeController.onDragStop.bind(_this.rangeController),\n        onDragging: _this.rangeController.onDragging.bind(_this.rangeController)\n      };\n\n      _this.dragService.addDragSource(params);\n\n      _this.addDestroyFunc(function () {\n        return _this.dragService.removeDragSource(params);\n      });\n    });\n  };\n\n  GridPanel.prototype.addMouseListeners = function () {\n    var _this = this;\n\n    var eventNames = ['click', 'mousedown', 'dblclick', 'contextmenu', 'mouseover', 'mouseout'];\n    eventNames.forEach(function (eventName) {\n      var listener = _this.processMouseEvent.bind(_this, eventName);\n\n      _this.eAllCellContainers.forEach(function (container) {\n        return _this.addDestroyableEventListener(container, eventName, listener);\n      });\n    });\n  };\n\n  GridPanel.prototype.addKeyboardEvents = function () {\n    var _this = this;\n\n    var eventNames = ['keydown', 'keypress'];\n    eventNames.forEach(function (eventName) {\n      var listener = _this.processKeyboardEvent.bind(_this, eventName);\n\n      _this.eAllCellContainers.forEach(function (container) {\n        _this.addDestroyableEventListener(container, eventName, listener);\n      });\n    });\n  };\n\n  GridPanel.prototype.addBodyViewportListener = function () {\n    var _this = this; // we want to listen for clicks directly on the eBodyViewport, so the user has a way of showing\n    // the context menu if no rows or columns are displayed, or user simply clicks outside of a cell\n\n\n    var listener = function (mouseEvent) {\n      var target = utils_1._.getTarget(mouseEvent);\n\n      if (target === _this.eBodyViewport || target === _this.eCenterViewport) {\n        // show it\n        _this.onContextMenu(mouseEvent, null, null, null, null);\n\n        _this.preventDefaultOnContextMenu(mouseEvent);\n      }\n    };\n\n    this.addDestroyableEventListener(this.eBodyViewport, 'contextmenu', listener);\n  }; // + rangeController - used to know when to scroll when user is dragging outside the\n  // main viewport while doing a range selection\n\n\n  GridPanel.prototype.getBodyClientRect = function () {\n    if (!this.eBodyViewport) {\n      return;\n    }\n\n    return this.eBodyViewport.getBoundingClientRect();\n  };\n\n  GridPanel.prototype.getRowForEvent = function (event) {\n    var sourceElement = utils_1._.getTarget(event);\n\n    while (sourceElement) {\n      var renderedRow = this.gridOptionsWrapper.getDomData(sourceElement, rowComp_1.RowComp.DOM_DATA_KEY_RENDERED_ROW);\n\n      if (renderedRow) {\n        return renderedRow;\n      }\n\n      sourceElement = sourceElement.parentElement;\n    }\n\n    return null;\n  };\n\n  GridPanel.prototype.processKeyboardEvent = function (eventName, keyboardEvent) {\n    var cellComp = utils_1._.getCellCompForEvent(this.gridOptionsWrapper, keyboardEvent);\n\n    if (!cellComp) {\n      return;\n    }\n\n    var rowNode = cellComp.getRenderedRow().getRowNode();\n    var column = cellComp.getColumn();\n    var editing = cellComp.isEditing();\n    var gridProcessingAllowed = !utils_1._.isUserSuppressingKeyboardEvent(this.gridOptionsWrapper, keyboardEvent, rowNode, column, editing);\n\n    if (gridProcessingAllowed) {\n      switch (eventName) {\n        case 'keydown':\n          // first see if it's a scroll key, page up / down, home / end etc\n          var wasScrollKey = !editing && this.navigationService.handlePageScrollingKey(keyboardEvent); // if not a scroll key, then we pass onto cell\n\n          if (!wasScrollKey) {\n            cellComp.onKeyDown(keyboardEvent);\n          }\n\n          this.doClipboardOperations(keyboardEvent, cellComp);\n          break;\n\n        case 'keypress':\n          cellComp.onKeyPress(keyboardEvent);\n          break;\n      }\n    }\n\n    if (eventName === 'keydown') {\n      var cellKeyDownEvent = cellComp.createEvent(keyboardEvent, events_1.Events.EVENT_CELL_KEY_DOWN);\n      this.beans.eventService.dispatchEvent(cellKeyDownEvent);\n    }\n\n    if (eventName === 'keypress') {\n      var cellKeyPressEvent = cellComp.createEvent(keyboardEvent, events_1.Events.EVENT_CELL_KEY_PRESS);\n      this.beans.eventService.dispatchEvent(cellKeyPressEvent);\n    }\n  };\n\n  GridPanel.prototype.doClipboardOperations = function (keyboardEvent, cellComp) {\n    // check if ctrl or meta key pressed\n    if (!keyboardEvent.ctrlKey && !keyboardEvent.metaKey) {\n      return;\n    } // if the cell the event came from is editing, then we do not\n    // want to do the default shortcut keys, otherwise the editor\n    // (eg a text field) would not be able to do the normal cut/copy/paste\n\n\n    if (cellComp.isEditing()) {\n      return;\n    } // for copy / paste, we don't want to execute when the event\n    // was from a child grid (happens in master detail)\n\n\n    if (!this.mouseEventService.isEventFromThisGrid(keyboardEvent)) {\n      return;\n    }\n\n    switch (keyboardEvent.which) {\n      case constants_1.Constants.KEY_A:\n        return this.onCtrlAndA(keyboardEvent);\n\n      case constants_1.Constants.KEY_C:\n        return this.onCtrlAndC(keyboardEvent);\n\n      case constants_1.Constants.KEY_V:\n        return this.onCtrlAndV();\n\n      case constants_1.Constants.KEY_D:\n        return this.onCtrlAndD(keyboardEvent);\n    }\n  }; // gets called by rowRenderer when new data loaded, as it will want to scroll to the top\n\n\n  GridPanel.prototype.scrollToTop = function () {\n    this.eBodyViewport.scrollTop = 0;\n  };\n\n  GridPanel.prototype.processMouseEvent = function (eventName, mouseEvent) {\n    if (!this.mouseEventService.isEventFromThisGrid(mouseEvent) || utils_1._.isStopPropagationForAgGrid(mouseEvent)) {\n      return;\n    }\n\n    var rowComp = this.getRowForEvent(mouseEvent);\n    var cellComp = this.mouseEventService.getRenderedCellForEvent(mouseEvent);\n\n    if (eventName === \"contextmenu\") {\n      this.handleContextMenuMouseEvent(mouseEvent, null, rowComp, cellComp);\n    } else {\n      if (cellComp) {\n        cellComp.onMouseEvent(eventName, mouseEvent);\n      }\n\n      if (rowComp) {\n        rowComp.onMouseEvent(eventName, mouseEvent);\n      }\n    }\n\n    this.preventDefaultOnContextMenu(mouseEvent);\n  };\n\n  GridPanel.prototype.mockContextMenuForIPad = function () {\n    var _this = this; // we do NOT want this when not in iPad, otherwise we will be doing\n\n\n    if (!utils_1._.isUserAgentIPad()) {\n      return;\n    }\n\n    this.eAllCellContainers.forEach(function (container) {\n      var touchListener = new touchListener_1.TouchListener(container);\n\n      var longTapListener = function (event) {\n        var rowComp = _this.getRowForEvent(event.touchEvent);\n\n        var cellComp = _this.mouseEventService.getRenderedCellForEvent(event.touchEvent);\n\n        _this.handleContextMenuMouseEvent(null, event.touchEvent, rowComp, cellComp);\n      };\n\n      _this.addDestroyableEventListener(touchListener, touchListener_1.TouchListener.EVENT_LONG_TAP, longTapListener);\n\n      _this.addDestroyFunc(function () {\n        return touchListener.destroy();\n      });\n    });\n  };\n\n  GridPanel.prototype.handleContextMenuMouseEvent = function (mouseEvent, touchEvent, rowComp, cellComp) {\n    var rowNode = rowComp ? rowComp.getRowNode() : null;\n    var column = cellComp ? cellComp.getColumn() : null;\n    var value = null;\n\n    if (column) {\n      var event_1 = mouseEvent ? mouseEvent : touchEvent;\n      cellComp.dispatchCellContextMenuEvent(event_1);\n      value = this.valueService.getValue(column, rowNode);\n    }\n\n    this.onContextMenu(mouseEvent, touchEvent, rowNode, column, value);\n  };\n\n  GridPanel.prototype.onContextMenu = function (mouseEvent, touchEvent, rowNode, column, value) {\n    // to allow us to debug in chrome, we ignore the event if ctrl is pressed.\n    // not everyone wants this, so first 'if' below allows to turn this hack off.\n    if (!this.gridOptionsWrapper.isAllowContextMenuWithControlKey()) {\n      // then do the check\n      if (mouseEvent && (mouseEvent.ctrlKey || mouseEvent.metaKey)) {\n        return;\n      }\n    }\n\n    if (this.contextMenuFactory && !this.gridOptionsWrapper.isSuppressContextMenu()) {\n      var eventOrTouch = mouseEvent ? mouseEvent : touchEvent.touches[0];\n      this.contextMenuFactory.showMenu(rowNode, column, value, eventOrTouch);\n      var event_2 = mouseEvent ? mouseEvent : touchEvent;\n      event_2.preventDefault();\n    }\n  };\n\n  GridPanel.prototype.preventDefaultOnContextMenu = function (mouseEvent) {\n    // if we don't do this, then middle click will never result in a 'click' event, as 'mousedown'\n    // will be consumed by the browser to mean 'scroll' (as you can scroll with the middle mouse\n    // button in the browser). so this property allows the user to receive middle button clicks if\n    // they want.\n    var gridOptionsWrapper = this.gridOptionsWrapper;\n    var which = mouseEvent.which;\n\n    if (gridOptionsWrapper.isPreventDefaultOnContextMenu() || gridOptionsWrapper.isSuppressMiddleClickScrolls() && which === 2) {\n      mouseEvent.preventDefault();\n    }\n  };\n\n  GridPanel.prototype.onCtrlAndA = function (event) {\n    var _a = this,\n        columnController = _a.columnController,\n        pinnedRowModel = _a.pinnedRowModel,\n        paginationProxy = _a.paginationProxy,\n        rangeController = _a.rangeController;\n\n    var PINNED_BOTTOM = constants_1.Constants.PINNED_BOTTOM,\n        PINNED_TOP = constants_1.Constants.PINNED_TOP;\n\n    if (rangeController && paginationProxy.isRowsToRender()) {\n      var _b = [pinnedRowModel.isEmpty(PINNED_TOP), pinnedRowModel.isEmpty(PINNED_BOTTOM)],\n          isEmptyPinnedTop = _b[0],\n          isEmptyPinnedBottom = _b[1];\n      var floatingStart = isEmptyPinnedTop ? null : PINNED_TOP;\n      var floatingEnd = void 0;\n      var rowEnd = void 0;\n\n      if (isEmptyPinnedBottom) {\n        floatingEnd = null;\n        rowEnd = this.paginationProxy.getRowCount() - 1;\n      } else {\n        floatingEnd = PINNED_BOTTOM;\n        rowEnd = pinnedRowModel.getPinnedBottomRowData().length - 1;\n      }\n\n      var allDisplayedColumns = columnController.getAllDisplayedColumns();\n\n      if (utils_1._.missingOrEmpty(allDisplayedColumns)) {\n        return;\n      }\n\n      rangeController.setCellRange({\n        rowStartIndex: 0,\n        rowStartPinned: floatingStart,\n        rowEndIndex: rowEnd,\n        rowEndPinned: floatingEnd,\n        columnStart: allDisplayedColumns[0],\n        columnEnd: utils_1._.last(allDisplayedColumns)\n      });\n    }\n\n    event.preventDefault();\n  };\n\n  GridPanel.prototype.onCtrlAndC = function (event) {\n    if (!this.clipboardService || this.gridOptionsWrapper.isEnableCellTextSelection()) {\n      return;\n    }\n\n    var focusedCell = this.focusedCellController.getFocusedCell();\n    this.clipboardService.copyToClipboard();\n    event.preventDefault(); // the copy operation results in loosing focus on the cell,\n    // because of the trickery the copy logic uses with a temporary\n    // widget. so we set it back again.\n\n    if (focusedCell) {\n      this.focusedCellController.setFocusedCell(focusedCell.rowIndex, focusedCell.column, focusedCell.rowPinned, true);\n    }\n  };\n\n  GridPanel.prototype.onCtrlAndV = function () {\n    if (!this.enterprise || this.gridOptionsWrapper.isSuppressClipboardPaste()) {\n      return;\n    }\n\n    this.clipboardService.pasteFromClipboard();\n  };\n\n  GridPanel.prototype.onCtrlAndD = function (event) {\n    if (!this.enterprise) {\n      return;\n    }\n\n    this.clipboardService.copyRangeDown();\n    event.preventDefault();\n  }; // Valid values for position are bottom, middle and top\n  // position should be {'top','middle','bottom', or undefined/null}.\n  // if undefined/null, then the grid will to the minimal amount of scrolling,\n  // eg if grid needs to scroll up, it scrolls until row is on top,\n  //    if grid needs to scroll down, it scrolls until row is on bottom,\n  //    if row is already in view, grid does not scroll\n  // fixme - how does this work in the new way\n\n\n  GridPanel.prototype.ensureIndexVisible = function (index, position) {\n    // if for print or auto height, everything is always visible\n    if (this.printLayout) {\n      return;\n    }\n\n    var rowCount = this.paginationProxy.getRowCount();\n\n    if (typeof index !== 'number' || index < 0 || index >= rowCount) {\n      console.warn('invalid row index for ensureIndexVisible: ' + index);\n      return;\n    }\n\n    this.paginationProxy.goToPageWithIndex(index);\n    var rowNode = this.paginationProxy.getRow(index);\n    var rowGotShiftedDuringOperation;\n\n    do {\n      var startingRowTop = rowNode.rowTop;\n      var startingRowHeight = rowNode.rowHeight;\n      var paginationOffset = this.paginationProxy.getPixelOffset();\n      var rowTopPixel = rowNode.rowTop - paginationOffset;\n      var rowBottomPixel = rowTopPixel + rowNode.rowHeight;\n      var scrollPosition = this.getVScrollPosition();\n      var heightOffset = this.heightScaler.getOffset();\n      var vScrollTop = scrollPosition.top + heightOffset;\n      var vScrollBottom = scrollPosition.bottom + heightOffset;\n      var viewportHeight = vScrollBottom - vScrollTop; // work out the pixels for top, middle and bottom up front,\n      // make the if/else below easier to read\n\n      var pxTop = this.heightScaler.getScrollPositionForPixel(rowTopPixel);\n      var pxBottom = this.heightScaler.getScrollPositionForPixel(rowBottomPixel - viewportHeight); // make sure if middle, the row is not outside the top of the grid\n\n      var pxMiddle = Math.min((pxTop + pxBottom) / 2, rowTopPixel);\n      var rowBelowViewport = vScrollTop > rowTopPixel;\n      var rowAboveViewport = vScrollBottom < rowBottomPixel;\n      var newScrollPosition = null;\n\n      if (position === 'top') {\n        newScrollPosition = pxTop;\n      } else if (position === 'bottom') {\n        newScrollPosition = pxBottom;\n      } else if (position === 'middle') {\n        newScrollPosition = pxMiddle;\n      } else if (rowBelowViewport) {\n        // if row is before, scroll up with row at top\n        newScrollPosition = pxTop;\n      } else if (rowAboveViewport) {\n        // if row is below, scroll down with row at bottom\n        newScrollPosition = pxBottom;\n      }\n\n      if (newScrollPosition !== null) {\n        this.eBodyViewport.scrollTop = newScrollPosition;\n        this.rowRenderer.redrawAfterScroll();\n      } // the row can get shifted if during the rendering (during rowRenderer.redrawAfterScroll()),\n      // the height of a row changes due to lazy calculation of row heights when using\n      // colDef.autoHeight or gridOptions.getRowHeight.\n      // if row was shifted, then the position we scrolled to is incorrect.\n\n\n      rowGotShiftedDuringOperation = startingRowTop !== rowNode.rowTop || startingRowHeight !== rowNode.rowHeight;\n    } while (rowGotShiftedDuringOperation); // so when we return back to user, the cells have rendered\n\n\n    this.animationFrameService.flushAllFrames();\n  }; // + moveColumnController\n\n\n  GridPanel.prototype.getCenterWidth = function () {\n    return this.eCenterViewport.clientWidth;\n  };\n\n  GridPanel.prototype.isVerticalScrollShowing = function () {\n    var isAlwaysShowVerticalScroll = this.gridOptionsWrapper.isAlwaysShowVerticalScroll();\n\n    utils_1._.addOrRemoveCssClass(this.eBodyViewport, 'ag-force-vertical-scroll', isAlwaysShowVerticalScroll);\n\n    return isAlwaysShowVerticalScroll || utils_1._.isVerticalScrollShowing(this.eBodyViewport);\n  };\n\n  GridPanel.prototype.isHorizontalScrollShowing = function () {\n    return utils_1._.isHorizontalScrollShowing(this.eCenterViewport);\n  }; // gets called every time the viewport size changes. we use this to check visibility of scrollbars\n  // in the grid panel, and also to check size and position of viewport for row and column virtualisation.\n\n\n  GridPanel.prototype.checkViewportAndScrolls = function () {\n    // results in updating anything that depends on scroll showing\n    this.updateScrollVisibleService(); // fires event if height changes, used by PaginationService, HeightScalerService, RowRenderer\n\n    this.checkBodyHeight(); // check for virtual columns for ColumnController\n\n    this.onHorizontalViewportChanged();\n    this.setPinnedContainerSize();\n  };\n\n  GridPanel.prototype.updateScrollVisibleService = function () {\n    // because of column animation (which takes 200ms), we have to do this twice.\n    // eg if user removes cols anywhere except at the RHS, then the cols on the RHS\n    // will animate to the left to fill the gap. this animation means just after\n    // the cols are removed, the remaining cols are still in the original location\n    // at the start of the animation, so pre animation the H scrollbar is still needed,\n    // but post animation it is not.\n    this.updateScrollVisibleServiceImpl();\n    setTimeout(this.updateScrollVisibleServiceImpl.bind(this), 500);\n  };\n\n  GridPanel.prototype.updateScrollVisibleServiceImpl = function () {\n    var params = {\n      horizontalScrollShowing: false,\n      verticalScrollShowing: false\n    };\n    params.verticalScrollShowing = this.isVerticalScrollShowing();\n    params.horizontalScrollShowing = this.isHorizontalScrollShowing();\n    this.scrollVisibleService.setScrollsVisible(params);\n    this.setHorizontalScrollVisible(params.horizontalScrollShowing);\n    this.setVerticalScrollPaddingVisible(params.verticalScrollShowing);\n  };\n\n  GridPanel.prototype.setHorizontalScrollVisible = function (visible) {\n    var isSuppressHorizontalScroll = this.gridOptionsWrapper.isSuppressHorizontalScroll();\n    var scrollSize = visible ? this.gridOptionsWrapper.getScrollbarWidth() || 0 : 0;\n    var scrollContainerSize = !isSuppressHorizontalScroll ? scrollSize : 0;\n    var addIEPadding = utils_1._.isBrowserIE() && visible;\n    this.eCenterViewport.style.height = \"calc(100% + \" + scrollSize + \"px)\";\n\n    utils_1._.setFixedHeight(this.eHorizontalScrollBody, scrollContainerSize); // we have to add an extra pixel to the scroller viewport on IE because\n    // if the container has the same size as the scrollbar, the scroll button won't work\n\n\n    utils_1._.setFixedHeight(this.eBodyHorizontalScrollViewport, scrollContainerSize + (addIEPadding ? 1 : 0));\n\n    utils_1._.setFixedHeight(this.eBodyHorizontalScrollContainer, scrollContainerSize);\n  };\n\n  GridPanel.prototype.setVerticalScrollPaddingVisible = function (show) {\n    var scroller = show ? \"scroll\" : \"hidden\";\n    this.eTop.style.overflowY = this.eBottom.style.overflowY = scroller;\n    this.setFakeHScrollSpacerWidths();\n  };\n\n  GridPanel.prototype.updateRowCount = function () {\n    var headerCount = this.headerRootComp.getHeaderRowCount();\n    var rowCount = this.paginationProxy.getRowCount();\n    var total = (headerCount + rowCount).toString();\n    this.getGui().setAttribute('aria-rowcount', total);\n  };\n\n  GridPanel.prototype.ensureColumnVisible = function (key) {\n    var column = this.columnController.getGridColumn(key);\n\n    if (!column) {\n      return;\n    }\n\n    if (column.isPinned()) {\n      console.warn('calling ensureIndexVisible on a ' + column.getPinned() + ' pinned column doesn\\'t make sense for column ' + column.getColId());\n      return;\n    }\n\n    if (!this.columnController.isColumnDisplayed(column)) {\n      console.warn('column is not currently visible');\n      return;\n    }\n\n    var colLeftPixel = column.getLeft();\n    var colRightPixel = colLeftPixel + column.getActualWidth();\n    var viewportWidth = this.eCenterViewport.clientWidth;\n    var scrollPosition = this.getCenterViewportScrollLeft();\n    var bodyWidth = this.columnController.getBodyContainerWidth();\n    var viewportLeftPixel;\n    var viewportRightPixel; // the logic of working out left and right viewport px is both here and in the ColumnController,\n    // need to refactor it out to one place\n\n    if (this.enableRtl) {\n      viewportLeftPixel = bodyWidth - scrollPosition - viewportWidth;\n      viewportRightPixel = bodyWidth - scrollPosition;\n    } else {\n      viewportLeftPixel = scrollPosition;\n      viewportRightPixel = viewportWidth + scrollPosition;\n    }\n\n    var viewportScrolledPastCol = viewportLeftPixel > colLeftPixel;\n    var viewportScrolledBeforeCol = viewportRightPixel < colRightPixel;\n    var colToSmallForViewport = viewportWidth < column.getActualWidth();\n    var alignColToLeft = viewportScrolledPastCol || colToSmallForViewport;\n    var alignColToRight = viewportScrolledBeforeCol;\n    var newScrollPosition = this.getCenterViewportScrollLeft();\n\n    if (alignColToLeft || alignColToRight) {\n      if (this.enableRtl) {\n        newScrollPosition = alignColToLeft ? bodyWidth - viewportWidth - colLeftPixel : bodyWidth - colRightPixel;\n      } else {\n        newScrollPosition = alignColToLeft ? colLeftPixel : colRightPixel - viewportWidth;\n      }\n\n      this.setCenterViewportScrollLeft(newScrollPosition);\n    } else {} // otherwise, col is already in view, so do nothing\n    // this will happen anyway, as the move will cause a 'scroll' event on the body, however\n    // it is possible that the ensureColumnVisible method is called from within ag-Grid and\n    // the caller will need to have the columns rendered to continue, which will be before\n    // the event has been worked on (which is the case for cell navigation).\n\n\n    this.onHorizontalViewportChanged(); // so when we return back to user, the cells have rendered\n\n    this.animationFrameService.flushAllFrames();\n  };\n\n  GridPanel.prototype.showLoadingOverlay = function () {\n    if (!this.gridOptionsWrapper.isSuppressLoadingOverlay()) {\n      this.overlayWrapper.showLoadingOverlay();\n    }\n  };\n\n  GridPanel.prototype.showNoRowsOverlay = function () {\n    if (!this.gridOptionsWrapper.isSuppressNoRowsOverlay()) {\n      this.overlayWrapper.showNoRowsOverlay();\n    }\n  };\n\n  GridPanel.prototype.hideOverlay = function () {\n    this.overlayWrapper.hideOverlay();\n  }; // method will call itself if no available width. this covers if the grid\n  // isn't visible, but is just about to be visible.\n\n\n  GridPanel.prototype.sizeColumnsToFit = function (nextTimeout) {\n    var _this = this;\n\n    var availableWidth = this.eBodyViewport.clientWidth;\n\n    if (availableWidth > 0) {\n      this.columnController.sizeColumnsToFit(availableWidth, \"sizeColumnsToFit\");\n      return;\n    }\n\n    if (nextTimeout === undefined) {\n      window.setTimeout(function () {\n        _this.sizeColumnsToFit(100);\n      }, 0);\n    } else if (nextTimeout === 100) {\n      window.setTimeout(function () {\n        _this.sizeColumnsToFit(500);\n      }, 100);\n    } else if (nextTimeout === 500) {\n      window.setTimeout(function () {\n        _this.sizeColumnsToFit(-1);\n      }, 500);\n    } else {\n      console.warn('ag-Grid: tried to call sizeColumnsToFit() but the grid is coming back with ' + 'zero width, maybe the grid is not visible yet on the screen?');\n    }\n  }; // used by autoWidthCalculator and autoHeightCalculator\n\n\n  GridPanel.prototype.getCenterContainer = function () {\n    return this.eCenterContainer;\n  };\n\n  GridPanel.prototype.getDropTargetBodyContainers = function () {\n    return [this.eCenterViewport, this.eTopViewport, this.eBottomViewport];\n  };\n\n  GridPanel.prototype.getDropTargetLeftContainers = function () {\n    return [this.eLeftContainer, this.eLeftBottom, this.eLeftTop];\n  };\n\n  GridPanel.prototype.getDropTargetRightContainers = function () {\n    return [this.eRightContainer, this.eRightBottom, this.eRightTop];\n  };\n\n  GridPanel.prototype.buildRowContainerComponents = function () {\n    var _this = this;\n\n    this.eAllCellContainers = [this.eLeftContainer, this.eRightContainer, this.eCenterContainer, this.eTop, this.eBottom, this.eFullWidthContainer];\n    this.rowContainerComponents = {\n      body: new rowContainerComponent_1.RowContainerComponent({\n        eContainer: this.eCenterContainer,\n        eWrapper: this.eCenterColsClipper,\n        eViewport: this.eBodyViewport\n      }),\n      fullWidth: new rowContainerComponent_1.RowContainerComponent({\n        eContainer: this.eFullWidthContainer\n      }),\n      pinnedLeft: new rowContainerComponent_1.RowContainerComponent({\n        eContainer: this.eLeftContainer\n      }),\n      pinnedRight: new rowContainerComponent_1.RowContainerComponent({\n        eContainer: this.eRightContainer\n      }),\n      floatingTop: new rowContainerComponent_1.RowContainerComponent({\n        eContainer: this.eTopContainer\n      }),\n      floatingTopPinnedLeft: new rowContainerComponent_1.RowContainerComponent({\n        eContainer: this.eLeftTop\n      }),\n      floatingTopPinnedRight: new rowContainerComponent_1.RowContainerComponent({\n        eContainer: this.eRightTop\n      }),\n      floatingTopFullWidth: new rowContainerComponent_1.RowContainerComponent({\n        eContainer: this.eTopFullWidthContainer,\n        hideWhenNoChildren: true\n      }),\n      floatingBottom: new rowContainerComponent_1.RowContainerComponent({\n        eContainer: this.eBottomContainer\n      }),\n      floatingBottomPinnedLeft: new rowContainerComponent_1.RowContainerComponent({\n        eContainer: this.eLeftBottom\n      }),\n      floatingBottomPinnedRight: new rowContainerComponent_1.RowContainerComponent({\n        eContainer: this.eRightBottom\n      }),\n      floatingBottomFullWith: new rowContainerComponent_1.RowContainerComponent({\n        eContainer: this.eBottomFullWidthContainer,\n        hideWhenNoChildren: true\n      })\n    };\n\n    utils_1._.iterateObject(this.rowContainerComponents, function (key, container) {\n      if (container) {\n        _this.getContext().wireBean(container);\n      }\n    });\n  };\n\n  GridPanel.prototype.setupRowAnimationCssClass = function () {\n    var _this = this;\n\n    var listener = function () {\n      // we don't want to use row animation if scaling, as rows jump strangely as you scroll,\n      // when scaling and doing row animation.\n      var animateRows = _this.gridOptionsWrapper.isAnimateRows() && !_this.heightScaler.isScaling();\n\n      utils_1._.addOrRemoveCssClass(_this.eBodyViewport, 'ag-row-animation', animateRows);\n\n      utils_1._.addOrRemoveCssClass(_this.eBodyViewport, 'ag-row-no-animation', !animateRows);\n    };\n\n    listener();\n    this.addDestroyableEventListener(this.eventService, events_1.Events.EVENT_HEIGHT_SCALE_CHANGED, listener);\n  }; // when editing a pinned row, if the cell is half outside the scrollable area, the browser can\n  // scroll the column into view. we do not want this, the pinned sections should never scroll.\n  // so we listen to scrolls on these containers and reset the scroll if we find one.\n\n\n  GridPanel.prototype.suppressScrollOnFloatingRow = function () {\n    var _this = this;\n\n    var resetTopScroll = function () {\n      return _this.eTopViewport.scrollLeft = 0;\n    };\n\n    var resetBottomScroll = function () {\n      return _this.eTopViewport.scrollLeft = 0;\n    };\n\n    this.addDestroyableEventListener(this.eTopViewport, 'scroll', resetTopScroll);\n    this.addDestroyableEventListener(this.eBottomViewport, 'scroll', resetBottomScroll);\n  };\n\n  GridPanel.prototype.getRowContainers = function () {\n    return this.rowContainerComponents;\n  };\n\n  GridPanel.prototype.getFloatingTopBottom = function () {\n    return [this.eTop, this.eBottom];\n  };\n\n  GridPanel.prototype.onDisplayedColumnsChanged = function () {\n    this.setPinnedContainerSize();\n    this.setHeaderAndFloatingHeights();\n    this.onHorizontalViewportChanged();\n    this.updateScrollVisibleService();\n  };\n\n  GridPanel.prototype.onDisplayedColumnsWidthChanged = function () {\n    this.setWidthsOfContainers();\n    this.onHorizontalViewportChanged();\n    this.updateScrollVisibleService();\n\n    if (this.enableRtl) {\n      // because RTL is all backwards, a change in the width of the row\n      // can cause a change in the scroll position, without a scroll event,\n      // because the scroll position in RTL is a function that depends on\n      // the width. to be convinced of this, take out this line, enable RTL,\n      // scroll all the way to the left and then resize a column\n      this.horizontallyScrollHeaderCenterAndFloatingCenter();\n    }\n  };\n\n  GridPanel.prototype.setWidthsOfContainers = function () {\n    this.setCenterWidth();\n    this.setPinnedContainerSize();\n  };\n\n  GridPanel.prototype.setCenterWidth = function () {\n    var width = this.columnController.getBodyContainerWidth();\n\n    if (this.printLayout) {\n      var pinnedContainerWidths = this.columnController.getPinnedLeftContainerWidth() + this.columnController.getPinnedRightContainerWidth();\n      width += pinnedContainerWidths;\n    }\n\n    this.headerRootComp.setHeaderContainerWidth(width);\n    var widthPx = width + \"px\";\n    this.eCenterContainer.style.width = widthPx;\n    this.eBottomContainer.style.width = widthPx;\n    this.eTopContainer.style.width = widthPx;\n\n    if (!this.printLayout) {\n      this.eBodyHorizontalScrollContainer.style.width = widthPx;\n    }\n  };\n\n  GridPanel.prototype.setPinnedLeftWidth = function () {\n    var _this = this;\n\n    var oldPinning = this.pinningLeft;\n    var widthOfCols = this.columnController.getPinnedLeftContainerWidth();\n    var newPinning = this.pinningLeft = !this.printLayout && widthOfCols > 0;\n    var containers = [this.eLeftContainer, this.eLeftTop, this.eLeftBottom];\n\n    if (oldPinning !== newPinning) {\n      this.headerRootComp.setLeftVisible(newPinning);\n    }\n\n    containers.forEach(function (e) {\n      return utils_1._.setDisplayed(e, _this.pinningLeft);\n    });\n\n    if (newPinning) {\n      containers.forEach(function (ct) {\n        return utils_1._.setFixedWidth(ct, widthOfCols);\n      });\n    }\n  };\n\n  GridPanel.prototype.setPinnedRightWidth = function () {\n    var oldPinning = this.pinningRight;\n    var widthOfCols = this.columnController.getPinnedRightContainerWidth();\n    var newPinning = this.pinningRight = !this.printLayout && widthOfCols > 0;\n    var containers = [this.eRightContainer, this.eRightTop, this.eRightBottom];\n\n    if (oldPinning !== newPinning) {\n      this.headerRootComp.setRightVisible(newPinning);\n    }\n\n    containers.forEach(function (ct) {\n      return utils_1._.setDisplayed(ct, newPinning);\n    });\n\n    if (newPinning) {\n      containers.forEach(function (ct) {\n        return utils_1._.setFixedWidth(ct, widthOfCols);\n      });\n    }\n  };\n\n  GridPanel.prototype.setPinnedContainerSize = function () {\n    this.setPinnedLeftWidth();\n    this.setPinnedRightWidth();\n    this.setFakeHScrollSpacerWidths();\n  };\n\n  GridPanel.prototype.setFakeHScrollSpacerWidths = function () {\n    // we pad the right based on a) if cols are pinned to the right and\n    // b) if v scroll is showing on the right (normal position of scroll)\n    var rightSpacing = this.columnController.getPinnedRightContainerWidth();\n    var scrollOnRight = !this.enableRtl && this.isVerticalScrollShowing();\n\n    if (scrollOnRight) {\n      rightSpacing += this.scrollWidth;\n    }\n\n    utils_1._.setFixedWidth(this.eHorizontalRightSpacer, rightSpacing);\n\n    utils_1._.addOrRemoveCssClass(this.eHorizontalRightSpacer, 'ag-scroller-corner', rightSpacing <= this.scrollWidth); // we pad the left based on a) if cols are pinned to the left and\n    // b) if v scroll is showing on the left (happens in LTR layout only)\n\n\n    var leftSpacing = this.columnController.getPinnedLeftContainerWidth();\n    var scrollOnLeft = this.enableRtl && this.isVerticalScrollShowing();\n\n    if (scrollOnLeft) {\n      leftSpacing += this.scrollWidth;\n    }\n\n    utils_1._.setFixedWidth(this.eHorizontalLeftSpacer, leftSpacing);\n\n    utils_1._.addOrRemoveCssClass(this.eHorizontalLeftSpacer, 'ag-scroller-corner', leftSpacing <= this.scrollWidth);\n  };\n\n  GridPanel.prototype.checkBodyHeight = function () {\n    var bodyHeight = this.eBodyViewport.clientHeight;\n\n    if (this.bodyHeight !== bodyHeight) {\n      this.bodyHeight = bodyHeight;\n      var event_3 = {\n        type: events_1.Events.EVENT_BODY_HEIGHT_CHANGED,\n        api: this.gridApi,\n        columnApi: this.columnApi\n      };\n      this.eventService.dispatchEvent(event_3);\n    }\n  };\n\n  GridPanel.prototype.setHeaderAndFloatingHeights = function () {\n    var _a = this,\n        columnController = _a.columnController,\n        gridOptionsWrapper = _a.gridOptionsWrapper,\n        pinnedRowModel = _a.pinnedRowModel,\n        eTop = _a.eTop,\n        eBottom = _a.eBottom;\n\n    var numberOfFloating = 0;\n    var headerRowCount = columnController.getHeaderRowCount();\n    var totalHeaderHeight;\n    var groupHeight;\n    var headerHeight;\n\n    if (!columnController.isPivotMode()) {\n      if (gridOptionsWrapper.isFloatingFilter()) {\n        headerRowCount++;\n      }\n\n      numberOfFloating = gridOptionsWrapper.isFloatingFilter() ? 1 : 0;\n      groupHeight = gridOptionsWrapper.getGroupHeaderHeight();\n      headerHeight = gridOptionsWrapper.getHeaderHeight();\n    } else {\n      numberOfFloating = 0;\n      groupHeight = gridOptionsWrapper.getPivotGroupHeaderHeight();\n      headerHeight = gridOptionsWrapper.getPivotHeaderHeight();\n    }\n\n    var numberOfNonGroups = 1 + numberOfFloating;\n    var numberOfGroups = headerRowCount - numberOfNonGroups;\n    totalHeaderHeight = numberOfFloating * gridOptionsWrapper.getFloatingFiltersHeight();\n    totalHeaderHeight += numberOfGroups * groupHeight;\n    totalHeaderHeight += headerHeight;\n    this.headerRootComp.setHeight(totalHeaderHeight);\n    var floatingTopHeight = pinnedRowModel.getPinnedTopTotalHeight();\n\n    if (floatingTopHeight) {\n      // adding 1px for cell bottom border\n      floatingTopHeight += 1;\n    }\n\n    var floatingBottomHeight = pinnedRowModel.getPinnedBottomTotalHeight();\n\n    if (floatingBottomHeight) {\n      // adding 1px for cell bottom border\n      floatingBottomHeight += 1;\n    }\n\n    var floatingTopHeightString = floatingTopHeight + \"px\";\n    var floatingBottomHeightString = floatingBottomHeight + \"px\";\n    eTop.style.minHeight = floatingTopHeightString;\n    eTop.style.height = floatingTopHeightString;\n    eTop.style.display = floatingTopHeight ? 'inherit' : 'none';\n    eBottom.style.minHeight = floatingBottomHeightString;\n    eBottom.style.height = floatingBottomHeightString;\n    eBottom.style.display = floatingBottomHeight ? 'inherit' : 'none';\n    this.checkBodyHeight();\n  };\n\n  GridPanel.prototype.getBodyHeight = function () {\n    return this.bodyHeight;\n  }; // called by scrollHorizontally method and alignedGridsService\n\n\n  GridPanel.prototype.setHorizontalScrollPosition = function (hScrollPosition) {\n    this.eCenterViewport.scrollLeft = hScrollPosition; // we need to manually do the event handling (rather than wait for the event)\n    // for the alignedGridsService, as if we don't, the aligned grid service gets\n    // notified async, and then it's 'consuming' flag doesn't get used right, and\n    // we can end up with an infinite loop\n\n    this.doHorizontalScroll(hScrollPosition);\n  };\n\n  GridPanel.prototype.setVerticalScrollPosition = function (vScrollPosition) {\n    this.eBodyViewport.scrollTop = vScrollPosition;\n  }; // called by the headerRootComp and moveColumnController\n\n\n  GridPanel.prototype.scrollHorizontally = function (pixels) {\n    var oldScrollPosition = this.eCenterViewport.scrollLeft;\n    this.setHorizontalScrollPosition(oldScrollPosition + pixels);\n    return this.eCenterViewport.scrollLeft - oldScrollPosition;\n  }; // called by rowDragFeature\n\n\n  GridPanel.prototype.scrollVertically = function (pixels) {\n    var oldScrollPosition = this.eBodyViewport.scrollTop;\n    this.setVerticalScrollPosition(oldScrollPosition + pixels);\n    return this.eBodyViewport.scrollTop - oldScrollPosition;\n  };\n\n  GridPanel.prototype.addScrollListener = function () {\n    this.addDestroyableEventListener(this.eCenterViewport, 'scroll', this.onCenterViewportScroll.bind(this));\n    this.addDestroyableEventListener(this.eBodyHorizontalScrollViewport, 'scroll', this.onFakeHorizontalScroll.bind(this));\n    this.addDestroyableEventListener(this.eBodyViewport, 'scroll', this.onVerticalScroll.bind(this));\n  };\n\n  GridPanel.prototype.onVerticalScroll = function () {\n    var scrollTop = this.eBodyViewport.scrollTop;\n    this.animationFrameService.setScrollTop(scrollTop);\n    this.nextScrollTop = scrollTop;\n\n    if (this.gridOptionsWrapper.isSuppressAnimationFrame()) {\n      this.redrawRowsAfterScroll();\n    } else {\n      this.animationFrameService.schedule();\n    }\n  };\n\n  GridPanel.prototype.executeFrame = function () {\n    var frameNeeded = this.scrollTop !== this.nextScrollTop;\n\n    if (frameNeeded) {\n      this.scrollTop = this.nextScrollTop;\n      this.redrawRowsAfterScroll();\n    }\n\n    return frameNeeded;\n  };\n\n  GridPanel.prototype.isControllingScroll = function (eDiv) {\n    if (!this.lastHorizontalScrollElement) {\n      this.lastHorizontalScrollElement = eDiv;\n      return true;\n    }\n\n    return eDiv === this.lastHorizontalScrollElement;\n  };\n\n  GridPanel.prototype.onFakeHorizontalScroll = function () {\n    if (!this.isControllingScroll(this.eBodyHorizontalScrollViewport)) {\n      return;\n    }\n\n    this.onBodyHorizontalScroll(this.eBodyHorizontalScrollViewport);\n  };\n\n  GridPanel.prototype.onCenterViewportScroll = function () {\n    if (!this.isControllingScroll(this.eCenterViewport)) {\n      return;\n    }\n\n    this.onBodyHorizontalScroll(this.eCenterViewport);\n  };\n\n  GridPanel.prototype.onBodyHorizontalScroll = function (eSource) {\n    var _a = this.eCenterViewport,\n        scrollWidth = _a.scrollWidth,\n        clientWidth = _a.clientWidth; // in chrome, fractions can be in the scroll left, eg 250.342234 - which messes up our 'scrollWentPastBounds'\n    // formula. so we floor it to allow the formula to work.\n\n    var scrollLeft = Math.floor(utils_1._.getScrollLeft(eSource, this.enableRtl)); // touch devices allow elastic scroll - which temporally scrolls the panel outside of the viewport\n    // (eg user uses touch to go to the left of the grid, but drags past the left, the rows will actually\n    // scroll past the left until the user releases the mouse). when this happens, we want ignore the scroll,\n    // as otherwise it was causing the rows and header to flicker.\n\n    var scrollWentPastBounds = scrollLeft < 0 || scrollLeft + clientWidth > scrollWidth;\n\n    if (scrollWentPastBounds) {\n      return;\n    }\n\n    this.doHorizontalScroll(scrollLeft);\n    this.resetLastHorizontalScrollElementDebounce();\n  };\n\n  GridPanel.prototype.resetLastHorizontalScrollElement = function () {\n    this.lastHorizontalScrollElement = null;\n  };\n\n  GridPanel.prototype.doHorizontalScroll = function (scrollLeft) {\n    this.scrollLeft = scrollLeft;\n    var event = {\n      type: events_1.Events.EVENT_BODY_SCROLL,\n      api: this.gridApi,\n      columnApi: this.columnApi,\n      direction: 'horizontal',\n      left: this.scrollLeft,\n      top: this.scrollTop\n    };\n    this.eventService.dispatchEvent(event);\n    this.horizontallyScrollHeaderCenterAndFloatingCenter(scrollLeft);\n    this.onHorizontalViewportChanged();\n  };\n\n  GridPanel.prototype.redrawRowsAfterScroll = function () {\n    var event = {\n      type: events_1.Events.EVENT_BODY_SCROLL,\n      direction: 'vertical',\n      api: this.gridApi,\n      columnApi: this.columnApi,\n      left: this.scrollLeft,\n      top: this.scrollTop\n    };\n    this.eventService.dispatchEvent(event);\n  }; // this gets called whenever a change in the viewport, so we can inform column controller it has to work\n  // out the virtual columns again. gets called from following locations:\n  // + ensureColVisible, scroll, init, layoutChanged, displayedColumnsChanged, API (doLayout)\n\n\n  GridPanel.prototype.onHorizontalViewportChanged = function () {\n    var scrollWidth = this.eCenterViewport.clientWidth;\n    var scrollPosition = this.getCenterViewportScrollLeft();\n    this.columnController.setVirtualViewportPosition(scrollWidth, scrollPosition);\n  };\n\n  GridPanel.prototype.getCenterViewportScrollLeft = function () {\n    // we defer to a util, as how you calculated scrollLeft when doing RTL depends on the browser\n    return utils_1._.getScrollLeft(this.eCenterViewport, this.enableRtl);\n  };\n\n  GridPanel.prototype.setCenterViewportScrollLeft = function (value) {\n    // we defer to a util, as how you calculated scrollLeft when doing RTL depends on the browser\n    utils_1._.setScrollLeft(this.eCenterViewport, value, this.enableRtl);\n  };\n\n  GridPanel.prototype.horizontallyScrollHeaderCenterAndFloatingCenter = function (scrollLeft) {\n    if (scrollLeft === undefined) {\n      scrollLeft = this.getCenterViewportScrollLeft();\n    }\n\n    var offset = this.enableRtl ? scrollLeft : -scrollLeft;\n    var _a = this.eCenterViewport,\n        clientWidth = _a.clientWidth,\n        scrollWidth = _a.scrollWidth;\n    var scrollWentPastBounds = Math.abs(offset) + clientWidth > scrollWidth;\n\n    if (scrollWentPastBounds || this.enableRtl && offset < 0 || !this.enableRtl && offset > 0) {\n      return;\n    }\n\n    this.headerRootComp.setHorizontalScroll(offset);\n    this.eBottomContainer.style.transform = \"translateX(\" + offset + \"px)\";\n    this.eTopContainer.style.transform = \"translateX(\" + offset + \"px)\";\n    var partner = this.lastHorizontalScrollElement === this.eCenterViewport ? this.eBodyHorizontalScrollViewport : this.eCenterViewport;\n\n    utils_1._.setScrollLeft(partner, scrollLeft, this.enableRtl);\n  }; // + rangeController\n\n\n  GridPanel.prototype.addScrollEventListener = function (listener) {\n    this.eBodyViewport.addEventListener('scroll', listener);\n  }; // + rangeController\n\n\n  GridPanel.prototype.removeScrollEventListener = function (listener) {\n    this.eBodyViewport.removeEventListener('scroll', listener);\n  };\n\n  __decorate([context_1.Autowired('alignedGridsService'), __metadata(\"design:type\", alignedGridsService_1.AlignedGridsService)], GridPanel.prototype, \"alignedGridsService\", void 0);\n\n  __decorate([context_1.Autowired('gridOptionsWrapper'), __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)], GridPanel.prototype, \"gridOptionsWrapper\", void 0);\n\n  __decorate([context_1.Autowired('columnController'), __metadata(\"design:type\", columnController_1.ColumnController)], GridPanel.prototype, \"columnController\", void 0);\n\n  __decorate([context_1.Autowired('rowRenderer'), __metadata(\"design:type\", rowRenderer_1.RowRenderer)], GridPanel.prototype, \"rowRenderer\", void 0);\n\n  __decorate([context_1.Autowired('pinnedRowModel'), __metadata(\"design:type\", pinnedRowModel_1.PinnedRowModel)], GridPanel.prototype, \"pinnedRowModel\", void 0);\n\n  __decorate([context_1.Autowired('eventService'), __metadata(\"design:type\", eventService_1.EventService)], GridPanel.prototype, \"eventService\", void 0);\n\n  __decorate([context_1.Autowired('animationFrameService'), __metadata(\"design:type\", animationFrameService_1.AnimationFrameService)], GridPanel.prototype, \"animationFrameService\", void 0);\n\n  __decorate([context_1.Autowired('navigationService'), __metadata(\"design:type\", navigationService_1.NavigationService)], GridPanel.prototype, \"navigationService\", void 0);\n\n  __decorate([context_1.Autowired('autoHeightCalculator'), __metadata(\"design:type\", autoHeightCalculator_1.AutoHeightCalculator)], GridPanel.prototype, \"autoHeightCalculator\", void 0);\n\n  __decorate([context_1.Autowired('columnAnimationService'), __metadata(\"design:type\", columnAnimationService_1.ColumnAnimationService)], GridPanel.prototype, \"columnAnimationService\", void 0);\n\n  __decorate([context_1.Autowired('autoWidthCalculator'), __metadata(\"design:type\", autoWidthCalculator_1.AutoWidthCalculator)], GridPanel.prototype, \"autoWidthCalculator\", void 0);\n\n  __decorate([context_1.Autowired('paginationAutoPageSizeService'), __metadata(\"design:type\", paginationAutoPageSizeService_1.PaginationAutoPageSizeService)], GridPanel.prototype, \"paginationAutoPageSizeService\", void 0);\n\n  __decorate([context_1.Autowired('beans'), __metadata(\"design:type\", beans_1.Beans)], GridPanel.prototype, \"beans\", void 0);\n\n  __decorate([context_1.Autowired('paginationProxy'), __metadata(\"design:type\", paginationProxy_1.PaginationProxy)], GridPanel.prototype, \"paginationProxy\", void 0);\n\n  __decorate([context_1.Autowired('columnApi'), __metadata(\"design:type\", columnApi_1.ColumnApi)], GridPanel.prototype, \"columnApi\", void 0);\n\n  __decorate([context_1.Autowired('gridApi'), __metadata(\"design:type\", gridApi_1.GridApi)], GridPanel.prototype, \"gridApi\", void 0);\n\n  __decorate([context_1.Autowired('dragService'), __metadata(\"design:type\", dragService_1.DragService)], GridPanel.prototype, \"dragService\", void 0);\n\n  __decorate([context_1.Autowired('mouseEventService'), __metadata(\"design:type\", mouseEventService_1.MouseEventService)], GridPanel.prototype, \"mouseEventService\", void 0);\n\n  __decorate([context_1.Autowired('focusedCellController'), __metadata(\"design:type\", focusedCellController_1.FocusedCellController)], GridPanel.prototype, \"focusedCellController\", void 0);\n\n  __decorate([context_1.Autowired('$scope'), __metadata(\"design:type\", Object)], GridPanel.prototype, \"$scope\", void 0);\n\n  __decorate([context_1.Autowired('scrollVisibleService'), __metadata(\"design:type\", scrollVisibleService_1.ScrollVisibleService)], GridPanel.prototype, \"scrollVisibleService\", void 0);\n\n  __decorate([context_1.Autowired('valueService'), __metadata(\"design:type\", valueService_1.ValueService)], GridPanel.prototype, \"valueService\", void 0);\n\n  __decorate([context_1.Autowired('dragAndDropService'), __metadata(\"design:type\", dragAndDropService_1.DragAndDropService)], GridPanel.prototype, \"dragAndDropService\", void 0);\n\n  __decorate([context_1.Autowired('maxDivHeightScaler'), __metadata(\"design:type\", maxDivHeightScaler_1.MaxDivHeightScaler)], GridPanel.prototype, \"heightScaler\", void 0);\n\n  __decorate([context_1.Autowired('enterprise'), __metadata(\"design:type\", Boolean)], GridPanel.prototype, \"enterprise\", void 0);\n\n  __decorate([context_1.Autowired('resizeObserverService'), __metadata(\"design:type\", resizeObserverService_1.ResizeObserverService)], GridPanel.prototype, \"resizeObserverService\", void 0);\n\n  __decorate([context_1.Optional('rangeController'), __metadata(\"design:type\", Object)], GridPanel.prototype, \"rangeController\", void 0);\n\n  __decorate([context_1.Optional('contextMenuFactory'), __metadata(\"design:type\", Object)], GridPanel.prototype, \"contextMenuFactory\", void 0);\n\n  __decorate([context_1.Optional('clipboardService'), __metadata(\"design:type\", Object)], GridPanel.prototype, \"clipboardService\", void 0);\n\n  __decorate([componentAnnotations_1.RefSelector('eBodyViewport'), __metadata(\"design:type\", HTMLElement)], GridPanel.prototype, \"eBodyViewport\", void 0);\n\n  __decorate([componentAnnotations_1.RefSelector('eCenterContainer'), __metadata(\"design:type\", HTMLElement)], GridPanel.prototype, \"eCenterContainer\", void 0);\n\n  __decorate([componentAnnotations_1.RefSelector('eCenterViewport'), __metadata(\"design:type\", HTMLElement)], GridPanel.prototype, \"eCenterViewport\", void 0);\n\n  __decorate([componentAnnotations_1.RefSelector('eLeftContainer'), __metadata(\"design:type\", HTMLElement)], GridPanel.prototype, \"eLeftContainer\", void 0);\n\n  __decorate([componentAnnotations_1.RefSelector('eRightContainer'), __metadata(\"design:type\", HTMLElement)], GridPanel.prototype, \"eRightContainer\", void 0);\n\n  __decorate([componentAnnotations_1.RefSelector('eCenterColsClipper'), __metadata(\"design:type\", HTMLElement)], GridPanel.prototype, \"eCenterColsClipper\", void 0);\n\n  __decorate([componentAnnotations_1.RefSelector('eHorizontalScrollBody'), __metadata(\"design:type\", HTMLElement)], GridPanel.prototype, \"eHorizontalScrollBody\", void 0);\n\n  __decorate([componentAnnotations_1.RefSelector('eHorizontalLeftSpacer'), __metadata(\"design:type\", HTMLElement)], GridPanel.prototype, \"eHorizontalLeftSpacer\", void 0);\n\n  __decorate([componentAnnotations_1.RefSelector('eHorizontalRightSpacer'), __metadata(\"design:type\", HTMLElement)], GridPanel.prototype, \"eHorizontalRightSpacer\", void 0);\n\n  __decorate([componentAnnotations_1.RefSelector('eBodyHorizontalScrollViewport'), __metadata(\"design:type\", HTMLElement)], GridPanel.prototype, \"eBodyHorizontalScrollViewport\", void 0);\n\n  __decorate([componentAnnotations_1.RefSelector('eBodyHorizontalScrollContainer'), __metadata(\"design:type\", HTMLElement)], GridPanel.prototype, \"eBodyHorizontalScrollContainer\", void 0);\n\n  __decorate([componentAnnotations_1.RefSelector('eFullWidthContainer'), __metadata(\"design:type\", HTMLElement)], GridPanel.prototype, \"eFullWidthContainer\", void 0);\n\n  __decorate([componentAnnotations_1.RefSelector('eTop'), __metadata(\"design:type\", HTMLElement)], GridPanel.prototype, \"eTop\", void 0);\n\n  __decorate([componentAnnotations_1.RefSelector('eLeftTop'), __metadata(\"design:type\", HTMLElement)], GridPanel.prototype, \"eLeftTop\", void 0);\n\n  __decorate([componentAnnotations_1.RefSelector('eRightTop'), __metadata(\"design:type\", HTMLElement)], GridPanel.prototype, \"eRightTop\", void 0);\n\n  __decorate([componentAnnotations_1.RefSelector('eTopContainer'), __metadata(\"design:type\", HTMLElement)], GridPanel.prototype, \"eTopContainer\", void 0);\n\n  __decorate([componentAnnotations_1.RefSelector('eTopViewport'), __metadata(\"design:type\", HTMLElement)], GridPanel.prototype, \"eTopViewport\", void 0);\n\n  __decorate([componentAnnotations_1.RefSelector('eTopFullWidthContainer'), __metadata(\"design:type\", HTMLElement)], GridPanel.prototype, \"eTopFullWidthContainer\", void 0);\n\n  __decorate([componentAnnotations_1.RefSelector('eBottom'), __metadata(\"design:type\", HTMLElement)], GridPanel.prototype, \"eBottom\", void 0);\n\n  __decorate([componentAnnotations_1.RefSelector('eLeftBottom'), __metadata(\"design:type\", HTMLElement)], GridPanel.prototype, \"eLeftBottom\", void 0);\n\n  __decorate([componentAnnotations_1.RefSelector('eRightBottom'), __metadata(\"design:type\", HTMLElement)], GridPanel.prototype, \"eRightBottom\", void 0);\n\n  __decorate([componentAnnotations_1.RefSelector('eBottomContainer'), __metadata(\"design:type\", HTMLElement)], GridPanel.prototype, \"eBottomContainer\", void 0);\n\n  __decorate([componentAnnotations_1.RefSelector('eBottomViewport'), __metadata(\"design:type\", HTMLElement)], GridPanel.prototype, \"eBottomViewport\", void 0);\n\n  __decorate([componentAnnotations_1.RefSelector('eBottomFullWidthContainer'), __metadata(\"design:type\", HTMLElement)], GridPanel.prototype, \"eBottomFullWidthContainer\", void 0);\n\n  __decorate([componentAnnotations_1.RefSelector('headerRoot'), __metadata(\"design:type\", headerRootComp_1.HeaderRootComp)], GridPanel.prototype, \"headerRootComp\", void 0);\n\n  __decorate([componentAnnotations_1.RefSelector('overlayWrapper'), __metadata(\"design:type\", overlayWrapperComponent_1.OverlayWrapperComponent)], GridPanel.prototype, \"overlayWrapper\", void 0);\n\n  __decorate([context_1.PostConstruct, __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", []), __metadata(\"design:returntype\", void 0)], GridPanel.prototype, \"init\", null);\n\n  return GridPanel;\n}(component_1.Component);\n\nexports.GridPanel = GridPanel;","map":{"version":3,"sources":["/Users/dirkmennecke77/Desktop/Lageplan/node_modules/ag-grid-community/dist/lib/gridPanel/gridPanel.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","k","v","metadata","exports","value","gridOptionsWrapper_1","require","columnController_1","columnApi_1","rowRenderer_1","context_1","eventService_1","events_1","dragService_1","constants_1","mouseEventService_1","focusedCellController_1","scrollVisibleService_1","rowContainerComponent_1","paginationProxy_1","paginationAutoPageSizeService_1","popupEditorWrapper_1","alignedGridsService_1","pinnedRowModel_1","gridApi_1","animationFrameService_1","rowComp_1","navigationService_1","valueService_1","touchListener_1","dragAndDropService_1","rowDragFeature_1","maxDivHeightScaler_1","overlayWrapperComponent_1","component_1","autoHeightCalculator_1","columnAnimationService_1","autoWidthCalculator_1","beans_1","componentAnnotations_1","headerRootComp_1","resizeObserverService_1","utils_1","GRID_PANEL_NORMAL_TEMPLATE","GridPanel","_super","_this","call","scrollLeft","scrollTop","nextScrollTop","resetLastHorizontalScrollElementDebounce","_","debounce","resetLastHorizontalScrollElement","bind","getVScrollPosition","result","top","eBodyViewport","bottom","offsetHeight","getHScrollPosition","left","eCenterViewport","right","offsetWidth","onRowDataChanged","showOrHideOverlay","isEmpty","paginationProxy","isSuppressNoRowsOverlay","gridOptionsWrapper","method","onNewColumnsLoaded","columnController","isReady","hideOverlay","init","scrollWidth","getScrollbarWidth","enableRtl","isEnableRtl","printLayout","getDomLayout","Constants","DOM_LAYOUT_PRINT","addLayoutElement","getGui","suppressScrollOnFloatingRow","setupRowAnimationCssClass","buildRowContainerComponents","addEventListeners","addDragListeners","addScrollListener","isRowModelDefault","getRowData","showLoadingOverlay","setCellTextSelection","isEnableCellTextSelect","setPinnedContainerSize","setHeaderAndFloatingHeights","disableBrowserDragging","addMouseListeners","addKeyboardEvents","addBodyViewportListener","addStopEditingWhenGridLosesFocus","mockContextMenuForIPad","addRowDragListener","$scope","addAngularApplyCheck","onDisplayedColumnsWidthChanged","gridApi","registerGridComp","alignedGridsService","headerRootComp","navigationService","heightScaler","autoHeightCalculator","columnAnimationService","autoWidthCalculator","paginationAutoPageSizeService","beans","rowRenderer","animationFrameService","rangeController","forEach","viewport","unsubscribeFromResize","resizeObserverService","observeResize","onCenterViewportResized","addDestroyFunc","onDomLayoutChanged","newPrintLayout","setWidthsOfContainers","isVisible","checkViewportAndScrolls","bodyHeight","setColumnMovingCss","moving","addOrRemoveCssClass","selectable","eTop","eBottom","ct","rowDragFeature","RowDragFeature","getContext","wireBean","dragAndDropService","addDropTarget","isStopEditingWhenGridLosesFocus","focusOutListener","event","elementWithFocus","relatedTarget","clickInsideGrid","pointer","exists","isPopup","getDomData","PopupEditorWrapper","DOM_KEY_POPUP_EDITOR_WRAPPER","isBody","parentNode","stopEditing","addDestroyableEventListener","applyTriggered","listener","window","setTimeout","$apply","eventService","Events","EVENT_DISPLAYED_COLUMNS_CHANGED","EVENT_VIRTUAL_COLUMNS_CHANGED","addGuiEventListener","HTMLImageElement","preventDefault","onDisplayedColumnsChanged","EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED","EVENT_PINNED_ROW_DATA_CHANGED","EVENT_ROW_DATA_CHANGED","EVENT_ROW_DATA_UPDATED","EVENT_NEW_COLUMNS_LOADED","GridOptionsWrapper","PROP_HEADER_HEIGHT","PROP_PIVOT_HEADER_HEIGHT","PROP_GROUP_HEADER_HEIGHT","PROP_PIVOT_GROUP_HEADER_HEIGHT","PROP_FLOATING_FILTERS_HEIGHT","PROP_DOM_LAYOUT","isEnableRangeSelection","missing","containers","eLeftContainer","eRightContainer","eCenterContainer","container","params","eElement","onDragStart","onDragStop","onDragging","dragService","addDragSource","removeDragSource","eventNames","eventName","processMouseEvent","eAllCellContainers","processKeyboardEvent","mouseEvent","getTarget","onContextMenu","preventDefaultOnContextMenu","getBodyClientRect","getBoundingClientRect","getRowForEvent","sourceElement","renderedRow","RowComp","DOM_DATA_KEY_RENDERED_ROW","parentElement","keyboardEvent","cellComp","getCellCompForEvent","rowNode","getRenderedRow","getRowNode","column","getColumn","editing","isEditing","gridProcessingAllowed","isUserSuppressingKeyboardEvent","wasScrollKey","handlePageScrollingKey","onKeyDown","doClipboardOperations","onKeyPress","cellKeyDownEvent","createEvent","EVENT_CELL_KEY_DOWN","dispatchEvent","cellKeyPressEvent","EVENT_CELL_KEY_PRESS","ctrlKey","metaKey","mouseEventService","isEventFromThisGrid","which","KEY_A","onCtrlAndA","KEY_C","onCtrlAndC","KEY_V","onCtrlAndV","KEY_D","onCtrlAndD","scrollToTop","isStopPropagationForAgGrid","rowComp","getRenderedCellForEvent","handleContextMenuMouseEvent","onMouseEvent","isUserAgentIPad","touchListener","TouchListener","longTapListener","touchEvent","EVENT_LONG_TAP","destroy","event_1","dispatchCellContextMenuEvent","valueService","getValue","isAllowContextMenuWithControlKey","contextMenuFactory","isSuppressContextMenu","eventOrTouch","touches","showMenu","event_2","isPreventDefaultOnContextMenu","isSuppressMiddleClickScrolls","_a","pinnedRowModel","PINNED_BOTTOM","PINNED_TOP","isRowsToRender","_b","isEmptyPinnedTop","isEmptyPinnedBottom","floatingStart","floatingEnd","rowEnd","getRowCount","getPinnedBottomRowData","allDisplayedColumns","getAllDisplayedColumns","missingOrEmpty","setCellRange","rowStartIndex","rowStartPinned","rowEndIndex","rowEndPinned","columnStart","columnEnd","last","clipboardService","isEnableCellTextSelection","focusedCell","focusedCellController","getFocusedCell","copyToClipboard","setFocusedCell","rowIndex","rowPinned","enterprise","isSuppressClipboardPaste","pasteFromClipboard","copyRangeDown","ensureIndexVisible","index","position","rowCount","console","warn","goToPageWithIndex","getRow","rowGotShiftedDuringOperation","startingRowTop","rowTop","startingRowHeight","rowHeight","paginationOffset","getPixelOffset","rowTopPixel","rowBottomPixel","scrollPosition","heightOffset","getOffset","vScrollTop","vScrollBottom","viewportHeight","pxTop","getScrollPositionForPixel","pxBottom","pxMiddle","Math","min","rowBelowViewport","rowAboveViewport","newScrollPosition","redrawAfterScroll","flushAllFrames","getCenterWidth","clientWidth","isVerticalScrollShowing","isAlwaysShowVerticalScroll","isHorizontalScrollShowing","updateScrollVisibleService","checkBodyHeight","onHorizontalViewportChanged","updateScrollVisibleServiceImpl","horizontalScrollShowing","verticalScrollShowing","scrollVisibleService","setScrollsVisible","setHorizontalScrollVisible","setVerticalScrollPaddingVisible","visible","isSuppressHorizontalScroll","scrollSize","scrollContainerSize","addIEPadding","isBrowserIE","style","height","setFixedHeight","eHorizontalScrollBody","eBodyHorizontalScrollViewport","eBodyHorizontalScrollContainer","show","scroller","overflowY","setFakeHScrollSpacerWidths","updateRowCount","headerCount","getHeaderRowCount","total","toString","setAttribute","ensureColumnVisible","getGridColumn","isPinned","getPinned","getColId","isColumnDisplayed","colLeftPixel","getLeft","colRightPixel","getActualWidth","viewportWidth","getCenterViewportScrollLeft","bodyWidth","getBodyContainerWidth","viewportLeftPixel","viewportRightPixel","viewportScrolledPastCol","viewportScrolledBeforeCol","colToSmallForViewport","alignColToLeft","alignColToRight","setCenterViewportScrollLeft","isSuppressLoadingOverlay","overlayWrapper","showNoRowsOverlay","sizeColumnsToFit","nextTimeout","availableWidth","undefined","getCenterContainer","getDropTargetBodyContainers","eTopViewport","eBottomViewport","getDropTargetLeftContainers","eLeftBottom","eLeftTop","getDropTargetRightContainers","eRightBottom","eRightTop","eFullWidthContainer","rowContainerComponents","body","RowContainerComponent","eContainer","eWrapper","eCenterColsClipper","eViewport","fullWidth","pinnedLeft","pinnedRight","floatingTop","eTopContainer","floatingTopPinnedLeft","floatingTopPinnedRight","floatingTopFullWidth","eTopFullWidthContainer","hideWhenNoChildren","floatingBottom","eBottomContainer","floatingBottomPinnedLeft","floatingBottomPinnedRight","floatingBottomFullWith","eBottomFullWidthContainer","iterateObject","animateRows","isAnimateRows","isScaling","EVENT_HEIGHT_SCALE_CHANGED","resetTopScroll","resetBottomScroll","getRowContainers","getFloatingTopBottom","horizontallyScrollHeaderCenterAndFloatingCenter","setCenterWidth","width","pinnedContainerWidths","getPinnedLeftContainerWidth","getPinnedRightContainerWidth","setHeaderContainerWidth","widthPx","setPinnedLeftWidth","oldPinning","pinningLeft","widthOfCols","newPinning","setLeftVisible","e","setDisplayed","setFixedWidth","setPinnedRightWidth","pinningRight","setRightVisible","rightSpacing","scrollOnRight","eHorizontalRightSpacer","leftSpacing","scrollOnLeft","eHorizontalLeftSpacer","clientHeight","event_3","type","EVENT_BODY_HEIGHT_CHANGED","api","columnApi","numberOfFloating","headerRowCount","totalHeaderHeight","groupHeight","headerHeight","isPivotMode","isFloatingFilter","getGroupHeaderHeight","getHeaderHeight","getPivotGroupHeaderHeight","getPivotHeaderHeight","numberOfNonGroups","numberOfGroups","getFloatingFiltersHeight","setHeight","floatingTopHeight","getPinnedTopTotalHeight","floatingBottomHeight","getPinnedBottomTotalHeight","floatingTopHeightString","floatingBottomHeightString","minHeight","display","getBodyHeight","setHorizontalScrollPosition","hScrollPosition","doHorizontalScroll","setVerticalScrollPosition","vScrollPosition","scrollHorizontally","pixels","oldScrollPosition","scrollVertically","onCenterViewportScroll","onFakeHorizontalScroll","onVerticalScroll","setScrollTop","isSuppressAnimationFrame","redrawRowsAfterScroll","schedule","executeFrame","frameNeeded","isControllingScroll","eDiv","lastHorizontalScrollElement","onBodyHorizontalScroll","eSource","floor","getScrollLeft","scrollWentPastBounds","EVENT_BODY_SCROLL","direction","setVirtualViewportPosition","setScrollLeft","offset","abs","setHorizontalScroll","transform","partner","addScrollEventListener","addEventListener","removeScrollEventListener","removeEventListener","Autowired","AlignedGridsService","ColumnController","RowRenderer","PinnedRowModel","EventService","AnimationFrameService","NavigationService","AutoHeightCalculator","ColumnAnimationService","AutoWidthCalculator","PaginationAutoPageSizeService","Beans","PaginationProxy","ColumnApi","GridApi","DragService","MouseEventService","FocusedCellController","ScrollVisibleService","ValueService","DragAndDropService","MaxDivHeightScaler","Boolean","ResizeObserverService","Optional","RefSelector","HTMLElement","HeaderRootComp","OverlayWrapperComponent","PostConstruct","Function","Component"],"mappings":"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","sourcesContent":["/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.2.2\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar gridOptionsWrapper_1 = require(\"../gridOptionsWrapper\");\nvar columnController_1 = require(\"../columnController/columnController\");\nvar columnApi_1 = require(\"../columnController/columnApi\");\nvar rowRenderer_1 = require(\"../rendering/rowRenderer\");\nvar context_1 = require(\"../context/context\");\nvar eventService_1 = require(\"../eventService\");\nvar events_1 = require(\"../events\");\nvar dragService_1 = require(\"../dragAndDrop/dragService\");\nvar constants_1 = require(\"../constants\");\nvar mouseEventService_1 = require(\"./mouseEventService\");\nvar focusedCellController_1 = require(\"../focusedCellController\");\nvar scrollVisibleService_1 = require(\"./scrollVisibleService\");\nvar rowContainerComponent_1 = require(\"../rendering/rowContainerComponent\");\nvar paginationProxy_1 = require(\"../rowModels/paginationProxy\");\nvar paginationAutoPageSizeService_1 = require(\"../rowModels/paginationAutoPageSizeService\");\nvar popupEditorWrapper_1 = require(\"../rendering/cellEditors/popupEditorWrapper\");\nvar alignedGridsService_1 = require(\"../alignedGridsService\");\nvar pinnedRowModel_1 = require(\"../rowModels/pinnedRowModel\");\nvar gridApi_1 = require(\"../gridApi\");\nvar animationFrameService_1 = require(\"../misc/animationFrameService\");\nvar rowComp_1 = require(\"../rendering/rowComp\");\nvar navigationService_1 = require(\"./navigationService\");\nvar valueService_1 = require(\"../valueService/valueService\");\nvar touchListener_1 = require(\"../widgets/touchListener\");\nvar dragAndDropService_1 = require(\"../dragAndDrop/dragAndDropService\");\nvar rowDragFeature_1 = require(\"./rowDragFeature\");\nvar maxDivHeightScaler_1 = require(\"../rendering/maxDivHeightScaler\");\nvar overlayWrapperComponent_1 = require(\"../rendering/overlays/overlayWrapperComponent\");\nvar component_1 = require(\"../widgets/component\");\nvar autoHeightCalculator_1 = require(\"../rendering/autoHeightCalculator\");\nvar columnAnimationService_1 = require(\"../rendering/columnAnimationService\");\nvar autoWidthCalculator_1 = require(\"../rendering/autoWidthCalculator\");\nvar beans_1 = require(\"../rendering/beans\");\nvar componentAnnotations_1 = require(\"../widgets/componentAnnotations\");\nvar headerRootComp_1 = require(\"../headerRendering/headerRootComp\");\nvar resizeObserverService_1 = require(\"../misc/resizeObserverService\");\nvar utils_1 = require(\"../utils\");\n// in the html below, it is important that there are no white space between some of the divs, as if there is white space,\n// it won't render correctly in safari, as safari renders white space as a gap\nvar GRID_PANEL_NORMAL_TEMPLATE = \"<div class=\\\"ag-root ag-unselectable\\\" role=\\\"grid\\\" unselectable=\\\"on\\\">\\n        <ag-header-root ref=\\\"headerRoot\\\" unselectable=\\\"on\\\"></ag-header-root>\\n        <div class=\\\"ag-floating-top\\\" ref=\\\"eTop\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\">\\n            <div class=\\\"ag-pinned-left-floating-top\\\" ref=\\\"eLeftTop\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\"></div>\\n            <div class=\\\"ag-floating-top-viewport\\\" ref=\\\"eTopViewport\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\">\\n                <div class=\\\"ag-floating-top-container\\\" ref=\\\"eTopContainer\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\"></div>\\n            </div>\\n            <div class=\\\"ag-pinned-right-floating-top\\\" ref=\\\"eRightTop\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\"></div>\\n            <div class=\\\"ag-floating-top-full-width-container\\\" ref=\\\"eTopFullWidthContainer\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\"></div>\\n        </div>\\n        <div class=\\\"ag-body-viewport\\\" ref=\\\"eBodyViewport\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\">\\n            <div class=\\\"ag-pinned-left-cols-container\\\" ref=\\\"eLeftContainer\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\"></div>\\n            <div class=\\\"ag-center-cols-clipper\\\" ref=\\\"eCenterColsClipper\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\">\\n                <div class=\\\"ag-center-cols-viewport\\\" ref=\\\"eCenterViewport\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\">\\n                    <div class=\\\"ag-center-cols-container\\\" ref=\\\"eCenterContainer\\\" role=\\\"rowgroup\\\" unselectable=\\\"on\\\"></div>\\n                </div>\\n            </div>\\n            <div class=\\\"ag-pinned-right-cols-container\\\" ref=\\\"eRightContainer\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\"></div>\\n            <div class=\\\"ag-full-width-container\\\" ref=\\\"eFullWidthContainer\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\"></div>\\n        </div>\\n        <div class=\\\"ag-floating-bottom\\\" ref=\\\"eBottom\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\">\\n            <div class=\\\"ag-pinned-left-floating-bottom\\\" ref=\\\"eLeftBottom\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\"></div>\\n            <div class=\\\"ag-floating-bottom-viewport\\\" ref=\\\"eBottomViewport\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\">\\n                <div class=\\\"ag-floating-bottom-container\\\" ref=\\\"eBottomContainer\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\"></div>\\n            </div>\\n            <div class=\\\"ag-pinned-right-floating-bottom\\\" ref=\\\"eRightBottom\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\"></div>\\n            <div class=\\\"ag-floating-bottom-full-width-container\\\" ref=\\\"eBottomFullWidthContainer\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\"></div>\\n        </div>\\n        <div class=\\\"ag-body-horizontal-scroll\\\" ref=\\\"eHorizontalScrollBody\\\" aria-hidden=\\\"true\\\">\\n            <div class=\\\"ag-horizontal-left-spacer\\\" ref=\\\"eHorizontalLeftSpacer\\\"></div>\\n            <div class=\\\"ag-body-horizontal-scroll-viewport\\\" ref=\\\"eBodyHorizontalScrollViewport\\\">\\n                <div class=\\\"ag-body-horizontal-scroll-container\\\" ref=\\\"eBodyHorizontalScrollContainer\\\"></div>\\n            </div>\\n            <div class=\\\"ag-horizontal-right-spacer\\\" ref=\\\"eHorizontalRightSpacer\\\"></div>\\n        </div>\\n        <ag-overlay-wrapper ref=\\\"overlayWrapper\\\"></ag-overlay-wrapper>\\n    </div>\";\nvar GridPanel = /** @class */ (function (_super) {\n    __extends(GridPanel, _super);\n    function GridPanel() {\n        var _this = _super.call(this, GRID_PANEL_NORMAL_TEMPLATE) || this;\n        _this.scrollLeft = -1;\n        _this.scrollTop = -1;\n        _this.nextScrollTop = -1;\n        _this.resetLastHorizontalScrollElementDebounce = utils_1._.debounce(_this.resetLastHorizontalScrollElement.bind(_this), 500);\n        return _this;\n    }\n    GridPanel.prototype.getVScrollPosition = function () {\n        var result = {\n            top: this.eBodyViewport.scrollTop,\n            bottom: this.eBodyViewport.scrollTop + this.eBodyViewport.offsetHeight\n        };\n        return result;\n    };\n    GridPanel.prototype.getHScrollPosition = function () {\n        var result = {\n            left: this.eCenterViewport.scrollLeft,\n            right: this.eCenterViewport.scrollLeft + this.eCenterViewport.offsetWidth\n        };\n        return result;\n    };\n    GridPanel.prototype.onRowDataChanged = function () {\n        this.showOrHideOverlay();\n    };\n    GridPanel.prototype.showOrHideOverlay = function () {\n        var isEmpty = this.paginationProxy.isEmpty();\n        var isSuppressNoRowsOverlay = this.gridOptionsWrapper.isSuppressNoRowsOverlay();\n        var method = isEmpty && !isSuppressNoRowsOverlay ? 'showNoRowsOverlay' : 'hideOverlay';\n        this[method]();\n    };\n    GridPanel.prototype.onNewColumnsLoaded = function () {\n        // hide overlay if columns and rows exist, this can happen if columns are loaded after data.\n        // this problem exists before of the race condition between the services (column controller in this case)\n        // and the view (grid panel). if the model beans were all initialised first, and then the view beans second,\n        // this race condition would not happen.\n        if (this.columnController.isReady() && !this.paginationProxy.isEmpty()) {\n            this.hideOverlay();\n        }\n    };\n    GridPanel.prototype.init = function () {\n        var _this = this;\n        this.scrollWidth = this.gridOptionsWrapper.getScrollbarWidth();\n        this.enableRtl = this.gridOptionsWrapper.isEnableRtl();\n        this.printLayout = this.gridOptionsWrapper.getDomLayout() === constants_1.Constants.DOM_LAYOUT_PRINT;\n        // these elements have different CSS when layout changes\n        this.gridOptionsWrapper.addLayoutElement(this.getGui());\n        this.gridOptionsWrapper.addLayoutElement(this.eBodyViewport);\n        this.suppressScrollOnFloatingRow();\n        this.setupRowAnimationCssClass();\n        this.buildRowContainerComponents();\n        this.addEventListeners();\n        this.addDragListeners();\n        this.addScrollListener();\n        if (this.gridOptionsWrapper.isRowModelDefault() && !this.gridOptionsWrapper.getRowData()) {\n            this.showLoadingOverlay();\n        }\n        this.setCellTextSelection(this.gridOptionsWrapper.isEnableCellTextSelect());\n        this.setPinnedContainerSize();\n        this.setHeaderAndFloatingHeights();\n        this.disableBrowserDragging();\n        this.addMouseListeners();\n        this.addKeyboardEvents();\n        this.addBodyViewportListener();\n        this.addStopEditingWhenGridLosesFocus();\n        this.mockContextMenuForIPad();\n        this.addRowDragListener();\n        if (this.$scope) {\n            this.addAngularApplyCheck();\n        }\n        this.onDisplayedColumnsWidthChanged();\n        this.gridApi.registerGridComp(this);\n        this.alignedGridsService.registerGridComp(this);\n        this.headerRootComp.registerGridComp(this);\n        this.navigationService.registerGridComp(this);\n        this.heightScaler.registerGridComp(this);\n        this.autoHeightCalculator.registerGridComp(this);\n        this.columnAnimationService.registerGridComp(this);\n        this.autoWidthCalculator.registerGridComp(this);\n        this.paginationAutoPageSizeService.registerGridComp(this);\n        this.beans.registerGridComp(this);\n        this.rowRenderer.registerGridComp(this);\n        this.animationFrameService.registerGridComp(this);\n        if (this.rangeController) {\n            this.rangeController.registerGridComp(this);\n        }\n        [this.eCenterViewport, this.eBodyViewport].forEach(function (viewport) {\n            var unsubscribeFromResize = _this.resizeObserverService.observeResize(viewport, _this.onCenterViewportResized.bind(_this));\n            _this.addDestroyFunc(function () { return unsubscribeFromResize(); });\n        });\n    };\n    GridPanel.prototype.onDomLayoutChanged = function () {\n        var newPrintLayout = this.gridOptionsWrapper.getDomLayout() === constants_1.Constants.DOM_LAYOUT_PRINT;\n        if (this.printLayout !== newPrintLayout) {\n            this.printLayout = newPrintLayout;\n            this.setWidthsOfContainers();\n            // pinned containers are always hidden for print layout\n            this.setPinnedContainerSize();\n        }\n    };\n    GridPanel.prototype.onCenterViewportResized = function () {\n        if (utils_1._.isVisible(this.eCenterViewport)) {\n            this.checkViewportAndScrolls();\n        }\n        else {\n            this.bodyHeight = 0;\n        }\n    };\n    // used by ColumnAnimationService\n    GridPanel.prototype.setColumnMovingCss = function (moving) {\n        this.addOrRemoveCssClass('ag-column-moving', moving);\n    };\n    GridPanel.prototype.setCellTextSelection = function (selectable) {\n        if (selectable === void 0) { selectable = false; }\n        [this.eTop, this.eBodyViewport, this.eBottom]\n            .forEach(function (ct) { return utils_1._.addOrRemoveCssClass(ct, 'ag-selectable', selectable); });\n    };\n    GridPanel.prototype.addRowDragListener = function () {\n        var rowDragFeature = new rowDragFeature_1.RowDragFeature(this.eBodyViewport, this);\n        this.getContext().wireBean(rowDragFeature);\n        this.dragAndDropService.addDropTarget(rowDragFeature);\n    };\n    GridPanel.prototype.addStopEditingWhenGridLosesFocus = function () {\n        var _this = this;\n        if (!this.gridOptionsWrapper.isStopEditingWhenGridLosesFocus()) {\n            return;\n        }\n        var focusOutListener = function (event) {\n            // this is the element the focus is moving to\n            var elementWithFocus = event.relatedTarget;\n            // see if the element the focus is going to is part of the grid\n            var clickInsideGrid = false;\n            var pointer = elementWithFocus;\n            while (utils_1._.exists(pointer) && !clickInsideGrid) {\n                var isPopup = !!_this.gridOptionsWrapper.getDomData(pointer, popupEditorWrapper_1.PopupEditorWrapper.DOM_KEY_POPUP_EDITOR_WRAPPER);\n                var isBody = _this.eBodyViewport === pointer || _this.eBottom === pointer || _this.eTop === pointer;\n                clickInsideGrid = isPopup || isBody;\n                pointer = pointer.parentNode;\n            }\n            if (!clickInsideGrid) {\n                _this.rowRenderer.stopEditing();\n            }\n        };\n        this.addDestroyableEventListener(this.eBodyViewport, 'focusout', focusOutListener);\n        this.addDestroyableEventListener(this.eTop, 'focusout', focusOutListener);\n        this.addDestroyableEventListener(this.eBottom, 'focusout', focusOutListener);\n    };\n    GridPanel.prototype.addAngularApplyCheck = function () {\n        var _this = this;\n        // this makes sure if we queue up requests, we only execute oe\n        var applyTriggered = false;\n        var listener = function () {\n            // only need to do one apply at a time\n            if (applyTriggered) {\n                return;\n            }\n            applyTriggered = true; // mark 'need apply' to true\n            window.setTimeout(function () {\n                applyTriggered = false;\n                _this.$scope.$apply();\n            }, 0);\n        };\n        // these are the events we need to do an apply after - these are the ones that can end up\n        // with columns added or removed\n        this.addDestroyableEventListener(this.eventService, events_1.Events.EVENT_DISPLAYED_COLUMNS_CHANGED, listener);\n        this.addDestroyableEventListener(this.eventService, events_1.Events.EVENT_VIRTUAL_COLUMNS_CHANGED, listener);\n    };\n    // if we do not do this, then the user can select a pic in the grid (eg an image in a custom cell renderer)\n    // and then that will start the browser native drag n' drop, which messes up with our own drag and drop.\n    GridPanel.prototype.disableBrowserDragging = function () {\n        this.addGuiEventListener('dragstart', function (event) {\n            if (event.target instanceof HTMLImageElement) {\n                event.preventDefault();\n                return false;\n            }\n        });\n    };\n    GridPanel.prototype.addEventListeners = function () {\n        this.addDestroyableEventListener(this.eventService, events_1.Events.EVENT_DISPLAYED_COLUMNS_CHANGED, this.onDisplayedColumnsChanged.bind(this));\n        this.addDestroyableEventListener(this.eventService, events_1.Events.EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED, this.onDisplayedColumnsWidthChanged.bind(this));\n        this.addDestroyableEventListener(this.eventService, events_1.Events.EVENT_PINNED_ROW_DATA_CHANGED, this.setHeaderAndFloatingHeights.bind(this));\n        this.addDestroyableEventListener(this.eventService, events_1.Events.EVENT_ROW_DATA_CHANGED, this.onRowDataChanged.bind(this));\n        this.addDestroyableEventListener(this.eventService, events_1.Events.EVENT_ROW_DATA_UPDATED, this.onRowDataChanged.bind(this));\n        this.addDestroyableEventListener(this.eventService, events_1.Events.EVENT_NEW_COLUMNS_LOADED, this.onNewColumnsLoaded.bind(this));\n        this.addDestroyableEventListener(this.gridOptionsWrapper, gridOptionsWrapper_1.GridOptionsWrapper.PROP_HEADER_HEIGHT, this.setHeaderAndFloatingHeights.bind(this));\n        this.addDestroyableEventListener(this.gridOptionsWrapper, gridOptionsWrapper_1.GridOptionsWrapper.PROP_PIVOT_HEADER_HEIGHT, this.setHeaderAndFloatingHeights.bind(this));\n        this.addDestroyableEventListener(this.gridOptionsWrapper, gridOptionsWrapper_1.GridOptionsWrapper.PROP_GROUP_HEADER_HEIGHT, this.setHeaderAndFloatingHeights.bind(this));\n        this.addDestroyableEventListener(this.gridOptionsWrapper, gridOptionsWrapper_1.GridOptionsWrapper.PROP_PIVOT_GROUP_HEADER_HEIGHT, this.setHeaderAndFloatingHeights.bind(this));\n        this.addDestroyableEventListener(this.gridOptionsWrapper, gridOptionsWrapper_1.GridOptionsWrapper.PROP_FLOATING_FILTERS_HEIGHT, this.setHeaderAndFloatingHeights.bind(this));\n        this.addDestroyableEventListener(this.gridOptionsWrapper, gridOptionsWrapper_1.GridOptionsWrapper.PROP_DOM_LAYOUT, this.onDomLayoutChanged.bind(this));\n    };\n    GridPanel.prototype.addDragListeners = function () {\n        var _this = this;\n        if (!this.gridOptionsWrapper.isEnableRangeSelection() || // no range selection if no property\n            utils_1._.missing(this.rangeController) // no range selection if not enterprise version\n        ) {\n            return;\n        }\n        var containers = [\n            this.eLeftContainer,\n            this.eRightContainer,\n            this.eCenterContainer,\n            this.eTop,\n            this.eBottom\n        ];\n        containers.forEach(function (container) {\n            var params = {\n                eElement: container,\n                onDragStart: _this.rangeController.onDragStart.bind(_this.rangeController),\n                onDragStop: _this.rangeController.onDragStop.bind(_this.rangeController),\n                onDragging: _this.rangeController.onDragging.bind(_this.rangeController)\n            };\n            _this.dragService.addDragSource(params);\n            _this.addDestroyFunc(function () { return _this.dragService.removeDragSource(params); });\n        });\n    };\n    GridPanel.prototype.addMouseListeners = function () {\n        var _this = this;\n        var eventNames = ['click', 'mousedown', 'dblclick', 'contextmenu', 'mouseover', 'mouseout'];\n        eventNames.forEach(function (eventName) {\n            var listener = _this.processMouseEvent.bind(_this, eventName);\n            _this.eAllCellContainers.forEach(function (container) {\n                return _this.addDestroyableEventListener(container, eventName, listener);\n            });\n        });\n    };\n    GridPanel.prototype.addKeyboardEvents = function () {\n        var _this = this;\n        var eventNames = ['keydown', 'keypress'];\n        eventNames.forEach(function (eventName) {\n            var listener = _this.processKeyboardEvent.bind(_this, eventName);\n            _this.eAllCellContainers.forEach(function (container) {\n                _this.addDestroyableEventListener(container, eventName, listener);\n            });\n        });\n    };\n    GridPanel.prototype.addBodyViewportListener = function () {\n        var _this = this;\n        // we want to listen for clicks directly on the eBodyViewport, so the user has a way of showing\n        // the context menu if no rows or columns are displayed, or user simply clicks outside of a cell\n        var listener = function (mouseEvent) {\n            var target = utils_1._.getTarget(mouseEvent);\n            if (target === _this.eBodyViewport || target === _this.eCenterViewport) {\n                // show it\n                _this.onContextMenu(mouseEvent, null, null, null, null);\n                _this.preventDefaultOnContextMenu(mouseEvent);\n            }\n        };\n        this.addDestroyableEventListener(this.eBodyViewport, 'contextmenu', listener);\n    };\n    // + rangeController - used to know when to scroll when user is dragging outside the\n    // main viewport while doing a range selection\n    GridPanel.prototype.getBodyClientRect = function () {\n        if (!this.eBodyViewport) {\n            return;\n        }\n        return this.eBodyViewport.getBoundingClientRect();\n    };\n    GridPanel.prototype.getRowForEvent = function (event) {\n        var sourceElement = utils_1._.getTarget(event);\n        while (sourceElement) {\n            var renderedRow = this.gridOptionsWrapper.getDomData(sourceElement, rowComp_1.RowComp.DOM_DATA_KEY_RENDERED_ROW);\n            if (renderedRow) {\n                return renderedRow;\n            }\n            sourceElement = sourceElement.parentElement;\n        }\n        return null;\n    };\n    GridPanel.prototype.processKeyboardEvent = function (eventName, keyboardEvent) {\n        var cellComp = utils_1._.getCellCompForEvent(this.gridOptionsWrapper, keyboardEvent);\n        if (!cellComp) {\n            return;\n        }\n        var rowNode = cellComp.getRenderedRow().getRowNode();\n        var column = cellComp.getColumn();\n        var editing = cellComp.isEditing();\n        var gridProcessingAllowed = !utils_1._.isUserSuppressingKeyboardEvent(this.gridOptionsWrapper, keyboardEvent, rowNode, column, editing);\n        if (gridProcessingAllowed) {\n            switch (eventName) {\n                case 'keydown':\n                    // first see if it's a scroll key, page up / down, home / end etc\n                    var wasScrollKey = !editing && this.navigationService.handlePageScrollingKey(keyboardEvent);\n                    // if not a scroll key, then we pass onto cell\n                    if (!wasScrollKey) {\n                        cellComp.onKeyDown(keyboardEvent);\n                    }\n                    this.doClipboardOperations(keyboardEvent, cellComp);\n                    break;\n                case 'keypress':\n                    cellComp.onKeyPress(keyboardEvent);\n                    break;\n            }\n        }\n        if (eventName === 'keydown') {\n            var cellKeyDownEvent = cellComp.createEvent(keyboardEvent, events_1.Events.EVENT_CELL_KEY_DOWN);\n            this.beans.eventService.dispatchEvent(cellKeyDownEvent);\n        }\n        if (eventName === 'keypress') {\n            var cellKeyPressEvent = cellComp.createEvent(keyboardEvent, events_1.Events.EVENT_CELL_KEY_PRESS);\n            this.beans.eventService.dispatchEvent(cellKeyPressEvent);\n        }\n    };\n    GridPanel.prototype.doClipboardOperations = function (keyboardEvent, cellComp) {\n        // check if ctrl or meta key pressed\n        if (!keyboardEvent.ctrlKey && !keyboardEvent.metaKey) {\n            return;\n        }\n        // if the cell the event came from is editing, then we do not\n        // want to do the default shortcut keys, otherwise the editor\n        // (eg a text field) would not be able to do the normal cut/copy/paste\n        if (cellComp.isEditing()) {\n            return;\n        }\n        // for copy / paste, we don't want to execute when the event\n        // was from a child grid (happens in master detail)\n        if (!this.mouseEventService.isEventFromThisGrid(keyboardEvent)) {\n            return;\n        }\n        switch (keyboardEvent.which) {\n            case constants_1.Constants.KEY_A:\n                return this.onCtrlAndA(keyboardEvent);\n            case constants_1.Constants.KEY_C:\n                return this.onCtrlAndC(keyboardEvent);\n            case constants_1.Constants.KEY_V:\n                return this.onCtrlAndV();\n            case constants_1.Constants.KEY_D:\n                return this.onCtrlAndD(keyboardEvent);\n        }\n    };\n    // gets called by rowRenderer when new data loaded, as it will want to scroll to the top\n    GridPanel.prototype.scrollToTop = function () {\n        this.eBodyViewport.scrollTop = 0;\n    };\n    GridPanel.prototype.processMouseEvent = function (eventName, mouseEvent) {\n        if (!this.mouseEventService.isEventFromThisGrid(mouseEvent) ||\n            utils_1._.isStopPropagationForAgGrid(mouseEvent)) {\n            return;\n        }\n        var rowComp = this.getRowForEvent(mouseEvent);\n        var cellComp = this.mouseEventService.getRenderedCellForEvent(mouseEvent);\n        if (eventName === \"contextmenu\") {\n            this.handleContextMenuMouseEvent(mouseEvent, null, rowComp, cellComp);\n        }\n        else {\n            if (cellComp) {\n                cellComp.onMouseEvent(eventName, mouseEvent);\n            }\n            if (rowComp) {\n                rowComp.onMouseEvent(eventName, mouseEvent);\n            }\n        }\n        this.preventDefaultOnContextMenu(mouseEvent);\n    };\n    GridPanel.prototype.mockContextMenuForIPad = function () {\n        var _this = this;\n        // we do NOT want this when not in iPad, otherwise we will be doing\n        if (!utils_1._.isUserAgentIPad()) {\n            return;\n        }\n        this.eAllCellContainers.forEach(function (container) {\n            var touchListener = new touchListener_1.TouchListener(container);\n            var longTapListener = function (event) {\n                var rowComp = _this.getRowForEvent(event.touchEvent);\n                var cellComp = _this.mouseEventService.getRenderedCellForEvent(event.touchEvent);\n                _this.handleContextMenuMouseEvent(null, event.touchEvent, rowComp, cellComp);\n            };\n            _this.addDestroyableEventListener(touchListener, touchListener_1.TouchListener.EVENT_LONG_TAP, longTapListener);\n            _this.addDestroyFunc(function () { return touchListener.destroy(); });\n        });\n    };\n    GridPanel.prototype.handleContextMenuMouseEvent = function (mouseEvent, touchEvent, rowComp, cellComp) {\n        var rowNode = rowComp ? rowComp.getRowNode() : null;\n        var column = cellComp ? cellComp.getColumn() : null;\n        var value = null;\n        if (column) {\n            var event_1 = mouseEvent ? mouseEvent : touchEvent;\n            cellComp.dispatchCellContextMenuEvent(event_1);\n            value = this.valueService.getValue(column, rowNode);\n        }\n        this.onContextMenu(mouseEvent, touchEvent, rowNode, column, value);\n    };\n    GridPanel.prototype.onContextMenu = function (mouseEvent, touchEvent, rowNode, column, value) {\n        // to allow us to debug in chrome, we ignore the event if ctrl is pressed.\n        // not everyone wants this, so first 'if' below allows to turn this hack off.\n        if (!this.gridOptionsWrapper.isAllowContextMenuWithControlKey()) {\n            // then do the check\n            if (mouseEvent && (mouseEvent.ctrlKey || mouseEvent.metaKey)) {\n                return;\n            }\n        }\n        if (this.contextMenuFactory && !this.gridOptionsWrapper.isSuppressContextMenu()) {\n            var eventOrTouch = mouseEvent ? mouseEvent : touchEvent.touches[0];\n            this.contextMenuFactory.showMenu(rowNode, column, value, eventOrTouch);\n            var event_2 = mouseEvent ? mouseEvent : touchEvent;\n            event_2.preventDefault();\n        }\n    };\n    GridPanel.prototype.preventDefaultOnContextMenu = function (mouseEvent) {\n        // if we don't do this, then middle click will never result in a 'click' event, as 'mousedown'\n        // will be consumed by the browser to mean 'scroll' (as you can scroll with the middle mouse\n        // button in the browser). so this property allows the user to receive middle button clicks if\n        // they want.\n        var gridOptionsWrapper = this.gridOptionsWrapper;\n        var which = mouseEvent.which;\n        if (gridOptionsWrapper.isPreventDefaultOnContextMenu() ||\n            (gridOptionsWrapper.isSuppressMiddleClickScrolls() && which === 2)) {\n            mouseEvent.preventDefault();\n        }\n    };\n    GridPanel.prototype.onCtrlAndA = function (event) {\n        var _a = this, columnController = _a.columnController, pinnedRowModel = _a.pinnedRowModel, paginationProxy = _a.paginationProxy, rangeController = _a.rangeController;\n        var PINNED_BOTTOM = constants_1.Constants.PINNED_BOTTOM, PINNED_TOP = constants_1.Constants.PINNED_TOP;\n        if (rangeController && paginationProxy.isRowsToRender()) {\n            var _b = [\n                pinnedRowModel.isEmpty(PINNED_TOP),\n                pinnedRowModel.isEmpty(PINNED_BOTTOM)\n            ], isEmptyPinnedTop = _b[0], isEmptyPinnedBottom = _b[1];\n            var floatingStart = isEmptyPinnedTop ? null : PINNED_TOP;\n            var floatingEnd = void 0;\n            var rowEnd = void 0;\n            if (isEmptyPinnedBottom) {\n                floatingEnd = null;\n                rowEnd = this.paginationProxy.getRowCount() - 1;\n            }\n            else {\n                floatingEnd = PINNED_BOTTOM;\n                rowEnd = pinnedRowModel.getPinnedBottomRowData().length - 1;\n            }\n            var allDisplayedColumns = columnController.getAllDisplayedColumns();\n            if (utils_1._.missingOrEmpty(allDisplayedColumns)) {\n                return;\n            }\n            rangeController.setCellRange({\n                rowStartIndex: 0,\n                rowStartPinned: floatingStart,\n                rowEndIndex: rowEnd,\n                rowEndPinned: floatingEnd,\n                columnStart: allDisplayedColumns[0],\n                columnEnd: utils_1._.last(allDisplayedColumns)\n            });\n        }\n        event.preventDefault();\n    };\n    GridPanel.prototype.onCtrlAndC = function (event) {\n        if (!this.clipboardService || this.gridOptionsWrapper.isEnableCellTextSelection()) {\n            return;\n        }\n        var focusedCell = this.focusedCellController.getFocusedCell();\n        this.clipboardService.copyToClipboard();\n        event.preventDefault();\n        // the copy operation results in loosing focus on the cell,\n        // because of the trickery the copy logic uses with a temporary\n        // widget. so we set it back again.\n        if (focusedCell) {\n            this.focusedCellController.setFocusedCell(focusedCell.rowIndex, focusedCell.column, focusedCell.rowPinned, true);\n        }\n    };\n    GridPanel.prototype.onCtrlAndV = function () {\n        if (!this.enterprise || this.gridOptionsWrapper.isSuppressClipboardPaste()) {\n            return;\n        }\n        this.clipboardService.pasteFromClipboard();\n    };\n    GridPanel.prototype.onCtrlAndD = function (event) {\n        if (!this.enterprise) {\n            return;\n        }\n        this.clipboardService.copyRangeDown();\n        event.preventDefault();\n    };\n    // Valid values for position are bottom, middle and top\n    // position should be {'top','middle','bottom', or undefined/null}.\n    // if undefined/null, then the grid will to the minimal amount of scrolling,\n    // eg if grid needs to scroll up, it scrolls until row is on top,\n    //    if grid needs to scroll down, it scrolls until row is on bottom,\n    //    if row is already in view, grid does not scroll\n    // fixme - how does this work in the new way\n    GridPanel.prototype.ensureIndexVisible = function (index, position) {\n        // if for print or auto height, everything is always visible\n        if (this.printLayout) {\n            return;\n        }\n        var rowCount = this.paginationProxy.getRowCount();\n        if (typeof index !== 'number' || index < 0 || index >= rowCount) {\n            console.warn('invalid row index for ensureIndexVisible: ' + index);\n            return;\n        }\n        this.paginationProxy.goToPageWithIndex(index);\n        var rowNode = this.paginationProxy.getRow(index);\n        var rowGotShiftedDuringOperation;\n        do {\n            var startingRowTop = rowNode.rowTop;\n            var startingRowHeight = rowNode.rowHeight;\n            var paginationOffset = this.paginationProxy.getPixelOffset();\n            var rowTopPixel = rowNode.rowTop - paginationOffset;\n            var rowBottomPixel = rowTopPixel + rowNode.rowHeight;\n            var scrollPosition = this.getVScrollPosition();\n            var heightOffset = this.heightScaler.getOffset();\n            var vScrollTop = scrollPosition.top + heightOffset;\n            var vScrollBottom = scrollPosition.bottom + heightOffset;\n            var viewportHeight = vScrollBottom - vScrollTop;\n            // work out the pixels for top, middle and bottom up front,\n            // make the if/else below easier to read\n            var pxTop = this.heightScaler.getScrollPositionForPixel(rowTopPixel);\n            var pxBottom = this.heightScaler.getScrollPositionForPixel(rowBottomPixel - viewportHeight);\n            // make sure if middle, the row is not outside the top of the grid\n            var pxMiddle = Math.min((pxTop + pxBottom) / 2, rowTopPixel);\n            var rowBelowViewport = vScrollTop > rowTopPixel;\n            var rowAboveViewport = vScrollBottom < rowBottomPixel;\n            var newScrollPosition = null;\n            if (position === 'top') {\n                newScrollPosition = pxTop;\n            }\n            else if (position === 'bottom') {\n                newScrollPosition = pxBottom;\n            }\n            else if (position === 'middle') {\n                newScrollPosition = pxMiddle;\n            }\n            else if (rowBelowViewport) {\n                // if row is before, scroll up with row at top\n                newScrollPosition = pxTop;\n            }\n            else if (rowAboveViewport) {\n                // if row is below, scroll down with row at bottom\n                newScrollPosition = pxBottom;\n            }\n            if (newScrollPosition !== null) {\n                this.eBodyViewport.scrollTop = newScrollPosition;\n                this.rowRenderer.redrawAfterScroll();\n            }\n            // the row can get shifted if during the rendering (during rowRenderer.redrawAfterScroll()),\n            // the height of a row changes due to lazy calculation of row heights when using\n            // colDef.autoHeight or gridOptions.getRowHeight.\n            // if row was shifted, then the position we scrolled to is incorrect.\n            rowGotShiftedDuringOperation = (startingRowTop !== rowNode.rowTop)\n                || (startingRowHeight !== rowNode.rowHeight);\n        } while (rowGotShiftedDuringOperation);\n        // so when we return back to user, the cells have rendered\n        this.animationFrameService.flushAllFrames();\n    };\n    // + moveColumnController\n    GridPanel.prototype.getCenterWidth = function () {\n        return this.eCenterViewport.clientWidth;\n    };\n    GridPanel.prototype.isVerticalScrollShowing = function () {\n        var isAlwaysShowVerticalScroll = this.gridOptionsWrapper.isAlwaysShowVerticalScroll();\n        utils_1._.addOrRemoveCssClass(this.eBodyViewport, 'ag-force-vertical-scroll', isAlwaysShowVerticalScroll);\n        return isAlwaysShowVerticalScroll || utils_1._.isVerticalScrollShowing(this.eBodyViewport);\n    };\n    GridPanel.prototype.isHorizontalScrollShowing = function () {\n        return utils_1._.isHorizontalScrollShowing(this.eCenterViewport);\n    };\n    // gets called every time the viewport size changes. we use this to check visibility of scrollbars\n    // in the grid panel, and also to check size and position of viewport for row and column virtualisation.\n    GridPanel.prototype.checkViewportAndScrolls = function () {\n        // results in updating anything that depends on scroll showing\n        this.updateScrollVisibleService();\n        // fires event if height changes, used by PaginationService, HeightScalerService, RowRenderer\n        this.checkBodyHeight();\n        // check for virtual columns for ColumnController\n        this.onHorizontalViewportChanged();\n        this.setPinnedContainerSize();\n    };\n    GridPanel.prototype.updateScrollVisibleService = function () {\n        // because of column animation (which takes 200ms), we have to do this twice.\n        // eg if user removes cols anywhere except at the RHS, then the cols on the RHS\n        // will animate to the left to fill the gap. this animation means just after\n        // the cols are removed, the remaining cols are still in the original location\n        // at the start of the animation, so pre animation the H scrollbar is still needed,\n        // but post animation it is not.\n        this.updateScrollVisibleServiceImpl();\n        setTimeout(this.updateScrollVisibleServiceImpl.bind(this), 500);\n    };\n    GridPanel.prototype.updateScrollVisibleServiceImpl = function () {\n        var params = {\n            horizontalScrollShowing: false,\n            verticalScrollShowing: false\n        };\n        params.verticalScrollShowing = this.isVerticalScrollShowing();\n        params.horizontalScrollShowing = this.isHorizontalScrollShowing();\n        this.scrollVisibleService.setScrollsVisible(params);\n        this.setHorizontalScrollVisible(params.horizontalScrollShowing);\n        this.setVerticalScrollPaddingVisible(params.verticalScrollShowing);\n    };\n    GridPanel.prototype.setHorizontalScrollVisible = function (visible) {\n        var isSuppressHorizontalScroll = this.gridOptionsWrapper.isSuppressHorizontalScroll();\n        var scrollSize = visible ? (this.gridOptionsWrapper.getScrollbarWidth() || 0) : 0;\n        var scrollContainerSize = !isSuppressHorizontalScroll ? scrollSize : 0;\n        var addIEPadding = utils_1._.isBrowserIE() && visible;\n        this.eCenterViewport.style.height = \"calc(100% + \" + scrollSize + \"px)\";\n        utils_1._.setFixedHeight(this.eHorizontalScrollBody, scrollContainerSize);\n        // we have to add an extra pixel to the scroller viewport on IE because\n        // if the container has the same size as the scrollbar, the scroll button won't work\n        utils_1._.setFixedHeight(this.eBodyHorizontalScrollViewport, scrollContainerSize + (addIEPadding ? 1 : 0));\n        utils_1._.setFixedHeight(this.eBodyHorizontalScrollContainer, scrollContainerSize);\n    };\n    GridPanel.prototype.setVerticalScrollPaddingVisible = function (show) {\n        var scroller = show ? \"scroll\" : \"hidden\";\n        this.eTop.style.overflowY = this.eBottom.style.overflowY = scroller;\n        this.setFakeHScrollSpacerWidths();\n    };\n    GridPanel.prototype.updateRowCount = function () {\n        var headerCount = this.headerRootComp.getHeaderRowCount();\n        var rowCount = this.paginationProxy.getRowCount();\n        var total = (headerCount + rowCount).toString();\n        this.getGui().setAttribute('aria-rowcount', total);\n    };\n    GridPanel.prototype.ensureColumnVisible = function (key) {\n        var column = this.columnController.getGridColumn(key);\n        if (!column) {\n            return;\n        }\n        if (column.isPinned()) {\n            console.warn('calling ensureIndexVisible on a ' + column.getPinned() + ' pinned column doesn\\'t make sense for column ' + column.getColId());\n            return;\n        }\n        if (!this.columnController.isColumnDisplayed(column)) {\n            console.warn('column is not currently visible');\n            return;\n        }\n        var colLeftPixel = column.getLeft();\n        var colRightPixel = colLeftPixel + column.getActualWidth();\n        var viewportWidth = this.eCenterViewport.clientWidth;\n        var scrollPosition = this.getCenterViewportScrollLeft();\n        var bodyWidth = this.columnController.getBodyContainerWidth();\n        var viewportLeftPixel;\n        var viewportRightPixel;\n        // the logic of working out left and right viewport px is both here and in the ColumnController,\n        // need to refactor it out to one place\n        if (this.enableRtl) {\n            viewportLeftPixel = bodyWidth - scrollPosition - viewportWidth;\n            viewportRightPixel = bodyWidth - scrollPosition;\n        }\n        else {\n            viewportLeftPixel = scrollPosition;\n            viewportRightPixel = viewportWidth + scrollPosition;\n        }\n        var viewportScrolledPastCol = viewportLeftPixel > colLeftPixel;\n        var viewportScrolledBeforeCol = viewportRightPixel < colRightPixel;\n        var colToSmallForViewport = viewportWidth < column.getActualWidth();\n        var alignColToLeft = viewportScrolledPastCol || colToSmallForViewport;\n        var alignColToRight = viewportScrolledBeforeCol;\n        var newScrollPosition = this.getCenterViewportScrollLeft();\n        if (alignColToLeft || alignColToRight) {\n            if (this.enableRtl) {\n                newScrollPosition = alignColToLeft ? (bodyWidth - viewportWidth - colLeftPixel) : (bodyWidth - colRightPixel);\n            }\n            else {\n                newScrollPosition = alignColToLeft ? colLeftPixel : (colRightPixel - viewportWidth);\n            }\n            this.setCenterViewportScrollLeft(newScrollPosition);\n        }\n        else {\n            // otherwise, col is already in view, so do nothing\n        }\n        // this will happen anyway, as the move will cause a 'scroll' event on the body, however\n        // it is possible that the ensureColumnVisible method is called from within ag-Grid and\n        // the caller will need to have the columns rendered to continue, which will be before\n        // the event has been worked on (which is the case for cell navigation).\n        this.onHorizontalViewportChanged();\n        // so when we return back to user, the cells have rendered\n        this.animationFrameService.flushAllFrames();\n    };\n    GridPanel.prototype.showLoadingOverlay = function () {\n        if (!this.gridOptionsWrapper.isSuppressLoadingOverlay()) {\n            this.overlayWrapper.showLoadingOverlay();\n        }\n    };\n    GridPanel.prototype.showNoRowsOverlay = function () {\n        if (!this.gridOptionsWrapper.isSuppressNoRowsOverlay()) {\n            this.overlayWrapper.showNoRowsOverlay();\n        }\n    };\n    GridPanel.prototype.hideOverlay = function () {\n        this.overlayWrapper.hideOverlay();\n    };\n    // method will call itself if no available width. this covers if the grid\n    // isn't visible, but is just about to be visible.\n    GridPanel.prototype.sizeColumnsToFit = function (nextTimeout) {\n        var _this = this;\n        var availableWidth = this.eBodyViewport.clientWidth;\n        if (availableWidth > 0) {\n            this.columnController.sizeColumnsToFit(availableWidth, \"sizeColumnsToFit\");\n            return;\n        }\n        if (nextTimeout === undefined) {\n            window.setTimeout(function () {\n                _this.sizeColumnsToFit(100);\n            }, 0);\n        }\n        else if (nextTimeout === 100) {\n            window.setTimeout(function () {\n                _this.sizeColumnsToFit(500);\n            }, 100);\n        }\n        else if (nextTimeout === 500) {\n            window.setTimeout(function () {\n                _this.sizeColumnsToFit(-1);\n            }, 500);\n        }\n        else {\n            console.warn('ag-Grid: tried to call sizeColumnsToFit() but the grid is coming back with ' +\n                'zero width, maybe the grid is not visible yet on the screen?');\n        }\n    };\n    // used by autoWidthCalculator and autoHeightCalculator\n    GridPanel.prototype.getCenterContainer = function () {\n        return this.eCenterContainer;\n    };\n    GridPanel.prototype.getDropTargetBodyContainers = function () {\n        return [this.eCenterViewport, this.eTopViewport, this.eBottomViewport];\n    };\n    GridPanel.prototype.getDropTargetLeftContainers = function () {\n        return [this.eLeftContainer, this.eLeftBottom, this.eLeftTop];\n    };\n    GridPanel.prototype.getDropTargetRightContainers = function () {\n        return [this.eRightContainer, this.eRightBottom, this.eRightTop];\n    };\n    GridPanel.prototype.buildRowContainerComponents = function () {\n        var _this = this;\n        this.eAllCellContainers = [\n            this.eLeftContainer, this.eRightContainer, this.eCenterContainer,\n            this.eTop, this.eBottom, this.eFullWidthContainer\n        ];\n        this.rowContainerComponents = {\n            body: new rowContainerComponent_1.RowContainerComponent({\n                eContainer: this.eCenterContainer,\n                eWrapper: this.eCenterColsClipper,\n                eViewport: this.eBodyViewport\n            }),\n            fullWidth: new rowContainerComponent_1.RowContainerComponent({\n                eContainer: this.eFullWidthContainer\n            }),\n            pinnedLeft: new rowContainerComponent_1.RowContainerComponent({ eContainer: this.eLeftContainer }),\n            pinnedRight: new rowContainerComponent_1.RowContainerComponent({ eContainer: this.eRightContainer }),\n            floatingTop: new rowContainerComponent_1.RowContainerComponent({ eContainer: this.eTopContainer }),\n            floatingTopPinnedLeft: new rowContainerComponent_1.RowContainerComponent({ eContainer: this.eLeftTop }),\n            floatingTopPinnedRight: new rowContainerComponent_1.RowContainerComponent({ eContainer: this.eRightTop }),\n            floatingTopFullWidth: new rowContainerComponent_1.RowContainerComponent({\n                eContainer: this.eTopFullWidthContainer,\n                hideWhenNoChildren: true\n            }),\n            floatingBottom: new rowContainerComponent_1.RowContainerComponent({ eContainer: this.eBottomContainer }),\n            floatingBottomPinnedLeft: new rowContainerComponent_1.RowContainerComponent({ eContainer: this.eLeftBottom }),\n            floatingBottomPinnedRight: new rowContainerComponent_1.RowContainerComponent({ eContainer: this.eRightBottom }),\n            floatingBottomFullWith: new rowContainerComponent_1.RowContainerComponent({\n                eContainer: this.eBottomFullWidthContainer,\n                hideWhenNoChildren: true\n            }),\n        };\n        utils_1._.iterateObject(this.rowContainerComponents, function (key, container) {\n            if (container) {\n                _this.getContext().wireBean(container);\n            }\n        });\n    };\n    GridPanel.prototype.setupRowAnimationCssClass = function () {\n        var _this = this;\n        var listener = function () {\n            // we don't want to use row animation if scaling, as rows jump strangely as you scroll,\n            // when scaling and doing row animation.\n            var animateRows = _this.gridOptionsWrapper.isAnimateRows() && !_this.heightScaler.isScaling();\n            utils_1._.addOrRemoveCssClass(_this.eBodyViewport, 'ag-row-animation', animateRows);\n            utils_1._.addOrRemoveCssClass(_this.eBodyViewport, 'ag-row-no-animation', !animateRows);\n        };\n        listener();\n        this.addDestroyableEventListener(this.eventService, events_1.Events.EVENT_HEIGHT_SCALE_CHANGED, listener);\n    };\n    // when editing a pinned row, if the cell is half outside the scrollable area, the browser can\n    // scroll the column into view. we do not want this, the pinned sections should never scroll.\n    // so we listen to scrolls on these containers and reset the scroll if we find one.\n    GridPanel.prototype.suppressScrollOnFloatingRow = function () {\n        var _this = this;\n        var resetTopScroll = function () { return _this.eTopViewport.scrollLeft = 0; };\n        var resetBottomScroll = function () { return _this.eTopViewport.scrollLeft = 0; };\n        this.addDestroyableEventListener(this.eTopViewport, 'scroll', resetTopScroll);\n        this.addDestroyableEventListener(this.eBottomViewport, 'scroll', resetBottomScroll);\n    };\n    GridPanel.prototype.getRowContainers = function () {\n        return this.rowContainerComponents;\n    };\n    GridPanel.prototype.getFloatingTopBottom = function () {\n        return [this.eTop, this.eBottom];\n    };\n    GridPanel.prototype.onDisplayedColumnsChanged = function () {\n        this.setPinnedContainerSize();\n        this.setHeaderAndFloatingHeights();\n        this.onHorizontalViewportChanged();\n        this.updateScrollVisibleService();\n    };\n    GridPanel.prototype.onDisplayedColumnsWidthChanged = function () {\n        this.setWidthsOfContainers();\n        this.onHorizontalViewportChanged();\n        this.updateScrollVisibleService();\n        if (this.enableRtl) {\n            // because RTL is all backwards, a change in the width of the row\n            // can cause a change in the scroll position, without a scroll event,\n            // because the scroll position in RTL is a function that depends on\n            // the width. to be convinced of this, take out this line, enable RTL,\n            // scroll all the way to the left and then resize a column\n            this.horizontallyScrollHeaderCenterAndFloatingCenter();\n        }\n    };\n    GridPanel.prototype.setWidthsOfContainers = function () {\n        this.setCenterWidth();\n        this.setPinnedContainerSize();\n    };\n    GridPanel.prototype.setCenterWidth = function () {\n        var width = this.columnController.getBodyContainerWidth();\n        if (this.printLayout) {\n            var pinnedContainerWidths = this.columnController.getPinnedLeftContainerWidth()\n                + this.columnController.getPinnedRightContainerWidth();\n            width += pinnedContainerWidths;\n        }\n        this.headerRootComp.setHeaderContainerWidth(width);\n        var widthPx = width + \"px\";\n        this.eCenterContainer.style.width = widthPx;\n        this.eBottomContainer.style.width = widthPx;\n        this.eTopContainer.style.width = widthPx;\n        if (!this.printLayout) {\n            this.eBodyHorizontalScrollContainer.style.width = widthPx;\n        }\n    };\n    GridPanel.prototype.setPinnedLeftWidth = function () {\n        var _this = this;\n        var oldPinning = this.pinningLeft;\n        var widthOfCols = this.columnController.getPinnedLeftContainerWidth();\n        var newPinning = this.pinningLeft = !this.printLayout && widthOfCols > 0;\n        var containers = [this.eLeftContainer, this.eLeftTop, this.eLeftBottom];\n        if (oldPinning !== newPinning) {\n            this.headerRootComp.setLeftVisible(newPinning);\n        }\n        containers.forEach(function (e) { return utils_1._.setDisplayed(e, _this.pinningLeft); });\n        if (newPinning) {\n            containers.forEach(function (ct) { return utils_1._.setFixedWidth(ct, widthOfCols); });\n        }\n    };\n    GridPanel.prototype.setPinnedRightWidth = function () {\n        var oldPinning = this.pinningRight;\n        var widthOfCols = this.columnController.getPinnedRightContainerWidth();\n        var newPinning = this.pinningRight = !this.printLayout && widthOfCols > 0;\n        var containers = [this.eRightContainer, this.eRightTop, this.eRightBottom];\n        if (oldPinning !== newPinning) {\n            this.headerRootComp.setRightVisible(newPinning);\n        }\n        containers.forEach(function (ct) { return utils_1._.setDisplayed(ct, newPinning); });\n        if (newPinning) {\n            containers.forEach(function (ct) { return utils_1._.setFixedWidth(ct, widthOfCols); });\n        }\n    };\n    GridPanel.prototype.setPinnedContainerSize = function () {\n        this.setPinnedLeftWidth();\n        this.setPinnedRightWidth();\n        this.setFakeHScrollSpacerWidths();\n    };\n    GridPanel.prototype.setFakeHScrollSpacerWidths = function () {\n        // we pad the right based on a) if cols are pinned to the right and\n        // b) if v scroll is showing on the right (normal position of scroll)\n        var rightSpacing = this.columnController.getPinnedRightContainerWidth();\n        var scrollOnRight = !this.enableRtl && this.isVerticalScrollShowing();\n        if (scrollOnRight) {\n            rightSpacing += this.scrollWidth;\n        }\n        utils_1._.setFixedWidth(this.eHorizontalRightSpacer, rightSpacing);\n        utils_1._.addOrRemoveCssClass(this.eHorizontalRightSpacer, 'ag-scroller-corner', rightSpacing <= this.scrollWidth);\n        // we pad the left based on a) if cols are pinned to the left and\n        // b) if v scroll is showing on the left (happens in LTR layout only)\n        var leftSpacing = this.columnController.getPinnedLeftContainerWidth();\n        var scrollOnLeft = this.enableRtl && this.isVerticalScrollShowing();\n        if (scrollOnLeft) {\n            leftSpacing += this.scrollWidth;\n        }\n        utils_1._.setFixedWidth(this.eHorizontalLeftSpacer, leftSpacing);\n        utils_1._.addOrRemoveCssClass(this.eHorizontalLeftSpacer, 'ag-scroller-corner', leftSpacing <= this.scrollWidth);\n    };\n    GridPanel.prototype.checkBodyHeight = function () {\n        var bodyHeight = this.eBodyViewport.clientHeight;\n        if (this.bodyHeight !== bodyHeight) {\n            this.bodyHeight = bodyHeight;\n            var event_3 = {\n                type: events_1.Events.EVENT_BODY_HEIGHT_CHANGED,\n                api: this.gridApi,\n                columnApi: this.columnApi\n            };\n            this.eventService.dispatchEvent(event_3);\n        }\n    };\n    GridPanel.prototype.setHeaderAndFloatingHeights = function () {\n        var _a = this, columnController = _a.columnController, gridOptionsWrapper = _a.gridOptionsWrapper, pinnedRowModel = _a.pinnedRowModel, eTop = _a.eTop, eBottom = _a.eBottom;\n        var numberOfFloating = 0;\n        var headerRowCount = columnController.getHeaderRowCount();\n        var totalHeaderHeight;\n        var groupHeight;\n        var headerHeight;\n        if (!columnController.isPivotMode()) {\n            if (gridOptionsWrapper.isFloatingFilter()) {\n                headerRowCount++;\n            }\n            numberOfFloating = (gridOptionsWrapper.isFloatingFilter()) ? 1 : 0;\n            groupHeight = gridOptionsWrapper.getGroupHeaderHeight();\n            headerHeight = gridOptionsWrapper.getHeaderHeight();\n        }\n        else {\n            numberOfFloating = 0;\n            groupHeight = gridOptionsWrapper.getPivotGroupHeaderHeight();\n            headerHeight = gridOptionsWrapper.getPivotHeaderHeight();\n        }\n        var numberOfNonGroups = 1 + numberOfFloating;\n        var numberOfGroups = headerRowCount - numberOfNonGroups;\n        totalHeaderHeight = numberOfFloating * gridOptionsWrapper.getFloatingFiltersHeight();\n        totalHeaderHeight += numberOfGroups * groupHeight;\n        totalHeaderHeight += headerHeight;\n        this.headerRootComp.setHeight(totalHeaderHeight);\n        var floatingTopHeight = pinnedRowModel.getPinnedTopTotalHeight();\n        if (floatingTopHeight) {\n            // adding 1px for cell bottom border\n            floatingTopHeight += 1;\n        }\n        var floatingBottomHeight = pinnedRowModel.getPinnedBottomTotalHeight();\n        if (floatingBottomHeight) {\n            // adding 1px for cell bottom border\n            floatingBottomHeight += 1;\n        }\n        var floatingTopHeightString = floatingTopHeight + \"px\";\n        var floatingBottomHeightString = floatingBottomHeight + \"px\";\n        eTop.style.minHeight = floatingTopHeightString;\n        eTop.style.height = floatingTopHeightString;\n        eTop.style.display = floatingTopHeight ? 'inherit' : 'none';\n        eBottom.style.minHeight = floatingBottomHeightString;\n        eBottom.style.height = floatingBottomHeightString;\n        eBottom.style.display = floatingBottomHeight ? 'inherit' : 'none';\n        this.checkBodyHeight();\n    };\n    GridPanel.prototype.getBodyHeight = function () {\n        return this.bodyHeight;\n    };\n    // called by scrollHorizontally method and alignedGridsService\n    GridPanel.prototype.setHorizontalScrollPosition = function (hScrollPosition) {\n        this.eCenterViewport.scrollLeft = hScrollPosition;\n        // we need to manually do the event handling (rather than wait for the event)\n        // for the alignedGridsService, as if we don't, the aligned grid service gets\n        // notified async, and then it's 'consuming' flag doesn't get used right, and\n        // we can end up with an infinite loop\n        this.doHorizontalScroll(hScrollPosition);\n    };\n    GridPanel.prototype.setVerticalScrollPosition = function (vScrollPosition) {\n        this.eBodyViewport.scrollTop = vScrollPosition;\n    };\n    // called by the headerRootComp and moveColumnController\n    GridPanel.prototype.scrollHorizontally = function (pixels) {\n        var oldScrollPosition = this.eCenterViewport.scrollLeft;\n        this.setHorizontalScrollPosition(oldScrollPosition + pixels);\n        return this.eCenterViewport.scrollLeft - oldScrollPosition;\n    };\n    // called by rowDragFeature\n    GridPanel.prototype.scrollVertically = function (pixels) {\n        var oldScrollPosition = this.eBodyViewport.scrollTop;\n        this.setVerticalScrollPosition(oldScrollPosition + pixels);\n        return this.eBodyViewport.scrollTop - oldScrollPosition;\n    };\n    GridPanel.prototype.addScrollListener = function () {\n        this.addDestroyableEventListener(this.eCenterViewport, 'scroll', this.onCenterViewportScroll.bind(this));\n        this.addDestroyableEventListener(this.eBodyHorizontalScrollViewport, 'scroll', this.onFakeHorizontalScroll.bind(this));\n        this.addDestroyableEventListener(this.eBodyViewport, 'scroll', this.onVerticalScroll.bind(this));\n    };\n    GridPanel.prototype.onVerticalScroll = function () {\n        var scrollTop = this.eBodyViewport.scrollTop;\n        this.animationFrameService.setScrollTop(scrollTop);\n        this.nextScrollTop = scrollTop;\n        if (this.gridOptionsWrapper.isSuppressAnimationFrame()) {\n            this.redrawRowsAfterScroll();\n        }\n        else {\n            this.animationFrameService.schedule();\n        }\n    };\n    GridPanel.prototype.executeFrame = function () {\n        var frameNeeded = this.scrollTop !== this.nextScrollTop;\n        if (frameNeeded) {\n            this.scrollTop = this.nextScrollTop;\n            this.redrawRowsAfterScroll();\n        }\n        return frameNeeded;\n    };\n    GridPanel.prototype.isControllingScroll = function (eDiv) {\n        if (!this.lastHorizontalScrollElement) {\n            this.lastHorizontalScrollElement = eDiv;\n            return true;\n        }\n        return eDiv === this.lastHorizontalScrollElement;\n    };\n    GridPanel.prototype.onFakeHorizontalScroll = function () {\n        if (!this.isControllingScroll(this.eBodyHorizontalScrollViewport)) {\n            return;\n        }\n        this.onBodyHorizontalScroll(this.eBodyHorizontalScrollViewport);\n    };\n    GridPanel.prototype.onCenterViewportScroll = function () {\n        if (!this.isControllingScroll(this.eCenterViewport)) {\n            return;\n        }\n        this.onBodyHorizontalScroll(this.eCenterViewport);\n    };\n    GridPanel.prototype.onBodyHorizontalScroll = function (eSource) {\n        var _a = this.eCenterViewport, scrollWidth = _a.scrollWidth, clientWidth = _a.clientWidth;\n        // in chrome, fractions can be in the scroll left, eg 250.342234 - which messes up our 'scrollWentPastBounds'\n        // formula. so we floor it to allow the formula to work.\n        var scrollLeft = Math.floor(utils_1._.getScrollLeft(eSource, this.enableRtl));\n        // touch devices allow elastic scroll - which temporally scrolls the panel outside of the viewport\n        // (eg user uses touch to go to the left of the grid, but drags past the left, the rows will actually\n        // scroll past the left until the user releases the mouse). when this happens, we want ignore the scroll,\n        // as otherwise it was causing the rows and header to flicker.\n        var scrollWentPastBounds = scrollLeft < 0 || (scrollLeft + clientWidth > scrollWidth);\n        if (scrollWentPastBounds) {\n            return;\n        }\n        this.doHorizontalScroll(scrollLeft);\n        this.resetLastHorizontalScrollElementDebounce();\n    };\n    GridPanel.prototype.resetLastHorizontalScrollElement = function () {\n        this.lastHorizontalScrollElement = null;\n    };\n    GridPanel.prototype.doHorizontalScroll = function (scrollLeft) {\n        this.scrollLeft = scrollLeft;\n        var event = {\n            type: events_1.Events.EVENT_BODY_SCROLL,\n            api: this.gridApi,\n            columnApi: this.columnApi,\n            direction: 'horizontal',\n            left: this.scrollLeft,\n            top: this.scrollTop\n        };\n        this.eventService.dispatchEvent(event);\n        this.horizontallyScrollHeaderCenterAndFloatingCenter(scrollLeft);\n        this.onHorizontalViewportChanged();\n    };\n    GridPanel.prototype.redrawRowsAfterScroll = function () {\n        var event = {\n            type: events_1.Events.EVENT_BODY_SCROLL,\n            direction: 'vertical',\n            api: this.gridApi,\n            columnApi: this.columnApi,\n            left: this.scrollLeft,\n            top: this.scrollTop\n        };\n        this.eventService.dispatchEvent(event);\n    };\n    // this gets called whenever a change in the viewport, so we can inform column controller it has to work\n    // out the virtual columns again. gets called from following locations:\n    // + ensureColVisible, scroll, init, layoutChanged, displayedColumnsChanged, API (doLayout)\n    GridPanel.prototype.onHorizontalViewportChanged = function () {\n        var scrollWidth = this.eCenterViewport.clientWidth;\n        var scrollPosition = this.getCenterViewportScrollLeft();\n        this.columnController.setVirtualViewportPosition(scrollWidth, scrollPosition);\n    };\n    GridPanel.prototype.getCenterViewportScrollLeft = function () {\n        // we defer to a util, as how you calculated scrollLeft when doing RTL depends on the browser\n        return utils_1._.getScrollLeft(this.eCenterViewport, this.enableRtl);\n    };\n    GridPanel.prototype.setCenterViewportScrollLeft = function (value) {\n        // we defer to a util, as how you calculated scrollLeft when doing RTL depends on the browser\n        utils_1._.setScrollLeft(this.eCenterViewport, value, this.enableRtl);\n    };\n    GridPanel.prototype.horizontallyScrollHeaderCenterAndFloatingCenter = function (scrollLeft) {\n        if (scrollLeft === undefined) {\n            scrollLeft = this.getCenterViewportScrollLeft();\n        }\n        var offset = this.enableRtl ? scrollLeft : -scrollLeft;\n        var _a = this.eCenterViewport, clientWidth = _a.clientWidth, scrollWidth = _a.scrollWidth;\n        var scrollWentPastBounds = Math.abs(offset) + clientWidth > scrollWidth;\n        if (scrollWentPastBounds ||\n            (this.enableRtl && offset < 0) ||\n            (!this.enableRtl && offset > 0)) {\n            return;\n        }\n        this.headerRootComp.setHorizontalScroll(offset);\n        this.eBottomContainer.style.transform = \"translateX(\" + offset + \"px)\";\n        this.eTopContainer.style.transform = \"translateX(\" + offset + \"px)\";\n        var partner = this.lastHorizontalScrollElement === this.eCenterViewport ? this.eBodyHorizontalScrollViewport : this.eCenterViewport;\n        utils_1._.setScrollLeft(partner, scrollLeft, this.enableRtl);\n    };\n    // + rangeController\n    GridPanel.prototype.addScrollEventListener = function (listener) {\n        this.eBodyViewport.addEventListener('scroll', listener);\n    };\n    // + rangeController\n    GridPanel.prototype.removeScrollEventListener = function (listener) {\n        this.eBodyViewport.removeEventListener('scroll', listener);\n    };\n    __decorate([\n        context_1.Autowired('alignedGridsService'),\n        __metadata(\"design:type\", alignedGridsService_1.AlignedGridsService)\n    ], GridPanel.prototype, \"alignedGridsService\", void 0);\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], GridPanel.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_1.Autowired('columnController'),\n        __metadata(\"design:type\", columnController_1.ColumnController)\n    ], GridPanel.prototype, \"columnController\", void 0);\n    __decorate([\n        context_1.Autowired('rowRenderer'),\n        __metadata(\"design:type\", rowRenderer_1.RowRenderer)\n    ], GridPanel.prototype, \"rowRenderer\", void 0);\n    __decorate([\n        context_1.Autowired('pinnedRowModel'),\n        __metadata(\"design:type\", pinnedRowModel_1.PinnedRowModel)\n    ], GridPanel.prototype, \"pinnedRowModel\", void 0);\n    __decorate([\n        context_1.Autowired('eventService'),\n        __metadata(\"design:type\", eventService_1.EventService)\n    ], GridPanel.prototype, \"eventService\", void 0);\n    __decorate([\n        context_1.Autowired('animationFrameService'),\n        __metadata(\"design:type\", animationFrameService_1.AnimationFrameService)\n    ], GridPanel.prototype, \"animationFrameService\", void 0);\n    __decorate([\n        context_1.Autowired('navigationService'),\n        __metadata(\"design:type\", navigationService_1.NavigationService)\n    ], GridPanel.prototype, \"navigationService\", void 0);\n    __decorate([\n        context_1.Autowired('autoHeightCalculator'),\n        __metadata(\"design:type\", autoHeightCalculator_1.AutoHeightCalculator)\n    ], GridPanel.prototype, \"autoHeightCalculator\", void 0);\n    __decorate([\n        context_1.Autowired('columnAnimationService'),\n        __metadata(\"design:type\", columnAnimationService_1.ColumnAnimationService)\n    ], GridPanel.prototype, \"columnAnimationService\", void 0);\n    __decorate([\n        context_1.Autowired('autoWidthCalculator'),\n        __metadata(\"design:type\", autoWidthCalculator_1.AutoWidthCalculator)\n    ], GridPanel.prototype, \"autoWidthCalculator\", void 0);\n    __decorate([\n        context_1.Autowired('paginationAutoPageSizeService'),\n        __metadata(\"design:type\", paginationAutoPageSizeService_1.PaginationAutoPageSizeService)\n    ], GridPanel.prototype, \"paginationAutoPageSizeService\", void 0);\n    __decorate([\n        context_1.Autowired('beans'),\n        __metadata(\"design:type\", beans_1.Beans)\n    ], GridPanel.prototype, \"beans\", void 0);\n    __decorate([\n        context_1.Autowired('paginationProxy'),\n        __metadata(\"design:type\", paginationProxy_1.PaginationProxy)\n    ], GridPanel.prototype, \"paginationProxy\", void 0);\n    __decorate([\n        context_1.Autowired('columnApi'),\n        __metadata(\"design:type\", columnApi_1.ColumnApi)\n    ], GridPanel.prototype, \"columnApi\", void 0);\n    __decorate([\n        context_1.Autowired('gridApi'),\n        __metadata(\"design:type\", gridApi_1.GridApi)\n    ], GridPanel.prototype, \"gridApi\", void 0);\n    __decorate([\n        context_1.Autowired('dragService'),\n        __metadata(\"design:type\", dragService_1.DragService)\n    ], GridPanel.prototype, \"dragService\", void 0);\n    __decorate([\n        context_1.Autowired('mouseEventService'),\n        __metadata(\"design:type\", mouseEventService_1.MouseEventService)\n    ], GridPanel.prototype, \"mouseEventService\", void 0);\n    __decorate([\n        context_1.Autowired('focusedCellController'),\n        __metadata(\"design:type\", focusedCellController_1.FocusedCellController)\n    ], GridPanel.prototype, \"focusedCellController\", void 0);\n    __decorate([\n        context_1.Autowired('$scope'),\n        __metadata(\"design:type\", Object)\n    ], GridPanel.prototype, \"$scope\", void 0);\n    __decorate([\n        context_1.Autowired('scrollVisibleService'),\n        __metadata(\"design:type\", scrollVisibleService_1.ScrollVisibleService)\n    ], GridPanel.prototype, \"scrollVisibleService\", void 0);\n    __decorate([\n        context_1.Autowired('valueService'),\n        __metadata(\"design:type\", valueService_1.ValueService)\n    ], GridPanel.prototype, \"valueService\", void 0);\n    __decorate([\n        context_1.Autowired('dragAndDropService'),\n        __metadata(\"design:type\", dragAndDropService_1.DragAndDropService)\n    ], GridPanel.prototype, \"dragAndDropService\", void 0);\n    __decorate([\n        context_1.Autowired('maxDivHeightScaler'),\n        __metadata(\"design:type\", maxDivHeightScaler_1.MaxDivHeightScaler)\n    ], GridPanel.prototype, \"heightScaler\", void 0);\n    __decorate([\n        context_1.Autowired('enterprise'),\n        __metadata(\"design:type\", Boolean)\n    ], GridPanel.prototype, \"enterprise\", void 0);\n    __decorate([\n        context_1.Autowired('resizeObserverService'),\n        __metadata(\"design:type\", resizeObserverService_1.ResizeObserverService)\n    ], GridPanel.prototype, \"resizeObserverService\", void 0);\n    __decorate([\n        context_1.Optional('rangeController'),\n        __metadata(\"design:type\", Object)\n    ], GridPanel.prototype, \"rangeController\", void 0);\n    __decorate([\n        context_1.Optional('contextMenuFactory'),\n        __metadata(\"design:type\", Object)\n    ], GridPanel.prototype, \"contextMenuFactory\", void 0);\n    __decorate([\n        context_1.Optional('clipboardService'),\n        __metadata(\"design:type\", Object)\n    ], GridPanel.prototype, \"clipboardService\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eBodyViewport'),\n        __metadata(\"design:type\", HTMLElement)\n    ], GridPanel.prototype, \"eBodyViewport\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eCenterContainer'),\n        __metadata(\"design:type\", HTMLElement)\n    ], GridPanel.prototype, \"eCenterContainer\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eCenterViewport'),\n        __metadata(\"design:type\", HTMLElement)\n    ], GridPanel.prototype, \"eCenterViewport\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eLeftContainer'),\n        __metadata(\"design:type\", HTMLElement)\n    ], GridPanel.prototype, \"eLeftContainer\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eRightContainer'),\n        __metadata(\"design:type\", HTMLElement)\n    ], GridPanel.prototype, \"eRightContainer\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eCenterColsClipper'),\n        __metadata(\"design:type\", HTMLElement)\n    ], GridPanel.prototype, \"eCenterColsClipper\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eHorizontalScrollBody'),\n        __metadata(\"design:type\", HTMLElement)\n    ], GridPanel.prototype, \"eHorizontalScrollBody\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eHorizontalLeftSpacer'),\n        __metadata(\"design:type\", HTMLElement)\n    ], GridPanel.prototype, \"eHorizontalLeftSpacer\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eHorizontalRightSpacer'),\n        __metadata(\"design:type\", HTMLElement)\n    ], GridPanel.prototype, \"eHorizontalRightSpacer\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eBodyHorizontalScrollViewport'),\n        __metadata(\"design:type\", HTMLElement)\n    ], GridPanel.prototype, \"eBodyHorizontalScrollViewport\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eBodyHorizontalScrollContainer'),\n        __metadata(\"design:type\", HTMLElement)\n    ], GridPanel.prototype, \"eBodyHorizontalScrollContainer\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eFullWidthContainer'),\n        __metadata(\"design:type\", HTMLElement)\n    ], GridPanel.prototype, \"eFullWidthContainer\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eTop'),\n        __metadata(\"design:type\", HTMLElement)\n    ], GridPanel.prototype, \"eTop\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eLeftTop'),\n        __metadata(\"design:type\", HTMLElement)\n    ], GridPanel.prototype, \"eLeftTop\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eRightTop'),\n        __metadata(\"design:type\", HTMLElement)\n    ], GridPanel.prototype, \"eRightTop\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eTopContainer'),\n        __metadata(\"design:type\", HTMLElement)\n    ], GridPanel.prototype, \"eTopContainer\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eTopViewport'),\n        __metadata(\"design:type\", HTMLElement)\n    ], GridPanel.prototype, \"eTopViewport\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eTopFullWidthContainer'),\n        __metadata(\"design:type\", HTMLElement)\n    ], GridPanel.prototype, \"eTopFullWidthContainer\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eBottom'),\n        __metadata(\"design:type\", HTMLElement)\n    ], GridPanel.prototype, \"eBottom\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eLeftBottom'),\n        __metadata(\"design:type\", HTMLElement)\n    ], GridPanel.prototype, \"eLeftBottom\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eRightBottom'),\n        __metadata(\"design:type\", HTMLElement)\n    ], GridPanel.prototype, \"eRightBottom\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eBottomContainer'),\n        __metadata(\"design:type\", HTMLElement)\n    ], GridPanel.prototype, \"eBottomContainer\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eBottomViewport'),\n        __metadata(\"design:type\", HTMLElement)\n    ], GridPanel.prototype, \"eBottomViewport\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eBottomFullWidthContainer'),\n        __metadata(\"design:type\", HTMLElement)\n    ], GridPanel.prototype, \"eBottomFullWidthContainer\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('headerRoot'),\n        __metadata(\"design:type\", headerRootComp_1.HeaderRootComp)\n    ], GridPanel.prototype, \"headerRootComp\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('overlayWrapper'),\n        __metadata(\"design:type\", overlayWrapperComponent_1.OverlayWrapperComponent)\n    ], GridPanel.prototype, \"overlayWrapper\", void 0);\n    __decorate([\n        context_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], GridPanel.prototype, \"init\", null);\n    return GridPanel;\n}(component_1.Component));\nexports.GridPanel = GridPanel;\n"]},"metadata":{},"sourceType":"script"}