{"ast":null,"code":"/**\n * @module ol/format/filter/GreaterThan\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThan>` comparison operator.\n * @api\n */\n\nvar GreaterThan =\n/*@__PURE__*/\nfunction (ComparisonBinary) {\n  function GreaterThan(propertyName, expression) {\n    ComparisonBinary.call(this, 'PropertyIsGreaterThan', propertyName, expression);\n  }\n\n  if (ComparisonBinary) GreaterThan.__proto__ = ComparisonBinary;\n  GreaterThan.prototype = Object.create(ComparisonBinary && ComparisonBinary.prototype);\n  GreaterThan.prototype.constructor = GreaterThan;\n  return GreaterThan;\n}(ComparisonBinary);\n\nexport default GreaterThan;","map":{"version":3,"sources":["../../../../src/ol/format/filter/GreaterThan.js"],"names":["super"],"mappings":"AAAA;;;AAGA,OAAO,gBAAP,MAA6B,uBAA7B;;;;;;;AAOA,IAAM,WAAW;AAAyB;AAAA,UAAA,gBAAA,EAAA;AAMxC,WAAA,WAAA,CAAY,YAAZ,EAA0B,UAA1B,EAAsC;AACpCA,IAAAA,gBAAAA,CAAAA,IAAAA,CAAK,IAALA,EAAM,uBAANA,EAA+B,YAA/BA,EAA6C,UAA7CA;;;;;AACD,EAAA,WAAA,CAAA,SAAA,CAAA,WAAA,GAAA,WAAA;;CARuC,CAAhB,gBAAgB,CAA1C;;AAYA,eAAe,WAAf","sourcesContent":["/**\n * @module ol/format/filter/GreaterThan\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThan>` comparison operator.\n * @api\n */\nclass GreaterThan extends ComparisonBinary {\n\n  /**\n   * @param {!string} propertyName Name of the context property to compare.\n   * @param {!number} expression The value to compare.\n   */\n  constructor(propertyName, expression) {\n    super('PropertyIsGreaterThan', propertyName, expression);\n  }\n\n}\n\nexport default GreaterThan;\n"]},"metadata":{},"sourceType":"module"}