{"ast":null,"code":"'use strict';\n\nvar ArrayReader = require('./arrayReader');\n\nfunction Uint8ArrayReader(data) {\n  if (data) {\n    this.data = data;\n    this.length = this.data.length;\n    this.index = 0;\n    this.zero = 0;\n  }\n}\n\nUint8ArrayReader.prototype = new ArrayReader();\n/**\n * @see DataReader.readData\n */\n\nUint8ArrayReader.prototype.readData = function (size) {\n  this.checkOffset(size);\n\n  if (size === 0) {\n    // in IE10, when using subarray(idx, idx), we get the array [0x00] instead of [].\n    return new Uint8Array(0);\n  }\n\n  var result = this.data.subarray(this.zero + this.index, this.zero + this.index + size);\n  this.index += size;\n  return result;\n};\n\nmodule.exports = Uint8ArrayReader;","map":{"version":3,"sources":["/Users/dirkmennecke77/Desktop/Lageplan/node_modules/jszip/lib/uint8ArrayReader.js"],"names":["ArrayReader","require","Uint8ArrayReader","data","length","index","zero","prototype","readData","size","checkOffset","Uint8Array","result","subarray","module","exports"],"mappings":"AAAA;;AACA,IAAIA,WAAW,GAAGC,OAAO,CAAC,eAAD,CAAzB;;AAEA,SAASC,gBAAT,CAA0BC,IAA1B,EAAgC;AAC5B,MAAIA,IAAJ,EAAU;AACN,SAAKA,IAAL,GAAYA,IAAZ;AACA,SAAKC,MAAL,GAAc,KAAKD,IAAL,CAAUC,MAAxB;AACA,SAAKC,KAAL,GAAa,CAAb;AACA,SAAKC,IAAL,GAAY,CAAZ;AACH;AACJ;;AACDJ,gBAAgB,CAACK,SAAjB,GAA6B,IAAIP,WAAJ,EAA7B;AACA;;;;AAGAE,gBAAgB,CAACK,SAAjB,CAA2BC,QAA3B,GAAsC,UAASC,IAAT,EAAe;AACjD,OAAKC,WAAL,CAAiBD,IAAjB;;AACA,MAAGA,IAAI,KAAK,CAAZ,EAAe;AACX;AACA,WAAO,IAAIE,UAAJ,CAAe,CAAf,CAAP;AACH;;AACD,MAAIC,MAAM,GAAG,KAAKT,IAAL,CAAUU,QAAV,CAAmB,KAAKP,IAAL,GAAY,KAAKD,KAApC,EAA2C,KAAKC,IAAL,GAAY,KAAKD,KAAjB,GAAyBI,IAApE,CAAb;AACA,OAAKJ,KAAL,IAAcI,IAAd;AACA,SAAOG,MAAP;AACH,CATD;;AAUAE,MAAM,CAACC,OAAP,GAAiBb,gBAAjB","sourcesContent":["'use strict';\nvar ArrayReader = require('./arrayReader');\n\nfunction Uint8ArrayReader(data) {\n    if (data) {\n        this.data = data;\n        this.length = this.data.length;\n        this.index = 0;\n        this.zero = 0;\n    }\n}\nUint8ArrayReader.prototype = new ArrayReader();\n/**\n * @see DataReader.readData\n */\nUint8ArrayReader.prototype.readData = function(size) {\n    this.checkOffset(size);\n    if(size === 0) {\n        // in IE10, when using subarray(idx, idx), we get the array [0x00] instead of [].\n        return new Uint8Array(0);\n    }\n    var result = this.data.subarray(this.zero + this.index, this.zero + this.index + size);\n    this.index += size;\n    return result;\n};\nmodule.exports = Uint8ArrayReader;\n"]},"metadata":{},"sourceType":"script"}