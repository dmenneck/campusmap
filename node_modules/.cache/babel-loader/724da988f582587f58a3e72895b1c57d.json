{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.timeLayerAware = timeLayerAware;\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _isArray = _interopRequireDefault(require(\"lodash/isArray\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/**\n * Finds the key time in the passed object regardless of upper- or lowercase\n * characters. Will return `TIME` (all uppercase) as a fallback.\n *\n * @param {Object} params The object to find the key in, basically the params of\n *   a WMS source that will end up as URL parameters.\n * @return {String} The key for the time parameter, in the actual spelling.\n */\n\n\nvar findTimeParam = function findTimeParam(params) {\n  var keys = Object.keys(params);\n  var foundKey = 'TIME'; // fallback\n\n  keys.some(function (key) {\n    var lcKey = key && key.toLowerCase && key.toLowerCase();\n\n    if (lcKey === 'time') {\n      foundKey = key;\n      return true;\n    }\n  });\n  return foundKey;\n};\n/**\n * HOC that updates layers based on the wrapped components time instant or\n * interval. Can for example be used with the TimeSlider component.\n * @param  {React.Component} WrappedComponent a component with an onChange prop\n * @param  {Array} layers array of layer configurations\n * @return {React.Component} a time layer aware component\n */\n\n\nfunction timeLayerAware(WrappedComponent, layers) {\n  var _temp;\n\n  return _temp =\n  /*#__PURE__*/\n  function (_React$Component) {\n    _inherits(TimeLayerAware, _React$Component);\n\n    function TimeLayerAware() {\n      var _getPrototypeOf2;\n\n      var _this;\n\n      _classCallCheck(this, TimeLayerAware);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TimeLayerAware)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n      _defineProperty(_assertThisInitialized(_this), \"timeChanged\", function (newValues) {\n        layers.forEach(function (config) {\n          if (config.isWmsTime) {\n            var parms = config.layer.getSource().getParams();\n            var timeParam = findTimeParam(parms);\n\n            if ((0, _isArray[\"default\"])(newValues)) {\n              parms[timeParam] = \"\".concat(newValues[0], \"/\").concat(newValues[1]);\n            } else {\n              parms[timeParam] = \"\".concat(newValues);\n            }\n\n            config.layer.getSource().updateParams(parms);\n          }\n\n          if (config.customHandler) {\n            config.customHandler(newValues);\n          }\n        });\n      });\n\n      _defineProperty(_assertThisInitialized(_this), \"render\", function () {\n        return _react[\"default\"].createElement(WrappedComponent, _extends({\n          onChange: _this.timeChanged\n        }, _this.props));\n      });\n\n      return _this;\n    }\n\n    return TimeLayerAware;\n  }(_react[\"default\"].Component), _temp;\n}\n\nvar _default = timeLayerAware;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}