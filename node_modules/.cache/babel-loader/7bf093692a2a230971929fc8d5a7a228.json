{"ast":null,"code":"/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.2.2\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar component_1 = require(\"../../../widgets/component\");\n\nvar simpleFilter_1 = require(\"../../provided/simpleFilter\");\n\nvar optionsFactory_1 = require(\"../../provided/optionsFactory\");\n\nvar SimpleFloatingFilter =\n/** @class */\nfunction (_super) {\n  __extends(SimpleFloatingFilter, _super);\n\n  function SimpleFloatingFilter() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  SimpleFloatingFilter.prototype.getDefaultDebounceMs = function () {\n    return 0;\n  }; // used by:\n  // 1) NumberFloatingFilter & TextFloatingFilter: Always, for both when editable and read only.\n  // 2) DateFloatingFilter: Only when read only (as we show text rather than a date picker when read only)\n\n\n  SimpleFloatingFilter.prototype.getTextFromModel = function (model) {\n    if (!model) {\n      return null;\n    }\n\n    var isCombined = model.operator;\n\n    if (isCombined) {\n      var combinedModel = model;\n      var con1Str = this.conditionToString(combinedModel.condition1);\n      var con2Str = this.conditionToString(combinedModel.condition2);\n      return con1Str + \" \" + combinedModel.operator + \" \" + con2Str;\n    } else {\n      var condition = model;\n      return this.conditionToString(condition);\n    }\n  };\n\n  SimpleFloatingFilter.prototype.isEventFromFloatingFilter = function (event) {\n    return event && event.afterFloatingFilter;\n  };\n\n  SimpleFloatingFilter.prototype.getLastType = function () {\n    return this.lastType;\n  };\n\n  SimpleFloatingFilter.prototype.setLastTypeFromModel = function (model) {\n    // if no model provided by the parent filter, we continue to use the last type used\n    if (!model) {\n      return;\n    }\n\n    var isCombined = model.operator;\n    var condition;\n\n    if (isCombined) {\n      var combinedModel = model;\n      condition = combinedModel.condition1;\n    } else {\n      condition = model;\n    }\n\n    this.lastType = condition.type;\n  };\n\n  SimpleFloatingFilter.prototype.canWeEditAfterModelFromParentFilter = function (model) {\n    if (!model) {\n      // if no model, then we can edit as long as the lastType is something we can edit, as this\n      // is the type we will provide to the parent filter if the user decides to use the floating filter.\n      return this.isTypeEditable(this.lastType);\n    } // never allow editing if the filter is combined (ie has two parts)\n\n\n    var isCombined = model.operator;\n\n    if (isCombined) {\n      return false;\n    }\n\n    var simpleModel = model;\n    var typeIsEditable = this.isTypeEditable(simpleModel.type);\n    return typeIsEditable;\n  };\n\n  SimpleFloatingFilter.prototype.init = function (params) {\n    this.optionsFactory = new optionsFactory_1.OptionsFactory();\n    this.optionsFactory.init(params.filterParams, this.getDefaultFilterOptions());\n    this.lastType = this.optionsFactory.getDefaultOption(); // we are editable if:\n    // 1) there is a type (user has configured filter wrong if not type)\n    //  AND\n    // 2) the default type is not 'in range'\n\n    var editable = this.isTypeEditable(this.lastType);\n    this.setEditable(editable);\n  };\n\n  SimpleFloatingFilter.prototype.doesFilterHaveHiddenInput = function (filterType) {\n    var customFilterOption = this.optionsFactory.getCustomOption(filterType);\n    return customFilterOption && customFilterOption.hideFilterInput;\n  };\n\n  SimpleFloatingFilter.prototype.isTypeEditable = function (type) {\n    if (this.doesFilterHaveHiddenInput(type)) {\n      return false;\n    }\n\n    return type && type != simpleFilter_1.SimpleFilter.IN_RANGE && type != simpleFilter_1.SimpleFilter.EMPTY;\n  };\n\n  return SimpleFloatingFilter;\n}(component_1.Component);\n\nexports.SimpleFloatingFilter = SimpleFloatingFilter;","map":{"version":3,"sources":["/Users/dirkmennecke77/Desktop/Lageplan/node_modules/ag-grid-community/dist/lib/filter/floating/provided/simpleFloatingFilter.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","defineProperty","exports","value","component_1","require","simpleFilter_1","optionsFactory_1","SimpleFloatingFilter","_super","apply","arguments","getDefaultDebounceMs","getTextFromModel","model","isCombined","operator","combinedModel","con1Str","conditionToString","condition1","con2Str","condition2","condition","isEventFromFloatingFilter","event","afterFloatingFilter","getLastType","lastType","setLastTypeFromModel","type","canWeEditAfterModelFromParentFilter","isTypeEditable","simpleModel","typeIsEditable","init","params","optionsFactory","OptionsFactory","filterParams","getDefaultFilterOptions","getDefaultOption","editable","setEditable","doesFilterHaveHiddenInput","filterType","customFilterOption","getCustomOption","hideFilterInput","SimpleFilter","IN_RANGE","EMPTY","Component"],"mappings":"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","sourcesContent":["/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.2.2\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar component_1 = require(\"../../../widgets/component\");\nvar simpleFilter_1 = require(\"../../provided/simpleFilter\");\nvar optionsFactory_1 = require(\"../../provided/optionsFactory\");\nvar SimpleFloatingFilter = /** @class */ (function (_super) {\n    __extends(SimpleFloatingFilter, _super);\n    function SimpleFloatingFilter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SimpleFloatingFilter.prototype.getDefaultDebounceMs = function () {\n        return 0;\n    };\n    // used by:\n    // 1) NumberFloatingFilter & TextFloatingFilter: Always, for both when editable and read only.\n    // 2) DateFloatingFilter: Only when read only (as we show text rather than a date picker when read only)\n    SimpleFloatingFilter.prototype.getTextFromModel = function (model) {\n        if (!model) {\n            return null;\n        }\n        var isCombined = model.operator;\n        if (isCombined) {\n            var combinedModel = model;\n            var con1Str = this.conditionToString(combinedModel.condition1);\n            var con2Str = this.conditionToString(combinedModel.condition2);\n            return con1Str + \" \" + combinedModel.operator + \" \" + con2Str;\n        }\n        else {\n            var condition = model;\n            return this.conditionToString(condition);\n        }\n    };\n    SimpleFloatingFilter.prototype.isEventFromFloatingFilter = function (event) {\n        return (event && event.afterFloatingFilter);\n    };\n    SimpleFloatingFilter.prototype.getLastType = function () {\n        return this.lastType;\n    };\n    SimpleFloatingFilter.prototype.setLastTypeFromModel = function (model) {\n        // if no model provided by the parent filter, we continue to use the last type used\n        if (!model) {\n            return;\n        }\n        var isCombined = model.operator;\n        var condition;\n        if (isCombined) {\n            var combinedModel = model;\n            condition = combinedModel.condition1;\n        }\n        else {\n            condition = model;\n        }\n        this.lastType = condition.type;\n    };\n    SimpleFloatingFilter.prototype.canWeEditAfterModelFromParentFilter = function (model) {\n        if (!model) {\n            // if no model, then we can edit as long as the lastType is something we can edit, as this\n            // is the type we will provide to the parent filter if the user decides to use the floating filter.\n            return this.isTypeEditable(this.lastType);\n        }\n        // never allow editing if the filter is combined (ie has two parts)\n        var isCombined = model.operator;\n        if (isCombined) {\n            return false;\n        }\n        var simpleModel = model;\n        var typeIsEditable = this.isTypeEditable(simpleModel.type);\n        return typeIsEditable;\n    };\n    SimpleFloatingFilter.prototype.init = function (params) {\n        this.optionsFactory = new optionsFactory_1.OptionsFactory();\n        this.optionsFactory.init(params.filterParams, this.getDefaultFilterOptions());\n        this.lastType = this.optionsFactory.getDefaultOption();\n        // we are editable if:\n        // 1) there is a type (user has configured filter wrong if not type)\n        //  AND\n        // 2) the default type is not 'in range'\n        var editable = this.isTypeEditable(this.lastType);\n        this.setEditable(editable);\n    };\n    SimpleFloatingFilter.prototype.doesFilterHaveHiddenInput = function (filterType) {\n        var customFilterOption = this.optionsFactory.getCustomOption(filterType);\n        return customFilterOption && customFilterOption.hideFilterInput;\n    };\n    SimpleFloatingFilter.prototype.isTypeEditable = function (type) {\n        if (this.doesFilterHaveHiddenInput(type)) {\n            return false;\n        }\n        return type\n            && (type != simpleFilter_1.SimpleFilter.IN_RANGE)\n            && (type != simpleFilter_1.SimpleFilter.EMPTY);\n    };\n    return SimpleFloatingFilter;\n}(component_1.Component));\nexports.SimpleFloatingFilter = SimpleFloatingFilter;\n"]},"metadata":{},"sourceType":"script"}