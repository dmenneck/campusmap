{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.FeatureGrid = void 0;\n\nrequire(\"antd/es/table/style\");\n\nvar _table = _interopRequireDefault(require(\"antd/es/table\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _Style = _interopRequireDefault(require(\"ol/style/Style\"));\n\nvar _Fill = _interopRequireDefault(require(\"ol/style/Fill\"));\n\nvar _Circle = _interopRequireDefault(require(\"ol/style/Circle\"));\n\nvar _Stroke = _interopRequireDefault(require(\"ol/style/Stroke\"));\n\nvar _Map = _interopRequireDefault(require(\"ol/Map\"));\n\nvar _Feature = _interopRequireDefault(require(\"ol/Feature\"));\n\nvar _Vector = _interopRequireDefault(require(\"ol/source/Vector\"));\n\nvar _Vector2 = _interopRequireDefault(require(\"ol/layer/Vector\"));\n\nvar _Geometry = _interopRequireDefault(require(\"ol/geom/Geometry\"));\n\nvar _GeometryCollection = _interopRequireDefault(require(\"ol/geom/GeometryCollection\"));\n\nvar _isEqual = _interopRequireDefault(require(\"lodash/isEqual\"));\n\nvar _isFunction = _interopRequireDefault(require(\"lodash/isFunction\"));\n\nvar _kebabCase = _interopRequireDefault(require(\"lodash/kebabCase\"));\n\nvar _MapUtil = _interopRequireDefault(require(\"@terrestris/ol-util/dist/MapUtil/MapUtil\"));\n\nrequire(\"./FeatureGrid.less\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    if (i % 2) {\n      var source = arguments[i] != null ? arguments[i] : {};\n      var ownKeys = Object.keys(source);\n\n      if (typeof Object.getOwnPropertySymbols === 'function') {\n        ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n          return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n        }));\n      }\n\n      ownKeys.forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(arguments[i]));\n    }\n  }\n\n  return target;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/**\n * The FeatureGrid.\n *\n * @class The FeatureGrid\n * @extends React.Component\n */\n\n\nvar FeatureGrid =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FeatureGrid, _React$Component);\n  /**\n   * The class name to add to this component.\n   * @type {String}\n   * @private\n   */\n\n  /**\n   * The class name to add to each table row.\n   * @type {String}\n   * @private\n   */\n\n  /**\n   * The prefix to use for each table row class.\n   * @type {String}\n   * @private\n   */\n\n  /**\n   * The hover class name.\n   * @type {String}\n   * @private\n   */\n\n  /**\n   * The source holding the features of the grid.\n   * @type {ol.source.Vector}\n   * @private\n   */\n\n  /**\n   * The layer representing the features of the grid.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n\n  /**\n   * The properties.\n   * @type {Object}\n   */\n\n  /**\n   * The default properties.\n   * @type {Object}\n   */\n\n\n  function FeatureGrid(_props) {\n    var _this;\n\n    _classCallCheck(this, FeatureGrid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FeatureGrid).call(this, _props));\n\n    _defineProperty(_assertThisInitialized(_this), \"_className\", 'react-geo-feature-grid');\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowClassName\", 'react-geo-feature-grid-row');\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowKeyClassNamePrefix\", 'row-key-');\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowHoverClassName\", 'row-hover');\n\n    _defineProperty(_assertThisInitialized(_this), \"_source\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_layer\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"initVectorLayer\", function (map) {\n      var _this$props = _this.props,\n          features = _this$props.features,\n          featureStyle = _this$props.featureStyle,\n          layerName = _this$props.layerName;\n\n      if (!(map instanceof _Map[\"default\"])) {\n        return;\n      }\n\n      if (_MapUtil[\"default\"].getLayerByName(map, layerName)) {\n        return;\n      }\n\n      var source = new _Vector[\"default\"]({\n        features: features\n      });\n      var layer = new _Vector2[\"default\"]({\n        name: layerName,\n        source: source,\n        style: featureStyle\n      });\n      map.addLayer(layer);\n      _this._source = source;\n      _this._layer = layer;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"initMapEventHandlers\", function (map) {\n      var selectable = _this.props.selectable;\n\n      if (!(map instanceof _Map[\"default\"])) {\n        return;\n      }\n\n      map.on('pointermove', _this.onMapPointerMove);\n\n      if (selectable) {\n        map.on('singleclick', _this.onMapSingleClick);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onMapPointerMove\", function (olEvt) {\n      var _this$props2 = _this.props,\n          map = _this$props2.map,\n          features = _this$props2.features,\n          highlightStyle = _this$props2.highlightStyle,\n          selectStyle = _this$props2.selectStyle;\n      var selectedRowKeys = _this.state.selectedRowKeys;\n      var selectedFeatures = map.getFeaturesAtPixel(olEvt.pixel, {\n        layerFilter: function layerFilter(layerCand) {\n          return layerCand === _this._layer;\n        }\n      }) || [];\n      features.forEach(function (feature) {\n        var key = (0, _kebabCase[\"default\"])(_this.props.keyFunction(feature));\n        var sel = \".\".concat(_this._rowClassName, \".\").concat(_this._rowKeyClassNamePrefix).concat(key);\n        var el = document.querySelectorAll(sel)[0];\n\n        if (el) {\n          el.classList.remove(_this._rowHoverClassName);\n        }\n\n        if (selectedRowKeys.includes(key)) {\n          feature.setStyle(selectStyle);\n        } else {\n          feature.setStyle(null);\n        }\n      });\n      selectedFeatures.forEach(function (feature) {\n        var key = (0, _kebabCase[\"default\"])(_this.props.keyFunction(feature));\n        var sel = \".\".concat(_this._rowClassName, \".\").concat(_this._rowKeyClassNamePrefix).concat(key);\n        var el = document.querySelectorAll(sel)[0];\n\n        if (el) {\n          el.classList.add(_this._rowHoverClassName);\n        }\n\n        feature.setStyle(highlightStyle);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onMapSingleClick\", function (olEvt) {\n      var _this$props3 = _this.props,\n          map = _this$props3.map,\n          selectStyle = _this$props3.selectStyle;\n      var selectedRowKeys = _this.state.selectedRowKeys;\n      var selectedFeatures = map.getFeaturesAtPixel(olEvt.pixel, {\n        layerFilter: function layerFilter(layerCand) {\n          return layerCand === _this._layer;\n        }\n      }) || [];\n\n      var rowKeys = _toConsumableArray(selectedRowKeys);\n\n      selectedFeatures.forEach(function (selectedFeature) {\n        var key = _this.props.keyFunction(selectedFeature);\n\n        if (rowKeys.includes(key)) {\n          rowKeys = rowKeys.filter(function (rowKey) {\n            return rowKey !== key;\n          });\n          selectedFeature.setStyle(null);\n        } else {\n          rowKeys.push(key);\n          selectedFeature.setStyle(selectStyle);\n        }\n      });\n\n      _this.setState({\n        selectedRowKeys: rowKeys\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"deinitVectorLayer\", function () {\n      var map = _this.props.map;\n\n      if (!(map instanceof _Map[\"default\"])) {\n        return;\n      }\n\n      map.removeLayer(_this._layer);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"deinitMapEventHandlers\", function () {\n      var _this$props4 = _this.props,\n          map = _this$props4.map,\n          selectable = _this$props4.selectable;\n\n      if (!(map instanceof _Map[\"default\"])) {\n        return;\n      }\n\n      map.un('pointermove', _this.onMapPointerMove);\n\n      if (selectable) {\n        map.un('singleclick', _this.onMapSingleClick);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getColumnDefs\", function () {\n      var _this$props5 = _this.props,\n          attributeBlacklist = _this$props5.attributeBlacklist,\n          features = _this$props5.features,\n          columnDefs = _this$props5.columnDefs;\n      var columns = [];\n      var feature = features[0];\n\n      if (!(feature instanceof _Feature[\"default\"])) {\n        return columns;\n      }\n\n      var props = feature.getProperties();\n      Object.keys(props).forEach(function (key) {\n        if (attributeBlacklist.includes(key)) {\n          return;\n        }\n\n        if (props[key] instanceof _Geometry[\"default\"]) {\n          return;\n        }\n\n        columns.push(_objectSpread({\n          title: key,\n          dataIndex: key,\n          key: key\n        }, columnDefs[key]));\n      });\n      return columns;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getTableData\", function () {\n      var features = _this.props.features;\n      var data = [];\n      features.forEach(function (feature) {\n        var properties = feature.getProperties();\n        var filtered = Object.keys(properties).filter(function (key) {\n          return !(properties[key] instanceof _Geometry[\"default\"]);\n        }).reduce(function (obj, key) {\n          obj[key] = properties[key];\n          return obj;\n        }, {});\n        data.push(_objectSpread({\n          key: _this.props.keyFunction(feature)\n        }, filtered));\n      });\n      return data;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getFeatureFromRowKey\", function (key) {\n      var _this$props6 = _this.props,\n          features = _this$props6.features,\n          keyFunction = _this$props6.keyFunction;\n      var feature = features.filter(function (feature) {\n        return keyFunction(feature) === key;\n      });\n      return feature[0];\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onRowClick\", function (row) {\n      var onRowClick = _this.props.onRowClick;\n\n      var feature = _this.getFeatureFromRowKey(row.key);\n\n      if ((0, _isFunction[\"default\"])(onRowClick)) {\n        onRowClick(row, feature);\n      }\n\n      _this.zoomToFeatures([feature]);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onRowMouseOver\", function (row) {\n      var onRowMouseOver = _this.props.onRowMouseOver;\n\n      var feature = _this.getFeatureFromRowKey(row.key);\n\n      if ((0, _isFunction[\"default\"])(onRowMouseOver)) {\n        onRowMouseOver(row, feature);\n      }\n\n      _this.highlightFeatures([feature]);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onRowMouseOut\", function (row) {\n      var onRowMouseOut = _this.props.onRowMouseOut;\n\n      var feature = _this.getFeatureFromRowKey(row.key);\n\n      if ((0, _isFunction[\"default\"])(onRowMouseOut)) {\n        onRowMouseOut(row, feature);\n      }\n\n      _this.unhighlightFeatures([feature]);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"zoomToFeatures\", function (features) {\n      var map = _this.props.map;\n\n      if (!(map instanceof _Map[\"default\"])) {\n        return;\n      }\n\n      var featGeometries = [];\n      features.forEach(function (feature) {\n        featGeometries.push(feature.getGeometry());\n      });\n\n      if (featGeometries.length > 0) {\n        var geomCollection = new _GeometryCollection[\"default\"](featGeometries);\n        map.getView().fit(geomCollection.getExtent());\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"highlightFeatures\", function (highlightFeatures) {\n      var _this$props7 = _this.props,\n          map = _this$props7.map,\n          highlightStyle = _this$props7.highlightStyle;\n\n      if (!(map instanceof _Map[\"default\"])) {\n        return;\n      }\n\n      highlightFeatures.forEach(function (feature) {\n        return feature.setStyle(highlightStyle);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"unhighlightFeatures\", function (unhighlightFeatures) {\n      var _this$props8 = _this.props,\n          map = _this$props8.map,\n          selectStyle = _this$props8.selectStyle;\n      var selectedRowKeys = _this.state.selectedRowKeys;\n\n      if (!(map instanceof _Map[\"default\"])) {\n        return;\n      }\n\n      unhighlightFeatures.forEach(function (feature) {\n        var key = _this.props.keyFunction(feature);\n\n        if (selectedRowKeys.includes(key)) {\n          feature.setStyle(selectStyle);\n        } else {\n          feature.setStyle(null);\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"selectFeatures\", function (features) {\n      var _this$props9 = _this.props,\n          map = _this$props9.map,\n          selectStyle = _this$props9.selectStyle;\n\n      if (!(map instanceof _Map[\"default\"])) {\n        return;\n      }\n\n      features.forEach(function (feature) {\n        return feature.setStyle(selectStyle);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"resetFeatureStyles\", function () {\n      var _this$props10 = _this.props,\n          map = _this$props10.map,\n          features = _this$props10.features;\n\n      if (!(map instanceof _Map[\"default\"])) {\n        return;\n      }\n\n      features.forEach(function (feature) {\n        return feature.setStyle(null);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSelectChange\", function (selectedRowKeys) {\n      var onRowSelectionChange = _this.props.onRowSelectionChange;\n      var selectedFeatures = selectedRowKeys.map(function (key) {\n        return _this.getFeatureFromRowKey(key);\n      });\n\n      if ((0, _isFunction[\"default\"])(onRowSelectionChange)) {\n        onRowSelectionChange(selectedRowKeys, selectedFeatures);\n      }\n\n      _this.resetFeatureStyles();\n\n      _this.selectFeatures(selectedFeatures);\n\n      _this.setState({\n        selectedRowKeys: selectedRowKeys\n      });\n    });\n\n    _this.state = {\n      selectedRowKeys: []\n    };\n    return _this;\n  }\n  /**\n   * Called on lifecycle phase componentDidMount.\n   */\n\n\n  _createClass(FeatureGrid, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props11 = this.props,\n          map = _this$props11.map,\n          features = _this$props11.features,\n          zoomToExtent = _this$props11.zoomToExtent;\n      this.initVectorLayer(map);\n      this.initMapEventHandlers(map);\n\n      if (zoomToExtent) {\n        this.zoomToFeatures(features);\n      }\n    }\n    /**\n     * Invoked immediately after updating occurs. This method is not called for\n     * the initial render.\n     *\n     * @param {Object} prevProps The previous props.\n     */\n\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this2 = this;\n\n      var _this$props12 = this.props,\n          map = _this$props12.map,\n          features = _this$props12.features,\n          selectable = _this$props12.selectable,\n          zoomToExtent = _this$props12.zoomToExtent;\n\n      if (!(0, _isEqual[\"default\"])(prevProps.map, map)) {\n        this.initVectorLayer(map);\n        this.initMapEventHandlers(map);\n      }\n\n      if (!(0, _isEqual[\"default\"])(prevProps.features, features)) {\n        if (this._source) {\n          this._source.clear();\n\n          this._source.addFeatures(features);\n        }\n\n        if (zoomToExtent) {\n          this.zoomToFeatures(features);\n        }\n      }\n\n      if (!(0, _isEqual[\"default\"])(prevProps.selectable, selectable)) {\n        if (selectable && map) {\n          map.on('singleclick', this.onMapSingleClick);\n        } else {\n          this.setState({\n            selectedRowKeys: []\n          }, function () {\n            if (map) {\n              map.un('singleclick', _this2.onMapSingleClick);\n            }\n          });\n        }\n      }\n    }\n    /**\n     * Called on lifecycle phase componentWillUnmount.\n     */\n\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.deinitVectorLayer();\n      this.deinitMapEventHandlers();\n    }\n    /**\n     * Initialized the vector layer that will be used to draw the input features\n     * on and adds it to the map (if any).\n     *\n     * @param {ol.Map} map The map to add the layer to.\n     */\n\n  }, {\n    key: \"render\",\n\n    /**\n     * The render method.\n     */\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props13 = this.props,\n          className = _this$props13.className,\n          rowClassName = _this$props13.rowClassName,\n          features = _this$props13.features,\n          map = _this$props13.map,\n          attributeBlacklist = _this$props13.attributeBlacklist,\n          onRowClick = _this$props13.onRowClick,\n          onRowMouseOver = _this$props13.onRowMouseOver,\n          onRowMouseOut = _this$props13.onRowMouseOut,\n          zoomToExtent = _this$props13.zoomToExtent,\n          selectable = _this$props13.selectable,\n          featureStyle = _this$props13.featureStyle,\n          highlightStyle = _this$props13.highlightStyle,\n          selectStyle = _this$props13.selectStyle,\n          layerName = _this$props13.layerName,\n          columnDefs = _this$props13.columnDefs,\n          children = _this$props13.children,\n          passThroughProps = _objectWithoutProperties(_this$props13, [\"className\", \"rowClassName\", \"features\", \"map\", \"attributeBlacklist\", \"onRowClick\", \"onRowMouseOver\", \"onRowMouseOut\", \"zoomToExtent\", \"selectable\", \"featureStyle\", \"highlightStyle\", \"selectStyle\", \"layerName\", \"columnDefs\", \"children\"]);\n\n      var selectedRowKeys = this.state.selectedRowKeys;\n      var rowSelection = {\n        selectedRowKeys: selectedRowKeys,\n        onChange: this.onSelectChange\n      };\n      var finalClassName = className ? \"\".concat(className, \" \").concat(this._className) : this._className;\n      var rowClassNameFn;\n\n      if ((0, _isFunction[\"default\"])(rowClassName)) {\n        rowClassNameFn = function rowClassNameFn(record) {\n          return \"\".concat(_this3._rowClassName, \" \").concat(rowClassName(record));\n        };\n      } else {\n        var finalRowClassName = rowClassName ? \"\".concat(rowClassName, \" \").concat(this._rowClassName) : this._rowClassName;\n\n        rowClassNameFn = function rowClassNameFn(record) {\n          return \"\".concat(finalRowClassName, \" \").concat(_this3._rowKeyClassNamePrefix).concat((0, _kebabCase[\"default\"])(record.key));\n        };\n      }\n\n      return _react[\"default\"].createElement(_table[\"default\"], _extends({\n        className: finalClassName,\n        columns: this.getColumnDefs(),\n        dataSource: this.getTableData(),\n        onRow: function onRow(record) {\n          return {\n            onClick: function onClick() {\n              return _this3.onRowClick(record);\n            },\n            onMouseOver: function onMouseOver() {\n              return _this3.onRowMouseOver(record);\n            },\n            onMouseOut: function onMouseOut() {\n              return _this3.onRowMouseOut(record);\n            }\n          };\n        },\n        rowClassName: rowClassNameFn,\n        rowSelection: selectable ? rowSelection : null,\n        ref: function ref(_ref) {\n          return _this3._ref = _ref;\n        }\n      }, passThroughProps), children);\n    }\n  }]);\n\n  return FeatureGrid;\n}(_react[\"default\"].Component);\n\nexports.FeatureGrid = FeatureGrid;\n\n_defineProperty(FeatureGrid, \"propTypes\", {\n  /**\n   * An optional CSS class which should be added to the table.\n   * @type {String}\n   */\n  className: _propTypes[\"default\"].string,\n\n  /**\n   * An optional CSS class to add to each table row or a function that\n   * is evaluated for each record.\n   * @type {String|Function}\n   */\n  rowClassName: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].func]),\n\n  /**\n   * The features to show in the grid and the map (if set).\n   * @type {Array}\n   */\n  features: _propTypes[\"default\"].arrayOf(_propTypes[\"default\"].instanceOf(_Feature[\"default\"])),\n\n  /**\n   * The map the features should be rendered on. If not given, the features\n   * will be rendered in the table only.\n   * @type {ol.Map}\n   */\n  map: _propTypes[\"default\"].instanceOf(_Map[\"default\"]),\n\n  /**\n   * A list of attribute names to hide in the table.\n   * @type {Array}\n   */\n  attributeBlacklist: _propTypes[\"default\"].arrayOf(_propTypes[\"default\"].string),\n\n  /**\n   * Optional callback function, that will be called on rowclick.\n   * @type {Function}\n   */\n  onRowClick: _propTypes[\"default\"].func,\n\n  /**\n   * Optional callback function, that will be called on rowmouseover.\n   * @type {Function}\n   */\n  onRowMouseOver: _propTypes[\"default\"].func,\n\n  /**\n   * Optional callback function, that will be called on rowmouseout.\n   * @type {Function}\n   */\n  onRowMouseOut: _propTypes[\"default\"].func,\n\n  /**\n   * Optional callback function, that will be called if the selection changes.\n   * @type {Function}\n   */\n  onRowSelectionChange: _propTypes[\"default\"].func,\n\n  /**\n   * Whether the map should center on the current feature's extent on init or\n   * not.\n   * @type {Boolean}\n   */\n  zoomToExtent: _propTypes[\"default\"].bool,\n\n  /**\n   * Whether rows and features should be selectable or not.\n   *\n   * @type {Boolean}\n   */\n  selectable: _propTypes[\"default\"].bool,\n\n  /**\n   * The default style to apply to the features.\n   * @type {ol.Style|ol.FeatureStyleFunction}\n   */\n  featureStyle: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].instanceOf(_Style[\"default\"]), _propTypes[\"default\"].func]),\n\n  /**\n   * The highlight style to apply to the features.\n   * @type {ol.Style|ol.FeatureStyleFunction}\n   */\n  highlightStyle: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].instanceOf(_Style[\"default\"]), _propTypes[\"default\"].func]),\n\n  /**\n   * The select style to apply to the features.\n   * @type {ol.Style|ol.FeatureStyleFunction}\n   */\n  selectStyle: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].instanceOf(_Style[\"default\"]), _propTypes[\"default\"].func]),\n\n  /**\n   * The name of the vector layer presenting the features in the grid.\n   * @type {String}\n   */\n  layerName: _propTypes[\"default\"].string,\n\n  /**\n   * Custom column definitions to apply to the given column (mapping via key).\n   * See https://ant.design/components/table/#Column.\n   * @type {Object}\n   */\n  columnDefs: _propTypes[\"default\"].object,\n\n  /**\n   * The children to render.\n   * @type {Element}\n   */\n  children: _propTypes[\"default\"].element,\n\n  /**\n   * A Function that creates the rowkey from the given feature.\n   * Receives the feature as property.\n   * Default is: feature => feature.ol_uid\n   *\n   * @type {Function}\n   */\n  keyFunction: _propTypes[\"default\"].func\n});\n\n_defineProperty(FeatureGrid, \"defaultProps\", {\n  features: [],\n  attributeBlacklist: [],\n  featureStyle: new _Style[\"default\"]({\n    fill: new _Fill[\"default\"]({\n      color: 'rgba(255, 255, 255, 0.5)'\n    }),\n    stroke: new _Stroke[\"default\"]({\n      color: 'rgba(73, 139, 170, 0.9)',\n      width: 1\n    }),\n    image: new _Circle[\"default\"]({\n      radius: 6,\n      fill: new _Fill[\"default\"]({\n        color: 'rgba(255, 255, 255, 0.5)'\n      }),\n      stroke: new _Stroke[\"default\"]({\n        color: 'rgba(73, 139, 170, 0.9)',\n        width: 1\n      })\n    })\n  }),\n  highlightStyle: new _Style[\"default\"]({\n    fill: new _Fill[\"default\"]({\n      color: 'rgba(230, 247, 255, 0.8)'\n    }),\n    stroke: new _Stroke[\"default\"]({\n      color: 'rgba(73, 139, 170, 0.9)',\n      width: 1\n    }),\n    image: new _Circle[\"default\"]({\n      radius: 6,\n      fill: new _Fill[\"default\"]({\n        color: 'rgba(230, 247, 255, 0.8)'\n      }),\n      stroke: new _Stroke[\"default\"]({\n        color: 'rgba(73, 139, 170, 0.9)',\n        width: 1\n      })\n    })\n  }),\n  selectStyle: new _Style[\"default\"]({\n    fill: new _Fill[\"default\"]({\n      color: 'rgba(230, 247, 255, 0.8)'\n    }),\n    stroke: new _Stroke[\"default\"]({\n      color: 'rgba(73, 139, 170, 0.9)',\n      width: 2\n    }),\n    image: new _Circle[\"default\"]({\n      radius: 6,\n      fill: new _Fill[\"default\"]({\n        color: 'rgba(230, 247, 255, 0.8)'\n      }),\n      stroke: new _Stroke[\"default\"]({\n        color: 'rgba(73, 139, 170, 0.9)',\n        width: 2\n      })\n    })\n  }),\n  layerName: 'react-geo-feature-grid-layer',\n  columnDefs: {},\n  keyFunction: function keyFunction(feature) {\n    return feature.ol_uid;\n  }\n  /**\n   * The constructor.\n   */\n\n});\n\nvar _default = FeatureGrid;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}