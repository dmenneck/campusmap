{"ast":null,"code":"/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.2.2\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar context_1 = require(\"../context/context\");\n\nvar gridOptionsWrapper_1 = require(\"../gridOptionsWrapper\");\n\nvar eventKeys_1 = require(\"../eventKeys\");\n\nvar eventService_1 = require(\"../eventService\");\n\nvar AnimationFrameService =\n/** @class */\nfunction () {\n  function AnimationFrameService() {\n    // create tasks are to do with row creation. for them we want to execute according to row order, so we use\n    // TaskItem so we know what index the item is for.\n    this.p1Tasks = []; // destroy tasks are to do with row removal. they are done after row creation as the user will need to see new\n    // rows first (as blank is scrolled into view), when we remove the old rows (no longer in view) is not as\n    // important.\n\n    this.p2Tasks = [];\n    this.ticking = false; // we need to know direction of scroll, to build up rows in the direction of\n    // the scroll. eg if user scrolls down, we extend the rows by building down.\n\n    this.scrollGoingDown = true;\n    this.lastScrollTop = 0;\n  }\n\n  AnimationFrameService.prototype.setScrollTop = function (scrollTop) {\n    this.scrollGoingDown = scrollTop > this.lastScrollTop;\n    this.lastScrollTop = scrollTop;\n  };\n\n  AnimationFrameService.prototype.registerGridComp = function (gridPanel) {\n    this.gridPanel = gridPanel;\n  };\n\n  AnimationFrameService.prototype.init = function () {\n    this.useAnimationFrame = !this.gridOptionsWrapper.isSuppressAnimationFrame();\n  }; // this method is for our ag-Grid sanity only - if animation frames are turned off,\n  // then no place in the code should be looking to add any work to be done in animation\n  // frames. this stops bugs - where some code is asking for a frame to be executed\n  // when it should not.\n\n\n  AnimationFrameService.prototype.verifyAnimationFrameOn = function (methodName) {\n    if (this.useAnimationFrame === false) {\n      console.warn(\"ag-Grid: AnimationFrameService.\" + methodName + \" called but animation frames are off\");\n    }\n  };\n\n  AnimationFrameService.prototype.addP1Task = function (task, index) {\n    this.verifyAnimationFrameOn('addP1Task');\n    var taskItem = {\n      task: task,\n      index: index\n    };\n    this.p1Tasks.push(taskItem);\n    this.schedule();\n  };\n\n  AnimationFrameService.prototype.addP2Task = function (task) {\n    this.verifyAnimationFrameOn('addP2Task');\n    this.p2Tasks.push(task);\n    this.schedule();\n  };\n\n  AnimationFrameService.prototype.executeFrame = function (millis) {\n    this.verifyAnimationFrameOn('executeFrame');\n\n    if (this.scrollGoingDown) {\n      this.p1Tasks.sort(function (a, b) {\n        return b.index - a.index;\n      });\n    } else {\n      this.p1Tasks.sort(function (a, b) {\n        return a.index - b.index;\n      });\n    }\n\n    var frameStart = new Date().getTime();\n    var duration = new Date().getTime() - frameStart; // 16ms is 60 fps\n\n    var noMaxMillis = millis <= 0;\n\n    while (noMaxMillis || duration < millis) {\n      var gridPanelUpdated = this.gridPanel.executeFrame();\n\n      if (!gridPanelUpdated) {\n        if (this.p1Tasks.length > 0) {\n          var taskItem = this.p1Tasks.pop();\n          taskItem.task();\n        } else if (this.p2Tasks.length > 0) {\n          var task = this.p2Tasks.pop();\n          task();\n        } else {\n          break;\n        }\n      }\n\n      duration = new Date().getTime() - frameStart;\n    }\n\n    if (this.p1Tasks.length > 0 || this.p2Tasks.length > 0) {\n      this.requestFrame();\n    } else {\n      this.stopTicking();\n    }\n  };\n\n  AnimationFrameService.prototype.stopTicking = function () {\n    this.ticking = false;\n    var event = {\n      type: eventKeys_1.Events.EVENT_ANIMATION_QUEUE_EMPTY,\n      columnApi: this.gridOptionsWrapper.getColumnApi(),\n      api: this.gridOptionsWrapper.getApi()\n    };\n    this.eventService.dispatchEvent(event);\n  };\n\n  AnimationFrameService.prototype.flushAllFrames = function () {\n    if (!this.useAnimationFrame) {\n      return;\n    }\n\n    this.executeFrame(-1);\n  };\n\n  AnimationFrameService.prototype.schedule = function () {\n    if (!this.useAnimationFrame) {\n      return;\n    }\n\n    if (!this.ticking) {\n      this.ticking = true;\n      this.requestFrame();\n    }\n  };\n\n  AnimationFrameService.prototype.requestFrame = function () {\n    // check for the existence of requestAnimationFrame, and if\n    // it's missing, then we polyfill it with setTimeout()\n    var callback = this.executeFrame.bind(this, 60);\n\n    if (window.requestAnimationFrame) {\n      window.requestAnimationFrame(callback);\n    } else if (window.webkitRequestAnimationFrame) {\n      window.webkitRequestAnimationFrame(callback);\n    } else {\n      window.setTimeout(callback, 0);\n    }\n  };\n\n  AnimationFrameService.prototype.isQueueEmpty = function () {\n    return this.ticking;\n  };\n\n  __decorate([context_1.Autowired('gridOptionsWrapper'), __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)], AnimationFrameService.prototype, \"gridOptionsWrapper\", void 0);\n\n  __decorate([context_1.Autowired('eventService'), __metadata(\"design:type\", eventService_1.EventService)], AnimationFrameService.prototype, \"eventService\", void 0);\n\n  __decorate([context_1.PostConstruct, __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", []), __metadata(\"design:returntype\", void 0)], AnimationFrameService.prototype, \"init\", null);\n\n  AnimationFrameService = __decorate([context_1.Bean('animationFrameService')], AnimationFrameService);\n  return AnimationFrameService;\n}();\n\nexports.AnimationFrameService = AnimationFrameService;","map":{"version":3,"sources":["/Users/dirkmennecke77/Desktop/Lageplan/node_modules/ag-grid-community/dist/lib/misc/animationFrameService.js"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__metadata","k","v","metadata","exports","value","context_1","require","gridOptionsWrapper_1","eventKeys_1","eventService_1","AnimationFrameService","p1Tasks","p2Tasks","ticking","scrollGoingDown","lastScrollTop","prototype","setScrollTop","scrollTop","registerGridComp","gridPanel","init","useAnimationFrame","gridOptionsWrapper","isSuppressAnimationFrame","verifyAnimationFrameOn","methodName","console","warn","addP1Task","task","index","taskItem","push","schedule","addP2Task","executeFrame","millis","sort","a","b","frameStart","Date","getTime","duration","noMaxMillis","gridPanelUpdated","pop","requestFrame","stopTicking","event","type","Events","EVENT_ANIMATION_QUEUE_EMPTY","columnApi","getColumnApi","api","getApi","eventService","dispatchEvent","flushAllFrames","callback","bind","window","requestAnimationFrame","webkitRequestAnimationFrame","setTimeout","isQueueEmpty","Autowired","GridOptionsWrapper","EventService","PostConstruct","Function","Bean"],"mappings":"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","sourcesContent":["/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.2.2\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar context_1 = require(\"../context/context\");\nvar gridOptionsWrapper_1 = require(\"../gridOptionsWrapper\");\nvar eventKeys_1 = require(\"../eventKeys\");\nvar eventService_1 = require(\"../eventService\");\nvar AnimationFrameService = /** @class */ (function () {\n    function AnimationFrameService() {\n        // create tasks are to do with row creation. for them we want to execute according to row order, so we use\n        // TaskItem so we know what index the item is for.\n        this.p1Tasks = [];\n        // destroy tasks are to do with row removal. they are done after row creation as the user will need to see new\n        // rows first (as blank is scrolled into view), when we remove the old rows (no longer in view) is not as\n        // important.\n        this.p2Tasks = [];\n        this.ticking = false;\n        // we need to know direction of scroll, to build up rows in the direction of\n        // the scroll. eg if user scrolls down, we extend the rows by building down.\n        this.scrollGoingDown = true;\n        this.lastScrollTop = 0;\n    }\n    AnimationFrameService.prototype.setScrollTop = function (scrollTop) {\n        this.scrollGoingDown = scrollTop > this.lastScrollTop;\n        this.lastScrollTop = scrollTop;\n    };\n    AnimationFrameService.prototype.registerGridComp = function (gridPanel) {\n        this.gridPanel = gridPanel;\n    };\n    AnimationFrameService.prototype.init = function () {\n        this.useAnimationFrame = !this.gridOptionsWrapper.isSuppressAnimationFrame();\n    };\n    // this method is for our ag-Grid sanity only - if animation frames are turned off,\n    // then no place in the code should be looking to add any work to be done in animation\n    // frames. this stops bugs - where some code is asking for a frame to be executed\n    // when it should not.\n    AnimationFrameService.prototype.verifyAnimationFrameOn = function (methodName) {\n        if (this.useAnimationFrame === false) {\n            console.warn(\"ag-Grid: AnimationFrameService.\" + methodName + \" called but animation frames are off\");\n        }\n    };\n    AnimationFrameService.prototype.addP1Task = function (task, index) {\n        this.verifyAnimationFrameOn('addP1Task');\n        var taskItem = { task: task, index: index };\n        this.p1Tasks.push(taskItem);\n        this.schedule();\n    };\n    AnimationFrameService.prototype.addP2Task = function (task) {\n        this.verifyAnimationFrameOn('addP2Task');\n        this.p2Tasks.push(task);\n        this.schedule();\n    };\n    AnimationFrameService.prototype.executeFrame = function (millis) {\n        this.verifyAnimationFrameOn('executeFrame');\n        if (this.scrollGoingDown) {\n            this.p1Tasks.sort(function (a, b) { return b.index - a.index; });\n        }\n        else {\n            this.p1Tasks.sort(function (a, b) { return a.index - b.index; });\n        }\n        var frameStart = new Date().getTime();\n        var duration = (new Date().getTime()) - frameStart;\n        // 16ms is 60 fps\n        var noMaxMillis = millis <= 0;\n        while (noMaxMillis || duration < millis) {\n            var gridPanelUpdated = this.gridPanel.executeFrame();\n            if (!gridPanelUpdated) {\n                if (this.p1Tasks.length > 0) {\n                    var taskItem = this.p1Tasks.pop();\n                    taskItem.task();\n                }\n                else if (this.p2Tasks.length > 0) {\n                    var task = this.p2Tasks.pop();\n                    task();\n                }\n                else {\n                    break;\n                }\n            }\n            duration = (new Date().getTime()) - frameStart;\n        }\n        if (this.p1Tasks.length > 0 || this.p2Tasks.length > 0) {\n            this.requestFrame();\n        }\n        else {\n            this.stopTicking();\n        }\n    };\n    AnimationFrameService.prototype.stopTicking = function () {\n        this.ticking = false;\n        var event = {\n            type: eventKeys_1.Events.EVENT_ANIMATION_QUEUE_EMPTY,\n            columnApi: this.gridOptionsWrapper.getColumnApi(),\n            api: this.gridOptionsWrapper.getApi()\n        };\n        this.eventService.dispatchEvent(event);\n    };\n    AnimationFrameService.prototype.flushAllFrames = function () {\n        if (!this.useAnimationFrame) {\n            return;\n        }\n        this.executeFrame(-1);\n    };\n    AnimationFrameService.prototype.schedule = function () {\n        if (!this.useAnimationFrame) {\n            return;\n        }\n        if (!this.ticking) {\n            this.ticking = true;\n            this.requestFrame();\n        }\n    };\n    AnimationFrameService.prototype.requestFrame = function () {\n        // check for the existence of requestAnimationFrame, and if\n        // it's missing, then we polyfill it with setTimeout()\n        var callback = this.executeFrame.bind(this, 60);\n        if (window.requestAnimationFrame) {\n            window.requestAnimationFrame(callback);\n        }\n        else if (window.webkitRequestAnimationFrame) {\n            window.webkitRequestAnimationFrame(callback);\n        }\n        else {\n            window.setTimeout(callback, 0);\n        }\n    };\n    AnimationFrameService.prototype.isQueueEmpty = function () {\n        return this.ticking;\n    };\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], AnimationFrameService.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_1.Autowired('eventService'),\n        __metadata(\"design:type\", eventService_1.EventService)\n    ], AnimationFrameService.prototype, \"eventService\", void 0);\n    __decorate([\n        context_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], AnimationFrameService.prototype, \"init\", null);\n    AnimationFrameService = __decorate([\n        context_1.Bean('animationFrameService')\n    ], AnimationFrameService);\n    return AnimationFrameService;\n}());\nexports.AnimationFrameService = AnimationFrameService;\n"]},"metadata":{},"sourceType":"script"}