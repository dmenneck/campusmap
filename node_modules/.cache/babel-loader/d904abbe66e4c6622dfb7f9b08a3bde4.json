{"ast":null,"code":"/**\n * @module ol/format/filter/GreaterThanOrEqualTo\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n * @api\n */\n\nvar GreaterThanOrEqualTo =\n/*@__PURE__*/\nfunction (ComparisonBinary) {\n  function GreaterThanOrEqualTo(propertyName, expression) {\n    ComparisonBinary.call(this, 'PropertyIsGreaterThanOrEqualTo', propertyName, expression);\n  }\n\n  if (ComparisonBinary) GreaterThanOrEqualTo.__proto__ = ComparisonBinary;\n  GreaterThanOrEqualTo.prototype = Object.create(ComparisonBinary && ComparisonBinary.prototype);\n  GreaterThanOrEqualTo.prototype.constructor = GreaterThanOrEqualTo;\n  return GreaterThanOrEqualTo;\n}(ComparisonBinary);\n\nexport default GreaterThanOrEqualTo;","map":{"version":3,"sources":["../../../../src/ol/format/filter/GreaterThanOrEqualTo.js"],"names":["super"],"mappings":"AAAA;;;AAGA,OAAO,gBAAP,MAA6B,uBAA7B;;;;;;;AAOA,IAAM,oBAAoB;AAAyB;AAAA,UAAA,gBAAA,EAAA;AAMjD,WAAA,oBAAA,CAAY,YAAZ,EAA0B,UAA1B,EAAsC;AACpCA,IAAAA,gBAAAA,CAAAA,IAAAA,CAAK,IAALA,EAAM,gCAANA,EAAwC,YAAxCA,EAAsD,UAAtDA;;;;;AACD,EAAA,oBAAA,CAAA,SAAA,CAAA,WAAA,GAAA,oBAAA;;CARgD,CAAhB,gBAAgB,CAAnD;;AAYA,eAAe,oBAAf","sourcesContent":["/**\n * @module ol/format/filter/GreaterThanOrEqualTo\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n * @api\n */\nclass GreaterThanOrEqualTo extends ComparisonBinary {\n\n  /**\n   * @param {!string} propertyName Name of the context property to compare.\n   * @param {!number} expression The value to compare.\n   */\n  constructor(propertyName, expression) {\n    super('PropertyIsGreaterThanOrEqualTo', propertyName, expression);\n  }\n\n}\n\nexport default GreaterThanOrEqualTo;\n"]},"metadata":{},"sourceType":"module"}