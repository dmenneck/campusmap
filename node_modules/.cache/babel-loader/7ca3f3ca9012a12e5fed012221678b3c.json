{"ast":null,"code":"/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.2.2\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar component_1 = require(\"../widgets/component\");\n\nvar context_1 = require(\"../context/context\");\n\nvar rowNode_1 = require(\"../entities/rowNode\");\n\nvar dragAndDropService_1 = require(\"../dragAndDrop/dragAndDropService\");\n\nvar eventKeys_1 = require(\"../eventKeys\");\n\nvar beanStub_1 = require(\"../context/beanStub\");\n\nvar utils_1 = require(\"../utils\");\n\nvar RowDragComp =\n/** @class */\nfunction (_super) {\n  __extends(RowDragComp, _super);\n\n  function RowDragComp(rowNode, column, cellValue, beans) {\n    var _this = _super.call(this, \"<div class=\\\"ag-row-drag\\\"></div>\") || this;\n\n    _this.rowNode = rowNode;\n    _this.column = column;\n    _this.cellValue = cellValue;\n    _this.beans = beans;\n    return _this;\n  }\n\n  RowDragComp.prototype.postConstruct = function () {\n    var eGui = this.getGui();\n    eGui.appendChild(utils_1._.createIconNoSpan('rowDrag', this.beans.gridOptionsWrapper, null));\n    this.addDragSource();\n    this.checkCompatibility();\n\n    if (this.beans.gridOptionsWrapper.isRowDragManaged()) {\n      this.addFeature(this.beans.context, new ManagedVisibilityStrategy(this, this.beans, this.rowNode, this.column));\n    } else {\n      this.addFeature(this.beans.context, new NonManagedVisibilityStrategy(this, this.beans, this.rowNode, this.column));\n    }\n  }; // returns true if all compatibility items work out\n\n\n  RowDragComp.prototype.checkCompatibility = function () {\n    var managed = this.beans.gridOptionsWrapper.isRowDragManaged();\n    var treeData = this.beans.gridOptionsWrapper.isTreeData();\n\n    if (treeData && managed) {\n      utils_1._.doOnce(function () {\n        return console.warn('ag-Grid: If using row drag with tree data, you cannot have rowDragManaged=true');\n      }, 'RowDragComp.managedAndTreeData');\n    }\n  };\n\n  RowDragComp.prototype.addDragSource = function () {\n    var _this = this;\n\n    var dragItem = {\n      rowNode: this.rowNode\n    };\n    var dragSource = {\n      type: dragAndDropService_1.DragSourceType.RowDrag,\n      eElement: this.getGui(),\n      dragItemName: this.cellValue,\n      dragItemCallback: function () {\n        return dragItem;\n      },\n      dragStartPixels: 0\n    };\n    this.beans.dragAndDropService.addDragSource(dragSource, true);\n    this.addDestroyFunc(function () {\n      return _this.beans.dragAndDropService.removeDragSource(dragSource);\n    });\n  };\n\n  __decorate([context_1.PostConstruct, __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", []), __metadata(\"design:returntype\", void 0)], RowDragComp.prototype, \"postConstruct\", null);\n\n  return RowDragComp;\n}(component_1.Component);\n\nexports.RowDragComp = RowDragComp;\n\nvar VisibilityStrategy =\n/** @class */\nfunction (_super) {\n  __extends(VisibilityStrategy, _super);\n\n  function VisibilityStrategy(parent, rowNode, column) {\n    var _this = _super.call(this) || this;\n\n    _this.parent = parent;\n    _this.column = column;\n    _this.rowNode = rowNode;\n    return _this;\n  }\n\n  VisibilityStrategy.prototype.setDisplayedOrVisible = function (neverDisplayed) {\n    if (neverDisplayed) {\n      this.parent.setDisplayed(false);\n    } else {\n      var shown = this.column.isRowDrag(this.rowNode);\n\n      var isShownSometimes = utils_1._.isFunction(this.column.getColDef().rowDrag); // if shown sometimes, them some rows can have drag handle while other don't,\n      // so we use setVisible to keep the handles horizontally aligned (as setVisible\n      // keeps the empty space, whereas setDisplayed looses the space)\n\n\n      if (isShownSometimes) {\n        this.parent.setVisible(shown);\n      } else {\n        this.parent.setDisplayed(shown);\n      }\n    }\n  };\n\n  return VisibilityStrategy;\n}(beanStub_1.BeanStub); // when non managed, the visibility depends on suppressRowDrag property only\n\n\nvar NonManagedVisibilityStrategy =\n/** @class */\nfunction (_super) {\n  __extends(NonManagedVisibilityStrategy, _super);\n\n  function NonManagedVisibilityStrategy(parent, beans, rowNode, column) {\n    var _this = _super.call(this, parent, rowNode, column) || this;\n\n    _this.beans = beans;\n    return _this;\n  }\n\n  NonManagedVisibilityStrategy.prototype.postConstruct = function () {\n    this.addDestroyableEventListener(this.beans.gridOptionsWrapper, 'suppressRowDrag', this.onSuppressRowDrag.bind(this)); // in case data changes, then we need to update visibility of drag item\n\n    this.addDestroyableEventListener(this.rowNode, rowNode_1.RowNode.EVENT_DATA_CHANGED, this.workOutVisibility.bind(this));\n    this.addDestroyableEventListener(this.rowNode, rowNode_1.RowNode.EVENT_CELL_CHANGED, this.workOutVisibility.bind(this));\n    this.workOutVisibility();\n  };\n\n  NonManagedVisibilityStrategy.prototype.onSuppressRowDrag = function () {\n    this.workOutVisibility();\n  };\n\n  NonManagedVisibilityStrategy.prototype.workOutVisibility = function () {\n    // only show the drag if both sort and filter are not present\n    var neverDisplayed = this.beans.gridOptionsWrapper.isSuppressRowDrag();\n    this.setDisplayedOrVisible(neverDisplayed);\n  };\n\n  __decorate([context_1.PostConstruct, __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", []), __metadata(\"design:returntype\", void 0)], NonManagedVisibilityStrategy.prototype, \"postConstruct\", null);\n\n  return NonManagedVisibilityStrategy;\n}(VisibilityStrategy); // when managed, the visibility depends on sort, filter and row group, as well as suppressRowDrag property\n\n\nvar ManagedVisibilityStrategy =\n/** @class */\nfunction (_super) {\n  __extends(ManagedVisibilityStrategy, _super);\n\n  function ManagedVisibilityStrategy(parent, beans, rowNode, column) {\n    var _this = _super.call(this, parent, rowNode, column) || this;\n\n    _this.beans = beans;\n    return _this;\n  }\n\n  ManagedVisibilityStrategy.prototype.postConstruct = function () {\n    // we do not show the component if sort, filter or grouping is active\n    this.addDestroyableEventListener(this.beans.eventService, eventKeys_1.Events.EVENT_SORT_CHANGED, this.onSortChanged.bind(this));\n    this.addDestroyableEventListener(this.beans.eventService, eventKeys_1.Events.EVENT_FILTER_CHANGED, this.onFilterChanged.bind(this));\n    this.addDestroyableEventListener(this.beans.eventService, eventKeys_1.Events.EVENT_COLUMN_ROW_GROUP_CHANGED, this.onRowGroupChanged.bind(this)); // in case data changes, then we need to update visibility of drag item\n\n    this.addDestroyableEventListener(this.rowNode, rowNode_1.RowNode.EVENT_DATA_CHANGED, this.workOutVisibility.bind(this));\n    this.addDestroyableEventListener(this.rowNode, rowNode_1.RowNode.EVENT_CELL_CHANGED, this.workOutVisibility.bind(this));\n    this.addDestroyableEventListener(this.beans.gridOptionsWrapper, 'suppressRowDrag', this.onSuppressRowDrag.bind(this));\n    this.updateSortActive();\n    this.updateFilterActive();\n    this.updateRowGroupActive();\n    this.workOutVisibility();\n  };\n\n  ManagedVisibilityStrategy.prototype.updateRowGroupActive = function () {\n    var rowGroups = this.beans.columnController.getRowGroupColumns();\n    this.rowGroupActive = !utils_1._.missingOrEmpty(rowGroups);\n  };\n\n  ManagedVisibilityStrategy.prototype.onRowGroupChanged = function () {\n    this.updateRowGroupActive();\n    this.workOutVisibility();\n  };\n\n  ManagedVisibilityStrategy.prototype.updateSortActive = function () {\n    var sortModel = this.beans.sortController.getSortModel();\n    this.sortActive = !utils_1._.missingOrEmpty(sortModel);\n  };\n\n  ManagedVisibilityStrategy.prototype.onSortChanged = function () {\n    this.updateSortActive();\n    this.workOutVisibility();\n  };\n\n  ManagedVisibilityStrategy.prototype.updateFilterActive = function () {\n    this.filterActive = this.beans.filterManager.isAnyFilterPresent();\n  };\n\n  ManagedVisibilityStrategy.prototype.onFilterChanged = function () {\n    this.updateFilterActive();\n    this.workOutVisibility();\n  };\n\n  ManagedVisibilityStrategy.prototype.onSuppressRowDrag = function () {\n    this.workOutVisibility();\n  };\n\n  ManagedVisibilityStrategy.prototype.workOutVisibility = function () {\n    // only show the drag if both sort and filter are not present\n    var sortOrFilterOrGroupActive = this.sortActive || this.filterActive || this.rowGroupActive;\n    var suppressRowDrag = this.beans.gridOptionsWrapper.isSuppressRowDrag();\n    var neverDisplayed = sortOrFilterOrGroupActive || suppressRowDrag;\n    this.setDisplayedOrVisible(neverDisplayed);\n  };\n\n  __decorate([context_1.PostConstruct, __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", []), __metadata(\"design:returntype\", void 0)], ManagedVisibilityStrategy.prototype, \"postConstruct\", null);\n\n  return ManagedVisibilityStrategy;\n}(VisibilityStrategy);","map":{"version":3,"sources":["/Users/dirkmennecke77/Desktop/Lageplan/node_modules/ag-grid-community/dist/lib/rendering/rowDragComp.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","k","v","metadata","exports","value","component_1","require","context_1","rowNode_1","dragAndDropService_1","eventKeys_1","beanStub_1","utils_1","RowDragComp","_super","rowNode","column","cellValue","beans","_this","call","postConstruct","eGui","getGui","appendChild","_","createIconNoSpan","gridOptionsWrapper","addDragSource","checkCompatibility","isRowDragManaged","addFeature","context","ManagedVisibilityStrategy","NonManagedVisibilityStrategy","managed","treeData","isTreeData","doOnce","console","warn","dragItem","dragSource","type","DragSourceType","RowDrag","eElement","dragItemName","dragItemCallback","dragStartPixels","dragAndDropService","addDestroyFunc","removeDragSource","PostConstruct","Function","Component","VisibilityStrategy","parent","setDisplayedOrVisible","neverDisplayed","setDisplayed","shown","isRowDrag","isShownSometimes","isFunction","getColDef","rowDrag","setVisible","BeanStub","addDestroyableEventListener","onSuppressRowDrag","bind","RowNode","EVENT_DATA_CHANGED","workOutVisibility","EVENT_CELL_CHANGED","isSuppressRowDrag","eventService","Events","EVENT_SORT_CHANGED","onSortChanged","EVENT_FILTER_CHANGED","onFilterChanged","EVENT_COLUMN_ROW_GROUP_CHANGED","onRowGroupChanged","updateSortActive","updateFilterActive","updateRowGroupActive","rowGroups","columnController","getRowGroupColumns","rowGroupActive","missingOrEmpty","sortModel","sortController","getSortModel","sortActive","filterActive","filterManager","isAnyFilterPresent","sortOrFilterOrGroupActive","suppressRowDrag"],"mappings":"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","sourcesContent":["/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.2.2\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar component_1 = require(\"../widgets/component\");\nvar context_1 = require(\"../context/context\");\nvar rowNode_1 = require(\"../entities/rowNode\");\nvar dragAndDropService_1 = require(\"../dragAndDrop/dragAndDropService\");\nvar eventKeys_1 = require(\"../eventKeys\");\nvar beanStub_1 = require(\"../context/beanStub\");\nvar utils_1 = require(\"../utils\");\nvar RowDragComp = /** @class */ (function (_super) {\n    __extends(RowDragComp, _super);\n    function RowDragComp(rowNode, column, cellValue, beans) {\n        var _this = _super.call(this, \"<div class=\\\"ag-row-drag\\\"></div>\") || this;\n        _this.rowNode = rowNode;\n        _this.column = column;\n        _this.cellValue = cellValue;\n        _this.beans = beans;\n        return _this;\n    }\n    RowDragComp.prototype.postConstruct = function () {\n        var eGui = this.getGui();\n        eGui.appendChild(utils_1._.createIconNoSpan('rowDrag', this.beans.gridOptionsWrapper, null));\n        this.addDragSource();\n        this.checkCompatibility();\n        if (this.beans.gridOptionsWrapper.isRowDragManaged()) {\n            this.addFeature(this.beans.context, new ManagedVisibilityStrategy(this, this.beans, this.rowNode, this.column));\n        }\n        else {\n            this.addFeature(this.beans.context, new NonManagedVisibilityStrategy(this, this.beans, this.rowNode, this.column));\n        }\n    };\n    // returns true if all compatibility items work out\n    RowDragComp.prototype.checkCompatibility = function () {\n        var managed = this.beans.gridOptionsWrapper.isRowDragManaged();\n        var treeData = this.beans.gridOptionsWrapper.isTreeData();\n        if (treeData && managed) {\n            utils_1._.doOnce(function () {\n                return console.warn('ag-Grid: If using row drag with tree data, you cannot have rowDragManaged=true');\n            }, 'RowDragComp.managedAndTreeData');\n        }\n    };\n    RowDragComp.prototype.addDragSource = function () {\n        var _this = this;\n        var dragItem = {\n            rowNode: this.rowNode\n        };\n        var dragSource = {\n            type: dragAndDropService_1.DragSourceType.RowDrag,\n            eElement: this.getGui(),\n            dragItemName: this.cellValue,\n            dragItemCallback: function () { return dragItem; },\n            dragStartPixels: 0\n        };\n        this.beans.dragAndDropService.addDragSource(dragSource, true);\n        this.addDestroyFunc(function () { return _this.beans.dragAndDropService.removeDragSource(dragSource); });\n    };\n    __decorate([\n        context_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], RowDragComp.prototype, \"postConstruct\", null);\n    return RowDragComp;\n}(component_1.Component));\nexports.RowDragComp = RowDragComp;\nvar VisibilityStrategy = /** @class */ (function (_super) {\n    __extends(VisibilityStrategy, _super);\n    function VisibilityStrategy(parent, rowNode, column) {\n        var _this = _super.call(this) || this;\n        _this.parent = parent;\n        _this.column = column;\n        _this.rowNode = rowNode;\n        return _this;\n    }\n    VisibilityStrategy.prototype.setDisplayedOrVisible = function (neverDisplayed) {\n        if (neverDisplayed) {\n            this.parent.setDisplayed(false);\n        }\n        else {\n            var shown = this.column.isRowDrag(this.rowNode);\n            var isShownSometimes = utils_1._.isFunction(this.column.getColDef().rowDrag);\n            // if shown sometimes, them some rows can have drag handle while other don't,\n            // so we use setVisible to keep the handles horizontally aligned (as setVisible\n            // keeps the empty space, whereas setDisplayed looses the space)\n            if (isShownSometimes) {\n                this.parent.setVisible(shown);\n            }\n            else {\n                this.parent.setDisplayed(shown);\n            }\n        }\n    };\n    return VisibilityStrategy;\n}(beanStub_1.BeanStub));\n// when non managed, the visibility depends on suppressRowDrag property only\nvar NonManagedVisibilityStrategy = /** @class */ (function (_super) {\n    __extends(NonManagedVisibilityStrategy, _super);\n    function NonManagedVisibilityStrategy(parent, beans, rowNode, column) {\n        var _this = _super.call(this, parent, rowNode, column) || this;\n        _this.beans = beans;\n        return _this;\n    }\n    NonManagedVisibilityStrategy.prototype.postConstruct = function () {\n        this.addDestroyableEventListener(this.beans.gridOptionsWrapper, 'suppressRowDrag', this.onSuppressRowDrag.bind(this));\n        // in case data changes, then we need to update visibility of drag item\n        this.addDestroyableEventListener(this.rowNode, rowNode_1.RowNode.EVENT_DATA_CHANGED, this.workOutVisibility.bind(this));\n        this.addDestroyableEventListener(this.rowNode, rowNode_1.RowNode.EVENT_CELL_CHANGED, this.workOutVisibility.bind(this));\n        this.workOutVisibility();\n    };\n    NonManagedVisibilityStrategy.prototype.onSuppressRowDrag = function () {\n        this.workOutVisibility();\n    };\n    NonManagedVisibilityStrategy.prototype.workOutVisibility = function () {\n        // only show the drag if both sort and filter are not present\n        var neverDisplayed = this.beans.gridOptionsWrapper.isSuppressRowDrag();\n        this.setDisplayedOrVisible(neverDisplayed);\n    };\n    __decorate([\n        context_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], NonManagedVisibilityStrategy.prototype, \"postConstruct\", null);\n    return NonManagedVisibilityStrategy;\n}(VisibilityStrategy));\n// when managed, the visibility depends on sort, filter and row group, as well as suppressRowDrag property\nvar ManagedVisibilityStrategy = /** @class */ (function (_super) {\n    __extends(ManagedVisibilityStrategy, _super);\n    function ManagedVisibilityStrategy(parent, beans, rowNode, column) {\n        var _this = _super.call(this, parent, rowNode, column) || this;\n        _this.beans = beans;\n        return _this;\n    }\n    ManagedVisibilityStrategy.prototype.postConstruct = function () {\n        // we do not show the component if sort, filter or grouping is active\n        this.addDestroyableEventListener(this.beans.eventService, eventKeys_1.Events.EVENT_SORT_CHANGED, this.onSortChanged.bind(this));\n        this.addDestroyableEventListener(this.beans.eventService, eventKeys_1.Events.EVENT_FILTER_CHANGED, this.onFilterChanged.bind(this));\n        this.addDestroyableEventListener(this.beans.eventService, eventKeys_1.Events.EVENT_COLUMN_ROW_GROUP_CHANGED, this.onRowGroupChanged.bind(this));\n        // in case data changes, then we need to update visibility of drag item\n        this.addDestroyableEventListener(this.rowNode, rowNode_1.RowNode.EVENT_DATA_CHANGED, this.workOutVisibility.bind(this));\n        this.addDestroyableEventListener(this.rowNode, rowNode_1.RowNode.EVENT_CELL_CHANGED, this.workOutVisibility.bind(this));\n        this.addDestroyableEventListener(this.beans.gridOptionsWrapper, 'suppressRowDrag', this.onSuppressRowDrag.bind(this));\n        this.updateSortActive();\n        this.updateFilterActive();\n        this.updateRowGroupActive();\n        this.workOutVisibility();\n    };\n    ManagedVisibilityStrategy.prototype.updateRowGroupActive = function () {\n        var rowGroups = this.beans.columnController.getRowGroupColumns();\n        this.rowGroupActive = !utils_1._.missingOrEmpty(rowGroups);\n    };\n    ManagedVisibilityStrategy.prototype.onRowGroupChanged = function () {\n        this.updateRowGroupActive();\n        this.workOutVisibility();\n    };\n    ManagedVisibilityStrategy.prototype.updateSortActive = function () {\n        var sortModel = this.beans.sortController.getSortModel();\n        this.sortActive = !utils_1._.missingOrEmpty(sortModel);\n    };\n    ManagedVisibilityStrategy.prototype.onSortChanged = function () {\n        this.updateSortActive();\n        this.workOutVisibility();\n    };\n    ManagedVisibilityStrategy.prototype.updateFilterActive = function () {\n        this.filterActive = this.beans.filterManager.isAnyFilterPresent();\n    };\n    ManagedVisibilityStrategy.prototype.onFilterChanged = function () {\n        this.updateFilterActive();\n        this.workOutVisibility();\n    };\n    ManagedVisibilityStrategy.prototype.onSuppressRowDrag = function () {\n        this.workOutVisibility();\n    };\n    ManagedVisibilityStrategy.prototype.workOutVisibility = function () {\n        // only show the drag if both sort and filter are not present\n        var sortOrFilterOrGroupActive = this.sortActive || this.filterActive || this.rowGroupActive;\n        var suppressRowDrag = this.beans.gridOptionsWrapper.isSuppressRowDrag();\n        var neverDisplayed = sortOrFilterOrGroupActive || suppressRowDrag;\n        this.setDisplayedOrVisible(neverDisplayed);\n    };\n    __decorate([\n        context_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], ManagedVisibilityStrategy.prototype, \"postConstruct\", null);\n    return ManagedVisibilityStrategy;\n}(VisibilityStrategy));\n"]},"metadata":{},"sourceType":"script"}