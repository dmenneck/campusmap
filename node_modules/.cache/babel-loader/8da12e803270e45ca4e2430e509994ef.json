{"ast":null,"code":"require('text-encoding-polyfill');\n\nvar StringDecoder = require('string_decoder').StringDecoder;\n\nfunction defaultDecoder(data) {\n  var decoder = new StringDecoder();\n  var out = decoder.write(data) + decoder.end();\n  return out.replace(/\\0/g, '').trim();\n}\n\nmodule.exports = createDecoder;\nvar regex = /^(?:ASNI\\s)?(\\d+)$/m;\n\nfunction createDecoder(encoding) {\n  if (!encoding) {\n    return defaultDecoder;\n  }\n\n  try {\n    new TextDecoder(encoding.trim());\n  } catch (e) {\n    var match = regex.exec(encoding);\n\n    if (match) {\n      encoding = 'windows-' + match[1];\n    }\n  }\n\n  return browserDecoder;\n\n  function browserDecoder(buffer) {\n    var decoder = new TextDecoder(encoding);\n    var out = decoder.decode(buffer, {\n      stream: true\n    }) + decoder.decode();\n    return out.replace(/\\0/g, '').trim();\n  }\n}","map":{"version":3,"sources":["/Users/dirkmennecke77/Desktop/Lageplan/node_modules/parsedbf/decoder-browser.js"],"names":["require","StringDecoder","defaultDecoder","data","decoder","out","write","end","replace","trim","module","exports","createDecoder","regex","encoding","TextDecoder","e","match","exec","browserDecoder","buffer","decode","stream"],"mappings":"AAAAA,OAAO,CAAC,wBAAD,CAAP;;AACA,IAAIC,aAAa,GAAGD,OAAO,CAAC,gBAAD,CAAP,CAA0BC,aAA9C;;AACA,SAASC,cAAT,CAAwBC,IAAxB,EAA8B;AAC5B,MAAIC,OAAO,GAAG,IAAIH,aAAJ,EAAd;AACA,MAAII,GAAG,GAAGD,OAAO,CAACE,KAAR,CAAcH,IAAd,IAAsBC,OAAO,CAACG,GAAR,EAAhC;AACA,SAAOF,GAAG,CAACG,OAAJ,CAAY,KAAZ,EAAmB,EAAnB,EAAuBC,IAAvB,EAAP;AACD;;AACDC,MAAM,CAACC,OAAP,GAAiBC,aAAjB;AACA,IAAIC,KAAK,GAAG,qBAAZ;;AACA,SAASD,aAAT,CAAuBE,QAAvB,EAAiC;AAC/B,MAAI,CAACA,QAAL,EAAe;AACb,WAAOZ,cAAP;AACD;;AACD,MAAI;AACF,QAAIa,WAAJ,CAAgBD,QAAQ,CAACL,IAAT,EAAhB;AACD,GAFD,CAEE,OAAMO,CAAN,EAAS;AACT,QAAIC,KAAK,GAAGJ,KAAK,CAACK,IAAN,CAAWJ,QAAX,CAAZ;;AACA,QAAIG,KAAJ,EAAW;AACTH,MAAAA,QAAQ,GAAG,aAAaG,KAAK,CAAC,CAAD,CAA7B;AACD;AACF;;AACD,SAAOE,cAAP;;AACA,WAASA,cAAT,CAAwBC,MAAxB,EAAgC;AAC9B,QAAIhB,OAAO,GAAG,IAAIW,WAAJ,CAAgBD,QAAhB,CAAd;AACA,QAAIT,GAAG,GAAGD,OAAO,CAACiB,MAAR,CAAeD,MAAf,EAAuB;AAC/BE,MAAAA,MAAM,EAAE;AADuB,KAAvB,IAELlB,OAAO,CAACiB,MAAR,EAFL;AAGA,WAAOhB,GAAG,CAACG,OAAJ,CAAY,KAAZ,EAAmB,EAAnB,EAAuBC,IAAvB,EAAP;AACD;AACF","sourcesContent":["require('text-encoding-polyfill');\nvar StringDecoder = require('string_decoder').StringDecoder;\nfunction defaultDecoder(data) {\n  var decoder = new StringDecoder();\n  var out = decoder.write(data) + decoder.end();\n  return out.replace(/\\0/g, '').trim();\n}\nmodule.exports = createDecoder;\nvar regex = /^(?:ASNI\\s)?(\\d+)$/m;\nfunction createDecoder(encoding) {\n  if (!encoding) {\n    return defaultDecoder;\n  }\n  try {\n    new TextDecoder(encoding.trim());\n  } catch(e) {\n    var match = regex.exec(encoding);\n    if (match) {\n      encoding = 'windows-' + match[1];\n    }\n  }\n  return browserDecoder;\n  function browserDecoder(buffer) {\n    var decoder = new TextDecoder(encoding);\n    var out = decoder.decode(buffer, {\n      stream: true\n    }) + decoder.decode();\n    return out.replace(/\\0/g, '').trim();\n  }\n}\n"]},"metadata":{},"sourceType":"script"}