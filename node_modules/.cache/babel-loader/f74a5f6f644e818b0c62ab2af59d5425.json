{"ast":null,"code":"'use strict';\n\nvar base64 = require('./base64');\n\nvar utf8 = require('./utf8');\n\nvar utils = require('./utils');\n\nvar ZipEntries = require('./zipEntries');\n\nmodule.exports = function (data, options) {\n  var files, zipEntries, i, input;\n  options = utils.extend(options || {}, {\n    base64: false,\n    checkCRC32: false,\n    optimizedBinaryString: false,\n    createFolders: false,\n    decodeFileName: utf8.utf8decode\n  });\n\n  if (options.base64) {\n    data = base64.decode(data);\n  }\n\n  zipEntries = new ZipEntries(data, options);\n  files = zipEntries.files;\n\n  for (i = 0; i < files.length; i++) {\n    input = files[i];\n    this.file(input.fileNameStr, input.decompressed, {\n      binary: true,\n      optimizedBinaryString: true,\n      date: input.date,\n      dir: input.dir,\n      comment: input.fileCommentStr.length ? input.fileCommentStr : null,\n      unixPermissions: input.unixPermissions,\n      dosPermissions: input.dosPermissions,\n      createFolders: options.createFolders\n    });\n  }\n\n  if (zipEntries.zipComment.length) {\n    this.comment = zipEntries.zipComment;\n  }\n\n  return this;\n};","map":{"version":3,"sources":["/Users/dirkmennecke77/Desktop/Lageplan/node_modules/jszip/lib/load.js"],"names":["base64","require","utf8","utils","ZipEntries","module","exports","data","options","files","zipEntries","i","input","extend","checkCRC32","optimizedBinaryString","createFolders","decodeFileName","utf8decode","decode","length","file","fileNameStr","decompressed","binary","date","dir","comment","fileCommentStr","unixPermissions","dosPermissions","zipComment"],"mappings":"AAAA;;AACA,IAAIA,MAAM,GAAGC,OAAO,CAAC,UAAD,CAApB;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,QAAD,CAAlB;;AACA,IAAIE,KAAK,GAAGF,OAAO,CAAC,SAAD,CAAnB;;AACA,IAAIG,UAAU,GAAGH,OAAO,CAAC,cAAD,CAAxB;;AACAI,MAAM,CAACC,OAAP,GAAiB,UAASC,IAAT,EAAeC,OAAf,EAAwB;AACrC,MAAIC,KAAJ,EAAWC,UAAX,EAAuBC,CAAvB,EAA0BC,KAA1B;AACAJ,EAAAA,OAAO,GAAGL,KAAK,CAACU,MAAN,CAAaL,OAAO,IAAI,EAAxB,EAA4B;AAClCR,IAAAA,MAAM,EAAE,KAD0B;AAElCc,IAAAA,UAAU,EAAE,KAFsB;AAGlCC,IAAAA,qBAAqB,EAAG,KAHU;AAIlCC,IAAAA,aAAa,EAAE,KAJmB;AAKlCC,IAAAA,cAAc,EAAEf,IAAI,CAACgB;AALa,GAA5B,CAAV;;AAOA,MAAIV,OAAO,CAACR,MAAZ,EAAoB;AAChBO,IAAAA,IAAI,GAAGP,MAAM,CAACmB,MAAP,CAAcZ,IAAd,CAAP;AACH;;AAEDG,EAAAA,UAAU,GAAG,IAAIN,UAAJ,CAAeG,IAAf,EAAqBC,OAArB,CAAb;AACAC,EAAAA,KAAK,GAAGC,UAAU,CAACD,KAAnB;;AACA,OAAKE,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGF,KAAK,CAACW,MAAtB,EAA8BT,CAAC,EAA/B,EAAmC;AAC/BC,IAAAA,KAAK,GAAGH,KAAK,CAACE,CAAD,CAAb;AACA,SAAKU,IAAL,CAAUT,KAAK,CAACU,WAAhB,EAA6BV,KAAK,CAACW,YAAnC,EAAiD;AAC7CC,MAAAA,MAAM,EAAE,IADqC;AAE7CT,MAAAA,qBAAqB,EAAE,IAFsB;AAG7CU,MAAAA,IAAI,EAAEb,KAAK,CAACa,IAHiC;AAI7CC,MAAAA,GAAG,EAAEd,KAAK,CAACc,GAJkC;AAK7CC,MAAAA,OAAO,EAAGf,KAAK,CAACgB,cAAN,CAAqBR,MAArB,GAA8BR,KAAK,CAACgB,cAApC,GAAqD,IALlB;AAM7CC,MAAAA,eAAe,EAAGjB,KAAK,CAACiB,eANqB;AAO7CC,MAAAA,cAAc,EAAGlB,KAAK,CAACkB,cAPsB;AAQ7Cd,MAAAA,aAAa,EAAER,OAAO,CAACQ;AARsB,KAAjD;AAUH;;AACD,MAAIN,UAAU,CAACqB,UAAX,CAAsBX,MAA1B,EAAkC;AAC9B,SAAKO,OAAL,GAAejB,UAAU,CAACqB,UAA1B;AACH;;AAED,SAAO,IAAP;AACH,CAjCD","sourcesContent":["'use strict';\nvar base64 = require('./base64');\nvar utf8 = require('./utf8');\nvar utils = require('./utils');\nvar ZipEntries = require('./zipEntries');\nmodule.exports = function(data, options) {\n    var files, zipEntries, i, input;\n    options = utils.extend(options || {}, {\n        base64: false,\n        checkCRC32: false,\n        optimizedBinaryString : false,\n        createFolders: false,\n        decodeFileName: utf8.utf8decode\n    });\n    if (options.base64) {\n        data = base64.decode(data);\n    }\n\n    zipEntries = new ZipEntries(data, options);\n    files = zipEntries.files;\n    for (i = 0; i < files.length; i++) {\n        input = files[i];\n        this.file(input.fileNameStr, input.decompressed, {\n            binary: true,\n            optimizedBinaryString: true,\n            date: input.date,\n            dir: input.dir,\n            comment : input.fileCommentStr.length ? input.fileCommentStr : null,\n            unixPermissions : input.unixPermissions,\n            dosPermissions : input.dosPermissions,\n            createFolders: options.createFolders\n        });\n    }\n    if (zipEntries.zipComment.length) {\n        this.comment = zipEntries.zipComment;\n    }\n\n    return this;\n};\n"]},"metadata":{},"sourceType":"script"}