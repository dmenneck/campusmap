{"ast":null,"code":"'use strict';\n\nfunction isClockWise(array) {\n  var sum = 0;\n  var i = 1;\n  var len = array.length;\n  var prev, cur;\n\n  while (i < len) {\n    prev = cur || array[0];\n    cur = array[i];\n    sum += (cur[0] - prev[0]) * (cur[1] + prev[1]);\n    i++;\n  }\n\n  return sum > 0;\n}\n\nfunction polyReduce(a, b) {\n  if (isClockWise(b) || !a.length) {\n    a.push([b]);\n  } else {\n    a[a.length - 1].push(b);\n  }\n\n  return a;\n}\n\nParseShp.prototype.parsePoint = function (data) {\n  return {\n    'type': 'Point',\n    'coordinates': this.parseCoord(data, 0)\n  };\n};\n\nParseShp.prototype.parseZPoint = function (data) {\n  var pointXY = this.parsePoint(data);\n  pointXY.coordinates.push(data.readDoubleLE(16));\n  return pointXY;\n};\n\nParseShp.prototype.parsePointArray = function (data, offset, num) {\n  var out = [];\n  var done = 0;\n\n  while (done < num) {\n    out.push(this.parseCoord(data, offset));\n    offset += 16;\n    done++;\n  }\n\n  return out;\n};\n\nParseShp.prototype.parseZPointArray = function (data, zOffset, num, coordinates) {\n  var i = 0;\n\n  while (i < num) {\n    coordinates[i].push(data.readDoubleLE(zOffset));\n    i++;\n    zOffset += 8;\n  }\n\n  return coordinates;\n};\n\nParseShp.prototype.parseArrayGroup = function (data, offset, partOffset, num, tot) {\n  var out = [];\n  var done = 0;\n  var curNum,\n      nextNum = 0,\n      pointNumber;\n\n  while (done < num) {\n    done++;\n    partOffset += 4;\n    curNum = nextNum;\n\n    if (done === num) {\n      nextNum = tot;\n    } else {\n      nextNum = data.readInt32LE(partOffset);\n    }\n\n    pointNumber = nextNum - curNum;\n\n    if (!pointNumber) {\n      continue;\n    }\n\n    out.push(this.parsePointArray(data, offset, pointNumber));\n    offset += pointNumber << 4;\n  }\n\n  return out;\n};\n\nParseShp.prototype.parseZArrayGroup = function (data, zOffset, num, coordinates) {\n  var i = 0;\n\n  while (i < num) {\n    coordinates[i] = this.parseZPointArray(data, zOffset, coordinates[i].length, coordinates[i]);\n    zOffset += coordinates[i].length << 3;\n    i++;\n  }\n\n  return coordinates;\n};\n\nParseShp.prototype.parseMultiPoint = function (data) {\n  var out = {};\n  var mins = this.parseCoord(data, 0);\n  var maxs = this.parseCoord(data, 16);\n  out.bbox = [mins[0], mins[1], maxs[0], maxs[1]];\n  var num = data.readInt32LE(32, true);\n  var offset = 36;\n\n  if (num === 1) {\n    out.type = 'Point';\n    out.coordinates = this.parseCoord(data, offset);\n  } else {\n    out.type = 'MultiPoint';\n    out.coordinates = this.parsePointArray(data, offset, num);\n  }\n\n  return out;\n};\n\nParseShp.prototype.parseZMultiPoint = function (data) {\n  var geoJson = this.parseMultiPoint(data);\n  var num;\n\n  if (geoJson.type === 'Point') {\n    geoJson.coordinates.push(data.readDoubleLE(72));\n    return geoJson;\n  } else {\n    num = geoJson.coordinates.length;\n  }\n\n  var zOffset = 52 + (num << 4);\n  geoJson.coordinates = this.parseZPointArray(data, zOffset, num, geoJson.coordinates);\n  return geoJson;\n};\n\nParseShp.prototype.parsePolyline = function (data) {\n  var out = {};\n  var mins = this.parseCoord(data, 0);\n  var maxs = this.parseCoord(data, 16);\n  out.bbox = [mins[0], mins[1], maxs[0], maxs[1]];\n  var numParts = data.readInt32LE(32);\n  var num = data.readInt32LE(36);\n  var offset, partOffset;\n\n  if (numParts === 1) {\n    out.type = 'LineString';\n    offset = 44;\n    out.coordinates = this.parsePointArray(data, offset, num);\n  } else {\n    out.type = 'MultiLineString';\n    offset = 40 + (numParts << 2);\n    partOffset = 40;\n    out.coordinates = this.parseArrayGroup(data, offset, partOffset, numParts, num);\n  }\n\n  return out;\n};\n\nParseShp.prototype.parseZPolyline = function (data) {\n  var geoJson = this.parsePolyline(data);\n  var num = geoJson.coordinates.length;\n  var zOffset;\n\n  if (geoJson.type === 'LineString') {\n    zOffset = 60 + (num << 4);\n    geoJson.coordinates = this.parseZPointArray(data, zOffset, num, geoJson.coordinates);\n    return geoJson;\n  } else {\n    var totalPoints = geoJson.coordinates.reduce(function (a, v) {\n      return a + v.length;\n    }, 0);\n    zOffset = 56 + (totalPoints << 4) + (num << 2);\n    geoJson.coordinates = this.parseZArrayGroup(data, zOffset, num, geoJson.coordinates);\n    return geoJson;\n  }\n};\n\nParseShp.prototype.polyFuncs = function (out) {\n  if (out.type === 'LineString') {\n    out.type = 'Polygon';\n    out.coordinates = [out.coordinates];\n    return out;\n  } else {\n    out.coordinates = out.coordinates.reduce(polyReduce, []);\n\n    if (out.coordinates.length === 1) {\n      out.type = 'Polygon';\n      out.coordinates = out.coordinates[0];\n      return out;\n    } else {\n      out.type = 'MultiPolygon';\n      return out;\n    }\n  }\n};\n\nParseShp.prototype.parsePolygon = function (data) {\n  return this.polyFuncs(this.parsePolyline(data));\n};\n\nParseShp.prototype.parseZPolygon = function (data) {\n  return this.polyFuncs(this.parseZPolyline(data));\n};\n\nvar shpFuncObj = {\n  1: 'parsePoint',\n  3: 'parsePolyline',\n  5: 'parsePolygon',\n  8: 'parseMultiPoint',\n  11: 'parseZPoint',\n  13: 'parseZPolyline',\n  15: 'parseZPolygon',\n  18: 'parseZMultiPoint'\n};\n\nfunction makeParseCoord(trans) {\n  if (trans) {\n    return function (data, offset) {\n      return trans.inverse([data.readDoubleLE(offset), data.readDoubleLE(offset + 8)]);\n    };\n  } else {\n    return function (data, offset) {\n      return [data.readDoubleLE(offset), data.readDoubleLE(offset + 8)];\n    };\n  }\n}\n\nfunction ParseShp(buffer, trans) {\n  if (!(this instanceof ParseShp)) {\n    return new ParseShp(buffer, trans);\n  }\n\n  this.buffer = buffer;\n  this.shpFuncs(trans);\n  this.rows = this.getRows();\n}\n\nParseShp.prototype.shpFuncs = function (tran) {\n  var num = this.getShpCode();\n\n  if (num > 20) {\n    num -= 20;\n  }\n\n  if (!(num in shpFuncObj)) {\n    throw new Error('I don\\'t know that shp type');\n  }\n\n  this.parseFunc = this[shpFuncObj[num]];\n  this.parseCoord = makeParseCoord(tran);\n};\n\nParseShp.prototype.getShpCode = function () {\n  return this.parseHeader().shpCode;\n};\n\nParseShp.prototype.parseHeader = function () {\n  var view = this.buffer.slice(0, 100);\n  return {\n    length: view.readInt32BE(6 << 2),\n    version: view.readInt32LE(7 << 2),\n    shpCode: view.readInt32LE(8 << 2),\n    bbox: [view.readDoubleLE(9 << 2), view.readDoubleLE(11 << 2), view.readDoubleLE(13 << 2), view.readDoubleLE(13 << 2)]\n  };\n};\n\nParseShp.prototype.getRows = function () {\n  var offset = 100;\n  var len = this.buffer.byteLength;\n  var out = [];\n  var current;\n\n  while (offset < len) {\n    current = this.getRow(offset);\n    offset += 8;\n    offset += current.len;\n\n    if (current.type) {\n      out.push(this.parseFunc(current.data));\n    }\n  }\n\n  return out;\n};\n\nParseShp.prototype.getRow = function (offset) {\n  var view = this.buffer.slice(offset, offset + 12);\n  var len = view.readInt32BE(4) << 1;\n  var data = this.buffer.slice(offset + 12, offset + len + 8);\n  return {\n    id: view.readInt32BE(0),\n    len: len,\n    data: data,\n    type: view.readInt32LE(8)\n  };\n};\n\nmodule.exports = function (buffer, trans) {\n  return new ParseShp(buffer, trans).rows;\n};","map":{"version":3,"sources":["/Users/dirkmennecke77/Desktop/Lageplan/node_modules/shpjs/lib/parseShp.js"],"names":["isClockWise","array","sum","i","len","length","prev","cur","polyReduce","a","b","push","ParseShp","prototype","parsePoint","data","parseCoord","parseZPoint","pointXY","coordinates","readDoubleLE","parsePointArray","offset","num","out","done","parseZPointArray","zOffset","parseArrayGroup","partOffset","tot","curNum","nextNum","pointNumber","readInt32LE","parseZArrayGroup","parseMultiPoint","mins","maxs","bbox","type","parseZMultiPoint","geoJson","parsePolyline","numParts","parseZPolyline","totalPoints","reduce","v","polyFuncs","parsePolygon","parseZPolygon","shpFuncObj","makeParseCoord","trans","inverse","buffer","shpFuncs","rows","getRows","tran","getShpCode","Error","parseFunc","parseHeader","shpCode","view","slice","readInt32BE","version","byteLength","current","getRow","id","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nfunction isClockWise(array) {\n  var sum = 0;\n  var i = 1;\n  var len = array.length;\n  var prev, cur;\n  while (i < len) {\n    prev = cur || array[0];\n    cur = array[i];\n    sum += ((cur[0] - prev[0]) * (cur[1] + prev[1]));\n    i++;\n  }\n  return sum > 0;\n}\n\nfunction polyReduce(a, b) {\n  if (isClockWise(b) || !a.length) {\n    a.push([b]);\n  } else {\n    a[a.length - 1].push(b);\n  }\n  return a;\n}\nParseShp.prototype.parsePoint = function(data) {\n  return {\n    'type': 'Point',\n    'coordinates': this.parseCoord(data, 0)\n  };\n};\nParseShp.prototype.parseZPoint = function(data) {\n  var pointXY = this.parsePoint(data);\n  pointXY.coordinates.push(data.readDoubleLE(16));\n  return pointXY;\n};\nParseShp.prototype.parsePointArray = function(data, offset, num) {\n  var out = [];\n  var done = 0;\n  while (done < num) {\n    out.push(this.parseCoord(data, offset));\n    offset += 16;\n    done++;\n  }\n  return out;\n};\nParseShp.prototype.parseZPointArray = function(data, zOffset, num, coordinates) {\n  var i = 0;\n  while (i < num) {\n    coordinates[i].push(data.readDoubleLE(zOffset));\n    i++;\n    zOffset += 8;\n  }\n  return coordinates;\n};\nParseShp.prototype.parseArrayGroup = function(data, offset, partOffset, num, tot) {\n  var out = [];\n  var done = 0;\n  var curNum, nextNum = 0,\n    pointNumber;\n  while (done < num) {\n    done++;\n    partOffset += 4;\n    curNum = nextNum;\n    if (done === num) {\n      nextNum = tot;\n    } else {\n      nextNum = data.readInt32LE(partOffset);\n    }\n    pointNumber = nextNum - curNum;\n    if (!pointNumber) {\n      continue;\n    }\n    out.push(this.parsePointArray(data, offset, pointNumber));\n    offset += (pointNumber << 4);\n  }\n  return out;\n};\nParseShp.prototype.parseZArrayGroup = function(data, zOffset, num, coordinates) {\n  var i = 0;\n  while (i < num) {\n    coordinates[i] = this.parseZPointArray(data, zOffset, coordinates[i].length, coordinates[i]);\n    zOffset += (coordinates[i].length << 3);\n    i++;\n  }\n  return coordinates;\n};\nParseShp.prototype.parseMultiPoint = function(data) {\n  var out = {};\n  var mins = this.parseCoord(data, 0);\n  var maxs = this.parseCoord(data, 16);\n  out.bbox = [\n    mins[0],\n    mins[1],\n    maxs[0],\n    maxs[1]\n  ];\n  var num = data.readInt32LE(32, true);\n  var offset = 36;\n  if (num === 1) {\n    out.type = 'Point';\n    out.coordinates = this.parseCoord(data, offset);\n  } else {\n    out.type = 'MultiPoint';\n    out.coordinates = this.parsePointArray(data, offset, num);\n  }\n  return out;\n};\nParseShp.prototype.parseZMultiPoint = function(data) {\n  var geoJson = this.parseMultiPoint(data);\n  var num;\n  if (geoJson.type === 'Point') {\n    geoJson.coordinates.push(data.readDoubleLE(72));\n    return geoJson;\n  } else {\n    num = geoJson.coordinates.length;\n  }\n  var zOffset = 52 + (num << 4);\n  geoJson.coordinates = this.parseZPointArray(data, zOffset, num, geoJson.coordinates);\n  return geoJson;\n};\nParseShp.prototype.parsePolyline = function(data) {\n  var out = {};\n  var mins = this.parseCoord(data, 0);\n  var maxs = this.parseCoord(data, 16);\n  out.bbox = [\n    mins[0],\n    mins[1],\n    maxs[0],\n    maxs[1]\n  ];\n  var numParts = data.readInt32LE(32);\n  var num = data.readInt32LE(36);\n  var offset, partOffset;\n  if (numParts === 1) {\n    out.type = 'LineString';\n    offset = 44;\n    out.coordinates = this.parsePointArray(data, offset, num);\n  } else {\n    out.type = 'MultiLineString';\n    offset = 40 + (numParts << 2);\n    partOffset = 40;\n    out.coordinates = this.parseArrayGroup(data, offset, partOffset, numParts, num);\n  }\n  return out;\n};\nParseShp.prototype.parseZPolyline = function(data) {\n  var geoJson = this.parsePolyline(data);\n  var num = geoJson.coordinates.length;\n  var zOffset;\n  if (geoJson.type === 'LineString') {\n    zOffset = 60 + (num << 4);\n    geoJson.coordinates = this.parseZPointArray(data, zOffset, num, geoJson.coordinates);\n    return geoJson;\n  } else {\n    var totalPoints = geoJson.coordinates.reduce(function(a, v) {\n      return a + v.length;\n    }, 0);\n    zOffset = 56 + (totalPoints << 4) + (num << 2);\n    geoJson.coordinates = this.parseZArrayGroup(data, zOffset, num, geoJson.coordinates);\n    return geoJson;\n  }\n};\nParseShp.prototype.polyFuncs = function(out) {\n  if (out.type === 'LineString') {\n    out.type = 'Polygon';\n    out.coordinates = [out.coordinates];\n    return out;\n  } else {\n    out.coordinates = out.coordinates.reduce(polyReduce, []);\n    if (out.coordinates.length === 1) {\n      out.type = 'Polygon';\n      out.coordinates = out.coordinates[0];\n      return out;\n    } else {\n      out.type = 'MultiPolygon';\n      return out;\n    }\n  }\n};\nParseShp.prototype.parsePolygon = function(data) {\n  return this.polyFuncs(this.parsePolyline(data));\n};\nParseShp.prototype.parseZPolygon = function(data) {\n  return this.polyFuncs(this.parseZPolyline(data));\n};\nvar shpFuncObj = {\n  1: 'parsePoint',\n  3: 'parsePolyline',\n  5: 'parsePolygon',\n  8: 'parseMultiPoint',\n  11: 'parseZPoint',\n  13: 'parseZPolyline',\n  15: 'parseZPolygon',\n  18: 'parseZMultiPoint'\n};\n\n\n\nfunction makeParseCoord(trans) {\n  if (trans) {\n    return function(data, offset) {\n      return trans.inverse([data.readDoubleLE(offset), data.readDoubleLE(offset + 8)]);\n    };\n  } else {\n    return function(data, offset) {\n      return [data.readDoubleLE(offset), data.readDoubleLE(offset + 8)];\n    };\n  }\n}\n\nfunction ParseShp(buffer, trans) {\n  if (!(this instanceof ParseShp)) {\n    return new ParseShp(buffer, trans);\n  }\n  this.buffer = buffer;\n  this.shpFuncs(trans);\n  this.rows = this.getRows();\n}\nParseShp.prototype.shpFuncs = function(tran) {\n  var num = this.getShpCode();\n  if (num > 20) {\n    num -= 20;\n  }\n  if (!(num in shpFuncObj)) {\n    throw new Error('I don\\'t know that shp type');\n  }\n  this.parseFunc = this[shpFuncObj[num]];\n  this.parseCoord = makeParseCoord(tran);\n};\nParseShp.prototype.getShpCode = function() {\n  return this.parseHeader().shpCode;\n};\nParseShp.prototype.parseHeader = function() {\n  var view = this.buffer.slice(0, 100);\n  return {\n    length: view.readInt32BE(6 << 2),\n    version: view.readInt32LE(7 << 2),\n    shpCode: view.readInt32LE(8 << 2),\n    bbox: [\n      view.readDoubleLE(9 << 2),\n      view.readDoubleLE(11 << 2),\n      view.readDoubleLE(13 << 2),\n      view.readDoubleLE(13 << 2)\n    ]\n  };\n};\nParseShp.prototype.getRows = function() {\n  var offset = 100;\n  var len = this.buffer.byteLength;\n  var out = [];\n  var current;\n  while (offset < len) {\n    current = this.getRow(offset);\n    offset += 8;\n    offset += current.len;\n    if (current.type) {\n      out.push(this.parseFunc(current.data));\n    }\n  }\n  return out;\n};\nParseShp.prototype.getRow = function(offset) {\n  var view = this.buffer.slice(offset, offset + 12);\n  var len = view.readInt32BE(4) << 1;\n  var data = this.buffer.slice(offset + 12, offset + len + 8);\n\n  return {\n    id: view.readInt32BE(0),\n    len: len,\n    data: data,\n    type: view.readInt32LE(8)\n  };\n};\nmodule.exports = function(buffer, trans) {\n  return new ParseShp(buffer, trans).rows;\n};\n"]},"metadata":{},"sourceType":"script"}