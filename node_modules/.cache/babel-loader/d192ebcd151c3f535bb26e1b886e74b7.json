{"ast":null,"code":"/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (var i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n\n  return offset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\n\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    var coordinate = coordinates[i];\n\n    for (var j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n\n  return offset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_ends Ends.\n * @return {Array<number>} Ends.\n */\n\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n  var ends = opt_ends ? opt_ends : [];\n  var i = 0;\n\n  for (var j = 0, jj = coordinatess.length; j < jj; ++j) {\n    var end = deflateCoordinates(flatCoordinates, offset, coordinatess[j], stride);\n    ends[i++] = end;\n    offset = end;\n  }\n\n  ends.length = i;\n  return ends;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>=} opt_endss Endss.\n * @return {Array<Array<number>>} Endss.\n */\n\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n  var endss = opt_endss ? opt_endss : [];\n  var i = 0;\n\n  for (var j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    var ends = deflateCoordinatesArray(flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n\n  endss.length = i;\n  return endss;\n}","map":{"version":3,"sources":["../../../../src/ol/geom/flat/deflate.js"],"names":["let","const"],"mappings":"AAAA;;;;;;;;;;;AAYA,OAAO,SAAS,iBAAT,CAA2B,eAA3B,EAA4C,MAA5C,EAAoD,UAApD,EAAgE,MAAhE,EAAwE;AAC7E,OAAKA,IAAI,CAAC,GAAG,CAARA,EAAW,EAAE,GAAG,UAAU,CAAC,MAAhC,EAAwC,CAAC,GAAG,EAA5C,EAAgD,EAAE,CAAlD,EAAqD;AACnD,IAAA,eAAe,CAAC,MAAM,EAAP,CAAf,GAA4B,UAAU,CAAC,CAAD,CAAtC;AACD;;AACD,SAAO,MAAP;AACD;;;;;;;;;AAUD,OAAO,SAAS,kBAAT,CAA4B,eAA5B,EAA6C,MAA7C,EAAqD,WAArD,EAAkE,MAAlE,EAA0E;AAC/E,OAAKA,IAAI,CAAC,GAAG,CAARA,EAAW,EAAE,GAAG,WAAW,CAAC,MAAjC,EAAyC,CAAC,GAAG,EAA7C,EAAiD,EAAE,CAAnD,EAAsD;AACpDC,QAAM,UAAU,GAAG,WAAW,CAAC,CAAD,CAA9BA;;AACA,SAAKD,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,MAApB,EAA4B,EAAE,CAA9B,EAAiC;AAC/B,MAAA,eAAe,CAAC,MAAM,EAAP,CAAf,GAA4B,UAAU,CAAC,CAAD,CAAtC;AACD;AACF;;AACD,SAAO,MAAP;AACD;;;;;;;;;;AAWD,OAAO,SAAS,uBAAT,CAAiC,eAAjC,EAAkD,MAAlD,EAA0D,YAA1D,EAAwE,MAAxE,EAAgF,QAAhF,EAA0F;AAC/FC,MAAM,IAAI,GAAG,QAAQ,GAAG,QAAH,GAAc,EAAnCA;AACAD,MAAI,CAAC,GAAG,CAARA;;AACA,OAAKA,IAAI,CAAC,GAAG,CAARA,EAAW,EAAE,GAAG,YAAY,CAAC,MAAlC,EAA0C,CAAC,GAAG,EAA9C,EAAkD,EAAE,CAApD,EAAuD;AACrDC,QAAM,GAAG,GAAG,kBAAkB,CAC5B,eAD4B,EACX,MADW,EACH,YAAY,CAAC,CAAD,CADT,EACc,MADd,CAA9BA;AAEA,IAAA,IAAI,CAAC,CAAC,EAAF,CAAJ,GAAY,GAAZ;AACA,IAAA,MAAM,GAAG,GAAT;AACD;;AACD,EAAA,IAAI,CAAC,MAAL,GAAc,CAAd;AACA,SAAO,IAAP;AACD;;;;;;;;;;AAWD,OAAO,SAAS,4BAAT,CAAsC,eAAtC,EAAuD,MAAvD,EAA+D,aAA/D,EAA8E,MAA9E,EAAsF,SAAtF,EAAiG;AACtGA,MAAM,KAAK,GAAG,SAAS,GAAG,SAAH,GAAe,EAAtCA;AACAD,MAAI,CAAC,GAAG,CAARA;;AACA,OAAKA,IAAI,CAAC,GAAG,CAARA,EAAW,EAAE,GAAG,aAAa,CAAC,MAAnC,EAA2C,CAAC,GAAG,EAA/C,EAAmD,EAAE,CAArD,EAAwD;AACtDC,QAAM,IAAI,GAAG,uBAAuB,CAClC,eADkC,EACjB,MADiB,EACT,aAAa,CAAC,CAAD,CADJ,EACS,MADT,EACiB,KAAK,CAAC,CAAD,CADtB,CAApCA;AAEA,IAAA,KAAK,CAAC,CAAC,EAAF,CAAL,GAAa,IAAb;AACA,IAAA,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,MAAL,GAAc,CAAf,CAAb;AACD;;AACD,EAAA,KAAK,CAAC,MAAN,GAAe,CAAf;AACA,SAAO,KAAP;AACD","sourcesContent":["/**\n * @module ol/geom/flat/deflate\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_ends Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n  const ends = opt_ends ? opt_ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates, offset, coordinatess[j], stride);\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>=} opt_endss Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n  const endss = opt_endss ? opt_endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n"]},"metadata":{},"sourceType":"module"}