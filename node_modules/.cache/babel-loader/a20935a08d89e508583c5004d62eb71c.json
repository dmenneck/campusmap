{"ast":null,"code":"/**\n * @module ol/format/KML\n */\nimport Feature from '../Feature.js';\nimport { extend, includes } from '../array.js';\nimport { assert } from '../asserts.js';\nimport { asArray } from '../color.js';\nimport { transformWithOptions } from './Feature.js';\nimport XMLFeature from './XMLFeature.js';\nimport { readDecimal, readBoolean, readString, writeStringTextNode, writeCDATASection, writeDecimalTextNode, writeBooleanTextNode } from './xsd.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport { toRadians } from '../math.js';\nimport { get as getProjection } from '../proj.js';\nimport Fill from '../style/Fill.js';\nimport Icon from '../style/Icon.js';\nimport IconAnchorUnits from '../style/IconAnchorUnits.js';\nimport IconOrigin from '../style/IconOrigin.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport { createElementNS, getAllTextContent, isDocument, makeArrayExtender, makeArrayPusher, makeChildAppender, makeObjectPropertySetter, makeReplacer, makeSequence, makeSimpleNodeFactory, makeStructureNS, OBJECT_PROPERTY_NODE_FACTORY, parse, parseNode, pushParseAndPop, pushSerializeAndPop, XML_SCHEMA_INSTANCE_URI } from '../xml.js';\n/**\n * @typedef {Object} Vec2\n * @property {number} x\n * @property {IconAnchorUnits} xunits\n * @property {number} y\n * @property {IconAnchorUnits} yunits\n * @property {IconOrigin} origin\n */\n\n/**\n * @typedef {Object} GxTrackObject\n * @property {Array<number>} flatCoordinates\n * @property {Array<number>} whens\n */\n\n/**\n * @const\n * @type {Array<string>}\n */\n\nvar GX_NAMESPACE_URIS = ['http://www.google.com/kml/ext/2.2'];\n/**\n * @const\n * @type {Array<null|string>}\n */\n\nvar NAMESPACE_URIS = [null, 'http://earth.google.com/kml/2.0', 'http://earth.google.com/kml/2.1', 'http://earth.google.com/kml/2.2', 'http://www.opengis.net/kml/2.2'];\n/**\n * @const\n * @type {string}\n */\n\nvar SCHEMA_LOCATION = 'http://www.opengis.net/kml/2.2 ' + 'https://developers.google.com/kml/schema/kml22gx.xsd';\n/**\n * @type {Object<string, IconAnchorUnits>}\n */\n\nvar ICON_ANCHOR_UNITS_MAP = {\n  'fraction': IconAnchorUnits.FRACTION,\n  'pixels': IconAnchorUnits.PIXELS,\n  'insetPixels': IconAnchorUnits.PIXELS\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n\nvar PLACEMARK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ExtendedData': extendedDataParser,\n  'Region': regionParser,\n  'MultiGeometry': makeObjectPropertySetter(readMultiGeometry, 'geometry'),\n  'LineString': makeObjectPropertySetter(readLineString, 'geometry'),\n  'LinearRing': makeObjectPropertySetter(readLinearRing, 'geometry'),\n  'Point': makeObjectPropertySetter(readPoint, 'geometry'),\n  'Polygon': makeObjectPropertySetter(readPolygon, 'geometry'),\n  'Style': makeObjectPropertySetter(readStyle),\n  'StyleMap': placemarkStyleMapParser,\n  'address': makeObjectPropertySetter(readString),\n  'description': makeObjectPropertySetter(readString),\n  'name': makeObjectPropertySetter(readString),\n  'open': makeObjectPropertySetter(readBoolean),\n  'phoneNumber': makeObjectPropertySetter(readString),\n  'styleUrl': makeObjectPropertySetter(readURI),\n  'visibility': makeObjectPropertySetter(readBoolean)\n}, makeStructureNS(GX_NAMESPACE_URIS, {\n  'MultiTrack': makeObjectPropertySetter(readGxMultiTrack, 'geometry'),\n  'Track': makeObjectPropertySetter(readGxTrack, 'geometry')\n}));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n\nvar NETWORK_LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ExtendedData': extendedDataParser,\n  'Region': regionParser,\n  'Link': linkParser,\n  'address': makeObjectPropertySetter(readString),\n  'description': makeObjectPropertySetter(readString),\n  'name': makeObjectPropertySetter(readString),\n  'open': makeObjectPropertySetter(readBoolean),\n  'phoneNumber': makeObjectPropertySetter(readString),\n  'visibility': makeObjectPropertySetter(readBoolean)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n\nvar LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'href': makeObjectPropertySetter(readURI)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n\nvar REGION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LatLonAltBox': latLonAltBoxParser,\n  'Lod': lodParser\n});\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n\nvar KML_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['Document', 'Placemark']);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n\nvar KML_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Document': makeChildAppender(writeDocument),\n  'Placemark': makeChildAppender(writePlacemark)\n});\n/**\n * @type {import(\"../color.js\").Color}\n */\n\nvar DEFAULT_COLOR;\n/**\n * @type {Fill}\n */\n\nvar DEFAULT_FILL_STYLE = null;\n/**\n * Get the default fill style (or null if not yet set).\n * @return {Fill} The default fill style.\n */\n\nexport function getDefaultFillStyle() {\n  return DEFAULT_FILL_STYLE;\n}\n/**\n * @type {import(\"../size.js\").Size}\n */\n\nvar DEFAULT_IMAGE_STYLE_ANCHOR;\n/**\n * @type {IconAnchorUnits}\n */\n\nvar DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n/**\n * @type {IconAnchorUnits}\n */\n\nvar DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n/**\n * @type {import(\"../size.js\").Size}\n */\n\nvar DEFAULT_IMAGE_STYLE_SIZE;\n/**\n * @type {string}\n */\n\nvar DEFAULT_IMAGE_STYLE_SRC;\n/**\n * @type {number}\n */\n\nvar DEFAULT_IMAGE_SCALE_MULTIPLIER;\n/**\n * @type {import(\"../style/Image.js\").default}\n */\n\nvar DEFAULT_IMAGE_STYLE = null;\n/**\n * Get the default image style (or null if not yet set).\n * @return {import(\"../style/Image.js\").default} The default image style.\n */\n\nexport function getDefaultImageStyle() {\n  return DEFAULT_IMAGE_STYLE;\n}\n/**\n * @type {string}\n */\n\nvar DEFAULT_NO_IMAGE_STYLE;\n/**\n * @type {Stroke}\n */\n\nvar DEFAULT_STROKE_STYLE = null;\n/**\n * Get the default stroke style (or null if not yet set).\n * @return {Stroke} The default stroke style.\n */\n\nexport function getDefaultStrokeStyle() {\n  return DEFAULT_STROKE_STYLE;\n}\n/**\n * @type {Stroke}\n */\n\nvar DEFAULT_TEXT_STROKE_STYLE;\n/**\n * @type {Text}\n */\n\nvar DEFAULT_TEXT_STYLE = null;\n/**\n * Get the default text style (or null if not yet set).\n * @return {Text} The default text style.\n */\n\nexport function getDefaultTextStyle() {\n  return DEFAULT_TEXT_STYLE;\n}\n/**\n * @type {Style}\n */\n\nvar DEFAULT_STYLE = null;\n/**\n * Get the default style (or null if not yet set).\n * @return {Style} The default style.\n */\n\nexport function getDefaultStyle() {\n  return DEFAULT_STYLE;\n}\n/**\n * @type {Array<Style>}\n */\n\nvar DEFAULT_STYLE_ARRAY = null;\n/**\n * Get the default style array (or null if not yet set).\n * @return {Array<Style>} The default style.\n */\n\nexport function getDefaultStyleArray() {\n  return DEFAULT_STYLE_ARRAY;\n}\n\nfunction createStyleDefaults() {\n  DEFAULT_COLOR = [255, 255, 255, 1];\n  DEFAULT_FILL_STYLE = new Fill({\n    color: DEFAULT_COLOR\n  });\n  DEFAULT_IMAGE_STYLE_ANCHOR = [20, 2]; // FIXME maybe [8, 32] ?\n\n  DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS = IconAnchorUnits.PIXELS;\n  DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS = IconAnchorUnits.PIXELS;\n  DEFAULT_IMAGE_STYLE_SIZE = [64, 64];\n  DEFAULT_IMAGE_STYLE_SRC = 'https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png';\n  DEFAULT_IMAGE_SCALE_MULTIPLIER = 0.5;\n  DEFAULT_IMAGE_STYLE = new Icon({\n    anchor: DEFAULT_IMAGE_STYLE_ANCHOR,\n    anchorOrigin: IconOrigin.BOTTOM_LEFT,\n    anchorXUnits: DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS,\n    anchorYUnits: DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS,\n    crossOrigin: 'anonymous',\n    rotation: 0,\n    scale: DEFAULT_IMAGE_SCALE_MULTIPLIER,\n    size: DEFAULT_IMAGE_STYLE_SIZE,\n    src: DEFAULT_IMAGE_STYLE_SRC\n  });\n  DEFAULT_NO_IMAGE_STYLE = 'NO_IMAGE';\n  DEFAULT_STROKE_STYLE = new Stroke({\n    color: DEFAULT_COLOR,\n    width: 1\n  });\n  DEFAULT_TEXT_STROKE_STYLE = new Stroke({\n    color: [51, 51, 51, 1],\n    width: 2\n  });\n  DEFAULT_TEXT_STYLE = new Text({\n    font: 'bold 16px Helvetica',\n    fill: DEFAULT_FILL_STYLE,\n    stroke: DEFAULT_TEXT_STROKE_STYLE,\n    scale: 0.8\n  });\n  DEFAULT_STYLE = new Style({\n    fill: DEFAULT_FILL_STYLE,\n    image: DEFAULT_IMAGE_STYLE,\n    text: DEFAULT_TEXT_STYLE,\n    stroke: DEFAULT_STROKE_STYLE,\n    zIndex: 0\n  });\n  DEFAULT_STYLE_ARRAY = [DEFAULT_STYLE];\n}\n/**\n * @typedef {Object} Options\n * @property {boolean} [extractStyles=true] Extract styles from the KML.\n * @property {boolean} [showPointNames=true] Show names as labels for placemarks which contain points.\n * @property {Array<Style>} [defaultStyle] Default style. The\n * default default style is the same as Google Earth.\n * @property {boolean} [writeStyles=true] Write styles into KML.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the KML format.\n *\n * {@link module:ol/format/KML~KML#readFeature} will read the first feature from\n * a KML source.\n *\n * MultiGeometries are converted into GeometryCollections if they are a mix of\n * geometry types, and into MultiPoint/MultiLineString/MultiPolygon if they are\n * all of the same type.\n *\n * Note that the KML format uses the URL() constructor. Older browsers such as IE\n * which do not support this will need a URL polyfill to be loaded before use.\n *\n * @api\n */\n\n\nvar KML =\n/*@__PURE__*/\nfunction (XMLFeature) {\n  function KML(opt_options) {\n    XMLFeature.call(this);\n    var options = opt_options ? opt_options : {};\n\n    if (!DEFAULT_STYLE_ARRAY) {\n      createStyleDefaults();\n    }\n    /**\n     * @inheritDoc\n     */\n\n\n    this.dataProjection = getProjection('EPSG:4326');\n    /**\n     * @private\n     * @type {Array<Style>}\n     */\n\n    this.defaultStyle_ = options.defaultStyle ? options.defaultStyle : DEFAULT_STYLE_ARRAY;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this.extractStyles_ = options.extractStyles !== undefined ? options.extractStyles : true;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this.writeStyles_ = options.writeStyles !== undefined ? options.writeStyles : true;\n    /**\n     * @private\n     * @type {!Object<string, (Array<Style>|string)>}\n     */\n\n    this.sharedStyles_ = {};\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this.showPointNames_ = options.showPointNames !== undefined ? options.showPointNames : true;\n  }\n\n  if (XMLFeature) KML.__proto__ = XMLFeature;\n  KML.prototype = Object.create(XMLFeature && XMLFeature.prototype);\n  KML.prototype.constructor = KML;\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<Feature>|undefined} Features.\n   */\n\n  KML.prototype.readDocumentOrFolder_ = function readDocumentOrFolder_(node, objectStack) {\n    // FIXME use scope somehow\n    var parsersNS = makeStructureNS(NAMESPACE_URIS, {\n      'Document': makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Folder': makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Placemark': makeArrayPusher(this.readPlacemark_, this),\n      'Style': this.readSharedStyle_.bind(this),\n      'StyleMap': this.readSharedStyleMap_.bind(this)\n    });\n    /** @type {Array<Feature>} */\n\n    var features = pushParseAndPop([], parsersNS, node, objectStack, this);\n\n    if (features) {\n      return features;\n    } else {\n      return undefined;\n    }\n  };\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Feature|undefined} Feature.\n   */\n\n\n  KML.prototype.readPlacemark_ = function readPlacemark_(node, objectStack) {\n    var object = pushParseAndPop({\n      'geometry': null\n    }, PLACEMARK_PARSERS, node, objectStack);\n\n    if (!object) {\n      return undefined;\n    }\n\n    var feature = new Feature();\n    var id = node.getAttribute('id');\n\n    if (id !== null) {\n      feature.setId(id);\n    }\n\n    var options =\n    /** @type {import(\"./Feature.js\").ReadOptions} */\n    objectStack[0];\n    var geometry = object['geometry'];\n\n    if (geometry) {\n      transformWithOptions(geometry, false, options);\n    }\n\n    feature.setGeometry(geometry);\n    delete object['geometry'];\n\n    if (this.extractStyles_) {\n      var style = object['Style'];\n      var styleUrl = object['styleUrl'];\n      var styleFunction = createFeatureStyleFunction(style, styleUrl, this.defaultStyle_, this.sharedStyles_, this.showPointNames_);\n      feature.setStyle(styleFunction);\n    }\n\n    delete object['Style']; // we do not remove the styleUrl property from the object, so it\n    // gets stored on feature when setProperties is called\n\n    feature.setProperties(object);\n    return feature;\n  };\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n\n\n  KML.prototype.readSharedStyle_ = function readSharedStyle_(node, objectStack) {\n    var id = node.getAttribute('id');\n\n    if (id !== null) {\n      var style = readStyle(node, objectStack);\n\n      if (style) {\n        var styleUri;\n        var baseURI = node.baseURI;\n\n        if (!baseURI || baseURI == 'about:blank') {\n          baseURI = window.location.href;\n        }\n\n        if (baseURI) {\n          var url = new URL('#' + id, baseURI);\n          styleUri = url.href;\n        } else {\n          styleUri = '#' + id;\n        }\n\n        this.sharedStyles_[styleUri] = style;\n      }\n    }\n  };\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n\n\n  KML.prototype.readSharedStyleMap_ = function readSharedStyleMap_(node, objectStack) {\n    var id = node.getAttribute('id');\n\n    if (id === null) {\n      return;\n    }\n\n    var styleMapValue = readStyleMapValue(node, objectStack);\n\n    if (!styleMapValue) {\n      return;\n    }\n\n    var styleUri;\n    var baseURI = node.baseURI;\n\n    if (!baseURI || baseURI == 'about:blank') {\n      baseURI = window.location.href;\n    }\n\n    if (baseURI) {\n      var url = new URL('#' + id, baseURI);\n      styleUri = url.href;\n    } else {\n      styleUri = '#' + id;\n    }\n\n    this.sharedStyles_[styleUri] = styleMapValue;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  KML.prototype.readFeatureFromNode = function readFeatureFromNode(node, opt_options) {\n    if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n      return null;\n    }\n\n    var feature = this.readPlacemark_(node, [this.getReadOptions(node, opt_options)]);\n\n    if (feature) {\n      return feature;\n    } else {\n      return null;\n    }\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  KML.prototype.readFeaturesFromNode = function readFeaturesFromNode(node, opt_options) {\n    if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n      return [];\n    }\n\n    var features;\n    var localName = node.localName;\n\n    if (localName == 'Document' || localName == 'Folder') {\n      features = this.readDocumentOrFolder_(node, [this.getReadOptions(node, opt_options)]);\n\n      if (features) {\n        return features;\n      } else {\n        return [];\n      }\n    } else if (localName == 'Placemark') {\n      var feature = this.readPlacemark_(node, [this.getReadOptions(node, opt_options)]);\n\n      if (feature) {\n        return [feature];\n      } else {\n        return [];\n      }\n    } else if (localName == 'kml') {\n      features = [];\n\n      for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n        var fs = this.readFeaturesFromNode(n, opt_options);\n\n        if (fs) {\n          extend(features, fs);\n        }\n      }\n\n      return features;\n    } else {\n      return [];\n    }\n  };\n  /**\n   * Read the name of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {string|undefined} Name.\n   * @api\n   */\n\n\n  KML.prototype.readName = function readName(source) {\n    if (!source) {\n      return undefined;\n    } else if (typeof source === 'string') {\n      var doc = parse(source);\n      return this.readNameFromDocument(doc);\n    } else if (isDocument(source)) {\n      return this.readNameFromDocument(\n      /** @type {Document} */\n      source);\n    } else {\n      return this.readNameFromNode(\n      /** @type {Element} */\n      source);\n    }\n  };\n  /**\n   * @param {Document} doc Document.\n   * @return {string|undefined} Name.\n   */\n\n\n  KML.prototype.readNameFromDocument = function readNameFromDocument(doc) {\n    for (var n =\n    /** @type {Node} */\n    doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        var name = this.readNameFromNode(\n        /** @type {Element} */\n        n);\n\n        if (name) {\n          return name;\n        }\n      }\n    }\n\n    return undefined;\n  };\n  /**\n   * @param {Element} node Node.\n   * @return {string|undefined} Name.\n   */\n\n\n  KML.prototype.readNameFromNode = function readNameFromNode(node) {\n    for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (includes(NAMESPACE_URIS, n.namespaceURI) && n.localName == 'name') {\n        return readString(n);\n      }\n    }\n\n    for (var n$1 = node.firstElementChild; n$1; n$1 = n$1.nextElementSibling) {\n      var localName = n$1.localName;\n\n      if (includes(NAMESPACE_URIS, n$1.namespaceURI) && (localName == 'Document' || localName == 'Folder' || localName == 'Placemark' || localName == 'kml')) {\n        var name = this.readNameFromNode(n$1);\n\n        if (name) {\n          return name;\n        }\n      }\n    }\n\n    return undefined;\n  };\n  /**\n   * Read the network links of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {Array<Object>} Network links.\n   * @api\n   */\n\n\n  KML.prototype.readNetworkLinks = function readNetworkLinks(source) {\n    var networkLinks = [];\n\n    if (typeof source === 'string') {\n      var doc = parse(source);\n      extend(networkLinks, this.readNetworkLinksFromDocument(doc));\n    } else if (isDocument(source)) {\n      extend(networkLinks, this.readNetworkLinksFromDocument(\n      /** @type {Document} */\n      source));\n    } else {\n      extend(networkLinks, this.readNetworkLinksFromNode(\n      /** @type {Element} */\n      source));\n    }\n\n    return networkLinks;\n  };\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<Object>} Network links.\n   */\n\n\n  KML.prototype.readNetworkLinksFromDocument = function readNetworkLinksFromDocument(doc) {\n    var networkLinks = [];\n\n    for (var n =\n    /** @type {Node} */\n    doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(networkLinks, this.readNetworkLinksFromNode(\n        /** @type {Element} */\n        n));\n      }\n    }\n\n    return networkLinks;\n  };\n  /**\n   * @param {Element} node Node.\n   * @return {Array<Object>} Network links.\n   */\n\n\n  KML.prototype.readNetworkLinksFromNode = function readNetworkLinksFromNode(node) {\n    var networkLinks = [];\n\n    for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (includes(NAMESPACE_URIS, n.namespaceURI) && n.localName == 'NetworkLink') {\n        var obj = pushParseAndPop({}, NETWORK_LINK_PARSERS, n, []);\n        networkLinks.push(obj);\n      }\n    }\n\n    for (var n$1 = node.firstElementChild; n$1; n$1 = n$1.nextElementSibling) {\n      var localName = n$1.localName;\n\n      if (includes(NAMESPACE_URIS, n$1.namespaceURI) && (localName == 'Document' || localName == 'Folder' || localName == 'kml')) {\n        extend(networkLinks, this.readNetworkLinksFromNode(n$1));\n      }\n    }\n\n    return networkLinks;\n  };\n  /**\n   * Read the regions of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {Array<Object>} Regions.\n   * @api\n   */\n\n\n  KML.prototype.readRegion = function readRegion(source) {\n    var regions = [];\n\n    if (typeof source === 'string') {\n      var doc = parse(source);\n      extend(regions, this.readRegionFromDocument(doc));\n    } else if (isDocument(source)) {\n      extend(regions, this.readRegionFromDocument(\n      /** @type {Document} */\n      source));\n    } else {\n      extend(regions, this.readRegionFromNode(\n      /** @type {Element} */\n      source));\n    }\n\n    return regions;\n  };\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<Object>} Region.\n   */\n\n\n  KML.prototype.readRegionFromDocument = function readRegionFromDocument(doc) {\n    var regions = [];\n\n    for (var n =\n    /** @type {Node} */\n    doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(regions, this.readRegionFromNode(\n        /** @type {Element} */\n        n));\n      }\n    }\n\n    return regions;\n  };\n  /**\n   * @param {Element} node Node.\n   * @return {Array<Object>} Region.\n   * @api\n   */\n\n\n  KML.prototype.readRegionFromNode = function readRegionFromNode(node) {\n    var regions = [];\n\n    for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (includes(NAMESPACE_URIS, n.namespaceURI) && n.localName == 'Region') {\n        var obj = pushParseAndPop({}, REGION_PARSERS, n, []);\n        regions.push(obj);\n      }\n    }\n\n    for (var n$1 = node.firstElementChild; n$1; n$1 = n$1.nextElementSibling) {\n      var localName = n$1.localName;\n\n      if (includes(NAMESPACE_URIS, n$1.namespaceURI) && (localName == 'Document' || localName == 'Folder' || localName == 'kml')) {\n        extend(regions, this.readRegionFromNode(n$1));\n      }\n    }\n\n    return regions;\n  };\n  /**\n   * Encode an array of features in the KML format as an XML node. GeometryCollections,\n   * MultiPoints, MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n   *\n   * @param {Array<Feature>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n   * @return {Node} Node.\n   * @override\n   * @api\n   */\n\n\n  KML.prototype.writeFeaturesNode = function writeFeaturesNode(features, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    var kml = createElementNS(NAMESPACE_URIS[4], 'kml');\n    var xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n    kml.setAttributeNS(xmlnsUri, 'xmlns:gx', GX_NAMESPACE_URIS[0]);\n    kml.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n    kml.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', SCHEMA_LOCATION);\n    var\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    context = {\n      node: kml\n    };\n    /** @type {!Object<string, (Array<Feature>|Feature|undefined)>} */\n\n    var properties = {};\n\n    if (features.length > 1) {\n      properties['Document'] = features;\n    } else if (features.length == 1) {\n      properties['Placemark'] = features[0];\n    }\n\n    var orderedKeys = KML_SEQUENCE[kml.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, KML_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, [opt_options], orderedKeys, this);\n    return kml;\n  };\n\n  return KML;\n}(XMLFeature);\n/**\n * @param {Style|undefined} foundStyle Style.\n * @param {string} name Name.\n * @return {Style} style Style.\n */\n\n\nfunction createNameStyleFunction(foundStyle, name) {\n  var textStyle = null;\n  var textOffset = [0, 0];\n  var textAlign = 'start';\n\n  if (foundStyle.getImage()) {\n    var imageSize = foundStyle.getImage().getImageSize();\n\n    if (imageSize === null) {\n      imageSize = DEFAULT_IMAGE_STYLE_SIZE;\n    }\n\n    if (imageSize.length == 2) {\n      var imageScale = foundStyle.getImage().getScale(); // Offset the label to be centered to the right of the icon, if there is\n      // one.\n\n      textOffset[0] = imageScale * imageSize[0] / 2;\n      textOffset[1] = -imageScale * imageSize[1] / 2;\n      textAlign = 'left';\n    }\n  }\n\n  if (foundStyle.getText() !== null) {\n    // clone the text style, customizing it with name, alignments and offset.\n    // Note that kml does not support many text options that OpenLayers does (rotation, textBaseline).\n    var foundText = foundStyle.getText();\n    textStyle = foundText.clone();\n    textStyle.setFont(foundText.getFont() || DEFAULT_TEXT_STYLE.getFont());\n    textStyle.setScale(foundText.getScale() || DEFAULT_TEXT_STYLE.getScale());\n    textStyle.setFill(foundText.getFill() || DEFAULT_TEXT_STYLE.getFill());\n    textStyle.setStroke(foundText.getStroke() || DEFAULT_TEXT_STROKE_STYLE);\n  } else {\n    textStyle = DEFAULT_TEXT_STYLE.clone();\n  }\n\n  textStyle.setText(name);\n  textStyle.setOffsetX(textOffset[0]);\n  textStyle.setOffsetY(textOffset[1]);\n  textStyle.setTextAlign(textAlign);\n  var nameStyle = new Style({\n    text: textStyle\n  });\n  return nameStyle;\n}\n/**\n * @param {Array<Style>|undefined} style Style.\n * @param {string} styleUrl Style URL.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles Shared styles.\n * @param {boolean|undefined} showPointNames true to show names for point placemarks.\n * @return {import(\"../style/Style.js\").StyleFunction} Feature style function.\n */\n\n\nfunction createFeatureStyleFunction(style, styleUrl, defaultStyle, sharedStyles, showPointNames) {\n  return (\n    /**\n     * @param {Feature} feature feature.\n     * @param {number} resolution Resolution.\n     * @return {Array<Style>} Style.\n     */\n    function (feature, resolution) {\n      var drawName = showPointNames;\n      /** @type {Style|undefined} */\n\n      var nameStyle;\n      var name = '';\n\n      if (drawName) {\n        var geometry = feature.getGeometry();\n\n        if (geometry) {\n          drawName = geometry.getType() === GeometryType.POINT;\n        }\n      }\n\n      if (drawName) {\n        name =\n        /** @type {string} */\n        feature.get('name');\n        drawName = drawName && !!name;\n      }\n\n      if (style) {\n        if (drawName) {\n          nameStyle = createNameStyleFunction(style[0], name);\n          return style.concat(nameStyle);\n        }\n\n        return style;\n      }\n\n      if (styleUrl) {\n        var foundStyle = findStyle(styleUrl, defaultStyle, sharedStyles);\n\n        if (drawName) {\n          nameStyle = createNameStyleFunction(foundStyle[0], name);\n          return foundStyle.concat(nameStyle);\n        }\n\n        return foundStyle;\n      }\n\n      if (drawName) {\n        nameStyle = createNameStyleFunction(defaultStyle[0], name);\n        return defaultStyle.concat(nameStyle);\n      }\n\n      return defaultStyle;\n    }\n  );\n}\n/**\n * @param {Array<Style>|string|undefined} styleValue Style value.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles\n * Shared styles.\n * @return {Array<Style>} Style.\n */\n\n\nfunction findStyle(styleValue, defaultStyle, sharedStyles) {\n  if (Array.isArray(styleValue)) {\n    return styleValue;\n  } else if (typeof styleValue === 'string') {\n    // KML files in the wild occasionally forget the leading `#` on styleUrls\n    // defined in the same document.  Add a leading `#` if it enables to find\n    // a style.\n    if (!(styleValue in sharedStyles) && '#' + styleValue in sharedStyles) {\n      styleValue = '#' + styleValue;\n    }\n\n    return findStyle(sharedStyles[styleValue], defaultStyle, sharedStyles);\n  } else {\n    return defaultStyle;\n  }\n}\n/**\n * @param {Node} node Node.\n * @return {import(\"../color.js\").Color|undefined} Color.\n */\n\n\nfunction readColor(node) {\n  var s = getAllTextContent(node, false); // The KML specification states that colors should not include a leading `#`\n  // but we tolerate them.\n\n  var m = /^\\s*#?\\s*([0-9A-Fa-f]{8})\\s*$/.exec(s);\n\n  if (m) {\n    var hexColor = m[1];\n    return [parseInt(hexColor.substr(6, 2), 16), parseInt(hexColor.substr(4, 2), 16), parseInt(hexColor.substr(2, 2), 16), parseInt(hexColor.substr(0, 2), 16) / 255];\n  } else {\n    return undefined;\n  }\n}\n/**\n * @param {Node} node Node.\n * @return {Array<number>|undefined} Flat coordinates.\n */\n\n\nexport function readFlatCoordinates(node) {\n  var s = getAllTextContent(node, false);\n  var flatCoordinates = []; // The KML specification states that coordinate tuples should not include\n  // spaces, but we tolerate them.\n\n  var re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?))?\\s*/i;\n  var m;\n\n  while (m = re.exec(s)) {\n    var x = parseFloat(m[1]);\n    var y = parseFloat(m[2]);\n    var z = m[3] ? parseFloat(m[3]) : 0;\n    flatCoordinates.push(x, y, z);\n    s = s.substr(m[0].length);\n  }\n\n  if (s !== '') {\n    return undefined;\n  }\n\n  return flatCoordinates;\n}\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\n\nfunction readURI(node) {\n  var s = getAllTextContent(node, false).trim();\n  var baseURI = node.baseURI;\n\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n\n  if (baseURI) {\n    var url = new URL(s, baseURI);\n    return url.href;\n  } else {\n    return s;\n  }\n}\n/**\n * @param {Element} node Node.\n * @return {Vec2} Vec2.\n */\n\n\nfunction readVec2(node) {\n  var xunits = node.getAttribute('xunits');\n  var yunits = node.getAttribute('yunits');\n  var origin;\n\n  if (xunits !== 'insetPixels') {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_LEFT;\n    } else {\n      origin = IconOrigin.TOP_LEFT;\n    }\n  } else {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_RIGHT;\n    } else {\n      origin = IconOrigin.TOP_RIGHT;\n    }\n  }\n\n  return {\n    x: parseFloat(node.getAttribute('x')),\n    xunits: ICON_ANCHOR_UNITS_MAP[xunits],\n    y: parseFloat(node.getAttribute('y')),\n    yunits: ICON_ANCHOR_UNITS_MAP[yunits],\n    origin: origin\n  };\n}\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Scale.\n */\n\n\nfunction readScale(node) {\n  return readDecimal(node);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n\n\nvar STYLE_MAP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Pair': pairDataParser\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>|string|undefined} StyleMap.\n */\n\nfunction readStyleMapValue(node, objectStack) {\n  return pushParseAndPop(undefined, STYLE_MAP_PARSERS, node, objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n\n\nvar ICON_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Icon': makeObjectPropertySetter(readIcon),\n  'heading': makeObjectPropertySetter(readDecimal),\n  'hotSpot': makeObjectPropertySetter(readVec2),\n  'scale': makeObjectPropertySetter(readScale)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\n\nfunction iconStyleParser(node, objectStack) {\n  // FIXME refreshMode\n  // FIXME refreshInterval\n  // FIXME viewRefreshTime\n  // FIXME viewBoundScale\n  // FIXME viewFormat\n  // FIXME httpQuery\n  var object = pushParseAndPop({}, ICON_STYLE_PARSERS, node, objectStack);\n\n  if (!object) {\n    return;\n  }\n\n  var styleObject =\n  /** @type {Object} */\n  objectStack[objectStack.length - 1];\n  var IconObject = 'Icon' in object ? object['Icon'] : {};\n  var drawIcon = !('Icon' in object) || Object.keys(IconObject).length > 0;\n  var src;\n  var href =\n  /** @type {string|undefined} */\n  IconObject['href'];\n\n  if (href) {\n    src = href;\n  } else if (drawIcon) {\n    src = DEFAULT_IMAGE_STYLE_SRC;\n  }\n\n  var anchor, anchorXUnits, anchorYUnits;\n  var anchorOrigin = IconOrigin.BOTTOM_LEFT;\n  var hotSpot =\n  /** @type {Vec2|undefined} */\n  object['hotSpot'];\n\n  if (hotSpot) {\n    anchor = [hotSpot.x, hotSpot.y];\n    anchorXUnits = hotSpot.xunits;\n    anchorYUnits = hotSpot.yunits;\n    anchorOrigin = hotSpot.origin;\n  } else if (src === DEFAULT_IMAGE_STYLE_SRC) {\n    anchor = DEFAULT_IMAGE_STYLE_ANCHOR;\n    anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n    anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n  } else if (/^http:\\/\\/maps\\.(?:google|gstatic)\\.com\\//.test(src)) {\n    anchor = [0.5, 0];\n    anchorXUnits = IconAnchorUnits.FRACTION;\n    anchorYUnits = IconAnchorUnits.FRACTION;\n  }\n\n  var offset;\n  var x =\n  /** @type {number|undefined} */\n  IconObject['x'];\n  var y =\n  /** @type {number|undefined} */\n  IconObject['y'];\n\n  if (x !== undefined && y !== undefined) {\n    offset = [x, y];\n  }\n\n  var size;\n  var w =\n  /** @type {number|undefined} */\n  IconObject['w'];\n  var h =\n  /** @type {number|undefined} */\n  IconObject['h'];\n\n  if (w !== undefined && h !== undefined) {\n    size = [w, h];\n  }\n\n  var rotation;\n  var heading =\n  /** @type {number} */\n  object['heading'];\n\n  if (heading !== undefined) {\n    rotation = toRadians(heading);\n  }\n\n  var scale =\n  /** @type {number|undefined} */\n  object['scale'];\n\n  if (drawIcon) {\n    if (src == DEFAULT_IMAGE_STYLE_SRC) {\n      size = DEFAULT_IMAGE_STYLE_SIZE;\n\n      if (scale === undefined) {\n        scale = DEFAULT_IMAGE_SCALE_MULTIPLIER;\n      }\n    }\n\n    var imageStyle = new Icon({\n      anchor: anchor,\n      anchorOrigin: anchorOrigin,\n      anchorXUnits: anchorXUnits,\n      anchorYUnits: anchorYUnits,\n      crossOrigin: 'anonymous',\n      // FIXME should this be configurable?\n      offset: offset,\n      offsetOrigin: IconOrigin.BOTTOM_LEFT,\n      rotation: rotation,\n      scale: scale,\n      size: size,\n      src: src\n    });\n    styleObject['imageStyle'] = imageStyle;\n  } else {\n    // handle the case when we explicitly want to draw no icon.\n    styleObject['imageStyle'] = DEFAULT_NO_IMAGE_STYLE;\n  }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n\n\nvar LABEL_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'scale': makeObjectPropertySetter(readScale)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\n\nfunction labelStyleParser(node, objectStack) {\n  // FIXME colorMode\n  var object = pushParseAndPop({}, LABEL_STYLE_PARSERS, node, objectStack);\n\n  if (!object) {\n    return;\n  }\n\n  var styleObject = objectStack[objectStack.length - 1];\n  var textStyle = new Text({\n    fill: new Fill({\n      color:\n      /** @type {import(\"../color.js\").Color} */\n      'color' in object ? object['color'] : DEFAULT_COLOR\n    }),\n    scale:\n    /** @type {number|undefined} */\n    object['scale']\n  });\n  styleObject['textStyle'] = textStyle;\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n\n\nvar LINE_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'width': makeObjectPropertySetter(readDecimal)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\n\nfunction lineStyleParser(node, objectStack) {\n  // FIXME colorMode\n  // FIXME gx:outerColor\n  // FIXME gx:outerWidth\n  // FIXME gx:physicalWidth\n  // FIXME gx:labelVisibility\n  var object = pushParseAndPop({}, LINE_STYLE_PARSERS, node, objectStack);\n\n  if (!object) {\n    return;\n  }\n\n  var styleObject = objectStack[objectStack.length - 1];\n  var strokeStyle = new Stroke({\n    color:\n    /** @type {import(\"../color.js\").Color} */\n    'color' in object ? object['color'] : DEFAULT_COLOR,\n    width:\n    /** @type {number} */\n    'width' in object ? object['width'] : 1\n  });\n  styleObject['strokeStyle'] = strokeStyle;\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n\n\nvar POLY_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'fill': makeObjectPropertySetter(readBoolean),\n  'outline': makeObjectPropertySetter(readBoolean)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\n\nfunction polyStyleParser(node, objectStack) {\n  // FIXME colorMode\n  var object = pushParseAndPop({}, POLY_STYLE_PARSERS, node, objectStack);\n\n  if (!object) {\n    return;\n  }\n\n  var styleObject = objectStack[objectStack.length - 1];\n  var fillStyle = new Fill({\n    color:\n    /** @type {import(\"../color.js\").Color} */\n    'color' in object ? object['color'] : DEFAULT_COLOR\n  });\n  styleObject['fillStyle'] = fillStyle;\n  var fill =\n  /** @type {boolean|undefined} */\n  object['fill'];\n\n  if (fill !== undefined) {\n    styleObject['fill'] = fill;\n  }\n\n  var outline =\n  /** @type {boolean|undefined} */\n  object['outline'];\n\n  if (outline !== undefined) {\n    styleObject['outline'] = outline;\n  }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n\n\nvar FLAT_LINEAR_RING_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'coordinates': makeReplacer(readFlatCoordinates)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} LinearRing flat coordinates.\n */\n\nfunction readFlatLinearRing(node, objectStack) {\n  return pushParseAndPop(null, FLAT_LINEAR_RING_PARSERS, node, objectStack);\n}\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\n\n\nfunction gxCoordParser(node, objectStack) {\n  var gxTrackObject =\n  /** @type {GxTrackObject} */\n  objectStack[objectStack.length - 1];\n  var flatCoordinates = gxTrackObject.flatCoordinates;\n  var s = getAllTextContent(node, false);\n  var re = /^\\s*([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s*$/i;\n  var m = re.exec(s);\n\n  if (m) {\n    var x = parseFloat(m[1]);\n    var y = parseFloat(m[2]);\n    var z = parseFloat(m[3]);\n    flatCoordinates.push(x, y, z, 0);\n  } else {\n    flatCoordinates.push(0, 0, 0, 0);\n  }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n\n\nvar GX_MULTITRACK_GEOMETRY_PARSERS = makeStructureNS(GX_NAMESPACE_URIS, {\n  'Track': makeArrayPusher(readGxTrack)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {MultiLineString|undefined} MultiLineString.\n */\n\nfunction readGxMultiTrack(node, objectStack) {\n  var lineStrings = pushParseAndPop([], GX_MULTITRACK_GEOMETRY_PARSERS, node, objectStack);\n\n  if (!lineStrings) {\n    return undefined;\n  }\n\n  return new MultiLineString(lineStrings);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n\n\nvar GX_TRACK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'when': whenParser\n}, makeStructureNS(GX_NAMESPACE_URIS, {\n  'coord': gxCoordParser\n}));\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\n\nfunction readGxTrack(node, objectStack) {\n  var gxTrackObject = pushParseAndPop(\n  /** @type {GxTrackObject} */\n  {\n    flatCoordinates: [],\n    whens: []\n  }, GX_TRACK_PARSERS, node, objectStack);\n\n  if (!gxTrackObject) {\n    return undefined;\n  }\n\n  var flatCoordinates = gxTrackObject.flatCoordinates;\n  var whens = gxTrackObject.whens;\n\n  for (var i = 0, ii = Math.min(flatCoordinates.length, whens.length); i < ii; ++i) {\n    flatCoordinates[4 * i + 3] = whens[i];\n  }\n\n  return new LineString(flatCoordinates, GeometryLayout.XYZM);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n\n\nvar ICON_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'href': makeObjectPropertySetter(readURI)\n}, makeStructureNS(GX_NAMESPACE_URIS, {\n  'x': makeObjectPropertySetter(readDecimal),\n  'y': makeObjectPropertySetter(readDecimal),\n  'w': makeObjectPropertySetter(readDecimal),\n  'h': makeObjectPropertySetter(readDecimal)\n}));\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Icon object.\n */\n\nfunction readIcon(node, objectStack) {\n  var iconObject = pushParseAndPop({}, ICON_PARSERS, node, objectStack);\n\n  if (iconObject) {\n    return iconObject;\n  } else {\n    return null;\n  }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n\n\nvar GEOMETRY_FLAT_COORDINATES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'coordinates': makeReplacer(readFlatCoordinates)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} Flat coordinates.\n */\n\nfunction readFlatCoordinatesFromNode(node, objectStack) {\n  return pushParseAndPop(null, GEOMETRY_FLAT_COORDINATES_PARSERS, node, objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n\n\nvar EXTRUDE_AND_ALTITUDE_MODE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'extrude': makeObjectPropertySetter(readBoolean),\n  'tessellate': makeObjectPropertySetter(readBoolean),\n  'altitudeMode': makeObjectPropertySetter(readString)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\n\nfunction readLineString(node, objectStack) {\n  var properties = pushParseAndPop({}, EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node, objectStack);\n  var flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n\n  if (flatCoordinates) {\n    var lineString = new LineString(flatCoordinates, GeometryLayout.XYZ);\n    lineString.setProperties(properties);\n    return lineString;\n  } else {\n    return undefined;\n  }\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\n\n\nfunction readLinearRing(node, objectStack) {\n  var properties = pushParseAndPop({}, EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node, objectStack);\n  var flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n\n  if (flatCoordinates) {\n    var polygon = new Polygon(flatCoordinates, GeometryLayout.XYZ, [flatCoordinates.length]);\n    polygon.setProperties(properties);\n    return polygon;\n  } else {\n    return undefined;\n  }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n\n\nvar MULTI_GEOMETRY_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LineString': makeArrayPusher(readLineString),\n  'LinearRing': makeArrayPusher(readLinearRing),\n  'MultiGeometry': makeArrayPusher(readMultiGeometry),\n  'Point': makeArrayPusher(readPoint),\n  'Polygon': makeArrayPusher(readPolygon)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\n\nfunction readMultiGeometry(node, objectStack) {\n  var geometries = pushParseAndPop([], MULTI_GEOMETRY_PARSERS, node, objectStack);\n\n  if (!geometries) {\n    return null;\n  }\n\n  if (geometries.length === 0) {\n    return new GeometryCollection(geometries);\n  }\n\n  var multiGeometry;\n  var homogeneous = true;\n  var type = geometries[0].getType();\n  var geometry;\n\n  for (var i = 1, ii = geometries.length; i < ii; ++i) {\n    geometry = geometries[i];\n\n    if (geometry.getType() != type) {\n      homogeneous = false;\n      break;\n    }\n  }\n\n  if (homogeneous) {\n    var layout;\n    var flatCoordinates;\n\n    if (type == GeometryType.POINT) {\n      var point = geometries[0];\n      layout = point.getLayout();\n      flatCoordinates = point.getFlatCoordinates();\n\n      for (var i$1 = 1, ii$1 = geometries.length; i$1 < ii$1; ++i$1) {\n        geometry = geometries[i$1];\n        extend(flatCoordinates, geometry.getFlatCoordinates());\n      }\n\n      multiGeometry = new MultiPoint(flatCoordinates, layout);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == GeometryType.LINE_STRING) {\n      multiGeometry = new MultiLineString(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == GeometryType.POLYGON) {\n      multiGeometry = new MultiPolygon(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == GeometryType.GEOMETRY_COLLECTION) {\n      multiGeometry = new GeometryCollection(geometries);\n    } else {\n      assert(false, 37); // Unknown geometry type found\n    }\n  } else {\n    multiGeometry = new GeometryCollection(geometries);\n  }\n\n  return (\n    /** @type {import(\"../geom/Geometry.js\").default} */\n    multiGeometry\n  );\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Point|undefined} Point.\n */\n\n\nfunction readPoint(node, objectStack) {\n  var properties = pushParseAndPop({}, EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node, objectStack);\n  var flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n\n  if (flatCoordinates) {\n    var point = new Point(flatCoordinates, GeometryLayout.XYZ);\n    point.setProperties(properties);\n    return point;\n  } else {\n    return undefined;\n  }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n\n\nvar FLAT_LINEAR_RINGS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'innerBoundaryIs': innerBoundaryIsParser,\n  'outerBoundaryIs': outerBoundaryIsParser\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\n\nfunction readPolygon(node, objectStack) {\n  var properties = pushParseAndPop(\n  /** @type {Object<string,*>} */\n  {}, EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node, objectStack);\n  var flatLinearRings = pushParseAndPop([null], FLAT_LINEAR_RINGS_PARSERS, node, objectStack);\n\n  if (flatLinearRings && flatLinearRings[0]) {\n    var flatCoordinates = flatLinearRings[0];\n    var ends = [flatCoordinates.length];\n\n    for (var i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n\n    var polygon = new Polygon(flatCoordinates, GeometryLayout.XYZ, ends);\n    polygon.setProperties(properties);\n    return polygon;\n  } else {\n    return undefined;\n  }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n\n\nvar STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'IconStyle': iconStyleParser,\n  'LabelStyle': labelStyleParser,\n  'LineStyle': lineStyleParser,\n  'PolyStyle': polyStyleParser\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>} Style.\n */\n\nfunction readStyle(node, objectStack) {\n  var styleObject = pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\n\n  if (!styleObject) {\n    return null;\n  }\n\n  var fillStyle =\n  /** @type {Fill} */\n  'fillStyle' in styleObject ? styleObject['fillStyle'] : DEFAULT_FILL_STYLE;\n  var fill =\n  /** @type {boolean|undefined} */\n  styleObject['fill'];\n\n  if (fill !== undefined && !fill) {\n    fillStyle = null;\n  }\n\n  var imageStyle;\n\n  if ('imageStyle' in styleObject) {\n    if (styleObject['imageStyle'] != DEFAULT_NO_IMAGE_STYLE) {\n      imageStyle = styleObject['imageStyle'];\n    }\n  } else {\n    imageStyle = DEFAULT_IMAGE_STYLE;\n  }\n\n  var textStyle =\n  /** @type {Text} */\n  'textStyle' in styleObject ? styleObject['textStyle'] : DEFAULT_TEXT_STYLE;\n  var strokeStyle =\n  /** @type {Stroke} */\n  'strokeStyle' in styleObject ? styleObject['strokeStyle'] : DEFAULT_STROKE_STYLE;\n  var outline =\n  /** @type {boolean|undefined} */\n  styleObject['outline'];\n\n  if (outline !== undefined && !outline) {\n    strokeStyle = null;\n  }\n\n  return [new Style({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle,\n    zIndex: undefined // FIXME\n\n  })];\n}\n/**\n * Reads an array of geometries and creates arrays for common geometry\n * properties. Then sets them to the multi geometry.\n * @param {MultiPoint|MultiLineString|MultiPolygon} multiGeometry A multi-geometry.\n * @param {Array<import(\"../geom/Geometry.js\").default>} geometries List of geometries.\n */\n\n\nfunction setCommonGeometryProperties(multiGeometry, geometries) {\n  var ii = geometries.length;\n  var extrudes = new Array(geometries.length);\n  var tessellates = new Array(geometries.length);\n  var altitudeModes = new Array(geometries.length);\n  var hasExtrude, hasTessellate, hasAltitudeMode;\n  hasExtrude = hasTessellate = hasAltitudeMode = false;\n\n  for (var i = 0; i < ii; ++i) {\n    var geometry = geometries[i];\n    extrudes[i] = geometry.get('extrude');\n    tessellates[i] = geometry.get('tessellate');\n    altitudeModes[i] = geometry.get('altitudeMode');\n    hasExtrude = hasExtrude || extrudes[i] !== undefined;\n    hasTessellate = hasTessellate || tessellates[i] !== undefined;\n    hasAltitudeMode = hasAltitudeMode || altitudeModes[i];\n  }\n\n  if (hasExtrude) {\n    multiGeometry.set('extrude', extrudes);\n  }\n\n  if (hasTessellate) {\n    multiGeometry.set('tessellate', tessellates);\n  }\n\n  if (hasAltitudeMode) {\n    multiGeometry.set('altitudeMode', altitudeModes);\n  }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n\n\nvar DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'displayName': makeObjectPropertySetter(readString),\n  'value': makeObjectPropertySetter(readString)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\n\nfunction dataParser(node, objectStack) {\n  var name = node.getAttribute('name');\n  parseNode(DATA_PARSERS, node, objectStack);\n  var featureObject =\n  /** @type {Object} */\n  objectStack[objectStack.length - 1];\n\n  if (name !== null) {\n    featureObject[name] = featureObject.value;\n  } else if (featureObject.displayName !== null) {\n    featureObject[featureObject.displayName] = featureObject.value;\n  }\n\n  delete featureObject['value'];\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n\n\nvar EXTENDED_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Data': dataParser,\n  'SchemaData': schemaDataParser\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\n\nfunction extendedDataParser(node, objectStack) {\n  parseNode(EXTENDED_DATA_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\n\n\nfunction regionParser(node, objectStack) {\n  parseNode(REGION_PARSERS, node, objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n\n\nvar PAIR_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Style': makeObjectPropertySetter(readStyle),\n  'key': makeObjectPropertySetter(readString),\n  'styleUrl': makeObjectPropertySetter(readURI)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\n\nfunction pairDataParser(node, objectStack) {\n  var pairObject = pushParseAndPop({}, PAIR_PARSERS, node, objectStack);\n\n  if (!pairObject) {\n    return;\n  }\n\n  var key =\n  /** @type {string|undefined} */\n  pairObject['key'];\n\n  if (key && key == 'normal') {\n    var styleUrl =\n    /** @type {string|undefined} */\n    pairObject['styleUrl'];\n\n    if (styleUrl) {\n      objectStack[objectStack.length - 1] = styleUrl;\n    }\n\n    var style =\n    /** @type {Style} */\n    pairObject['Style'];\n\n    if (style) {\n      objectStack[objectStack.length - 1] = style;\n    }\n  }\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\n\n\nfunction placemarkStyleMapParser(node, objectStack) {\n  var styleMapValue = readStyleMapValue(node, objectStack);\n\n  if (!styleMapValue) {\n    return;\n  }\n\n  var placemarkObject = objectStack[objectStack.length - 1];\n\n  if (Array.isArray(styleMapValue)) {\n    placemarkObject['Style'] = styleMapValue;\n  } else if (typeof styleMapValue === 'string') {\n    placemarkObject['styleUrl'] = styleMapValue;\n  } else {\n    assert(false, 38); // `styleMapValue` has an unknown type\n  }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n\n\nvar SCHEMA_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'SimpleData': simpleDataParser\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\n\nfunction schemaDataParser(node, objectStack) {\n  parseNode(SCHEMA_DATA_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\n\n\nfunction simpleDataParser(node, objectStack) {\n  var name = node.getAttribute('name');\n\n  if (name !== null) {\n    var data = readString(node);\n    var featureObject =\n    /** @type {Object} */\n    objectStack[objectStack.length - 1];\n    featureObject[name] = data;\n  }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n\n\nvar LAT_LON_ALT_BOX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'altitudeMode': makeObjectPropertySetter(readString),\n  'minAltitude': makeObjectPropertySetter(readDecimal),\n  'maxAltitude': makeObjectPropertySetter(readDecimal),\n  'north': makeObjectPropertySetter(readDecimal),\n  'south': makeObjectPropertySetter(readDecimal),\n  'east': makeObjectPropertySetter(readDecimal),\n  'west': makeObjectPropertySetter(readDecimal)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\n\nfunction latLonAltBoxParser(node, objectStack) {\n  var object = pushParseAndPop({}, LAT_LON_ALT_BOX_PARSERS, node, objectStack);\n\n  if (!object) {\n    return;\n  }\n\n  var regionObject =\n  /** @type {Object} */\n  objectStack[objectStack.length - 1];\n  var extent = [parseFloat(object['west']), parseFloat(object['south']), parseFloat(object['east']), parseFloat(object['north'])];\n  regionObject['extent'] = extent;\n  regionObject['altitudeMode'] = object['altitudeMode'];\n  regionObject['minAltitude'] = parseFloat(object['minAltitude']);\n  regionObject['maxAltitude'] = parseFloat(object['maxAltitude']);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n\n\nvar LOD_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'minLodPixels': makeObjectPropertySetter(readDecimal),\n  'maxLodPixels': makeObjectPropertySetter(readDecimal),\n  'minFadeExtent': makeObjectPropertySetter(readDecimal),\n  'maxFadeExtent': makeObjectPropertySetter(readDecimal)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\n\nfunction lodParser(node, objectStack) {\n  var object = pushParseAndPop({}, LOD_PARSERS, node, objectStack);\n\n  if (!object) {\n    return;\n  }\n\n  var lodObject =\n  /** @type {Object} */\n  objectStack[objectStack.length - 1];\n  lodObject['minLodPixels'] = parseFloat(object['minLodPixels']);\n  lodObject['maxLodPixels'] = parseFloat(object['maxLodPixels']);\n  lodObject['minFadeExtent'] = parseFloat(object['minFadeExtent']);\n  lodObject['maxFadeExtent'] = parseFloat(object['maxFadeExtent']);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n\n\nvar INNER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LinearRing': makeReplacer(readFlatLinearRing)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\n\nfunction innerBoundaryIsParser(node, objectStack) {\n  /** @type {Array<number>|undefined} */\n  var flatLinearRing = pushParseAndPop(undefined, INNER_BOUNDARY_IS_PARSERS, node, objectStack);\n\n  if (flatLinearRing) {\n    var flatLinearRings =\n    /** @type {Array<Array<number>>} */\n    objectStack[objectStack.length - 1];\n    flatLinearRings.push(flatLinearRing);\n  }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n\n\nvar OUTER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LinearRing': makeReplacer(readFlatLinearRing)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\n\nfunction outerBoundaryIsParser(node, objectStack) {\n  /** @type {Array<number>|undefined} */\n  var flatLinearRing = pushParseAndPop(undefined, OUTER_BOUNDARY_IS_PARSERS, node, objectStack);\n\n  if (flatLinearRing) {\n    var flatLinearRings =\n    /** @type {Array<Array<number>>} */\n    objectStack[objectStack.length - 1];\n    flatLinearRings[0] = flatLinearRing;\n  }\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\n\n\nfunction linkParser(node, objectStack) {\n  parseNode(LINK_PARSERS, node, objectStack);\n}\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\n\n\nfunction whenParser(node, objectStack) {\n  var gxTrackObject =\n  /** @type {GxTrackObject} */\n  objectStack[objectStack.length - 1];\n  var whens = gxTrackObject.whens;\n  var s = getAllTextContent(node, false);\n  var when = Date.parse(s);\n  whens.push(isNaN(when) ? 0 : when);\n}\n/**\n * @param {Node} node Node to append a TextNode with the color to.\n * @param {import(\"../color.js\").Color|string} color Color.\n */\n\n\nfunction writeColorTextNode(node, color) {\n  var rgba = asArray(color);\n  var opacity = rgba.length == 4 ? rgba[3] : 1;\n  /** @type {Array<string|number>} */\n\n  var abgr = [opacity * 255, rgba[2], rgba[1], rgba[0]];\n\n  for (var i = 0; i < 4; ++i) {\n    var hex = Math.floor(\n    /** @type {number} */\n    abgr[i]).toString(16);\n    abgr[i] = hex.length == 1 ? '0' + hex : hex;\n  }\n\n  writeStringTextNode(node, abgr.join(''));\n}\n/**\n * @param {Node} node Node to append a TextNode with the coordinates to.\n * @param {Array<number>} coordinates Coordinates.\n * @param {Array<*>} objectStack Object stack.\n */\n\n\nfunction writeCoordinatesTextNode(node, coordinates, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var layout = context['layout'];\n  var stride = context['stride'];\n  var dimension;\n\n  if (layout == GeometryLayout.XY || layout == GeometryLayout.XYM) {\n    dimension = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYZM) {\n    dimension = 3;\n  } else {\n    assert(false, 34); // Invalid geometry layout\n  }\n\n  var ii = coordinates.length;\n  var text = '';\n\n  if (ii > 0) {\n    text += coordinates[0];\n\n    for (var d = 1; d < dimension; ++d) {\n      text += ',' + coordinates[d];\n    }\n\n    for (var i = stride; i < ii; i += stride) {\n      text += ' ' + coordinates[i];\n\n      for (var d$1 = 1; d$1 < dimension; ++d$1) {\n        text += ',' + coordinates[i + d$1];\n      }\n    }\n  }\n\n  writeStringTextNode(node, text);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n\n\nvar EXTENDEDDATA_NODE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Data': makeChildAppender(writeDataNode),\n  'value': makeChildAppender(writeDataNodeValue),\n  'displayName': makeChildAppender(writeDataNodeName)\n});\n/**\n * @param {Element} node Node.\n * @param {{name: *, value: *}} pair Name value pair.\n * @param {Array<*>} objectStack Object stack.\n */\n\nfunction writeDataNode(node, pair, objectStack) {\n  node.setAttribute('name', pair.name);\n  var\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  context = {\n    node: node\n  };\n  var value = pair.value;\n\n  if (typeof value == 'object') {\n    if (value !== null && value.displayName) {\n      pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, [value.displayName], objectStack, ['displayName']);\n    }\n\n    if (value !== null && value.value) {\n      pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, [value.value], objectStack, ['value']);\n    }\n  } else {\n    pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, [value], objectStack, ['value']);\n  }\n}\n/**\n * @param {Node} node Node to append a TextNode with the name to.\n * @param {string} name DisplayName.\n */\n\n\nfunction writeDataNodeName(node, name) {\n  writeCDATASection(node, name);\n}\n/**\n * @param {Node} node Node to append a CDATA Section with the value to.\n * @param {string} value Value.\n */\n\n\nfunction writeDataNodeValue(node, value) {\n  writeStringTextNode(node, value);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n\n\nvar DOCUMENT_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Placemark': makeChildAppender(writePlacemark)\n});\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\n\nvar DOCUMENT_NODE_FACTORY = function (value, objectStack, opt_nodeName) {\n  var parentNode = objectStack[objectStack.length - 1].node;\n  return createElementNS(parentNode.namespaceURI, 'Placemark');\n};\n/**\n * @param {Node} node Node.\n * @param {Array<Feature>} features Features.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\n\n\nfunction writeDocument(node, features, objectStack) {\n  var\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  context = {\n    node: node\n  };\n  pushSerializeAndPop(context, DOCUMENT_SERIALIZERS, DOCUMENT_NODE_FACTORY, features, objectStack, undefined, this);\n}\n/**\n * A factory for creating Data nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\n\n\nvar DATA_NODE_FACTORY = makeSimpleNodeFactory('Data');\n/**\n * @param {Node} node Node.\n * @param {{names: Array<string>, values: (Array<*>)}} namesAndValues Names and values.\n * @param {Array<*>} objectStack Object stack.\n */\n\nfunction writeExtendedData(node, namesAndValues, objectStack) {\n  var\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  context = {\n    node: node\n  };\n  var names = namesAndValues.names;\n  var values = namesAndValues.values;\n  var length = names.length;\n\n  for (var i = 0; i < length; i++) {\n    pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS, DATA_NODE_FACTORY, [{\n      name: names[i],\n      value: values[i]\n    }], objectStack);\n  }\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n\n\nvar ICON_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['href'], makeStructureNS(GX_NAMESPACE_URIS, ['x', 'y', 'w', 'h']));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n\nvar ICON_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'href': makeChildAppender(writeStringTextNode)\n}, makeStructureNS(GX_NAMESPACE_URIS, {\n  'x': makeChildAppender(writeDecimalTextNode),\n  'y': makeChildAppender(writeDecimalTextNode),\n  'w': makeChildAppender(writeDecimalTextNode),\n  'h': makeChildAppender(writeDecimalTextNode)\n}));\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\n\nvar GX_NODE_FACTORY = function (value, objectStack, opt_nodeName) {\n  return createElementNS(GX_NAMESPACE_URIS[0], 'gx:' + opt_nodeName);\n};\n/**\n * @param {Node} node Node.\n * @param {Object} icon Icon object.\n * @param {Array<*>} objectStack Object stack.\n */\n\n\nfunction writeIcon(node, icon, objectStack) {\n  var\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  context = {\n    node: node\n  };\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = ICON_SEQUENCE[parentNode.namespaceURI];\n  var values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(context, ICON_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n  orderedKeys = ICON_SEQUENCE[GX_NAMESPACE_URIS[0]];\n  values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(context, ICON_SERIALIZERS, GX_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n\n\nvar ICON_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['scale', 'heading', 'Icon', 'hotSpot']);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n\nvar ICON_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Icon': makeChildAppender(writeIcon),\n  'heading': makeChildAppender(writeDecimalTextNode),\n  'hotSpot': makeChildAppender(writeVec2),\n  'scale': makeChildAppender(writeScaleTextNode)\n});\n/**\n * @param {Node} node Node.\n * @param {import(\"../style/Icon.js\").default} style Icon style.\n * @param {Array<*>} objectStack Object stack.\n */\n\nfunction writeIconStyle(node, style, objectStack) {\n  var\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  context = {\n    node: node\n  };\n  var properties = {};\n  var src = style.getSrc();\n  var size = style.getSize();\n  var iconImageSize = style.getImageSize();\n  var iconProperties = {\n    'href': src\n  };\n\n  if (size) {\n    iconProperties['w'] = size[0];\n    iconProperties['h'] = size[1];\n    var anchor = style.getAnchor(); // top-left\n\n    var origin = style.getOrigin(); // top-left\n\n    if (origin && iconImageSize && origin[0] !== 0 && origin[1] !== size[1]) {\n      iconProperties['x'] = origin[0];\n      iconProperties['y'] = iconImageSize[1] - (origin[1] + size[1]);\n    }\n\n    if (anchor && (anchor[0] !== size[0] / 2 || anchor[1] !== size[1] / 2)) {\n      var\n      /** @type {Vec2} */\n      hotSpot = {\n        x: anchor[0],\n        xunits: IconAnchorUnits.PIXELS,\n        y: size[1] - anchor[1],\n        yunits: IconAnchorUnits.PIXELS\n      };\n      properties['hotSpot'] = hotSpot;\n    }\n  }\n\n  properties['Icon'] = iconProperties;\n  var scale = style.getScale();\n\n  if (scale !== 1) {\n    properties['scale'] = scale;\n  }\n\n  var rotation = style.getRotation();\n\n  if (rotation !== 0) {\n    properties['heading'] = rotation; // 0-360\n  }\n\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = ICON_STYLE_SEQUENCE[parentNode.namespaceURI];\n  var values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, ICON_STYLE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n\n\nvar LABEL_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['color', 'scale']);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n\nvar LABEL_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'scale': makeChildAppender(writeScaleTextNode)\n});\n/**\n * @param {Node} node Node.\n * @param {Text} style style.\n * @param {Array<*>} objectStack Object stack.\n */\n\nfunction writeLabelStyle(node, style, objectStack) {\n  var\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  context = {\n    node: node\n  };\n  var properties = {};\n  var fill = style.getFill();\n\n  if (fill) {\n    properties['color'] = fill.getColor();\n  }\n\n  var scale = style.getScale();\n\n  if (scale && scale !== 1) {\n    properties['scale'] = scale;\n  }\n\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = LABEL_STYLE_SEQUENCE[parentNode.namespaceURI];\n  var values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, LABEL_STYLE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n\n\nvar LINE_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['color', 'width']);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n\nvar LINE_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'width': makeChildAppender(writeDecimalTextNode)\n});\n/**\n * @param {Node} node Node.\n * @param {Stroke} style style.\n * @param {Array<*>} objectStack Object stack.\n */\n\nfunction writeLineStyle(node, style, objectStack) {\n  var\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  context = {\n    node: node\n  };\n  var properties = {\n    'color': style.getColor(),\n    'width': style.getWidth()\n  };\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = LINE_STYLE_SEQUENCE[parentNode.namespaceURI];\n  var values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, LINE_STYLE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @const\n * @type {Object<string, string>}\n */\n\n\nvar GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'Point',\n  'LineString': 'LineString',\n  'LinearRing': 'LinearRing',\n  'Polygon': 'Polygon',\n  'MultiPoint': 'MultiGeometry',\n  'MultiLineString': 'MultiGeometry',\n  'MultiPolygon': 'MultiGeometry',\n  'GeometryCollection': 'MultiGeometry'\n};\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\n\nvar GEOMETRY_NODE_FACTORY = function (value, objectStack, opt_nodeName) {\n  if (value) {\n    var parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(parentNode.namespaceURI, GEOMETRY_TYPE_TO_NODENAME[\n    /** @type {import(\"../geom/Geometry.js\").default} */\n    value.getType()]);\n  }\n};\n/**\n * A factory for creating Point nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\n\n\nvar POINT_NODE_FACTORY = makeSimpleNodeFactory('Point');\n/**\n * A factory for creating LineString nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\n\nvar LINE_STRING_NODE_FACTORY = makeSimpleNodeFactory('LineString');\n/**\n * A factory for creating LinearRing nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\n\nvar LINEAR_RING_NODE_FACTORY = makeSimpleNodeFactory('LinearRing');\n/**\n * A factory for creating Polygon nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\n\nvar POLYGON_NODE_FACTORY = makeSimpleNodeFactory('Polygon');\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n\nvar MULTI_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'LineString': makeChildAppender(writePrimitiveGeometry),\n  'Point': makeChildAppender(writePrimitiveGeometry),\n  'Polygon': makeChildAppender(writePolygon),\n  'GeometryCollection': makeChildAppender(writeMultiGeometry)\n});\n/**\n * @param {Node} node Node.\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\n\nfunction writeMultiGeometry(node, geometry, objectStack) {\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  var context = {\n    node: node\n  };\n  var type = geometry.getType();\n  /** @type {Array<import(\"../geom/Geometry.js\").default>} */\n\n  var geometries;\n  /** @type {function(*, Array<*>, string=): (Node|undefined)} */\n\n  var factory;\n\n  if (type == GeometryType.GEOMETRY_COLLECTION) {\n    geometries =\n    /** @type {GeometryCollection} */\n    geometry.getGeometries();\n    factory = GEOMETRY_NODE_FACTORY;\n  } else if (type == GeometryType.MULTI_POINT) {\n    geometries =\n    /** @type {MultiPoint} */\n    geometry.getPoints();\n    factory = POINT_NODE_FACTORY;\n  } else if (type == GeometryType.MULTI_LINE_STRING) {\n    geometries =\n    /** @type {MultiLineString} */\n    geometry.getLineStrings();\n    factory = LINE_STRING_NODE_FACTORY;\n  } else if (type == GeometryType.MULTI_POLYGON) {\n    geometries =\n    /** @type {MultiPolygon} */\n    geometry.getPolygons();\n    factory = POLYGON_NODE_FACTORY;\n  } else {\n    assert(false, 39); // Unknown geometry type\n  }\n\n  pushSerializeAndPop(context, MULTI_GEOMETRY_SERIALIZERS, factory, geometries, objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n\n\nvar BOUNDARY_IS_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'LinearRing': makeChildAppender(writePrimitiveGeometry)\n});\n/**\n * @param {Node} node Node.\n * @param {import(\"../geom/LinearRing.js\").default} linearRing Linear ring.\n * @param {Array<*>} objectStack Object stack.\n */\n\nfunction writeBoundaryIs(node, linearRing, objectStack) {\n  var\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  context = {\n    node: node\n  };\n  pushSerializeAndPop(context, BOUNDARY_IS_SERIALIZERS, LINEAR_RING_NODE_FACTORY, [linearRing], objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n\n\nvar PLACEMARK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'ExtendedData': makeChildAppender(writeExtendedData),\n  'MultiGeometry': makeChildAppender(writeMultiGeometry),\n  'LineString': makeChildAppender(writePrimitiveGeometry),\n  'LinearRing': makeChildAppender(writePrimitiveGeometry),\n  'Point': makeChildAppender(writePrimitiveGeometry),\n  'Polygon': makeChildAppender(writePolygon),\n  'Style': makeChildAppender(writeStyle),\n  'address': makeChildAppender(writeStringTextNode),\n  'description': makeChildAppender(writeStringTextNode),\n  'name': makeChildAppender(writeStringTextNode),\n  'open': makeChildAppender(writeBooleanTextNode),\n  'phoneNumber': makeChildAppender(writeStringTextNode),\n  'styleUrl': makeChildAppender(writeStringTextNode),\n  'visibility': makeChildAppender(writeBooleanTextNode)\n});\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n\nvar PLACEMARK_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['name', 'open', 'visibility', 'address', 'phoneNumber', 'description', 'styleUrl', 'Style']);\n/**\n * A factory for creating ExtendedData nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\n\nvar EXTENDEDDATA_NODE_FACTORY = makeSimpleNodeFactory('ExtendedData');\n/**\n * FIXME currently we do serialize arbitrary/custom feature properties\n * (ExtendedData).\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\n\nfunction writePlacemark(node, feature, objectStack) {\n  var\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  context = {\n    node: node\n  }; // set id\n\n  if (feature.getId()) {\n    node.setAttribute('id',\n    /** @type {string} */\n    feature.getId());\n  } // serialize properties (properties unknown to KML are not serialized)\n\n\n  var properties = feature.getProperties(); // don't export these to ExtendedData\n\n  var filter = {\n    'address': 1,\n    'description': 1,\n    'name': 1,\n    'open': 1,\n    'phoneNumber': 1,\n    'styleUrl': 1,\n    'visibility': 1\n  };\n  filter[feature.getGeometryName()] = 1;\n  var keys = Object.keys(properties || {}).sort().filter(function (v) {\n    return !filter[v];\n  });\n\n  if (keys.length > 0) {\n    var sequence = makeSequence(properties, keys);\n    var namesAndValues = {\n      names: keys,\n      values: sequence\n    };\n    pushSerializeAndPop(context, PLACEMARK_SERIALIZERS, EXTENDEDDATA_NODE_FACTORY, [namesAndValues], objectStack);\n  }\n\n  var styleFunction = feature.getStyleFunction();\n\n  if (styleFunction) {\n    // FIXME the styles returned by the style function are supposed to be\n    // resolution-independent here\n    var styles = styleFunction(feature, 0);\n\n    if (styles) {\n      var style = Array.isArray(styles) ? styles[0] : styles;\n\n      if (this.writeStyles_) {\n        properties['Style'] = style;\n      }\n\n      var textStyle = style.getText();\n\n      if (textStyle) {\n        properties['name'] = textStyle.getText();\n      }\n    }\n  }\n\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = PLACEMARK_SEQUENCE[parentNode.namespaceURI];\n  var values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, PLACEMARK_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys); // serialize geometry\n\n  var options =\n  /** @type {import(\"./Feature.js\").WriteOptions} */\n  objectStack[0];\n  var geometry = feature.getGeometry();\n\n  if (geometry) {\n    geometry =\n    /** @type {import(\"../geom/Geometry.js\").default} */\n    transformWithOptions(geometry, true, options);\n  }\n\n  pushSerializeAndPop(context, PLACEMARK_SERIALIZERS, GEOMETRY_NODE_FACTORY, [geometry], objectStack);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n\n\nvar PRIMITIVE_GEOMETRY_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['extrude', 'tessellate', 'altitudeMode', 'coordinates']);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n\nvar PRIMITIVE_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'extrude': makeChildAppender(writeBooleanTextNode),\n  'tessellate': makeChildAppender(writeBooleanTextNode),\n  'altitudeMode': makeChildAppender(writeStringTextNode),\n  'coordinates': makeChildAppender(writeCoordinatesTextNode)\n});\n/**\n * @param {Node} node Node.\n * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\n\nfunction writePrimitiveGeometry(node, geometry, objectStack) {\n  var flatCoordinates = geometry.getFlatCoordinates();\n  var\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  context = {\n    node: node\n  };\n  context['layout'] = geometry.getLayout();\n  context['stride'] = geometry.getStride(); // serialize properties (properties unknown to KML are not serialized)\n\n  var properties = geometry.getProperties();\n  properties.coordinates = flatCoordinates;\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = PRIMITIVE_GEOMETRY_SEQUENCE[parentNode.namespaceURI];\n  var values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, PRIMITIVE_GEOMETRY_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n\n\nvar POLYGON_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'outerBoundaryIs': makeChildAppender(writeBoundaryIs),\n  'innerBoundaryIs': makeChildAppender(writeBoundaryIs)\n});\n/**\n * A factory for creating innerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\n\nvar INNER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('innerBoundaryIs');\n/**\n * A factory for creating outerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\n\nvar OUTER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('outerBoundaryIs');\n/**\n * @param {Node} node Node.\n * @param {Polygon} polygon Polygon.\n * @param {Array<*>} objectStack Object stack.\n */\n\nfunction writePolygon(node, polygon, objectStack) {\n  var linearRings = polygon.getLinearRings();\n  var outerRing = linearRings.shift();\n  var\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  context = {\n    node: node\n  }; // inner rings\n\n  pushSerializeAndPop(context, POLYGON_SERIALIZERS, INNER_BOUNDARY_NODE_FACTORY, linearRings, objectStack); // outer ring\n\n  pushSerializeAndPop(context, POLYGON_SERIALIZERS, OUTER_BOUNDARY_NODE_FACTORY, [outerRing], objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n\n\nvar POLY_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode)\n});\n/**\n * A factory for creating coordinates nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\n\nvar COLOR_NODE_FACTORY = makeSimpleNodeFactory('color');\n/**\n * @param {Node} node Node.\n * @param {Fill} style Style.\n * @param {Array<*>} objectStack Object stack.\n */\n\nfunction writePolyStyle(node, style, objectStack) {\n  var\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  context = {\n    node: node\n  };\n  pushSerializeAndPop(context, POLY_STYLE_SERIALIZERS, COLOR_NODE_FACTORY, [style.getColor()], objectStack);\n}\n/**\n * @param {Node} node Node to append a TextNode with the scale to.\n * @param {number|undefined} scale Scale.\n */\n\n\nfunction writeScaleTextNode(node, scale) {\n  // the Math is to remove any excess decimals created by float arithmetic\n  writeDecimalTextNode(node, Math.round(scale * 1e6) / 1e6);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n\n\nvar STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['IconStyle', 'LabelStyle', 'LineStyle', 'PolyStyle']);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n\nvar STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'IconStyle': makeChildAppender(writeIconStyle),\n  'LabelStyle': makeChildAppender(writeLabelStyle),\n  'LineStyle': makeChildAppender(writeLineStyle),\n  'PolyStyle': makeChildAppender(writePolyStyle)\n});\n/**\n * @param {Node} node Node.\n * @param {Style} style Style.\n * @param {Array<*>} objectStack Object stack.\n */\n\nfunction writeStyle(node, style, objectStack) {\n  var\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  context = {\n    node: node\n  };\n  var properties = {};\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  var imageStyle = style.getImage();\n  var textStyle = style.getText();\n\n  if (imageStyle && typeof\n  /** @type {?} */\n  imageStyle.getSrc === 'function') {\n    properties['IconStyle'] = imageStyle;\n  }\n\n  if (textStyle) {\n    properties['LabelStyle'] = textStyle;\n  }\n\n  if (strokeStyle) {\n    properties['LineStyle'] = strokeStyle;\n  }\n\n  if (fillStyle) {\n    properties['PolyStyle'] = fillStyle;\n  }\n\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = STYLE_SEQUENCE[parentNode.namespaceURI];\n  var values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, STYLE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @param {Element} node Node to append a TextNode with the Vec2 to.\n * @param {Vec2} vec2 Vec2.\n */\n\n\nfunction writeVec2(node, vec2) {\n  node.setAttribute('x', String(vec2.x));\n  node.setAttribute('y', String(vec2.y));\n  node.setAttribute('xunits', vec2.xunits);\n  node.setAttribute('yunits', vec2.yunits);\n}\n\nexport default KML;","map":{"version":3,"sources":["../../../src/ol/format/KML.js"],"names":["const","let","super","n","i","ii","d"],"mappings":"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","sourcesContent":["/**\n * @module ol/format/KML\n */\nimport Feature from '../Feature.js';\nimport {extend, includes} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport {transformWithOptions} from './Feature.js';\nimport XMLFeature from './XMLFeature.js';\nimport {readDecimal, readBoolean, readString, writeStringTextNode, writeCDATASection, writeDecimalTextNode, writeBooleanTextNode} from './xsd.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {toRadians} from '../math.js';\nimport {get as getProjection} from '../proj.js';\nimport Fill from '../style/Fill.js';\nimport Icon from '../style/Icon.js';\nimport IconAnchorUnits from '../style/IconAnchorUnits.js';\nimport IconOrigin from '../style/IconOrigin.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport {createElementNS, getAllTextContent, isDocument, makeArrayExtender,\n  makeArrayPusher, makeChildAppender, makeObjectPropertySetter,\n  makeReplacer, makeSequence, makeSimpleNodeFactory, makeStructureNS,\n  OBJECT_PROPERTY_NODE_FACTORY, parse, parseNode, pushParseAndPop,\n  pushSerializeAndPop, XML_SCHEMA_INSTANCE_URI} from '../xml.js';\n\n/**\n * @typedef {Object} Vec2\n * @property {number} x\n * @property {IconAnchorUnits} xunits\n * @property {number} y\n * @property {IconAnchorUnits} yunits\n * @property {IconOrigin} origin\n */\n\n/**\n * @typedef {Object} GxTrackObject\n * @property {Array<number>} flatCoordinates\n * @property {Array<number>} whens\n */\n\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst GX_NAMESPACE_URIS = [\n  'http://www.google.com/kml/ext/2.2'\n];\n\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://earth.google.com/kml/2.0',\n  'http://earth.google.com/kml/2.1',\n  'http://earth.google.com/kml/2.2',\n  'http://www.opengis.net/kml/2.2'\n];\n\n\n/**\n * @const\n * @type {string}\n */\nconst SCHEMA_LOCATION = 'http://www.opengis.net/kml/2.2 ' +\n    'https://developers.google.com/kml/schema/kml22gx.xsd';\n\n\n/**\n * @type {Object<string, IconAnchorUnits>}\n */\nconst ICON_ANCHOR_UNITS_MAP = {\n  'fraction': IconAnchorUnits.FRACTION,\n  'pixels': IconAnchorUnits.PIXELS,\n  'insetPixels': IconAnchorUnits.PIXELS\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst PLACEMARK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ExtendedData': extendedDataParser,\n    'Region': regionParser,\n    'MultiGeometry': makeObjectPropertySetter(\n      readMultiGeometry, 'geometry'),\n    'LineString': makeObjectPropertySetter(\n      readLineString, 'geometry'),\n    'LinearRing': makeObjectPropertySetter(\n      readLinearRing, 'geometry'),\n    'Point': makeObjectPropertySetter(\n      readPoint, 'geometry'),\n    'Polygon': makeObjectPropertySetter(\n      readPolygon, 'geometry'),\n    'Style': makeObjectPropertySetter(readStyle),\n    'StyleMap': placemarkStyleMapParser,\n    'address': makeObjectPropertySetter(readString),\n    'description': makeObjectPropertySetter(readString),\n    'name': makeObjectPropertySetter(readString),\n    'open': makeObjectPropertySetter(readBoolean),\n    'phoneNumber': makeObjectPropertySetter(readString),\n    'styleUrl': makeObjectPropertySetter(readURI),\n    'visibility': makeObjectPropertySetter(readBoolean)\n  }, makeStructureNS(\n    GX_NAMESPACE_URIS, {\n      'MultiTrack': makeObjectPropertySetter(\n        readGxMultiTrack, 'geometry'),\n      'Track': makeObjectPropertySetter(\n        readGxTrack, 'geometry')\n    }\n  ));\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst NETWORK_LINK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ExtendedData': extendedDataParser,\n    'Region': regionParser,\n    'Link': linkParser,\n    'address': makeObjectPropertySetter(readString),\n    'description': makeObjectPropertySetter(readString),\n    'name': makeObjectPropertySetter(readString),\n    'open': makeObjectPropertySetter(readBoolean),\n    'phoneNumber': makeObjectPropertySetter(readString),\n    'visibility': makeObjectPropertySetter(readBoolean)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst LINK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'href': makeObjectPropertySetter(readURI)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst REGION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LatLonAltBox': latLonAltBoxParser,\n    'Lod': lodParser\n  });\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nconst KML_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'Document', 'Placemark'\n  ]);\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nconst KML_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Document': makeChildAppender(writeDocument),\n    'Placemark': makeChildAppender(writePlacemark)\n  });\n\n\n/**\n * @type {import(\"../color.js\").Color}\n */\nlet DEFAULT_COLOR;\n\n/**\n * @type {Fill}\n */\nlet DEFAULT_FILL_STYLE = null;\n\n/**\n * Get the default fill style (or null if not yet set).\n * @return {Fill} The default fill style.\n */\nexport function getDefaultFillStyle() {\n  return DEFAULT_FILL_STYLE;\n}\n\n/**\n * @type {import(\"../size.js\").Size}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR;\n\n/**\n * @type {IconAnchorUnits}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n\n/**\n * @type {IconAnchorUnits}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n\n/**\n * @type {import(\"../size.js\").Size}\n */\nlet DEFAULT_IMAGE_STYLE_SIZE;\n\n/**\n * @type {string}\n */\nlet DEFAULT_IMAGE_STYLE_SRC;\n\n/**\n * @type {number}\n */\nlet DEFAULT_IMAGE_SCALE_MULTIPLIER;\n\n/**\n * @type {import(\"../style/Image.js\").default}\n */\nlet DEFAULT_IMAGE_STYLE = null;\n\n/**\n * Get the default image style (or null if not yet set).\n * @return {import(\"../style/Image.js\").default} The default image style.\n */\nexport function getDefaultImageStyle() {\n  return DEFAULT_IMAGE_STYLE;\n}\n\n/**\n * @type {string}\n */\nlet DEFAULT_NO_IMAGE_STYLE;\n\n/**\n * @type {Stroke}\n */\nlet DEFAULT_STROKE_STYLE = null;\n\n/**\n * Get the default stroke style (or null if not yet set).\n * @return {Stroke} The default stroke style.\n */\nexport function getDefaultStrokeStyle() {\n  return DEFAULT_STROKE_STYLE;\n}\n\n/**\n * @type {Stroke}\n */\nlet DEFAULT_TEXT_STROKE_STYLE;\n\n/**\n * @type {Text}\n */\nlet DEFAULT_TEXT_STYLE = null;\n\n/**\n * Get the default text style (or null if not yet set).\n * @return {Text} The default text style.\n */\nexport function getDefaultTextStyle() {\n  return DEFAULT_TEXT_STYLE;\n}\n\n/**\n * @type {Style}\n */\nlet DEFAULT_STYLE = null;\n\n/**\n * Get the default style (or null if not yet set).\n * @return {Style} The default style.\n */\nexport function getDefaultStyle() {\n  return DEFAULT_STYLE;\n}\n\n/**\n * @type {Array<Style>}\n */\nlet DEFAULT_STYLE_ARRAY = null;\n\n/**\n * Get the default style array (or null if not yet set).\n * @return {Array<Style>} The default style.\n */\nexport function getDefaultStyleArray() {\n  return DEFAULT_STYLE_ARRAY;\n}\n\n\nfunction createStyleDefaults() {\n\n  DEFAULT_COLOR = [255, 255, 255, 1];\n\n  DEFAULT_FILL_STYLE = new Fill({\n    color: DEFAULT_COLOR\n  });\n\n  DEFAULT_IMAGE_STYLE_ANCHOR = [20, 2]; // FIXME maybe [8, 32] ?\n\n  DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS = IconAnchorUnits.PIXELS;\n\n  DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS = IconAnchorUnits.PIXELS;\n\n  DEFAULT_IMAGE_STYLE_SIZE = [64, 64];\n\n  DEFAULT_IMAGE_STYLE_SRC =\n      'https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png';\n\n  DEFAULT_IMAGE_SCALE_MULTIPLIER = 0.5;\n\n  DEFAULT_IMAGE_STYLE = new Icon({\n    anchor: DEFAULT_IMAGE_STYLE_ANCHOR,\n    anchorOrigin: IconOrigin.BOTTOM_LEFT,\n    anchorXUnits: DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS,\n    anchorYUnits: DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS,\n    crossOrigin: 'anonymous',\n    rotation: 0,\n    scale: DEFAULT_IMAGE_SCALE_MULTIPLIER,\n    size: DEFAULT_IMAGE_STYLE_SIZE,\n    src: DEFAULT_IMAGE_STYLE_SRC\n  });\n\n  DEFAULT_NO_IMAGE_STYLE = 'NO_IMAGE';\n\n  DEFAULT_STROKE_STYLE = new Stroke({\n    color: DEFAULT_COLOR,\n    width: 1\n  });\n\n  DEFAULT_TEXT_STROKE_STYLE = new Stroke({\n    color: [51, 51, 51, 1],\n    width: 2\n  });\n\n  DEFAULT_TEXT_STYLE = new Text({\n    font: 'bold 16px Helvetica',\n    fill: DEFAULT_FILL_STYLE,\n    stroke: DEFAULT_TEXT_STROKE_STYLE,\n    scale: 0.8\n  });\n\n  DEFAULT_STYLE = new Style({\n    fill: DEFAULT_FILL_STYLE,\n    image: DEFAULT_IMAGE_STYLE,\n    text: DEFAULT_TEXT_STYLE,\n    stroke: DEFAULT_STROKE_STYLE,\n    zIndex: 0\n  });\n\n  DEFAULT_STYLE_ARRAY = [DEFAULT_STYLE];\n\n}\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [extractStyles=true] Extract styles from the KML.\n * @property {boolean} [showPointNames=true] Show names as labels for placemarks which contain points.\n * @property {Array<Style>} [defaultStyle] Default style. The\n * default default style is the same as Google Earth.\n * @property {boolean} [writeStyles=true] Write styles into KML.\n */\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the KML format.\n *\n * {@link module:ol/format/KML~KML#readFeature} will read the first feature from\n * a KML source.\n *\n * MultiGeometries are converted into GeometryCollections if they are a mix of\n * geometry types, and into MultiPoint/MultiLineString/MultiPolygon if they are\n * all of the same type.\n *\n * Note that the KML format uses the URL() constructor. Older browsers such as IE\n * which do not support this will need a URL polyfill to be loaded before use.\n *\n * @api\n */\nclass KML extends XMLFeature {\n\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    if (!DEFAULT_STYLE_ARRAY) {\n      createStyleDefaults();\n    }\n\n    /**\n     * @inheritDoc\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {Array<Style>}\n     */\n    this.defaultStyle_ = options.defaultStyle ?\n      options.defaultStyle : DEFAULT_STYLE_ARRAY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.extractStyles_ = options.extractStyles !== undefined ?\n      options.extractStyles : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.writeStyles_ = options.writeStyles !== undefined ?\n      options.writeStyles : true;\n\n    /**\n     * @private\n     * @type {!Object<string, (Array<Style>|string)>}\n     */\n    this.sharedStyles_ = {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.showPointNames_ = options.showPointNames !== undefined ?\n      options.showPointNames : true;\n\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<Feature>|undefined} Features.\n   */\n  readDocumentOrFolder_(node, objectStack) {\n    // FIXME use scope somehow\n    const parsersNS = makeStructureNS(\n      NAMESPACE_URIS, {\n        'Document': makeArrayExtender(this.readDocumentOrFolder_, this),\n        'Folder': makeArrayExtender(this.readDocumentOrFolder_, this),\n        'Placemark': makeArrayPusher(this.readPlacemark_, this),\n        'Style': this.readSharedStyle_.bind(this),\n        'StyleMap': this.readSharedStyleMap_.bind(this)\n      });\n    /** @type {Array<Feature>} */\n    const features = pushParseAndPop([], parsersNS, node, objectStack, this);\n    if (features) {\n      return features;\n    } else {\n      return undefined;\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Feature|undefined} Feature.\n   */\n  readPlacemark_(node, objectStack) {\n    const object = pushParseAndPop({'geometry': null},\n      PLACEMARK_PARSERS, node, objectStack);\n    if (!object) {\n      return undefined;\n    }\n    const feature = new Feature();\n    const id = node.getAttribute('id');\n    if (id !== null) {\n      feature.setId(id);\n    }\n    const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n\n    const geometry = object['geometry'];\n    if (geometry) {\n      transformWithOptions(geometry, false, options);\n    }\n    feature.setGeometry(geometry);\n    delete object['geometry'];\n\n    if (this.extractStyles_) {\n      const style = object['Style'];\n      const styleUrl = object['styleUrl'];\n      const styleFunction = createFeatureStyleFunction(\n        style, styleUrl, this.defaultStyle_, this.sharedStyles_,\n        this.showPointNames_);\n      feature.setStyle(styleFunction);\n    }\n    delete object['Style'];\n    // we do not remove the styleUrl property from the object, so it\n    // gets stored on feature when setProperties is called\n\n    feature.setProperties(object);\n\n    return feature;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  readSharedStyle_(node, objectStack) {\n    const id = node.getAttribute('id');\n    if (id !== null) {\n      const style = readStyle(node, objectStack);\n      if (style) {\n        let styleUri;\n        let baseURI = node.baseURI;\n        if (!baseURI || baseURI == 'about:blank') {\n          baseURI = window.location.href;\n        }\n        if (baseURI) {\n          const url = new URL('#' + id, baseURI);\n          styleUri = url.href;\n        } else {\n          styleUri = '#' + id;\n        }\n        this.sharedStyles_[styleUri] = style;\n      }\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  readSharedStyleMap_(node, objectStack) {\n    const id = node.getAttribute('id');\n    if (id === null) {\n      return;\n    }\n    const styleMapValue = readStyleMapValue(node, objectStack);\n    if (!styleMapValue) {\n      return;\n    }\n    let styleUri;\n    let baseURI = node.baseURI;\n    if (!baseURI || baseURI == 'about:blank') {\n      baseURI = window.location.href;\n    }\n    if (baseURI) {\n      const url = new URL('#' + id, baseURI);\n      styleUri = url.href;\n    } else {\n      styleUri = '#' + id;\n    }\n    this.sharedStyles_[styleUri] = styleMapValue;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readFeatureFromNode(node, opt_options) {\n    if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n      return null;\n    }\n    const feature = this.readPlacemark_(\n      node, [this.getReadOptions(node, opt_options)]);\n    if (feature) {\n      return feature;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readFeaturesFromNode(node, opt_options) {\n    if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n      return [];\n    }\n    let features;\n    const localName = node.localName;\n    if (localName == 'Document' || localName == 'Folder') {\n      features = this.readDocumentOrFolder_(\n        node, [this.getReadOptions(node, opt_options)]);\n      if (features) {\n        return features;\n      } else {\n        return [];\n      }\n    } else if (localName == 'Placemark') {\n      const feature = this.readPlacemark_(\n        node, [this.getReadOptions(node, opt_options)]);\n      if (feature) {\n        return [feature];\n      } else {\n        return [];\n      }\n    } else if (localName == 'kml') {\n      features = [];\n      for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n        const fs = this.readFeaturesFromNode(n, opt_options);\n        if (fs) {\n          extend(features, fs);\n        }\n      }\n      return features;\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * Read the name of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {string|undefined} Name.\n   * @api\n   */\n  readName(source) {\n    if (!source) {\n      return undefined;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readNameFromDocument(doc);\n    } else if (isDocument(source)) {\n      return this.readNameFromDocument(/** @type {Document} */ (source));\n    } else {\n      return this.readNameFromNode(/** @type {Element} */ (source));\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {string|undefined} Name.\n   */\n  readNameFromDocument(doc) {\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        const name = this.readNameFromNode(/** @type {Element} */ (n));\n        if (name) {\n          return name;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {string|undefined} Name.\n   */\n  readNameFromNode(node) {\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n          n.localName == 'name') {\n        return readString(n);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n          (localName == 'Document' ||\n           localName == 'Folder' ||\n           localName == 'Placemark' ||\n           localName == 'kml')) {\n        const name = this.readNameFromNode(n);\n        if (name) {\n          return name;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Read the network links of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {Array<Object>} Network links.\n   * @api\n   */\n  readNetworkLinks(source) {\n    const networkLinks = [];\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      extend(networkLinks, this.readNetworkLinksFromDocument(doc));\n    } else if (isDocument(source)) {\n      extend(networkLinks, this.readNetworkLinksFromDocument(\n        /** @type {Document} */ (source)));\n    } else {\n      extend(networkLinks, this.readNetworkLinksFromNode(\n        /** @type {Element} */ (source)));\n    }\n    return networkLinks;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<Object>} Network links.\n   */\n  readNetworkLinksFromDocument(doc) {\n    const networkLinks = [];\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(networkLinks, this.readNetworkLinksFromNode(/** @type {Element} */ (n)));\n      }\n    }\n    return networkLinks;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Array<Object>} Network links.\n   */\n  readNetworkLinksFromNode(node) {\n    const networkLinks = [];\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n          n.localName == 'NetworkLink') {\n        const obj = pushParseAndPop({}, NETWORK_LINK_PARSERS,\n          n, []);\n        networkLinks.push(obj);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n          (localName == 'Document' ||\n           localName == 'Folder' ||\n           localName == 'kml')) {\n        extend(networkLinks, this.readNetworkLinksFromNode(n));\n      }\n    }\n    return networkLinks;\n  }\n\n  /**\n   * Read the regions of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {Array<Object>} Regions.\n   * @api\n   */\n  readRegion(source) {\n    const regions = [];\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      extend(regions, this.readRegionFromDocument(doc));\n    } else if (isDocument(source)) {\n      extend(regions, this.readRegionFromDocument(\n        /** @type {Document} */ (source)));\n    } else {\n      extend(regions, this.readRegionFromNode(\n        /** @type {Element} */ (source)));\n    }\n    return regions;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<Object>} Region.\n   */\n  readRegionFromDocument(doc) {\n    const regions = [];\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(regions, this.readRegionFromNode(/** @type {Element} */ (n)));\n      }\n    }\n    return regions;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Array<Object>} Region.\n   * @api\n   */\n  readRegionFromNode(node) {\n    const regions = [];\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n          n.localName == 'Region') {\n        const obj = pushParseAndPop({}, REGION_PARSERS,\n          n, []);\n        regions.push(obj);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n          (localName == 'Document' ||\n           localName == 'Folder' ||\n           localName == 'kml')) {\n        extend(regions, this.readRegionFromNode(n));\n      }\n    }\n    return regions;\n  }\n\n  /**\n   * Encode an array of features in the KML format as an XML node. GeometryCollections,\n   * MultiPoints, MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n   *\n   * @param {Array<Feature>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n   * @return {Node} Node.\n   * @override\n   * @api\n   */\n  writeFeaturesNode(features, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    const kml = createElementNS(NAMESPACE_URIS[4], 'kml');\n    const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n    kml.setAttributeNS(xmlnsUri, 'xmlns:gx', GX_NAMESPACE_URIS[0]);\n    kml.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n    kml.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', SCHEMA_LOCATION);\n\n    const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: kml};\n    /** @type {!Object<string, (Array<Feature>|Feature|undefined)>} */\n    const properties = {};\n    if (features.length > 1) {\n      properties['Document'] = features;\n    } else if (features.length == 1) {\n      properties['Placemark'] = features[0];\n    }\n    const orderedKeys = KML_SEQUENCE[kml.namespaceURI];\n    const values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, KML_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY, values, [opt_options], orderedKeys,\n      this);\n    return kml;\n  }\n}\n\n\n/**\n * @param {Style|undefined} foundStyle Style.\n * @param {string} name Name.\n * @return {Style} style Style.\n */\nfunction createNameStyleFunction(foundStyle, name) {\n  let textStyle = null;\n  const textOffset = [0, 0];\n  let textAlign = 'start';\n  if (foundStyle.getImage()) {\n    let imageSize = foundStyle.getImage().getImageSize();\n    if (imageSize === null) {\n      imageSize = DEFAULT_IMAGE_STYLE_SIZE;\n    }\n    if (imageSize.length == 2) {\n      const imageScale = foundStyle.getImage().getScale();\n      // Offset the label to be centered to the right of the icon, if there is\n      // one.\n      textOffset[0] = imageScale * imageSize[0] / 2;\n      textOffset[1] = -imageScale * imageSize[1] / 2;\n      textAlign = 'left';\n    }\n  }\n  if (foundStyle.getText() !== null) {\n    // clone the text style, customizing it with name, alignments and offset.\n    // Note that kml does not support many text options that OpenLayers does (rotation, textBaseline).\n    const foundText = foundStyle.getText();\n    textStyle = foundText.clone();\n    textStyle.setFont(foundText.getFont() || DEFAULT_TEXT_STYLE.getFont());\n    textStyle.setScale(foundText.getScale() || DEFAULT_TEXT_STYLE.getScale());\n    textStyle.setFill(foundText.getFill() || DEFAULT_TEXT_STYLE.getFill());\n    textStyle.setStroke(foundText.getStroke() || DEFAULT_TEXT_STROKE_STYLE);\n  } else {\n    textStyle = DEFAULT_TEXT_STYLE.clone();\n  }\n  textStyle.setText(name);\n  textStyle.setOffsetX(textOffset[0]);\n  textStyle.setOffsetY(textOffset[1]);\n  textStyle.setTextAlign(textAlign);\n\n  const nameStyle = new Style({\n    text: textStyle\n  });\n  return nameStyle;\n}\n\n\n/**\n * @param {Array<Style>|undefined} style Style.\n * @param {string} styleUrl Style URL.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles Shared styles.\n * @param {boolean|undefined} showPointNames true to show names for point placemarks.\n * @return {import(\"../style/Style.js\").StyleFunction} Feature style function.\n */\nfunction createFeatureStyleFunction(style, styleUrl, defaultStyle, sharedStyles, showPointNames) {\n\n  return (\n    /**\n     * @param {Feature} feature feature.\n     * @param {number} resolution Resolution.\n     * @return {Array<Style>} Style.\n     */\n    function(feature, resolution) {\n      let drawName = showPointNames;\n      /** @type {Style|undefined} */\n      let nameStyle;\n      let name = '';\n      if (drawName) {\n        const geometry = feature.getGeometry();\n        if (geometry) {\n          drawName = geometry.getType() === GeometryType.POINT;\n        }\n      }\n\n      if (drawName) {\n        name = /** @type {string} */ (feature.get('name'));\n        drawName = drawName && !!name;\n      }\n\n      if (style) {\n        if (drawName) {\n          nameStyle = createNameStyleFunction(style[0], name);\n          return style.concat(nameStyle);\n        }\n        return style;\n      }\n      if (styleUrl) {\n        const foundStyle = findStyle(styleUrl, defaultStyle, sharedStyles);\n        if (drawName) {\n          nameStyle = createNameStyleFunction(foundStyle[0], name);\n          return foundStyle.concat(nameStyle);\n        }\n        return foundStyle;\n      }\n      if (drawName) {\n        nameStyle = createNameStyleFunction(defaultStyle[0], name);\n        return defaultStyle.concat(nameStyle);\n      }\n      return defaultStyle;\n    }\n  );\n}\n\n\n/**\n * @param {Array<Style>|string|undefined} styleValue Style value.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles\n * Shared styles.\n * @return {Array<Style>} Style.\n */\nfunction findStyle(styleValue, defaultStyle, sharedStyles) {\n  if (Array.isArray(styleValue)) {\n    return styleValue;\n  } else if (typeof styleValue === 'string') {\n    // KML files in the wild occasionally forget the leading `#` on styleUrls\n    // defined in the same document.  Add a leading `#` if it enables to find\n    // a style.\n    if (!(styleValue in sharedStyles) && ('#' + styleValue in sharedStyles)) {\n      styleValue = '#' + styleValue;\n    }\n    return findStyle(sharedStyles[styleValue], defaultStyle, sharedStyles);\n  } else {\n    return defaultStyle;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {import(\"../color.js\").Color|undefined} Color.\n */\nfunction readColor(node) {\n  const s = getAllTextContent(node, false);\n  // The KML specification states that colors should not include a leading `#`\n  // but we tolerate them.\n  const m = /^\\s*#?\\s*([0-9A-Fa-f]{8})\\s*$/.exec(s);\n  if (m) {\n    const hexColor = m[1];\n    return [\n      parseInt(hexColor.substr(6, 2), 16),\n      parseInt(hexColor.substr(4, 2), 16),\n      parseInt(hexColor.substr(2, 2), 16),\n      parseInt(hexColor.substr(0, 2), 16) / 255\n    ];\n\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {Array<number>|undefined} Flat coordinates.\n */\nexport function readFlatCoordinates(node) {\n  let s = getAllTextContent(node, false);\n  const flatCoordinates = [];\n  // The KML specification states that coordinate tuples should not include\n  // spaces, but we tolerate them.\n  const re =\n      /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?))?\\s*/i;\n  let m;\n  while ((m = re.exec(s))) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = m[3] ? parseFloat(m[3]) : 0;\n    flatCoordinates.push(x, y, z);\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  return flatCoordinates;\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\nfunction readURI(node) {\n  const s = getAllTextContent(node, false).trim();\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL(s, baseURI);\n    return url.href;\n  } else {\n    return s;\n  }\n}\n\n\n/**\n * @param {Element} node Node.\n * @return {Vec2} Vec2.\n */\nfunction readVec2(node) {\n  const xunits = node.getAttribute('xunits');\n  const yunits = node.getAttribute('yunits');\n  let origin;\n  if (xunits !== 'insetPixels') {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_LEFT;\n    } else {\n      origin = IconOrigin.TOP_LEFT;\n    }\n  } else {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_RIGHT;\n    } else {\n      origin = IconOrigin.TOP_RIGHT;\n    }\n  }\n  return {\n    x: parseFloat(node.getAttribute('x')),\n    xunits: ICON_ANCHOR_UNITS_MAP[xunits],\n    y: parseFloat(node.getAttribute('y')),\n    yunits: ICON_ANCHOR_UNITS_MAP[yunits],\n    origin: origin\n  };\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Scale.\n */\nfunction readScale(node) {\n  return readDecimal(node);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst STYLE_MAP_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Pair': pairDataParser\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>|string|undefined} StyleMap.\n */\nfunction readStyleMapValue(node, objectStack) {\n  return pushParseAndPop(undefined,\n    STYLE_MAP_PARSERS, node, objectStack);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst ICON_STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Icon': makeObjectPropertySetter(readIcon),\n    'heading': makeObjectPropertySetter(readDecimal),\n    'hotSpot': makeObjectPropertySetter(readVec2),\n    'scale': makeObjectPropertySetter(readScale)\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction iconStyleParser(node, objectStack) {\n  // FIXME refreshMode\n  // FIXME refreshInterval\n  // FIXME viewRefreshTime\n  // FIXME viewBoundScale\n  // FIXME viewFormat\n  // FIXME httpQuery\n  const object = pushParseAndPop(\n    {}, ICON_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const IconObject = 'Icon' in object ? object['Icon'] : {};\n  const drawIcon = (!('Icon' in object) || Object.keys(IconObject).length > 0);\n  let src;\n  const href = /** @type {string|undefined} */\n      (IconObject['href']);\n  if (href) {\n    src = href;\n  } else if (drawIcon) {\n    src = DEFAULT_IMAGE_STYLE_SRC;\n  }\n  let anchor, anchorXUnits, anchorYUnits;\n  let anchorOrigin = IconOrigin.BOTTOM_LEFT;\n  const hotSpot = /** @type {Vec2|undefined} */\n      (object['hotSpot']);\n  if (hotSpot) {\n    anchor = [hotSpot.x, hotSpot.y];\n    anchorXUnits = hotSpot.xunits;\n    anchorYUnits = hotSpot.yunits;\n    anchorOrigin = hotSpot.origin;\n  } else if (src === DEFAULT_IMAGE_STYLE_SRC) {\n    anchor = DEFAULT_IMAGE_STYLE_ANCHOR;\n    anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n    anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n  } else if (/^http:\\/\\/maps\\.(?:google|gstatic)\\.com\\//.test(src)) {\n    anchor = [0.5, 0];\n    anchorXUnits = IconAnchorUnits.FRACTION;\n    anchorYUnits = IconAnchorUnits.FRACTION;\n  }\n\n  let offset;\n  const x = /** @type {number|undefined} */\n      (IconObject['x']);\n  const y = /** @type {number|undefined} */\n      (IconObject['y']);\n  if (x !== undefined && y !== undefined) {\n    offset = [x, y];\n  }\n\n  let size;\n  const w = /** @type {number|undefined} */\n      (IconObject['w']);\n  const h = /** @type {number|undefined} */\n      (IconObject['h']);\n  if (w !== undefined && h !== undefined) {\n    size = [w, h];\n  }\n\n  let rotation;\n  const heading = /** @type {number} */\n      (object['heading']);\n  if (heading !== undefined) {\n    rotation = toRadians(heading);\n  }\n\n  let scale = /** @type {number|undefined} */\n      (object['scale']);\n\n  if (drawIcon) {\n    if (src == DEFAULT_IMAGE_STYLE_SRC) {\n      size = DEFAULT_IMAGE_STYLE_SIZE;\n      if (scale === undefined) {\n        scale = DEFAULT_IMAGE_SCALE_MULTIPLIER;\n      }\n    }\n\n    const imageStyle = new Icon({\n      anchor: anchor,\n      anchorOrigin: anchorOrigin,\n      anchorXUnits: anchorXUnits,\n      anchorYUnits: anchorYUnits,\n      crossOrigin: 'anonymous', // FIXME should this be configurable?\n      offset: offset,\n      offsetOrigin: IconOrigin.BOTTOM_LEFT,\n      rotation: rotation,\n      scale: scale,\n      size: size,\n      src: src\n    });\n    styleObject['imageStyle'] = imageStyle;\n  } else {\n    // handle the case when we explicitly want to draw no icon.\n    styleObject['imageStyle'] = DEFAULT_NO_IMAGE_STYLE;\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst LABEL_STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'color': makeObjectPropertySetter(readColor),\n    'scale': makeObjectPropertySetter(readScale)\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction labelStyleParser(node, objectStack) {\n  // FIXME colorMode\n  const object = pushParseAndPop(\n    {}, LABEL_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const textStyle = new Text({\n    fill: new Fill({\n      color: /** @type {import(\"../color.js\").Color} */\n          ('color' in object ? object['color'] : DEFAULT_COLOR)\n    }),\n    scale: /** @type {number|undefined} */\n        (object['scale'])\n  });\n  styleObject['textStyle'] = textStyle;\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst LINE_STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'color': makeObjectPropertySetter(readColor),\n    'width': makeObjectPropertySetter(readDecimal)\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lineStyleParser(node, objectStack) {\n  // FIXME colorMode\n  // FIXME gx:outerColor\n  // FIXME gx:outerWidth\n  // FIXME gx:physicalWidth\n  // FIXME gx:labelVisibility\n  const object = pushParseAndPop(\n    {}, LINE_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const strokeStyle = new Stroke({\n    color: /** @type {import(\"../color.js\").Color} */\n        ('color' in object ? object['color'] : DEFAULT_COLOR),\n    width: /** @type {number} */ ('width' in object ? object['width'] : 1)\n  });\n  styleObject['strokeStyle'] = strokeStyle;\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst POLY_STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'color': makeObjectPropertySetter(readColor),\n    'fill': makeObjectPropertySetter(readBoolean),\n    'outline': makeObjectPropertySetter(readBoolean)\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction polyStyleParser(node, objectStack) {\n  // FIXME colorMode\n  const object = pushParseAndPop(\n    {}, POLY_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const fillStyle = new Fill({\n    color: /** @type {import(\"../color.js\").Color} */\n        ('color' in object ? object['color'] : DEFAULT_COLOR)\n  });\n  styleObject['fillStyle'] = fillStyle;\n  const fill = /** @type {boolean|undefined} */ (object['fill']);\n  if (fill !== undefined) {\n    styleObject['fill'] = fill;\n  }\n  const outline = /** @type {boolean|undefined} */ (object['outline']);\n  if (outline !== undefined) {\n    styleObject['outline'] = outline;\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst FLAT_LINEAR_RING_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'coordinates': makeReplacer(readFlatCoordinates)\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} LinearRing flat coordinates.\n */\nfunction readFlatLinearRing(node, objectStack) {\n  return pushParseAndPop(null,\n    FLAT_LINEAR_RING_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction gxCoordParser(node, objectStack) {\n  const gxTrackObject = /** @type {GxTrackObject} */\n      (objectStack[objectStack.length - 1]);\n  const flatCoordinates = gxTrackObject.flatCoordinates;\n  const s = getAllTextContent(node, false);\n  const re =\n      /^\\s*([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s*$/i;\n  const m = re.exec(s);\n  if (m) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = parseFloat(m[3]);\n    flatCoordinates.push(x, y, z, 0);\n  } else {\n    flatCoordinates.push(0, 0, 0, 0);\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst GX_MULTITRACK_GEOMETRY_PARSERS = makeStructureNS(\n  GX_NAMESPACE_URIS, {\n    'Track': makeArrayPusher(readGxTrack)\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {MultiLineString|undefined} MultiLineString.\n */\nfunction readGxMultiTrack(node, objectStack) {\n  const lineStrings = pushParseAndPop([],\n    GX_MULTITRACK_GEOMETRY_PARSERS, node, objectStack);\n  if (!lineStrings) {\n    return undefined;\n  }\n  return new MultiLineString(lineStrings);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst GX_TRACK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'when': whenParser\n  }, makeStructureNS(\n    GX_NAMESPACE_URIS, {\n      'coord': gxCoordParser\n    }));\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readGxTrack(node, objectStack) {\n  const gxTrackObject = pushParseAndPop(\n    /** @type {GxTrackObject} */ ({\n      flatCoordinates: [],\n      whens: []\n    }), GX_TRACK_PARSERS, node, objectStack);\n  if (!gxTrackObject) {\n    return undefined;\n  }\n  const flatCoordinates = gxTrackObject.flatCoordinates;\n  const whens = gxTrackObject.whens;\n  for (let i = 0, ii = Math.min(flatCoordinates.length, whens.length); i < ii; ++i) {\n    flatCoordinates[4 * i + 3] = whens[i];\n  }\n  return new LineString(flatCoordinates, GeometryLayout.XYZM);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst ICON_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'href': makeObjectPropertySetter(readURI)\n  }, makeStructureNS(\n    GX_NAMESPACE_URIS, {\n      'x': makeObjectPropertySetter(readDecimal),\n      'y': makeObjectPropertySetter(readDecimal),\n      'w': makeObjectPropertySetter(readDecimal),\n      'h': makeObjectPropertySetter(readDecimal)\n    }));\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Icon object.\n */\nfunction readIcon(node, objectStack) {\n  const iconObject = pushParseAndPop(\n    {}, ICON_PARSERS, node, objectStack);\n  if (iconObject) {\n    return iconObject;\n  } else {\n    return null;\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst GEOMETRY_FLAT_COORDINATES_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'coordinates': makeReplacer(readFlatCoordinates)\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} Flat coordinates.\n */\nfunction readFlatCoordinatesFromNode(node, objectStack) {\n  return pushParseAndPop(null,\n    GEOMETRY_FLAT_COORDINATES_PARSERS, node, objectStack);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst EXTRUDE_AND_ALTITUDE_MODE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'extrude': makeObjectPropertySetter(readBoolean),\n    'tessellate': makeObjectPropertySetter(readBoolean),\n    'altitudeMode': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readLineString(node, objectStack) {\n  const properties = pushParseAndPop({},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node,\n    objectStack);\n  const flatCoordinates =\n      readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(flatCoordinates, GeometryLayout.XYZ);\n    lineString.setProperties(properties);\n    return lineString;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readLinearRing(node, objectStack) {\n  const properties = pushParseAndPop({},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node,\n    objectStack);\n  const flatCoordinates =\n      readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const polygon = new Polygon(flatCoordinates, GeometryLayout.XYZ, [flatCoordinates.length]);\n    polygon.setProperties(properties);\n    return polygon;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst MULTI_GEOMETRY_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LineString': makeArrayPusher(readLineString),\n    'LinearRing': makeArrayPusher(readLinearRing),\n    'MultiGeometry': makeArrayPusher(readMultiGeometry),\n    'Point': makeArrayPusher(readPoint),\n    'Polygon': makeArrayPusher(readPolygon)\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readMultiGeometry(node, objectStack) {\n  const geometries = pushParseAndPop([],\n    MULTI_GEOMETRY_PARSERS, node, objectStack);\n  if (!geometries) {\n    return null;\n  }\n  if (geometries.length === 0) {\n    return new GeometryCollection(geometries);\n  }\n  let multiGeometry;\n  let homogeneous = true;\n  const type = geometries[0].getType();\n  let geometry;\n  for (let i = 1, ii = geometries.length; i < ii; ++i) {\n    geometry = geometries[i];\n    if (geometry.getType() != type) {\n      homogeneous = false;\n      break;\n    }\n  }\n  if (homogeneous) {\n    let layout;\n    let flatCoordinates;\n    if (type == GeometryType.POINT) {\n      const point = geometries[0];\n      layout = point.getLayout();\n      flatCoordinates = point.getFlatCoordinates();\n      for (let i = 1, ii = geometries.length; i < ii; ++i) {\n        geometry = geometries[i];\n        extend(flatCoordinates, geometry.getFlatCoordinates());\n      }\n      multiGeometry = new MultiPoint(flatCoordinates, layout);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == GeometryType.LINE_STRING) {\n      multiGeometry = new MultiLineString(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == GeometryType.POLYGON) {\n      multiGeometry = new MultiPolygon(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == GeometryType.GEOMETRY_COLLECTION) {\n      multiGeometry = new GeometryCollection(geometries);\n    } else {\n      assert(false, 37); // Unknown geometry type found\n    }\n  } else {\n    multiGeometry = new GeometryCollection(geometries);\n  }\n  return (\n    /** @type {import(\"../geom/Geometry.js\").default} */ (multiGeometry)\n  );\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Point|undefined} Point.\n */\nfunction readPoint(node, objectStack) {\n  const properties = pushParseAndPop({},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node,\n    objectStack);\n  const flatCoordinates =\n      readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(flatCoordinates, GeometryLayout.XYZ);\n    point.setProperties(properties);\n    return point;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst FLAT_LINEAR_RINGS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'innerBoundaryIs': innerBoundaryIsParser,\n    'outerBoundaryIs': outerBoundaryIsParser\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readPolygon(node, objectStack) {\n  const properties = pushParseAndPop(/** @type {Object<string,*>} */ ({}),\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node,\n    objectStack);\n  const flatLinearRings = pushParseAndPop([null],\n    FLAT_LINEAR_RINGS_PARSERS, node, objectStack);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    for (let i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    const polygon = new Polygon(flatCoordinates, GeometryLayout.XYZ, ends);\n    polygon.setProperties(properties);\n    return polygon;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'IconStyle': iconStyleParser,\n    'LabelStyle': labelStyleParser,\n    'LineStyle': lineStyleParser,\n    'PolyStyle': polyStyleParser\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>} Style.\n */\nfunction readStyle(node, objectStack) {\n  const styleObject = pushParseAndPop(\n    {}, STYLE_PARSERS, node, objectStack);\n  if (!styleObject) {\n    return null;\n  }\n  let fillStyle = /** @type {Fill} */\n      ('fillStyle' in styleObject ?\n        styleObject['fillStyle'] : DEFAULT_FILL_STYLE);\n  const fill = /** @type {boolean|undefined} */ (styleObject['fill']);\n  if (fill !== undefined && !fill) {\n    fillStyle = null;\n  }\n  let imageStyle;\n  if ('imageStyle' in styleObject) {\n    if (styleObject['imageStyle'] != DEFAULT_NO_IMAGE_STYLE) {\n      imageStyle = styleObject['imageStyle'];\n    }\n  } else {\n    imageStyle = DEFAULT_IMAGE_STYLE;\n  }\n  const textStyle = /** @type {Text} */\n      ('textStyle' in styleObject ?\n        styleObject['textStyle'] : DEFAULT_TEXT_STYLE);\n  let strokeStyle = /** @type {Stroke} */\n      ('strokeStyle' in styleObject ?\n        styleObject['strokeStyle'] : DEFAULT_STROKE_STYLE);\n  const outline = /** @type {boolean|undefined} */\n      (styleObject['outline']);\n  if (outline !== undefined && !outline) {\n    strokeStyle = null;\n  }\n  return [new Style({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle,\n    zIndex: undefined // FIXME\n  })];\n}\n\n\n/**\n * Reads an array of geometries and creates arrays for common geometry\n * properties. Then sets them to the multi geometry.\n * @param {MultiPoint|MultiLineString|MultiPolygon} multiGeometry A multi-geometry.\n * @param {Array<import(\"../geom/Geometry.js\").default>} geometries List of geometries.\n */\nfunction setCommonGeometryProperties(multiGeometry, geometries) {\n  const ii = geometries.length;\n  const extrudes = new Array(geometries.length);\n  const tessellates = new Array(geometries.length);\n  const altitudeModes = new Array(geometries.length);\n  let hasExtrude, hasTessellate, hasAltitudeMode;\n  hasExtrude = hasTessellate = hasAltitudeMode = false;\n  for (let i = 0; i < ii; ++i) {\n    const geometry = geometries[i];\n    extrudes[i] = geometry.get('extrude');\n    tessellates[i] = geometry.get('tessellate');\n    altitudeModes[i] = geometry.get('altitudeMode');\n    hasExtrude = hasExtrude || extrudes[i] !== undefined;\n    hasTessellate = hasTessellate || tessellates[i] !== undefined;\n    hasAltitudeMode = hasAltitudeMode || altitudeModes[i];\n  }\n  if (hasExtrude) {\n    multiGeometry.set('extrude', extrudes);\n  }\n  if (hasTessellate) {\n    multiGeometry.set('tessellate', tessellates);\n  }\n  if (hasAltitudeMode) {\n    multiGeometry.set('altitudeMode', altitudeModes);\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst DATA_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'displayName': makeObjectPropertySetter(readString),\n    'value': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction dataParser(node, objectStack) {\n  const name = node.getAttribute('name');\n  parseNode(DATA_PARSERS, node, objectStack);\n  const featureObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  if (name !== null) {\n    featureObject[name] = featureObject.value;\n  } else if (featureObject.displayName !== null) {\n    featureObject[featureObject.displayName] = featureObject.value;\n  }\n  delete featureObject['value'];\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst EXTENDED_DATA_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Data': dataParser,\n    'SchemaData': schemaDataParser\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction extendedDataParser(node, objectStack) {\n  parseNode(EXTENDED_DATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction regionParser(node, objectStack) {\n  parseNode(REGION_PARSERS, node, objectStack);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst PAIR_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Style': makeObjectPropertySetter(readStyle),\n    'key': makeObjectPropertySetter(readString),\n    'styleUrl': makeObjectPropertySetter(readURI)\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction pairDataParser(node, objectStack) {\n  const pairObject = pushParseAndPop(\n    {}, PAIR_PARSERS, node, objectStack);\n  if (!pairObject) {\n    return;\n  }\n  const key = /** @type {string|undefined} */\n      (pairObject['key']);\n  if (key && key == 'normal') {\n    const styleUrl = /** @type {string|undefined} */\n        (pairObject['styleUrl']);\n    if (styleUrl) {\n      objectStack[objectStack.length - 1] = styleUrl;\n    }\n    const style = /** @type {Style} */\n        (pairObject['Style']);\n    if (style) {\n      objectStack[objectStack.length - 1] = style;\n    }\n  }\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction placemarkStyleMapParser(node, objectStack) {\n  const styleMapValue = readStyleMapValue(node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  const placemarkObject = objectStack[objectStack.length - 1];\n  if (Array.isArray(styleMapValue)) {\n    placemarkObject['Style'] = styleMapValue;\n  } else if (typeof styleMapValue === 'string') {\n    placemarkObject['styleUrl'] = styleMapValue;\n  } else {\n    assert(false, 38); // `styleMapValue` has an unknown type\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst SCHEMA_DATA_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'SimpleData': simpleDataParser\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction schemaDataParser(node, objectStack) {\n  parseNode(SCHEMA_DATA_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction simpleDataParser(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (name !== null) {\n    const data = readString(node);\n    const featureObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    featureObject[name] = data;\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst LAT_LON_ALT_BOX_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'altitudeMode': makeObjectPropertySetter(readString),\n    'minAltitude': makeObjectPropertySetter(readDecimal),\n    'maxAltitude': makeObjectPropertySetter(readDecimal),\n    'north': makeObjectPropertySetter(readDecimal),\n    'south': makeObjectPropertySetter(readDecimal),\n    'east': makeObjectPropertySetter(readDecimal),\n    'west': makeObjectPropertySetter(readDecimal)\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction latLonAltBoxParser(node, objectStack) {\n  const object = pushParseAndPop({}, LAT_LON_ALT_BOX_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const regionObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const extent = [\n    parseFloat(object['west']),\n    parseFloat(object['south']),\n    parseFloat(object['east']),\n    parseFloat(object['north'])\n  ];\n  regionObject['extent'] = extent;\n  regionObject['altitudeMode'] = object['altitudeMode'];\n  regionObject['minAltitude'] = parseFloat(object['minAltitude']);\n  regionObject['maxAltitude'] = parseFloat(object['maxAltitude']);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst LOD_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'minLodPixels': makeObjectPropertySetter(readDecimal),\n    'maxLodPixels': makeObjectPropertySetter(readDecimal),\n    'minFadeExtent': makeObjectPropertySetter(readDecimal),\n    'maxFadeExtent': makeObjectPropertySetter(readDecimal)\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lodParser(node, objectStack) {\n  const object = pushParseAndPop({}, LOD_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const lodObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  lodObject['minLodPixels'] = parseFloat(object['minLodPixels']);\n  lodObject['maxLodPixels'] = parseFloat(object['maxLodPixels']);\n  lodObject['minFadeExtent'] = parseFloat(object['minFadeExtent']);\n  lodObject['maxFadeExtent'] = parseFloat(object['maxFadeExtent']);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst INNER_BOUNDARY_IS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LinearRing': makeReplacer(readFlatLinearRing)\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction innerBoundaryIsParser(node, objectStack) {\n  /** @type {Array<number>|undefined} */\n  const flatLinearRing = pushParseAndPop(undefined,\n    INNER_BOUNDARY_IS_PARSERS, node, objectStack);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst OUTER_BOUNDARY_IS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LinearRing': makeReplacer(readFlatLinearRing)\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction outerBoundaryIsParser(node, objectStack) {\n  /** @type {Array<number>|undefined} */\n  const flatLinearRing = pushParseAndPop(undefined,\n    OUTER_BOUNDARY_IS_PARSERS, node, objectStack);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction linkParser(node, objectStack) {\n  parseNode(LINK_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction whenParser(node, objectStack) {\n  const gxTrackObject = /** @type {GxTrackObject} */\n      (objectStack[objectStack.length - 1]);\n  const whens = gxTrackObject.whens;\n  const s = getAllTextContent(node, false);\n  const when = Date.parse(s);\n  whens.push(isNaN(when) ? 0 : when);\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the color to.\n * @param {import(\"../color.js\").Color|string} color Color.\n */\nfunction writeColorTextNode(node, color) {\n  const rgba = asArray(color);\n  const opacity = (rgba.length == 4) ? rgba[3] : 1;\n  /** @type {Array<string|number>} */\n  const abgr = [opacity * 255, rgba[2], rgba[1], rgba[0]];\n  for (let i = 0; i < 4; ++i) {\n    const hex = Math.floor(/** @type {number} */ (abgr[i])).toString(16);\n    abgr[i] = (hex.length == 1) ? '0' + hex : hex;\n  }\n  writeStringTextNode(node, abgr.join(''));\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the coordinates to.\n * @param {Array<number>} coordinates Coordinates.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeCoordinatesTextNode(node, coordinates, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n\n  const layout = context['layout'];\n  const stride = context['stride'];\n\n  let dimension;\n  if (layout == GeometryLayout.XY ||\n      layout == GeometryLayout.XYM) {\n    dimension = 2;\n  } else if (layout == GeometryLayout.XYZ ||\n      layout == GeometryLayout.XYZM) {\n    dimension = 3;\n  } else {\n    assert(false, 34); // Invalid geometry layout\n  }\n\n  const ii = coordinates.length;\n  let text = '';\n  if (ii > 0) {\n    text += coordinates[0];\n    for (let d = 1; d < dimension; ++d) {\n      text += ',' + coordinates[d];\n    }\n    for (let i = stride; i < ii; i += stride) {\n      text += ' ' + coordinates[i];\n      for (let d = 1; d < dimension; ++d) {\n        text += ',' + coordinates[i + d];\n      }\n    }\n  }\n  writeStringTextNode(node, text);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nconst EXTENDEDDATA_NODE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Data': makeChildAppender(writeDataNode),\n    'value': makeChildAppender(writeDataNodeValue),\n    'displayName': makeChildAppender(writeDataNodeName)\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {{name: *, value: *}} pair Name value pair.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeDataNode(node, pair, objectStack) {\n  node.setAttribute('name', pair.name);\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const value = pair.value;\n\n  if (typeof value == 'object') {\n    if (value !== null && value.displayName) {\n      pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS,\n        OBJECT_PROPERTY_NODE_FACTORY, [value.displayName], objectStack, ['displayName']);\n    }\n\n    if (value !== null && value.value) {\n      pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS,\n        OBJECT_PROPERTY_NODE_FACTORY, [value.value], objectStack, ['value']);\n    }\n  } else {\n    pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY, [value], objectStack, ['value']);\n  }\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the name to.\n * @param {string} name DisplayName.\n */\nfunction writeDataNodeName(node, name) {\n  writeCDATASection(node, name);\n}\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the value to.\n * @param {string} value Value.\n */\nfunction writeDataNodeValue(node, value) {\n  writeStringTextNode(node, value);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nconst DOCUMENT_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Placemark': makeChildAppender(writePlacemark)\n  });\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nconst DOCUMENT_NODE_FACTORY = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return createElementNS(parentNode.namespaceURI, 'Placemark');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<Feature>} features Features.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writeDocument(node, features, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(context, DOCUMENT_SERIALIZERS,\n    DOCUMENT_NODE_FACTORY, features, objectStack, undefined,\n    this);\n}\n\n\n/**\n * A factory for creating Data nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nconst DATA_NODE_FACTORY = makeSimpleNodeFactory('Data');\n\n\n/**\n * @param {Node} node Node.\n * @param {{names: Array<string>, values: (Array<*>)}} namesAndValues Names and values.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeExtendedData(node, namesAndValues, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const names = namesAndValues.names;\n  const values = namesAndValues.values;\n  const length = names.length;\n\n  for (let i = 0; i < length; i++) {\n    pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS,\n      DATA_NODE_FACTORY, [{name: names[i], value: values[i]}], objectStack);\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nconst ICON_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'href'\n  ],\n  makeStructureNS(GX_NAMESPACE_URIS, [\n    'x', 'y', 'w', 'h'\n  ]));\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nconst ICON_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'href': makeChildAppender(writeStringTextNode)\n  }, makeStructureNS(\n    GX_NAMESPACE_URIS, {\n      'x': makeChildAppender(writeDecimalTextNode),\n      'y': makeChildAppender(writeDecimalTextNode),\n      'w': makeChildAppender(writeDecimalTextNode),\n      'h': makeChildAppender(writeDecimalTextNode)\n    }));\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nconst GX_NODE_FACTORY = function(value, objectStack, opt_nodeName) {\n  return createElementNS(GX_NAMESPACE_URIS[0],\n    'gx:' + opt_nodeName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} icon Icon object.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIcon(node, icon, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const parentNode = objectStack[objectStack.length - 1].node;\n  let orderedKeys = ICON_SEQUENCE[parentNode.namespaceURI];\n  let values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(context,\n    ICON_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n  orderedKeys =\n      ICON_SEQUENCE[GX_NAMESPACE_URIS[0]];\n  values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(context, ICON_SERIALIZERS,\n    GX_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nconst ICON_STYLE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'scale', 'heading', 'Icon', 'hotSpot'\n  ]);\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nconst ICON_STYLE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Icon': makeChildAppender(writeIcon),\n    'heading': makeChildAppender(writeDecimalTextNode),\n    'hotSpot': makeChildAppender(writeVec2),\n    'scale': makeChildAppender(writeScaleTextNode)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {import(\"../style/Icon.js\").default} style Icon style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIconStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const properties = {};\n  const src = style.getSrc();\n  const size = style.getSize();\n  const iconImageSize = style.getImageSize();\n  const iconProperties = {\n    'href': src\n  };\n\n  if (size) {\n    iconProperties['w'] = size[0];\n    iconProperties['h'] = size[1];\n    const anchor = style.getAnchor(); // top-left\n    const origin = style.getOrigin(); // top-left\n\n    if (origin && iconImageSize && origin[0] !== 0 && origin[1] !== size[1]) {\n      iconProperties['x'] = origin[0];\n      iconProperties['y'] = iconImageSize[1] - (origin[1] + size[1]);\n    }\n\n    if (anchor && (anchor[0] !== size[0] / 2 || anchor[1] !== size[1] / 2)) {\n      const /** @type {Vec2} */ hotSpot = {\n        x: anchor[0],\n        xunits: IconAnchorUnits.PIXELS,\n        y: size[1] - anchor[1],\n        yunits: IconAnchorUnits.PIXELS\n      };\n      properties['hotSpot'] = hotSpot;\n    }\n  }\n\n  properties['Icon'] = iconProperties;\n\n  const scale = style.getScale();\n  if (scale !== 1) {\n    properties['scale'] = scale;\n  }\n\n  const rotation = style.getRotation();\n  if (rotation !== 0) {\n    properties['heading'] = rotation; // 0-360\n  }\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = ICON_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, ICON_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nconst LABEL_STYLE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'color', 'scale'\n  ]);\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nconst LABEL_STYLE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'color': makeChildAppender(writeColorTextNode),\n    'scale': makeChildAppender(writeScaleTextNode)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Text} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLabelStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const properties = {};\n  const fill = style.getFill();\n  if (fill) {\n    properties['color'] = fill.getColor();\n  }\n  const scale = style.getScale();\n  if (scale && scale !== 1) {\n    properties['scale'] = scale;\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys =\n      LABEL_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, LABEL_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nconst LINE_STYLE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'color', 'width'\n  ]);\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nconst LINE_STYLE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'color': makeChildAppender(writeColorTextNode),\n    'width': makeChildAppender(writeDecimalTextNode)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Stroke} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLineStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const properties = {\n    'color': style.getColor(),\n    'width': style.getWidth()\n  };\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = LINE_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, LINE_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'Point',\n  'LineString': 'LineString',\n  'LinearRing': 'LinearRing',\n  'Polygon': 'Polygon',\n  'MultiPoint': 'MultiGeometry',\n  'MultiLineString': 'MultiGeometry',\n  'MultiPolygon': 'MultiGeometry',\n  'GeometryCollection': 'MultiGeometry'\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nconst GEOMETRY_NODE_FACTORY = function(value, objectStack, opt_nodeName) {\n  if (value) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(parentNode.namespaceURI,\n      GEOMETRY_TYPE_TO_NODENAME[/** @type {import(\"../geom/Geometry.js\").default} */ (value).getType()]);\n  }\n};\n\n\n/**\n * A factory for creating Point nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst POINT_NODE_FACTORY = makeSimpleNodeFactory('Point');\n\n\n/**\n * A factory for creating LineString nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst LINE_STRING_NODE_FACTORY = makeSimpleNodeFactory('LineString');\n\n\n/**\n * A factory for creating LinearRing nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst LINEAR_RING_NODE_FACTORY = makeSimpleNodeFactory('LinearRing');\n\n\n/**\n * A factory for creating Polygon nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst POLYGON_NODE_FACTORY = makeSimpleNodeFactory('Polygon');\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nconst MULTI_GEOMETRY_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LineString': makeChildAppender(\n      writePrimitiveGeometry),\n    'Point': makeChildAppender(\n      writePrimitiveGeometry),\n    'Polygon': makeChildAppender(writePolygon),\n    'GeometryCollection': makeChildAppender(\n      writeMultiGeometry)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeMultiGeometry(node, geometry, objectStack) {\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const context = {node: node};\n  const type = geometry.getType();\n  /** @type {Array<import(\"../geom/Geometry.js\").default>} */\n  let geometries;\n  /** @type {function(*, Array<*>, string=): (Node|undefined)} */\n  let factory;\n  if (type == GeometryType.GEOMETRY_COLLECTION) {\n    geometries = /** @type {GeometryCollection} */ (geometry).getGeometries();\n    factory = GEOMETRY_NODE_FACTORY;\n  } else if (type == GeometryType.MULTI_POINT) {\n    geometries = /** @type {MultiPoint} */ (geometry).getPoints();\n    factory = POINT_NODE_FACTORY;\n  } else if (type == GeometryType.MULTI_LINE_STRING) {\n    geometries =\n        (/** @type {MultiLineString} */ (geometry)).getLineStrings();\n    factory = LINE_STRING_NODE_FACTORY;\n  } else if (type == GeometryType.MULTI_POLYGON) {\n    geometries =\n        (/** @type {MultiPolygon} */ (geometry)).getPolygons();\n    factory = POLYGON_NODE_FACTORY;\n  } else {\n    assert(false, 39); // Unknown geometry type\n  }\n  pushSerializeAndPop(context,\n    MULTI_GEOMETRY_SERIALIZERS, factory,\n    geometries, objectStack);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nconst BOUNDARY_IS_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LinearRing': makeChildAppender(\n      writePrimitiveGeometry)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {import(\"../geom/LinearRing.js\").default} linearRing Linear ring.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeBoundaryIs(node, linearRing, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(context,\n    BOUNDARY_IS_SERIALIZERS,\n    LINEAR_RING_NODE_FACTORY, [linearRing], objectStack);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nconst PLACEMARK_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ExtendedData': makeChildAppender(writeExtendedData),\n    'MultiGeometry': makeChildAppender(writeMultiGeometry),\n    'LineString': makeChildAppender(writePrimitiveGeometry),\n    'LinearRing': makeChildAppender(writePrimitiveGeometry),\n    'Point': makeChildAppender(writePrimitiveGeometry),\n    'Polygon': makeChildAppender(writePolygon),\n    'Style': makeChildAppender(writeStyle),\n    'address': makeChildAppender(writeStringTextNode),\n    'description': makeChildAppender(writeStringTextNode),\n    'name': makeChildAppender(writeStringTextNode),\n    'open': makeChildAppender(writeBooleanTextNode),\n    'phoneNumber': makeChildAppender(writeStringTextNode),\n    'styleUrl': makeChildAppender(writeStringTextNode),\n    'visibility': makeChildAppender(writeBooleanTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nconst PLACEMARK_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'name', 'open', 'visibility', 'address', 'phoneNumber', 'description',\n    'styleUrl', 'Style'\n  ]);\n\n\n/**\n * A factory for creating ExtendedData nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nconst EXTENDEDDATA_NODE_FACTORY = makeSimpleNodeFactory('ExtendedData');\n\n\n/**\n * FIXME currently we do serialize arbitrary/custom feature properties\n * (ExtendedData).\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writePlacemark(node, feature, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n\n  // set id\n  if (feature.getId()) {\n    node.setAttribute('id', /** @type {string} */ (feature.getId()));\n  }\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = feature.getProperties();\n\n  // don't export these to ExtendedData\n  const filter = {'address': 1, 'description': 1, 'name': 1, 'open': 1,\n    'phoneNumber': 1, 'styleUrl': 1, 'visibility': 1};\n  filter[feature.getGeometryName()] = 1;\n  const keys = Object.keys(properties || {}).sort().filter(function(v) {\n    return !filter[v];\n  });\n\n  if (keys.length > 0) {\n    const sequence = makeSequence(properties, keys);\n    const namesAndValues = {names: keys, values: sequence};\n    pushSerializeAndPop(context, PLACEMARK_SERIALIZERS,\n      EXTENDEDDATA_NODE_FACTORY, [namesAndValues], objectStack);\n  }\n\n  const styleFunction = feature.getStyleFunction();\n  if (styleFunction) {\n    // FIXME the styles returned by the style function are supposed to be\n    // resolution-independent here\n    const styles = styleFunction(feature, 0);\n    if (styles) {\n      const style = Array.isArray(styles) ? styles[0] : styles;\n      if (this.writeStyles_) {\n        properties['Style'] = style;\n      }\n      const textStyle = style.getText();\n      if (textStyle) {\n        properties['name'] = textStyle.getText();\n      }\n    }\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = PLACEMARK_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, PLACEMARK_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n\n  // serialize geometry\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (transformWithOptions(geometry, true, options));\n  }\n  pushSerializeAndPop(context, PLACEMARK_SERIALIZERS,\n    GEOMETRY_NODE_FACTORY, [geometry], objectStack);\n}\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nconst PRIMITIVE_GEOMETRY_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'extrude', 'tessellate', 'altitudeMode', 'coordinates'\n  ]);\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nconst PRIMITIVE_GEOMETRY_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'extrude': makeChildAppender(writeBooleanTextNode),\n    'tessellate': makeChildAppender(writeBooleanTextNode),\n    'altitudeMode': makeChildAppender(writeStringTextNode),\n    'coordinates': makeChildAppender(writeCoordinatesTextNode)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePrimitiveGeometry(node, geometry, objectStack) {\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  context['layout'] = geometry.getLayout();\n  context['stride'] = geometry.getStride();\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = geometry.getProperties();\n  properties.coordinates = flatCoordinates;\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = PRIMITIVE_GEOMETRY_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, PRIMITIVE_GEOMETRY_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nconst POLYGON_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'outerBoundaryIs': makeChildAppender(\n      writeBoundaryIs),\n    'innerBoundaryIs': makeChildAppender(\n      writeBoundaryIs)\n  });\n\n\n/**\n * A factory for creating innerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst INNER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('innerBoundaryIs');\n\n\n/**\n * A factory for creating outerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst OUTER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('outerBoundaryIs');\n\n\n/**\n * @param {Node} node Node.\n * @param {Polygon} polygon Polygon.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolygon(node, polygon, objectStack) {\n  const linearRings = polygon.getLinearRings();\n  const outerRing = linearRings.shift();\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  // inner rings\n  pushSerializeAndPop(context,\n    POLYGON_SERIALIZERS,\n    INNER_BOUNDARY_NODE_FACTORY,\n    linearRings, objectStack);\n  // outer ring\n  pushSerializeAndPop(context,\n    POLYGON_SERIALIZERS,\n    OUTER_BOUNDARY_NODE_FACTORY,\n    [outerRing], objectStack);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nconst POLY_STYLE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'color': makeChildAppender(writeColorTextNode)\n  });\n\n\n/**\n * A factory for creating coordinates nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst COLOR_NODE_FACTORY = makeSimpleNodeFactory('color');\n\n\n/**\n * @param {Node} node Node.\n * @param {Fill} style Style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolyStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(context, POLY_STYLE_SERIALIZERS,\n    COLOR_NODE_FACTORY, [style.getColor()], objectStack);\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the scale to.\n * @param {number|undefined} scale Scale.\n */\nfunction writeScaleTextNode(node, scale) {\n  // the Math is to remove any excess decimals created by float arithmetic\n  writeDecimalTextNode(node,\n    Math.round(scale * 1e6) / 1e6);\n}\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nconst STYLE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'IconStyle', 'LabelStyle', 'LineStyle', 'PolyStyle'\n  ]);\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nconst STYLE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'IconStyle': makeChildAppender(writeIconStyle),\n    'LabelStyle': makeChildAppender(writeLabelStyle),\n    'LineStyle': makeChildAppender(writeLineStyle),\n    'PolyStyle': makeChildAppender(writePolyStyle)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Style} style Style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const properties = {};\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  if (imageStyle && typeof /** @type {?} */ (imageStyle).getSrc === 'function') {\n    properties['IconStyle'] = imageStyle;\n  }\n  if (textStyle) {\n    properties['LabelStyle'] = textStyle;\n  }\n  if (strokeStyle) {\n    properties['LineStyle'] = strokeStyle;\n  }\n  if (fillStyle) {\n    properties['PolyStyle'] = fillStyle;\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Element} node Node to append a TextNode with the Vec2 to.\n * @param {Vec2} vec2 Vec2.\n */\nfunction writeVec2(node, vec2) {\n  node.setAttribute('x', String(vec2.x));\n  node.setAttribute('y', String(vec2.y));\n  node.setAttribute('xunits', vec2.xunits);\n  node.setAttribute('yunits', vec2.yunits);\n}\n\n\nexport default KML;\n"]},"metadata":{},"sourceType":"module"}