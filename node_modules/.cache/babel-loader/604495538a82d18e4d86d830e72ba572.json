{"ast":null,"code":"/**\n * @module ol/layer/Group\n */\nimport { getUid } from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport { getChangeEventType } from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport { assert } from '../asserts.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getIntersection } from '../extent.js';\nimport BaseLayer from './Base.js';\nimport { assign, clear } from '../obj.js';\nimport SourceState from '../source/State.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n */\n\n/**\n * @enum {string}\n * @private\n */\n\nvar Property = {\n  LAYERS: 'layers'\n};\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\n\nvar LayerGroup =\n/*@__PURE__*/\nfunction (BaseLayer) {\n  function LayerGroup(opt_options) {\n    var options = opt_options || {};\n    var baseOptions =\n    /** @type {Options} */\n    assign({}, options);\n    delete baseOptions.layers;\n    var layers = options.layers;\n    BaseLayer.call(this, baseOptions);\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n\n    this.layersListenerKeys_ = [];\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n\n    this.listenerKeys_ = {};\n    listen(this, getChangeEventType(Property.LAYERS), this.handleLayersChanged_, this);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {\n          unique: true\n        });\n      } else {\n        assert(typeof\n        /** @type {?} */\n        layers.getArray === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {\n        unique: true\n      });\n    }\n\n    this.setLayers(layers);\n  }\n\n  if (BaseLayer) LayerGroup.__proto__ = BaseLayer;\n  LayerGroup.prototype = Object.create(BaseLayer && BaseLayer.prototype);\n  LayerGroup.prototype.constructor = LayerGroup;\n  /**\n   * @private\n   */\n\n  LayerGroup.prototype.handleLayerChange_ = function handleLayerChange_() {\n    this.changed();\n  };\n  /**\n   * @private\n   */\n\n\n  LayerGroup.prototype.handleLayersChanged_ = function handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n    var layers = this.getLayers();\n    this.layersListenerKeys_.push(listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this), listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this));\n\n    for (var id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n\n    clear(this.listenerKeys_);\n    var layersArray = layers.getArray();\n\n    for (var i = 0, ii = layersArray.length; i < ii; i++) {\n      var layer = layersArray[i];\n      this.listenerKeys_[getUid(layer)] = [listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this), listen(layer, EventType.CHANGE, this.handleLayerChange_, this)];\n    }\n\n    this.changed();\n  };\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n\n\n  LayerGroup.prototype.handleLayersAdd_ = function handleLayersAdd_(collectionEvent) {\n    var layer =\n    /** @type {import(\"./Base.js\").default} */\n    collectionEvent.element;\n    this.listenerKeys_[getUid(layer)] = [listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this), listen(layer, EventType.CHANGE, this.handleLayerChange_, this)];\n    this.changed();\n  };\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n\n\n  LayerGroup.prototype.handleLayersRemove_ = function handleLayersRemove_(collectionEvent) {\n    var layer =\n    /** @type {import(\"./Base.js\").default} */\n    collectionEvent.element;\n    var key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.changed();\n  };\n  /**\n   * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n\n\n  LayerGroup.prototype.getLayers = function getLayers() {\n    return (\n      /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */\n      this.get(Property.LAYERS)\n    );\n  };\n  /**\n   * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n\n\n  LayerGroup.prototype.setLayers = function setLayers(layers) {\n    this.set(Property.LAYERS, layers);\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  LayerGroup.prototype.getLayersArray = function getLayersArray(opt_array) {\n    var array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  LayerGroup.prototype.getLayerStatesArray = function getLayerStatesArray(opt_states) {\n    var states = opt_states !== undefined ? opt_states : [];\n    var pos = states.length;\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n    var ownLayerState = this.getLayerState();\n\n    for (var i = pos, ii = states.length; i < ii; i++) {\n      var layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(layerState.maxResolution, ownLayerState.maxResolution);\n      layerState.minResolution = Math.max(layerState.minResolution, ownLayerState.minResolution);\n\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n    }\n\n    return states;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  LayerGroup.prototype.getSourceState = function getSourceState() {\n    return SourceState.READY;\n  };\n\n  return LayerGroup;\n}(BaseLayer);\n\nexport default LayerGroup;","map":{"version":3,"sources":["../../../src/ol/layer/Group.js"],"names":["const","let","super"],"mappings":"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","sourcesContent":["/**\n * @module ol/layer/Group\n */\nimport {getUid} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {getChangeEventType} from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getIntersection} from '../extent.js';\nimport BaseLayer from './Base.js';\nimport {assign, clear} from '../obj.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n */\n\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers'\n};\n\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options=} opt_options Layer options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options || {};\n    const baseOptions = /** @type {Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    listen(this,\n      getChangeEventType(Property.LAYERS),\n      this.handleLayersChanged_, this);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof /** @type {?} */ (layers).getArray === 'function',\n          43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.listenerKeys_[getUid(layer)] = [\n        listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n        listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n      ];\n    }\n\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    this.listenerKeys_[getUid(layer)] = [\n      listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n    ];\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return (\n      /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (this.get(Property.LAYERS))\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function(layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states !== undefined ? opt_states : [];\n\n    const pos = states.length;\n\n    this.getLayers().forEach(function(layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution, ownLayerState.maxResolution);\n      layerState.minResolution = Math.max(\n        layerState.minResolution, ownLayerState.minResolution);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getSourceState() {\n    return SourceState.READY;\n  }\n}\n\n\nexport default LayerGroup;\n"]},"metadata":{},"sourceType":"module"}