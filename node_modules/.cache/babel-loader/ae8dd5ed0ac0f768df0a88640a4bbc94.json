{"ast":null,"code":"/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.2.2\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar gridOptionsWrapper_1 = require(\"../gridOptionsWrapper\");\n\nvar rowNode_1 = require(\"../entities/rowNode\");\n\nvar context_1 = require(\"../context/context\");\n\nvar eventService_1 = require(\"../eventService\");\n\nvar events_1 = require(\"../events\");\n\nvar constants_1 = require(\"../constants\");\n\nvar columnApi_1 = require(\"../columnController/columnApi\");\n\nvar gridApi_1 = require(\"../gridApi\");\n\nvar utils_1 = require(\"../utils\");\n\nvar PinnedRowModel =\n/** @class */\nfunction () {\n  function PinnedRowModel() {}\n\n  PinnedRowModel.prototype.init = function () {\n    this.setPinnedTopRowData(this.gridOptionsWrapper.getPinnedTopRowData());\n    this.setPinnedBottomRowData(this.gridOptionsWrapper.getPinnedBottomRowData());\n  };\n\n  PinnedRowModel.prototype.isEmpty = function (floating) {\n    var rows = floating === constants_1.Constants.PINNED_TOP ? this.pinnedTopRows : this.pinnedBottomRows;\n    return utils_1._.missingOrEmpty(rows);\n  };\n\n  PinnedRowModel.prototype.isRowsToRender = function (floating) {\n    return !this.isEmpty(floating);\n  };\n\n  PinnedRowModel.prototype.getRowAtPixel = function (pixel, floating) {\n    var rows = floating === constants_1.Constants.PINNED_TOP ? this.pinnedTopRows : this.pinnedBottomRows;\n\n    if (utils_1._.missingOrEmpty(rows)) {\n      return 0; // this should never happen, just in case, 0 is graceful failure\n    }\n\n    for (var i = 0; i < rows.length; i++) {\n      var rowNode = rows[i];\n      var rowTopPixel = rowNode.rowTop + rowNode.rowHeight - 1; // only need to range check against the top pixel, as we are going through the list\n      // in order, first row to hit the pixel wins\n\n      if (rowTopPixel >= pixel) {\n        return i;\n      }\n    }\n\n    return rows.length - 1;\n  };\n\n  PinnedRowModel.prototype.setPinnedTopRowData = function (rowData) {\n    this.pinnedTopRows = this.createNodesFromData(rowData, true);\n    var event = {\n      type: events_1.Events.EVENT_PINNED_ROW_DATA_CHANGED,\n      api: this.gridApi,\n      columnApi: this.columnApi\n    };\n    this.eventService.dispatchEvent(event);\n  };\n\n  PinnedRowModel.prototype.setPinnedBottomRowData = function (rowData) {\n    this.pinnedBottomRows = this.createNodesFromData(rowData, false);\n    var event = {\n      type: events_1.Events.EVENT_PINNED_ROW_DATA_CHANGED,\n      api: this.gridApi,\n      columnApi: this.columnApi\n    };\n    this.eventService.dispatchEvent(event);\n  };\n\n  PinnedRowModel.prototype.createNodesFromData = function (allData, isTop) {\n    var _this = this;\n\n    var rowNodes = [];\n\n    if (allData) {\n      var nextRowTop_1 = 0;\n      allData.forEach(function (dataItem, index) {\n        var rowNode = new rowNode_1.RowNode();\n\n        _this.context.wireBean(rowNode);\n\n        rowNode.data = dataItem;\n        rowNode.id = (isTop ? 't' : 'b') + \"-\" + index;\n        rowNode.rowPinned = isTop ? constants_1.Constants.PINNED_TOP : constants_1.Constants.PINNED_BOTTOM;\n        rowNode.setRowTop(nextRowTop_1);\n        rowNode.setRowHeight(_this.gridOptionsWrapper.getRowHeightForNode(rowNode).height);\n        rowNode.setRowIndex(index);\n        nextRowTop_1 += rowNode.rowHeight;\n        rowNodes.push(rowNode);\n      });\n    }\n\n    return rowNodes;\n  };\n\n  PinnedRowModel.prototype.getPinnedTopRowData = function () {\n    return this.pinnedTopRows;\n  };\n\n  PinnedRowModel.prototype.getPinnedBottomRowData = function () {\n    return this.pinnedBottomRows;\n  };\n\n  PinnedRowModel.prototype.getPinnedTopTotalHeight = function () {\n    return this.getTotalHeight(this.pinnedTopRows);\n  };\n\n  PinnedRowModel.prototype.getPinnedTopRowCount = function () {\n    return this.pinnedTopRows ? this.pinnedTopRows.length : 0;\n  };\n\n  PinnedRowModel.prototype.getPinnedBottomRowCount = function () {\n    return this.pinnedBottomRows ? this.pinnedBottomRows.length : 0;\n  };\n\n  PinnedRowModel.prototype.getPinnedTopRow = function (index) {\n    return this.pinnedTopRows[index];\n  };\n\n  PinnedRowModel.prototype.getPinnedBottomRow = function (index) {\n    return this.pinnedBottomRows[index];\n  };\n\n  PinnedRowModel.prototype.forEachPinnedTopRow = function (callback) {\n    if (utils_1._.missingOrEmpty(this.pinnedTopRows)) {\n      return;\n    }\n\n    this.pinnedTopRows.forEach(callback);\n  };\n\n  PinnedRowModel.prototype.forEachPinnedBottomRow = function (callback) {\n    if (utils_1._.missingOrEmpty(this.pinnedBottomRows)) {\n      return;\n    }\n\n    this.pinnedBottomRows.forEach(callback);\n  };\n\n  PinnedRowModel.prototype.getPinnedBottomTotalHeight = function () {\n    return this.getTotalHeight(this.pinnedBottomRows);\n  };\n\n  PinnedRowModel.prototype.getTotalHeight = function (rowNodes) {\n    if (!rowNodes || rowNodes.length === 0) {\n      return 0;\n    } else {\n      var lastNode = utils_1._.last(rowNodes);\n\n      return lastNode.rowTop + lastNode.rowHeight;\n    }\n  };\n\n  __decorate([context_1.Autowired('gridOptionsWrapper'), __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)], PinnedRowModel.prototype, \"gridOptionsWrapper\", void 0);\n\n  __decorate([context_1.Autowired('eventService'), __metadata(\"design:type\", eventService_1.EventService)], PinnedRowModel.prototype, \"eventService\", void 0);\n\n  __decorate([context_1.Autowired('context'), __metadata(\"design:type\", context_1.Context)], PinnedRowModel.prototype, \"context\", void 0);\n\n  __decorate([context_1.Autowired('columnApi'), __metadata(\"design:type\", columnApi_1.ColumnApi)], PinnedRowModel.prototype, \"columnApi\", void 0);\n\n  __decorate([context_1.Autowired('gridApi'), __metadata(\"design:type\", gridApi_1.GridApi)], PinnedRowModel.prototype, \"gridApi\", void 0);\n\n  __decorate([context_1.PostConstruct, __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", []), __metadata(\"design:returntype\", void 0)], PinnedRowModel.prototype, \"init\", null);\n\n  PinnedRowModel = __decorate([context_1.Bean('pinnedRowModel')], PinnedRowModel);\n  return PinnedRowModel;\n}();\n\nexports.PinnedRowModel = PinnedRowModel;","map":{"version":3,"sources":["/Users/dirkmennecke77/Desktop/Lageplan/node_modules/ag-grid-community/dist/lib/rowModels/pinnedRowModel.js"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__metadata","k","v","metadata","exports","value","gridOptionsWrapper_1","require","rowNode_1","context_1","eventService_1","events_1","constants_1","columnApi_1","gridApi_1","utils_1","PinnedRowModel","prototype","init","setPinnedTopRowData","gridOptionsWrapper","getPinnedTopRowData","setPinnedBottomRowData","getPinnedBottomRowData","isEmpty","floating","rows","Constants","PINNED_TOP","pinnedTopRows","pinnedBottomRows","_","missingOrEmpty","isRowsToRender","getRowAtPixel","pixel","rowNode","rowTopPixel","rowTop","rowHeight","rowData","createNodesFromData","event","type","Events","EVENT_PINNED_ROW_DATA_CHANGED","api","gridApi","columnApi","eventService","dispatchEvent","allData","isTop","_this","rowNodes","nextRowTop_1","forEach","dataItem","index","RowNode","context","wireBean","data","id","rowPinned","PINNED_BOTTOM","setRowTop","setRowHeight","getRowHeightForNode","height","setRowIndex","push","getPinnedTopTotalHeight","getTotalHeight","getPinnedTopRowCount","getPinnedBottomRowCount","getPinnedTopRow","getPinnedBottomRow","forEachPinnedTopRow","callback","forEachPinnedBottomRow","getPinnedBottomTotalHeight","lastNode","last","Autowired","GridOptionsWrapper","EventService","Context","ColumnApi","GridApi","PostConstruct","Function","Bean"],"mappings":"AAAA;;;;;;AAMA;;AACA,IAAIA,UAAU,GAAI,QAAQ,KAAKA,UAAd,IAA6B,UAAUC,UAAV,EAAsBC,MAAtB,EAA8BC,GAA9B,EAAmCC,IAAnC,EAAyC;AACnF,MAAIC,CAAC,GAAGC,SAAS,CAACC,MAAlB;AAAA,MAA0BC,CAAC,GAAGH,CAAC,GAAG,CAAJ,GAAQH,MAAR,GAAiBE,IAAI,KAAK,IAAT,GAAgBA,IAAI,GAAGK,MAAM,CAACC,wBAAP,CAAgCR,MAAhC,EAAwCC,GAAxC,CAAvB,GAAsEC,IAArH;AAAA,MAA2HO,CAA3H;AACA,MAAI,OAAOC,OAAP,KAAmB,QAAnB,IAA+B,OAAOA,OAAO,CAACC,QAAf,KAA4B,UAA/D,EAA2EL,CAAC,GAAGI,OAAO,CAACC,QAAR,CAAiBZ,UAAjB,EAA6BC,MAA7B,EAAqCC,GAArC,EAA0CC,IAA1C,CAAJ,CAA3E,KACK,KAAK,IAAIU,CAAC,GAAGb,UAAU,CAACM,MAAX,GAAoB,CAAjC,EAAoCO,CAAC,IAAI,CAAzC,EAA4CA,CAAC,EAA7C,EAAiD,IAAIH,CAAC,GAAGV,UAAU,CAACa,CAAD,CAAlB,EAAuBN,CAAC,GAAG,CAACH,CAAC,GAAG,CAAJ,GAAQM,CAAC,CAACH,CAAD,CAAT,GAAeH,CAAC,GAAG,CAAJ,GAAQM,CAAC,CAACT,MAAD,EAASC,GAAT,EAAcK,CAAd,CAAT,GAA4BG,CAAC,CAACT,MAAD,EAASC,GAAT,CAA7C,KAA+DK,CAAnE;AAC7E,SAAOH,CAAC,GAAG,CAAJ,IAASG,CAAT,IAAcC,MAAM,CAACM,cAAP,CAAsBb,MAAtB,EAA8BC,GAA9B,EAAmCK,CAAnC,CAAd,EAAqDA,CAA5D;AACH,CALD;;AAMA,IAAIQ,UAAU,GAAI,QAAQ,KAAKA,UAAd,IAA6B,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAC1D,MAAI,OAAON,OAAP,KAAmB,QAAnB,IAA+B,OAAOA,OAAO,CAACO,QAAf,KAA4B,UAA/D,EAA2E,OAAOP,OAAO,CAACO,QAAR,CAAiBF,CAAjB,EAAoBC,CAApB,CAAP;AAC9E,CAFD;;AAGAT,MAAM,CAACM,cAAP,CAAsBK,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,oBAAoB,GAAGC,OAAO,CAAC,uBAAD,CAAlC;;AACA,IAAIC,SAAS,GAAGD,OAAO,CAAC,qBAAD,CAAvB;;AACA,IAAIE,SAAS,GAAGF,OAAO,CAAC,oBAAD,CAAvB;;AACA,IAAIG,cAAc,GAAGH,OAAO,CAAC,iBAAD,CAA5B;;AACA,IAAII,QAAQ,GAAGJ,OAAO,CAAC,WAAD,CAAtB;;AACA,IAAIK,WAAW,GAAGL,OAAO,CAAC,cAAD,CAAzB;;AACA,IAAIM,WAAW,GAAGN,OAAO,CAAC,+BAAD,CAAzB;;AACA,IAAIO,SAAS,GAAGP,OAAO,CAAC,YAAD,CAAvB;;AACA,IAAIQ,OAAO,GAAGR,OAAO,CAAC,UAAD,CAArB;;AACA,IAAIS,cAAc;AAAG;AAAe,YAAY;AAC5C,WAASA,cAAT,GAA0B,CACzB;;AACDA,EAAAA,cAAc,CAACC,SAAf,CAAyBC,IAAzB,GAAgC,YAAY;AACxC,SAAKC,mBAAL,CAAyB,KAAKC,kBAAL,CAAwBC,mBAAxB,EAAzB;AACA,SAAKC,sBAAL,CAA4B,KAAKF,kBAAL,CAAwBG,sBAAxB,EAA5B;AACH,GAHD;;AAIAP,EAAAA,cAAc,CAACC,SAAf,CAAyBO,OAAzB,GAAmC,UAAUC,QAAV,EAAoB;AACnD,QAAIC,IAAI,GAAGD,QAAQ,KAAKb,WAAW,CAACe,SAAZ,CAAsBC,UAAnC,GAAgD,KAAKC,aAArD,GAAqE,KAAKC,gBAArF;AACA,WAAOf,OAAO,CAACgB,CAAR,CAAUC,cAAV,CAAyBN,IAAzB,CAAP;AACH,GAHD;;AAIAV,EAAAA,cAAc,CAACC,SAAf,CAAyBgB,cAAzB,GAA0C,UAAUR,QAAV,EAAoB;AAC1D,WAAO,CAAC,KAAKD,OAAL,CAAaC,QAAb,CAAR;AACH,GAFD;;AAGAT,EAAAA,cAAc,CAACC,SAAf,CAAyBiB,aAAzB,GAAyC,UAAUC,KAAV,EAAiBV,QAAjB,EAA2B;AAChE,QAAIC,IAAI,GAAGD,QAAQ,KAAKb,WAAW,CAACe,SAAZ,CAAsBC,UAAnC,GAAgD,KAAKC,aAArD,GAAqE,KAAKC,gBAArF;;AACA,QAAIf,OAAO,CAACgB,CAAR,CAAUC,cAAV,CAAyBN,IAAzB,CAAJ,EAAoC;AAChC,aAAO,CAAP,CADgC,CACtB;AACb;;AACD,SAAK,IAAI5B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG4B,IAAI,CAACnC,MAAzB,EAAiCO,CAAC,EAAlC,EAAsC;AAClC,UAAIsC,OAAO,GAAGV,IAAI,CAAC5B,CAAD,CAAlB;AACA,UAAIuC,WAAW,GAAGD,OAAO,CAACE,MAAR,GAAiBF,OAAO,CAACG,SAAzB,GAAqC,CAAvD,CAFkC,CAGlC;AACA;;AACA,UAAIF,WAAW,IAAIF,KAAnB,EAA0B;AACtB,eAAOrC,CAAP;AACH;AACJ;;AACD,WAAO4B,IAAI,CAACnC,MAAL,GAAc,CAArB;AACH,GAfD;;AAgBAyB,EAAAA,cAAc,CAACC,SAAf,CAAyBE,mBAAzB,GAA+C,UAAUqB,OAAV,EAAmB;AAC9D,SAAKX,aAAL,GAAqB,KAAKY,mBAAL,CAAyBD,OAAzB,EAAkC,IAAlC,CAArB;AACA,QAAIE,KAAK,GAAG;AACRC,MAAAA,IAAI,EAAEhC,QAAQ,CAACiC,MAAT,CAAgBC,6BADd;AAERC,MAAAA,GAAG,EAAE,KAAKC,OAFF;AAGRC,MAAAA,SAAS,EAAE,KAAKA;AAHR,KAAZ;AAKA,SAAKC,YAAL,CAAkBC,aAAlB,CAAgCR,KAAhC;AACH,GARD;;AASA1B,EAAAA,cAAc,CAACC,SAAf,CAAyBK,sBAAzB,GAAkD,UAAUkB,OAAV,EAAmB;AACjE,SAAKV,gBAAL,GAAwB,KAAKW,mBAAL,CAAyBD,OAAzB,EAAkC,KAAlC,CAAxB;AACA,QAAIE,KAAK,GAAG;AACRC,MAAAA,IAAI,EAAEhC,QAAQ,CAACiC,MAAT,CAAgBC,6BADd;AAERC,MAAAA,GAAG,EAAE,KAAKC,OAFF;AAGRC,MAAAA,SAAS,EAAE,KAAKA;AAHR,KAAZ;AAKA,SAAKC,YAAL,CAAkBC,aAAlB,CAAgCR,KAAhC;AACH,GARD;;AASA1B,EAAAA,cAAc,CAACC,SAAf,CAAyBwB,mBAAzB,GAA+C,UAAUU,OAAV,EAAmBC,KAAnB,EAA0B;AACrE,QAAIC,KAAK,GAAG,IAAZ;;AACA,QAAIC,QAAQ,GAAG,EAAf;;AACA,QAAIH,OAAJ,EAAa;AACT,UAAII,YAAY,GAAG,CAAnB;AACAJ,MAAAA,OAAO,CAACK,OAAR,CAAgB,UAAUC,QAAV,EAAoBC,KAApB,EAA2B;AACvC,YAAItB,OAAO,GAAG,IAAI5B,SAAS,CAACmD,OAAd,EAAd;;AACAN,QAAAA,KAAK,CAACO,OAAN,CAAcC,QAAd,CAAuBzB,OAAvB;;AACAA,QAAAA,OAAO,CAAC0B,IAAR,GAAeL,QAAf;AACArB,QAAAA,OAAO,CAAC2B,EAAR,GAAa,CAACX,KAAK,GAAG,GAAH,GAAS,GAAf,IAAsB,GAAtB,GAA4BM,KAAzC;AACAtB,QAAAA,OAAO,CAAC4B,SAAR,GAAoBZ,KAAK,GAAGxC,WAAW,CAACe,SAAZ,CAAsBC,UAAzB,GAAsChB,WAAW,CAACe,SAAZ,CAAsBsC,aAArF;AACA7B,QAAAA,OAAO,CAAC8B,SAAR,CAAkBX,YAAlB;AACAnB,QAAAA,OAAO,CAAC+B,YAAR,CAAqBd,KAAK,CAACjC,kBAAN,CAAyBgD,mBAAzB,CAA6ChC,OAA7C,EAAsDiC,MAA3E;AACAjC,QAAAA,OAAO,CAACkC,WAAR,CAAoBZ,KAApB;AACAH,QAAAA,YAAY,IAAInB,OAAO,CAACG,SAAxB;AACAe,QAAAA,QAAQ,CAACiB,IAAT,CAAcnC,OAAd;AACH,OAXD;AAYH;;AACD,WAAOkB,QAAP;AACH,GAnBD;;AAoBAtC,EAAAA,cAAc,CAACC,SAAf,CAAyBI,mBAAzB,GAA+C,YAAY;AACvD,WAAO,KAAKQ,aAAZ;AACH,GAFD;;AAGAb,EAAAA,cAAc,CAACC,SAAf,CAAyBM,sBAAzB,GAAkD,YAAY;AAC1D,WAAO,KAAKO,gBAAZ;AACH,GAFD;;AAGAd,EAAAA,cAAc,CAACC,SAAf,CAAyBuD,uBAAzB,GAAmD,YAAY;AAC3D,WAAO,KAAKC,cAAL,CAAoB,KAAK5C,aAAzB,CAAP;AACH,GAFD;;AAGAb,EAAAA,cAAc,CAACC,SAAf,CAAyByD,oBAAzB,GAAgD,YAAY;AACxD,WAAO,KAAK7C,aAAL,GAAqB,KAAKA,aAAL,CAAmBtC,MAAxC,GAAiD,CAAxD;AACH,GAFD;;AAGAyB,EAAAA,cAAc,CAACC,SAAf,CAAyB0D,uBAAzB,GAAmD,YAAY;AAC3D,WAAO,KAAK7C,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBvC,MAA9C,GAAuD,CAA9D;AACH,GAFD;;AAGAyB,EAAAA,cAAc,CAACC,SAAf,CAAyB2D,eAAzB,GAA2C,UAAUlB,KAAV,EAAiB;AACxD,WAAO,KAAK7B,aAAL,CAAmB6B,KAAnB,CAAP;AACH,GAFD;;AAGA1C,EAAAA,cAAc,CAACC,SAAf,CAAyB4D,kBAAzB,GAA8C,UAAUnB,KAAV,EAAiB;AAC3D,WAAO,KAAK5B,gBAAL,CAAsB4B,KAAtB,CAAP;AACH,GAFD;;AAGA1C,EAAAA,cAAc,CAACC,SAAf,CAAyB6D,mBAAzB,GAA+C,UAAUC,QAAV,EAAoB;AAC/D,QAAIhE,OAAO,CAACgB,CAAR,CAAUC,cAAV,CAAyB,KAAKH,aAA9B,CAAJ,EAAkD;AAC9C;AACH;;AACD,SAAKA,aAAL,CAAmB2B,OAAnB,CAA2BuB,QAA3B;AACH,GALD;;AAMA/D,EAAAA,cAAc,CAACC,SAAf,CAAyB+D,sBAAzB,GAAkD,UAAUD,QAAV,EAAoB;AAClE,QAAIhE,OAAO,CAACgB,CAAR,CAAUC,cAAV,CAAyB,KAAKF,gBAA9B,CAAJ,EAAqD;AACjD;AACH;;AACD,SAAKA,gBAAL,CAAsB0B,OAAtB,CAA8BuB,QAA9B;AACH,GALD;;AAMA/D,EAAAA,cAAc,CAACC,SAAf,CAAyBgE,0BAAzB,GAAsD,YAAY;AAC9D,WAAO,KAAKR,cAAL,CAAoB,KAAK3C,gBAAzB,CAAP;AACH,GAFD;;AAGAd,EAAAA,cAAc,CAACC,SAAf,CAAyBwD,cAAzB,GAA0C,UAAUnB,QAAV,EAAoB;AAC1D,QAAI,CAACA,QAAD,IAAaA,QAAQ,CAAC/D,MAAT,KAAoB,CAArC,EAAwC;AACpC,aAAO,CAAP;AACH,KAFD,MAGK;AACD,UAAI2F,QAAQ,GAAGnE,OAAO,CAACgB,CAAR,CAAUoD,IAAV,CAAe7B,QAAf,CAAf;;AACA,aAAO4B,QAAQ,CAAC5C,MAAT,GAAkB4C,QAAQ,CAAC3C,SAAlC;AACH;AACJ,GARD;;AASAvD,EAAAA,UAAU,CAAC,CACPyB,SAAS,CAAC2E,SAAV,CAAoB,oBAApB,CADO,EAEPpF,UAAU,CAAC,aAAD,EAAgBM,oBAAoB,CAAC+E,kBAArC,CAFH,CAAD,EAGPrE,cAAc,CAACC,SAHR,EAGmB,oBAHnB,EAGyC,KAAK,CAH9C,CAAV;;AAIAjC,EAAAA,UAAU,CAAC,CACPyB,SAAS,CAAC2E,SAAV,CAAoB,cAApB,CADO,EAEPpF,UAAU,CAAC,aAAD,EAAgBU,cAAc,CAAC4E,YAA/B,CAFH,CAAD,EAGPtE,cAAc,CAACC,SAHR,EAGmB,cAHnB,EAGmC,KAAK,CAHxC,CAAV;;AAIAjC,EAAAA,UAAU,CAAC,CACPyB,SAAS,CAAC2E,SAAV,CAAoB,SAApB,CADO,EAEPpF,UAAU,CAAC,aAAD,EAAgBS,SAAS,CAAC8E,OAA1B,CAFH,CAAD,EAGPvE,cAAc,CAACC,SAHR,EAGmB,SAHnB,EAG8B,KAAK,CAHnC,CAAV;;AAIAjC,EAAAA,UAAU,CAAC,CACPyB,SAAS,CAAC2E,SAAV,CAAoB,WAApB,CADO,EAEPpF,UAAU,CAAC,aAAD,EAAgBa,WAAW,CAAC2E,SAA5B,CAFH,CAAD,EAGPxE,cAAc,CAACC,SAHR,EAGmB,WAHnB,EAGgC,KAAK,CAHrC,CAAV;;AAIAjC,EAAAA,UAAU,CAAC,CACPyB,SAAS,CAAC2E,SAAV,CAAoB,SAApB,CADO,EAEPpF,UAAU,CAAC,aAAD,EAAgBc,SAAS,CAAC2E,OAA1B,CAFH,CAAD,EAGPzE,cAAc,CAACC,SAHR,EAGmB,SAHnB,EAG8B,KAAK,CAHnC,CAAV;;AAIAjC,EAAAA,UAAU,CAAC,CACPyB,SAAS,CAACiF,aADH,EAEP1F,UAAU,CAAC,aAAD,EAAgB2F,QAAhB,CAFH,EAGP3F,UAAU,CAAC,mBAAD,EAAsB,EAAtB,CAHH,EAIPA,UAAU,CAAC,mBAAD,EAAsB,KAAK,CAA3B,CAJH,CAAD,EAKPgB,cAAc,CAACC,SALR,EAKmB,MALnB,EAK2B,IAL3B,CAAV;;AAMAD,EAAAA,cAAc,GAAGhC,UAAU,CAAC,CACxByB,SAAS,CAACmF,IAAV,CAAe,gBAAf,CADwB,CAAD,EAExB5E,cAFwB,CAA3B;AAGA,SAAOA,cAAP;AACH,CA/ImC,EAApC;;AAgJAZ,OAAO,CAACY,cAAR,GAAyBA,cAAzB","sourcesContent":["/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.2.2\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar gridOptionsWrapper_1 = require(\"../gridOptionsWrapper\");\nvar rowNode_1 = require(\"../entities/rowNode\");\nvar context_1 = require(\"../context/context\");\nvar eventService_1 = require(\"../eventService\");\nvar events_1 = require(\"../events\");\nvar constants_1 = require(\"../constants\");\nvar columnApi_1 = require(\"../columnController/columnApi\");\nvar gridApi_1 = require(\"../gridApi\");\nvar utils_1 = require(\"../utils\");\nvar PinnedRowModel = /** @class */ (function () {\n    function PinnedRowModel() {\n    }\n    PinnedRowModel.prototype.init = function () {\n        this.setPinnedTopRowData(this.gridOptionsWrapper.getPinnedTopRowData());\n        this.setPinnedBottomRowData(this.gridOptionsWrapper.getPinnedBottomRowData());\n    };\n    PinnedRowModel.prototype.isEmpty = function (floating) {\n        var rows = floating === constants_1.Constants.PINNED_TOP ? this.pinnedTopRows : this.pinnedBottomRows;\n        return utils_1._.missingOrEmpty(rows);\n    };\n    PinnedRowModel.prototype.isRowsToRender = function (floating) {\n        return !this.isEmpty(floating);\n    };\n    PinnedRowModel.prototype.getRowAtPixel = function (pixel, floating) {\n        var rows = floating === constants_1.Constants.PINNED_TOP ? this.pinnedTopRows : this.pinnedBottomRows;\n        if (utils_1._.missingOrEmpty(rows)) {\n            return 0; // this should never happen, just in case, 0 is graceful failure\n        }\n        for (var i = 0; i < rows.length; i++) {\n            var rowNode = rows[i];\n            var rowTopPixel = rowNode.rowTop + rowNode.rowHeight - 1;\n            // only need to range check against the top pixel, as we are going through the list\n            // in order, first row to hit the pixel wins\n            if (rowTopPixel >= pixel) {\n                return i;\n            }\n        }\n        return rows.length - 1;\n    };\n    PinnedRowModel.prototype.setPinnedTopRowData = function (rowData) {\n        this.pinnedTopRows = this.createNodesFromData(rowData, true);\n        var event = {\n            type: events_1.Events.EVENT_PINNED_ROW_DATA_CHANGED,\n            api: this.gridApi,\n            columnApi: this.columnApi\n        };\n        this.eventService.dispatchEvent(event);\n    };\n    PinnedRowModel.prototype.setPinnedBottomRowData = function (rowData) {\n        this.pinnedBottomRows = this.createNodesFromData(rowData, false);\n        var event = {\n            type: events_1.Events.EVENT_PINNED_ROW_DATA_CHANGED,\n            api: this.gridApi,\n            columnApi: this.columnApi\n        };\n        this.eventService.dispatchEvent(event);\n    };\n    PinnedRowModel.prototype.createNodesFromData = function (allData, isTop) {\n        var _this = this;\n        var rowNodes = [];\n        if (allData) {\n            var nextRowTop_1 = 0;\n            allData.forEach(function (dataItem, index) {\n                var rowNode = new rowNode_1.RowNode();\n                _this.context.wireBean(rowNode);\n                rowNode.data = dataItem;\n                rowNode.id = (isTop ? 't' : 'b') + \"-\" + index;\n                rowNode.rowPinned = isTop ? constants_1.Constants.PINNED_TOP : constants_1.Constants.PINNED_BOTTOM;\n                rowNode.setRowTop(nextRowTop_1);\n                rowNode.setRowHeight(_this.gridOptionsWrapper.getRowHeightForNode(rowNode).height);\n                rowNode.setRowIndex(index);\n                nextRowTop_1 += rowNode.rowHeight;\n                rowNodes.push(rowNode);\n            });\n        }\n        return rowNodes;\n    };\n    PinnedRowModel.prototype.getPinnedTopRowData = function () {\n        return this.pinnedTopRows;\n    };\n    PinnedRowModel.prototype.getPinnedBottomRowData = function () {\n        return this.pinnedBottomRows;\n    };\n    PinnedRowModel.prototype.getPinnedTopTotalHeight = function () {\n        return this.getTotalHeight(this.pinnedTopRows);\n    };\n    PinnedRowModel.prototype.getPinnedTopRowCount = function () {\n        return this.pinnedTopRows ? this.pinnedTopRows.length : 0;\n    };\n    PinnedRowModel.prototype.getPinnedBottomRowCount = function () {\n        return this.pinnedBottomRows ? this.pinnedBottomRows.length : 0;\n    };\n    PinnedRowModel.prototype.getPinnedTopRow = function (index) {\n        return this.pinnedTopRows[index];\n    };\n    PinnedRowModel.prototype.getPinnedBottomRow = function (index) {\n        return this.pinnedBottomRows[index];\n    };\n    PinnedRowModel.prototype.forEachPinnedTopRow = function (callback) {\n        if (utils_1._.missingOrEmpty(this.pinnedTopRows)) {\n            return;\n        }\n        this.pinnedTopRows.forEach(callback);\n    };\n    PinnedRowModel.prototype.forEachPinnedBottomRow = function (callback) {\n        if (utils_1._.missingOrEmpty(this.pinnedBottomRows)) {\n            return;\n        }\n        this.pinnedBottomRows.forEach(callback);\n    };\n    PinnedRowModel.prototype.getPinnedBottomTotalHeight = function () {\n        return this.getTotalHeight(this.pinnedBottomRows);\n    };\n    PinnedRowModel.prototype.getTotalHeight = function (rowNodes) {\n        if (!rowNodes || rowNodes.length === 0) {\n            return 0;\n        }\n        else {\n            var lastNode = utils_1._.last(rowNodes);\n            return lastNode.rowTop + lastNode.rowHeight;\n        }\n    };\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], PinnedRowModel.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_1.Autowired('eventService'),\n        __metadata(\"design:type\", eventService_1.EventService)\n    ], PinnedRowModel.prototype, \"eventService\", void 0);\n    __decorate([\n        context_1.Autowired('context'),\n        __metadata(\"design:type\", context_1.Context)\n    ], PinnedRowModel.prototype, \"context\", void 0);\n    __decorate([\n        context_1.Autowired('columnApi'),\n        __metadata(\"design:type\", columnApi_1.ColumnApi)\n    ], PinnedRowModel.prototype, \"columnApi\", void 0);\n    __decorate([\n        context_1.Autowired('gridApi'),\n        __metadata(\"design:type\", gridApi_1.GridApi)\n    ], PinnedRowModel.prototype, \"gridApi\", void 0);\n    __decorate([\n        context_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], PinnedRowModel.prototype, \"init\", null);\n    PinnedRowModel = __decorate([\n        context_1.Bean('pinnedRowModel')\n    ], PinnedRowModel);\n    return PinnedRowModel;\n}());\nexports.PinnedRowModel = PinnedRowModel;\n"]},"metadata":{},"sourceType":"script"}