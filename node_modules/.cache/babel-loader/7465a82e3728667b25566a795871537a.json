{"ast":null,"code":"/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.2.2\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar utils_1 = require(\"../utils\");\n\nvar Context =\n/** @class */\nfunction () {\n  function Context(params, logger) {\n    this.beanWrappers = {};\n    this.registeredModules = [];\n    this.componentsMappedByName = {};\n    this.destroyed = false;\n\n    if (!params || !params.beans) {\n      return;\n    }\n\n    this.contextParams = params;\n    this.registeredModules = params.registeredModules;\n    this.logger = logger;\n    this.logger.log(\">> creating ag-Application Context\");\n    this.setupComponents();\n    this.createBeans();\n    var beanInstances = this.getBeanInstances();\n    this.wireBeans(beanInstances);\n    this.logger.log(\">> ag-Application Context ready - component is alive\");\n  }\n\n  Context.prototype.getBeanInstances = function () {\n    return utils_1._.mapObject(this.beanWrappers, function (beanEntry) {\n      return beanEntry.beanInstance;\n    });\n  };\n\n  Context.prototype.setupComponents = function () {\n    var _this = this;\n\n    if (this.contextParams.components) {\n      this.contextParams.components.forEach(function (componentMeta) {\n        return _this.addComponent(componentMeta);\n      });\n    }\n  };\n\n  Context.prototype.addComponent = function (componentMeta) {\n    // get name of the class as a string\n    // let className = _.getNameOfClass(ComponentClass);\n    // insert a dash after every capital letter\n    // let classEscaped = className.replace(/([A-Z])/g, \"-$1\").toLowerCase();\n    var classEscaped = componentMeta.componentName.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase(); // put all to upper case\n\n    var classUpperCase = classEscaped.toUpperCase(); // finally store\n\n    this.componentsMappedByName[classUpperCase] = componentMeta.theClass;\n  };\n\n  Context.prototype.createComponentFromElement = function (element, afterPreCreateCallback) {\n    var key = element.nodeName;\n\n    if (this.componentsMappedByName && this.componentsMappedByName[key]) {\n      var newComponent = new this.componentsMappedByName[key]();\n      this.wireBean(newComponent, afterPreCreateCallback);\n      return newComponent;\n    }\n\n    return null;\n  };\n\n  Context.prototype.wireBean = function (bean, afterPreCreateCallback) {\n    if (!bean) {\n      throw Error(\"Can't wire to bean since it is null\");\n    }\n\n    this.wireBeans([bean], afterPreCreateCallback);\n  };\n\n  Context.prototype.wireBeans = function (beanInstances, afterPreCreateCallback) {\n    this.autoWireBeans(beanInstances);\n    this.methodWireBeans(beanInstances);\n    this.callLifeCycleMethods(beanInstances, 'preConstructMethods'); // the callback sets the attributes, so the component has access to attributes\n    // before postConstruct methods in the component are executed\n\n    if (utils_1._.exists(afterPreCreateCallback)) {\n      beanInstances.forEach(afterPreCreateCallback);\n    }\n\n    this.callLifeCycleMethods(beanInstances, 'postConstructMethods');\n  };\n\n  Context.prototype.createBeans = function () {\n    var _this = this; // register all normal beans\n\n\n    this.contextParams.beans.forEach(this.createBeanWrapper.bind(this)); // register override beans, these will overwrite beans above of same name\n\n    if (this.contextParams.overrideBeans) {\n      this.contextParams.overrideBeans.forEach(this.createBeanWrapper.bind(this));\n    } // instantiate all beans - overridden beans will be left out\n\n\n    utils_1._.iterateObject(this.beanWrappers, function (key, beanEntry) {\n      var constructorParamsMeta;\n\n      if (beanEntry.bean.__agBeanMetaData && beanEntry.bean.__agBeanMetaData.autowireMethods && beanEntry.bean.__agBeanMetaData.autowireMethods.agConstructor) {\n        constructorParamsMeta = beanEntry.bean.__agBeanMetaData.autowireMethods.agConstructor;\n      }\n\n      var constructorParams = _this.getBeansForParameters(constructorParamsMeta, beanEntry.bean.name);\n\n      var newInstance = applyToConstructor(beanEntry.bean, constructorParams);\n      beanEntry.beanInstance = newInstance;\n\n      _this.logger.log(\"bean \" + _this.getBeanName(newInstance) + \" created\");\n    });\n  }; // tslint:disable-next-line\n\n\n  Context.prototype.createBeanWrapper = function (Bean) {\n    var metaData = Bean.__agBeanMetaData;\n\n    if (!metaData) {\n      var beanName = void 0;\n\n      if (Bean.prototype.constructor) {\n        beanName = Bean.prototype.constructor.name;\n      } else {\n        beanName = \"\" + Bean;\n      }\n\n      console.error(\"context item \" + beanName + \" is not a bean\");\n      return;\n    }\n\n    var beanEntry = {\n      bean: Bean,\n      beanInstance: null,\n      beanName: metaData.beanName\n    };\n    this.beanWrappers[metaData.beanName] = beanEntry;\n  };\n\n  Context.prototype.autoWireBeans = function (beanInstances) {\n    var _this = this;\n\n    beanInstances.forEach(function (beanInstance) {\n      _this.forEachMetaDataInHierarchy(beanInstance, function (metaData, beanName) {\n        var attributes = metaData.agClassAttributes;\n\n        if (!attributes) {\n          return;\n        }\n\n        attributes.forEach(function (attribute) {\n          var otherBean = _this.lookupBeanInstance(beanName, attribute.beanName, attribute.optional);\n\n          beanInstance[attribute.attributeName] = otherBean;\n        });\n      });\n    });\n  };\n\n  Context.prototype.methodWireBeans = function (beanInstances) {\n    var _this = this;\n\n    beanInstances.forEach(function (beanInstance) {\n      _this.forEachMetaDataInHierarchy(beanInstance, function (metaData, beanName) {\n        utils_1._.iterateObject(metaData.autowireMethods, function (methodName, wireParams) {\n          // skip constructor, as this is dealt with elsewhere\n          if (methodName === \"agConstructor\") {\n            return;\n          }\n\n          var initParams = _this.getBeansForParameters(wireParams, beanName);\n\n          beanInstance[methodName].apply(beanInstance, initParams);\n        });\n      });\n    });\n  };\n\n  Context.prototype.forEachMetaDataInHierarchy = function (beanInstance, callback) {\n    var prototype = Object.getPrototypeOf(beanInstance);\n\n    while (prototype != null) {\n      var constructor = prototype.constructor;\n\n      if (constructor.hasOwnProperty('__agBeanMetaData')) {\n        var metaData = constructor.__agBeanMetaData;\n        var beanName = this.getBeanName(constructor);\n        callback(metaData, beanName);\n      }\n\n      prototype = Object.getPrototypeOf(prototype);\n    }\n  };\n\n  Context.prototype.getBeanName = function (constructor) {\n    if (constructor.__agBeanMetaData && constructor.__agBeanMetaData.beanName) {\n      return constructor.__agBeanMetaData.beanName;\n    }\n\n    var constructorString = constructor.toString();\n    var beanName = constructorString.substring(9, constructorString.indexOf(\"(\"));\n    return beanName;\n  };\n\n  Context.prototype.getBeansForParameters = function (parameters, beanName) {\n    var _this = this;\n\n    var beansList = [];\n\n    if (parameters) {\n      utils_1._.iterateObject(parameters, function (paramIndex, otherBeanName) {\n        var otherBean = _this.lookupBeanInstance(beanName, otherBeanName);\n\n        beansList[Number(paramIndex)] = otherBean;\n      });\n    }\n\n    return beansList;\n  };\n\n  Context.prototype.lookupBeanInstance = function (wiringBean, beanName, optional) {\n    if (optional === void 0) {\n      optional = false;\n    }\n\n    if (beanName === \"context\") {\n      return this;\n    } else if (this.contextParams.seed && this.contextParams.seed.hasOwnProperty(beanName)) {\n      return this.contextParams.seed[beanName];\n    } else {\n      var beanEntry = this.beanWrappers[beanName];\n\n      if (beanEntry) {\n        return beanEntry.beanInstance;\n      }\n\n      if (!optional) {\n        console.error(\"ag-Grid: unable to find bean reference \" + beanName + \" while initialising \" + wiringBean);\n      }\n\n      return null;\n    }\n  };\n\n  Context.prototype.callLifeCycleMethods = function (beanInstances, lifeCycleMethod) {\n    var _this = this;\n\n    beanInstances.forEach(function (beanInstance) {\n      _this.forEachMetaDataInHierarchy(beanInstance, function (metaData) {\n        var methods = metaData[lifeCycleMethod];\n\n        if (!methods) {\n          return;\n        }\n\n        methods.forEach(function (methodName) {\n          return beanInstance[methodName]();\n        });\n      });\n    });\n  };\n\n  Context.prototype.getBean = function (name) {\n    return this.lookupBeanInstance(\"getBean\", name, true);\n  };\n\n  Context.prototype.getEnterpriseDefaultComponents = function () {\n    return this.contextParams.enterpriseDefaultComponents;\n  };\n\n  Context.prototype.destroy = function () {\n    // should only be able to destroy once\n    if (this.destroyed) {\n      return;\n    }\n\n    this.logger.log(\">> Shutting down ag-Application Context\");\n    var beanInstances = this.getBeanInstances();\n    this.callLifeCycleMethods(beanInstances, 'preDestroyMethods');\n    this.contextParams.seed = null;\n    this.destroyed = true;\n    this.logger.log(\">> ag-Application Context shut down - component is dead\");\n  };\n\n  Context.prototype.isModuleRegistered = function (moduleName) {\n    return this.registeredModules.indexOf(moduleName) !== -1;\n  };\n\n  return Context;\n}();\n\nexports.Context = Context; // taken from: http://stackoverflow.com/questions/3362471/how-can-i-call-a-javascript-constructor-using-call-or-apply\n// allows calling 'apply' on a constructor\n\nfunction applyToConstructor(constructor, argArray) {\n  var args = [null].concat(argArray);\n  var factoryFunction = constructor.bind.apply(constructor, args);\n  return new factoryFunction();\n}\n\nfunction PreConstruct(target, methodName, descriptor) {\n  var props = getOrCreateProps(target.constructor);\n\n  if (!props.postConstructMethods) {\n    props.preConstructMethods = [];\n  }\n\n  props.preConstructMethods.push(methodName);\n}\n\nexports.PreConstruct = PreConstruct;\n\nfunction PostConstruct(target, methodName, descriptor) {\n  var props = getOrCreateProps(target.constructor);\n\n  if (!props.postConstructMethods) {\n    props.postConstructMethods = [];\n  }\n\n  props.postConstructMethods.push(methodName);\n}\n\nexports.PostConstruct = PostConstruct;\n\nfunction PreDestroy(target, methodName, descriptor) {\n  var props = getOrCreateProps(target.constructor);\n\n  if (!props.preDestroyMethods) {\n    props.preDestroyMethods = [];\n  }\n\n  props.preDestroyMethods.push(methodName);\n}\n\nexports.PreDestroy = PreDestroy;\n\nfunction Bean(beanName) {\n  return function (classConstructor) {\n    var props = getOrCreateProps(classConstructor);\n    props.beanName = beanName;\n  };\n}\n\nexports.Bean = Bean;\n\nfunction Autowired(name) {\n  return function (target, propertyKey, descriptor) {\n    autowiredFunc(target, name, false, target, propertyKey, null);\n  };\n}\n\nexports.Autowired = Autowired;\n\nfunction Optional(name) {\n  return function (target, propertyKey, descriptor) {\n    autowiredFunc(target, name, true, target, propertyKey, null);\n  };\n}\n\nexports.Optional = Optional;\n\nfunction autowiredFunc(target, name, optional, classPrototype, methodOrAttributeName, index) {\n  if (name === null) {\n    console.error(\"ag-Grid: Autowired name should not be null\");\n    return;\n  }\n\n  if (typeof index === \"number\") {\n    console.error(\"ag-Grid: Autowired should be on an attribute\");\n    return;\n  } // it's an attribute on the class\n\n\n  var props = getOrCreateProps(target.constructor);\n\n  if (!props.agClassAttributes) {\n    props.agClassAttributes = [];\n  }\n\n  props.agClassAttributes.push({\n    attributeName: methodOrAttributeName,\n    beanName: name,\n    optional: optional\n  });\n}\n\nfunction Qualifier(name) {\n  return function (classPrototype, methodOrAttributeName, index) {\n    var constructor = typeof classPrototype == \"function\" ? classPrototype : classPrototype.constructor;\n    var props;\n\n    if (typeof index === \"number\") {\n      // it's a parameter on a method\n      var methodName = void 0;\n\n      if (methodOrAttributeName) {\n        props = getOrCreateProps(constructor);\n        methodName = methodOrAttributeName;\n      } else {\n        props = getOrCreateProps(constructor);\n        methodName = \"agConstructor\";\n      }\n\n      if (!props.autowireMethods) {\n        props.autowireMethods = {};\n      }\n\n      if (!props.autowireMethods[methodName]) {\n        props.autowireMethods[methodName] = {};\n      }\n\n      props.autowireMethods[methodName][index] = name;\n    }\n  };\n}\n\nexports.Qualifier = Qualifier;\n\nfunction getOrCreateProps(target) {\n  if (!target.hasOwnProperty(\"__agBeanMetaData\")) {\n    target.__agBeanMetaData = {};\n  }\n\n  return target.__agBeanMetaData;\n}","map":{"version":3,"sources":["/Users/dirkmennecke77/Desktop/Lageplan/node_modules/ag-grid-community/dist/lib/context/context.js"],"names":["Object","defineProperty","exports","value","utils_1","require","Context","params","logger","beanWrappers","registeredModules","componentsMappedByName","destroyed","beans","contextParams","log","setupComponents","createBeans","beanInstances","getBeanInstances","wireBeans","prototype","_","mapObject","beanEntry","beanInstance","_this","components","forEach","componentMeta","addComponent","classEscaped","componentName","replace","toLowerCase","classUpperCase","toUpperCase","theClass","createComponentFromElement","element","afterPreCreateCallback","key","nodeName","newComponent","wireBean","bean","Error","autoWireBeans","methodWireBeans","callLifeCycleMethods","exists","createBeanWrapper","bind","overrideBeans","iterateObject","constructorParamsMeta","__agBeanMetaData","autowireMethods","agConstructor","constructorParams","getBeansForParameters","name","newInstance","applyToConstructor","getBeanName","Bean","metaData","beanName","constructor","console","error","forEachMetaDataInHierarchy","attributes","agClassAttributes","attribute","otherBean","lookupBeanInstance","optional","attributeName","methodName","wireParams","initParams","apply","callback","getPrototypeOf","hasOwnProperty","constructorString","toString","substring","indexOf","parameters","beansList","paramIndex","otherBeanName","Number","wiringBean","seed","lifeCycleMethod","methods","getBean","getEnterpriseDefaultComponents","enterpriseDefaultComponents","destroy","isModuleRegistered","moduleName","argArray","args","concat","factoryFunction","PreConstruct","target","descriptor","props","getOrCreateProps","postConstructMethods","preConstructMethods","push","PostConstruct","PreDestroy","preDestroyMethods","classConstructor","Autowired","propertyKey","autowiredFunc","Optional","classPrototype","methodOrAttributeName","index","Qualifier"],"mappings":"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","sourcesContent":["/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.2.2\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"../utils\");\nvar Context = /** @class */ (function () {\n    function Context(params, logger) {\n        this.beanWrappers = {};\n        this.registeredModules = [];\n        this.componentsMappedByName = {};\n        this.destroyed = false;\n        if (!params || !params.beans) {\n            return;\n        }\n        this.contextParams = params;\n        this.registeredModules = params.registeredModules;\n        this.logger = logger;\n        this.logger.log(\">> creating ag-Application Context\");\n        this.setupComponents();\n        this.createBeans();\n        var beanInstances = this.getBeanInstances();\n        this.wireBeans(beanInstances);\n        this.logger.log(\">> ag-Application Context ready - component is alive\");\n    }\n    Context.prototype.getBeanInstances = function () {\n        return utils_1._.mapObject(this.beanWrappers, function (beanEntry) { return beanEntry.beanInstance; });\n    };\n    Context.prototype.setupComponents = function () {\n        var _this = this;\n        if (this.contextParams.components) {\n            this.contextParams.components.forEach(function (componentMeta) { return _this.addComponent(componentMeta); });\n        }\n    };\n    Context.prototype.addComponent = function (componentMeta) {\n        // get name of the class as a string\n        // let className = _.getNameOfClass(ComponentClass);\n        // insert a dash after every capital letter\n        // let classEscaped = className.replace(/([A-Z])/g, \"-$1\").toLowerCase();\n        var classEscaped = componentMeta.componentName.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n        // put all to upper case\n        var classUpperCase = classEscaped.toUpperCase();\n        // finally store\n        this.componentsMappedByName[classUpperCase] = componentMeta.theClass;\n    };\n    Context.prototype.createComponentFromElement = function (element, afterPreCreateCallback) {\n        var key = element.nodeName;\n        if (this.componentsMappedByName && this.componentsMappedByName[key]) {\n            var newComponent = new this.componentsMappedByName[key]();\n            this.wireBean(newComponent, afterPreCreateCallback);\n            return newComponent;\n        }\n        return null;\n    };\n    Context.prototype.wireBean = function (bean, afterPreCreateCallback) {\n        if (!bean) {\n            throw Error(\"Can't wire to bean since it is null\");\n        }\n        this.wireBeans([bean], afterPreCreateCallback);\n    };\n    Context.prototype.wireBeans = function (beanInstances, afterPreCreateCallback) {\n        this.autoWireBeans(beanInstances);\n        this.methodWireBeans(beanInstances);\n        this.callLifeCycleMethods(beanInstances, 'preConstructMethods');\n        // the callback sets the attributes, so the component has access to attributes\n        // before postConstruct methods in the component are executed\n        if (utils_1._.exists(afterPreCreateCallback)) {\n            beanInstances.forEach(afterPreCreateCallback);\n        }\n        this.callLifeCycleMethods(beanInstances, 'postConstructMethods');\n    };\n    Context.prototype.createBeans = function () {\n        var _this = this;\n        // register all normal beans\n        this.contextParams.beans.forEach(this.createBeanWrapper.bind(this));\n        // register override beans, these will overwrite beans above of same name\n        if (this.contextParams.overrideBeans) {\n            this.contextParams.overrideBeans.forEach(this.createBeanWrapper.bind(this));\n        }\n        // instantiate all beans - overridden beans will be left out\n        utils_1._.iterateObject(this.beanWrappers, function (key, beanEntry) {\n            var constructorParamsMeta;\n            if (beanEntry.bean.__agBeanMetaData && beanEntry.bean.__agBeanMetaData.autowireMethods && beanEntry.bean.__agBeanMetaData.autowireMethods.agConstructor) {\n                constructorParamsMeta = beanEntry.bean.__agBeanMetaData.autowireMethods.agConstructor;\n            }\n            var constructorParams = _this.getBeansForParameters(constructorParamsMeta, beanEntry.bean.name);\n            var newInstance = applyToConstructor(beanEntry.bean, constructorParams);\n            beanEntry.beanInstance = newInstance;\n            _this.logger.log(\"bean \" + _this.getBeanName(newInstance) + \" created\");\n        });\n    };\n    // tslint:disable-next-line\n    Context.prototype.createBeanWrapper = function (Bean) {\n        var metaData = Bean.__agBeanMetaData;\n        if (!metaData) {\n            var beanName = void 0;\n            if (Bean.prototype.constructor) {\n                beanName = Bean.prototype.constructor.name;\n            }\n            else {\n                beanName = \"\" + Bean;\n            }\n            console.error(\"context item \" + beanName + \" is not a bean\");\n            return;\n        }\n        var beanEntry = {\n            bean: Bean,\n            beanInstance: null,\n            beanName: metaData.beanName\n        };\n        this.beanWrappers[metaData.beanName] = beanEntry;\n    };\n    Context.prototype.autoWireBeans = function (beanInstances) {\n        var _this = this;\n        beanInstances.forEach(function (beanInstance) {\n            _this.forEachMetaDataInHierarchy(beanInstance, function (metaData, beanName) {\n                var attributes = metaData.agClassAttributes;\n                if (!attributes) {\n                    return;\n                }\n                attributes.forEach(function (attribute) {\n                    var otherBean = _this.lookupBeanInstance(beanName, attribute.beanName, attribute.optional);\n                    beanInstance[attribute.attributeName] = otherBean;\n                });\n            });\n        });\n    };\n    Context.prototype.methodWireBeans = function (beanInstances) {\n        var _this = this;\n        beanInstances.forEach(function (beanInstance) {\n            _this.forEachMetaDataInHierarchy(beanInstance, function (metaData, beanName) {\n                utils_1._.iterateObject(metaData.autowireMethods, function (methodName, wireParams) {\n                    // skip constructor, as this is dealt with elsewhere\n                    if (methodName === \"agConstructor\") {\n                        return;\n                    }\n                    var initParams = _this.getBeansForParameters(wireParams, beanName);\n                    beanInstance[methodName].apply(beanInstance, initParams);\n                });\n            });\n        });\n    };\n    Context.prototype.forEachMetaDataInHierarchy = function (beanInstance, callback) {\n        var prototype = Object.getPrototypeOf(beanInstance);\n        while (prototype != null) {\n            var constructor = prototype.constructor;\n            if (constructor.hasOwnProperty('__agBeanMetaData')) {\n                var metaData = constructor.__agBeanMetaData;\n                var beanName = this.getBeanName(constructor);\n                callback(metaData, beanName);\n            }\n            prototype = Object.getPrototypeOf(prototype);\n        }\n    };\n    Context.prototype.getBeanName = function (constructor) {\n        if (constructor.__agBeanMetaData && constructor.__agBeanMetaData.beanName) {\n            return constructor.__agBeanMetaData.beanName;\n        }\n        var constructorString = constructor.toString();\n        var beanName = constructorString.substring(9, constructorString.indexOf(\"(\"));\n        return beanName;\n    };\n    Context.prototype.getBeansForParameters = function (parameters, beanName) {\n        var _this = this;\n        var beansList = [];\n        if (parameters) {\n            utils_1._.iterateObject(parameters, function (paramIndex, otherBeanName) {\n                var otherBean = _this.lookupBeanInstance(beanName, otherBeanName);\n                beansList[Number(paramIndex)] = otherBean;\n            });\n        }\n        return beansList;\n    };\n    Context.prototype.lookupBeanInstance = function (wiringBean, beanName, optional) {\n        if (optional === void 0) { optional = false; }\n        if (beanName === \"context\") {\n            return this;\n        }\n        else if (this.contextParams.seed && this.contextParams.seed.hasOwnProperty(beanName)) {\n            return this.contextParams.seed[beanName];\n        }\n        else {\n            var beanEntry = this.beanWrappers[beanName];\n            if (beanEntry) {\n                return beanEntry.beanInstance;\n            }\n            if (!optional) {\n                console.error(\"ag-Grid: unable to find bean reference \" + beanName + \" while initialising \" + wiringBean);\n            }\n            return null;\n        }\n    };\n    Context.prototype.callLifeCycleMethods = function (beanInstances, lifeCycleMethod) {\n        var _this = this;\n        beanInstances.forEach(function (beanInstance) {\n            _this.forEachMetaDataInHierarchy(beanInstance, function (metaData) {\n                var methods = metaData[lifeCycleMethod];\n                if (!methods) {\n                    return;\n                }\n                methods.forEach(function (methodName) { return beanInstance[methodName](); });\n            });\n        });\n    };\n    Context.prototype.getBean = function (name) {\n        return this.lookupBeanInstance(\"getBean\", name, true);\n    };\n    Context.prototype.getEnterpriseDefaultComponents = function () {\n        return this.contextParams.enterpriseDefaultComponents;\n    };\n    Context.prototype.destroy = function () {\n        // should only be able to destroy once\n        if (this.destroyed) {\n            return;\n        }\n        this.logger.log(\">> Shutting down ag-Application Context\");\n        var beanInstances = this.getBeanInstances();\n        this.callLifeCycleMethods(beanInstances, 'preDestroyMethods');\n        this.contextParams.seed = null;\n        this.destroyed = true;\n        this.logger.log(\">> ag-Application Context shut down - component is dead\");\n    };\n    Context.prototype.isModuleRegistered = function (moduleName) {\n        return this.registeredModules.indexOf(moduleName) !== -1;\n    };\n    return Context;\n}());\nexports.Context = Context;\n// taken from: http://stackoverflow.com/questions/3362471/how-can-i-call-a-javascript-constructor-using-call-or-apply\n// allows calling 'apply' on a constructor\nfunction applyToConstructor(constructor, argArray) {\n    var args = [null].concat(argArray);\n    var factoryFunction = constructor.bind.apply(constructor, args);\n    return new factoryFunction();\n}\nfunction PreConstruct(target, methodName, descriptor) {\n    var props = getOrCreateProps(target.constructor);\n    if (!props.postConstructMethods) {\n        props.preConstructMethods = [];\n    }\n    props.preConstructMethods.push(methodName);\n}\nexports.PreConstruct = PreConstruct;\nfunction PostConstruct(target, methodName, descriptor) {\n    var props = getOrCreateProps(target.constructor);\n    if (!props.postConstructMethods) {\n        props.postConstructMethods = [];\n    }\n    props.postConstructMethods.push(methodName);\n}\nexports.PostConstruct = PostConstruct;\nfunction PreDestroy(target, methodName, descriptor) {\n    var props = getOrCreateProps(target.constructor);\n    if (!props.preDestroyMethods) {\n        props.preDestroyMethods = [];\n    }\n    props.preDestroyMethods.push(methodName);\n}\nexports.PreDestroy = PreDestroy;\nfunction Bean(beanName) {\n    return function (classConstructor) {\n        var props = getOrCreateProps(classConstructor);\n        props.beanName = beanName;\n    };\n}\nexports.Bean = Bean;\nfunction Autowired(name) {\n    return function (target, propertyKey, descriptor) {\n        autowiredFunc(target, name, false, target, propertyKey, null);\n    };\n}\nexports.Autowired = Autowired;\nfunction Optional(name) {\n    return function (target, propertyKey, descriptor) {\n        autowiredFunc(target, name, true, target, propertyKey, null);\n    };\n}\nexports.Optional = Optional;\nfunction autowiredFunc(target, name, optional, classPrototype, methodOrAttributeName, index) {\n    if (name === null) {\n        console.error(\"ag-Grid: Autowired name should not be null\");\n        return;\n    }\n    if (typeof index === \"number\") {\n        console.error(\"ag-Grid: Autowired should be on an attribute\");\n        return;\n    }\n    // it's an attribute on the class\n    var props = getOrCreateProps(target.constructor);\n    if (!props.agClassAttributes) {\n        props.agClassAttributes = [];\n    }\n    props.agClassAttributes.push({\n        attributeName: methodOrAttributeName,\n        beanName: name,\n        optional: optional\n    });\n}\nfunction Qualifier(name) {\n    return function (classPrototype, methodOrAttributeName, index) {\n        var constructor = typeof classPrototype == \"function\" ? classPrototype : classPrototype.constructor;\n        var props;\n        if (typeof index === \"number\") {\n            // it's a parameter on a method\n            var methodName = void 0;\n            if (methodOrAttributeName) {\n                props = getOrCreateProps(constructor);\n                methodName = methodOrAttributeName;\n            }\n            else {\n                props = getOrCreateProps(constructor);\n                methodName = \"agConstructor\";\n            }\n            if (!props.autowireMethods) {\n                props.autowireMethods = {};\n            }\n            if (!props.autowireMethods[methodName]) {\n                props.autowireMethods[methodName] = {};\n            }\n            props.autowireMethods[methodName][index] = name;\n        }\n    };\n}\nexports.Qualifier = Qualifier;\nfunction getOrCreateProps(target) {\n    if (!target.hasOwnProperty(\"__agBeanMetaData\")) {\n        target.__agBeanMetaData = {};\n    }\n    return target.__agBeanMetaData;\n}\n"]},"metadata":{},"sourceType":"script"}