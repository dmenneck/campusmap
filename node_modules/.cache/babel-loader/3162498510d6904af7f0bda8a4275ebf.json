{"ast":null,"code":"/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.2.2\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/* Common logic for options, used by both filters and floating filters. */\n\nvar OptionsFactory =\n/** @class */\nfunction () {\n  function OptionsFactory() {\n    this.customFilterOptions = {};\n  }\n\n  OptionsFactory.prototype.init = function (params, defaultOptions) {\n    this.filterOptions = params.filterOptions ? params.filterOptions : defaultOptions;\n    this.mapCustomOptions();\n    this.selectDefaultItem(params);\n  };\n\n  OptionsFactory.prototype.getFilterOptions = function () {\n    return this.filterOptions;\n  };\n\n  OptionsFactory.prototype.mapCustomOptions = function () {\n    var _this = this;\n\n    if (!this.filterOptions) {\n      return;\n    }\n\n    this.filterOptions.forEach(function (filterOption) {\n      if (typeof filterOption === 'string') {\n        return;\n      }\n\n      if (!filterOption.displayKey) {\n        console.warn(\"ag-Grid: ignoring FilterOptionDef as it doesn't contain a 'displayKey'\");\n        return;\n      }\n\n      if (!filterOption.displayName) {\n        console.warn(\"ag-Grid: ignoring FilterOptionDef as it doesn't contain a 'displayName'\");\n        return;\n      }\n\n      if (!filterOption.test) {\n        console.warn(\"ag-Grid: ignoring FilterOptionDef as it doesn't contain a 'test'\");\n        return;\n      }\n\n      _this.customFilterOptions[filterOption.displayKey] = filterOption;\n    });\n  };\n\n  OptionsFactory.prototype.selectDefaultItem = function (params) {\n    if (params.defaultOption) {\n      this.defaultOption = params.defaultOption;\n    } else if (this.filterOptions.length >= 1) {\n      var firstFilterOption = this.filterOptions[0];\n\n      if (typeof firstFilterOption === 'string') {\n        this.defaultOption = firstFilterOption;\n      } else if (firstFilterOption.displayKey) {\n        this.defaultOption = firstFilterOption.displayKey;\n      } else {\n        console.warn(\"ag-Grid: invalid FilterOptionDef supplied as it doesn't contain a 'displayKey'\");\n      }\n    } else {\n      console.warn('ag-Grid: no filter options for filter');\n    }\n  };\n\n  OptionsFactory.prototype.getDefaultOption = function () {\n    return this.defaultOption;\n  };\n\n  OptionsFactory.prototype.getCustomOption = function (name) {\n    return this.customFilterOptions[name];\n  };\n\n  return OptionsFactory;\n}();\n\nexports.OptionsFactory = OptionsFactory;","map":{"version":3,"sources":["/Users/dirkmennecke77/Desktop/Lageplan/node_modules/ag-grid-community/dist/lib/filter/provided/optionsFactory.js"],"names":["Object","defineProperty","exports","value","OptionsFactory","customFilterOptions","prototype","init","params","defaultOptions","filterOptions","mapCustomOptions","selectDefaultItem","getFilterOptions","_this","forEach","filterOption","displayKey","console","warn","displayName","test","defaultOption","length","firstFilterOption","getDefaultOption","getCustomOption","name"],"mappings":"AAAA;;;;;;AAMA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACA;;AACA,IAAIC,cAAc;AAAG;AAAe,YAAY;AAC5C,WAASA,cAAT,GAA0B;AACtB,SAAKC,mBAAL,GAA2B,EAA3B;AACH;;AACDD,EAAAA,cAAc,CAACE,SAAf,CAAyBC,IAAzB,GAAgC,UAAUC,MAAV,EAAkBC,cAAlB,EAAkC;AAC9D,SAAKC,aAAL,GAAqBF,MAAM,CAACE,aAAP,GAAuBF,MAAM,CAACE,aAA9B,GAA8CD,cAAnE;AACA,SAAKE,gBAAL;AACA,SAAKC,iBAAL,CAAuBJ,MAAvB;AACH,GAJD;;AAKAJ,EAAAA,cAAc,CAACE,SAAf,CAAyBO,gBAAzB,GAA4C,YAAY;AACpD,WAAO,KAAKH,aAAZ;AACH,GAFD;;AAGAN,EAAAA,cAAc,CAACE,SAAf,CAAyBK,gBAAzB,GAA4C,YAAY;AACpD,QAAIG,KAAK,GAAG,IAAZ;;AACA,QAAI,CAAC,KAAKJ,aAAV,EAAyB;AACrB;AACH;;AACD,SAAKA,aAAL,CAAmBK,OAAnB,CAA2B,UAAUC,YAAV,EAAwB;AAC/C,UAAI,OAAOA,YAAP,KAAwB,QAA5B,EAAsC;AAClC;AACH;;AACD,UAAI,CAACA,YAAY,CAACC,UAAlB,EAA8B;AAC1BC,QAAAA,OAAO,CAACC,IAAR,CAAa,wEAAb;AACA;AACH;;AACD,UAAI,CAACH,YAAY,CAACI,WAAlB,EAA+B;AAC3BF,QAAAA,OAAO,CAACC,IAAR,CAAa,yEAAb;AACA;AACH;;AACD,UAAI,CAACH,YAAY,CAACK,IAAlB,EAAwB;AACpBH,QAAAA,OAAO,CAACC,IAAR,CAAa,kEAAb;AACA;AACH;;AACDL,MAAAA,KAAK,CAACT,mBAAN,CAA0BW,YAAY,CAACC,UAAvC,IAAqDD,YAArD;AACH,KAjBD;AAkBH,GAvBD;;AAwBAZ,EAAAA,cAAc,CAACE,SAAf,CAAyBM,iBAAzB,GAA6C,UAAUJ,MAAV,EAAkB;AAC3D,QAAIA,MAAM,CAACc,aAAX,EAA0B;AACtB,WAAKA,aAAL,GAAqBd,MAAM,CAACc,aAA5B;AACH,KAFD,MAGK,IAAI,KAAKZ,aAAL,CAAmBa,MAAnB,IAA6B,CAAjC,EAAoC;AACrC,UAAIC,iBAAiB,GAAG,KAAKd,aAAL,CAAmB,CAAnB,CAAxB;;AACA,UAAI,OAAOc,iBAAP,KAA6B,QAAjC,EAA2C;AACvC,aAAKF,aAAL,GAAqBE,iBAArB;AACH,OAFD,MAGK,IAAIA,iBAAiB,CAACP,UAAtB,EAAkC;AACnC,aAAKK,aAAL,GAAqBE,iBAAiB,CAACP,UAAvC;AACH,OAFI,MAGA;AACDC,QAAAA,OAAO,CAACC,IAAR,CAAa,gFAAb;AACH;AACJ,KAXI,MAYA;AACDD,MAAAA,OAAO,CAACC,IAAR,CAAa,uCAAb;AACH;AACJ,GAnBD;;AAoBAf,EAAAA,cAAc,CAACE,SAAf,CAAyBmB,gBAAzB,GAA4C,YAAY;AACpD,WAAO,KAAKH,aAAZ;AACH,GAFD;;AAGAlB,EAAAA,cAAc,CAACE,SAAf,CAAyBoB,eAAzB,GAA2C,UAAUC,IAAV,EAAgB;AACvD,WAAO,KAAKtB,mBAAL,CAAyBsB,IAAzB,CAAP;AACH,GAFD;;AAGA,SAAOvB,cAAP;AACH,CA/DmC,EAApC;;AAgEAF,OAAO,CAACE,cAAR,GAAyBA,cAAzB","sourcesContent":["/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.2.2\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/* Common logic for options, used by both filters and floating filters. */\nvar OptionsFactory = /** @class */ (function () {\n    function OptionsFactory() {\n        this.customFilterOptions = {};\n    }\n    OptionsFactory.prototype.init = function (params, defaultOptions) {\n        this.filterOptions = params.filterOptions ? params.filterOptions : defaultOptions;\n        this.mapCustomOptions();\n        this.selectDefaultItem(params);\n    };\n    OptionsFactory.prototype.getFilterOptions = function () {\n        return this.filterOptions;\n    };\n    OptionsFactory.prototype.mapCustomOptions = function () {\n        var _this = this;\n        if (!this.filterOptions) {\n            return;\n        }\n        this.filterOptions.forEach(function (filterOption) {\n            if (typeof filterOption === 'string') {\n                return;\n            }\n            if (!filterOption.displayKey) {\n                console.warn(\"ag-Grid: ignoring FilterOptionDef as it doesn't contain a 'displayKey'\");\n                return;\n            }\n            if (!filterOption.displayName) {\n                console.warn(\"ag-Grid: ignoring FilterOptionDef as it doesn't contain a 'displayName'\");\n                return;\n            }\n            if (!filterOption.test) {\n                console.warn(\"ag-Grid: ignoring FilterOptionDef as it doesn't contain a 'test'\");\n                return;\n            }\n            _this.customFilterOptions[filterOption.displayKey] = filterOption;\n        });\n    };\n    OptionsFactory.prototype.selectDefaultItem = function (params) {\n        if (params.defaultOption) {\n            this.defaultOption = params.defaultOption;\n        }\n        else if (this.filterOptions.length >= 1) {\n            var firstFilterOption = this.filterOptions[0];\n            if (typeof firstFilterOption === 'string') {\n                this.defaultOption = firstFilterOption;\n            }\n            else if (firstFilterOption.displayKey) {\n                this.defaultOption = firstFilterOption.displayKey;\n            }\n            else {\n                console.warn(\"ag-Grid: invalid FilterOptionDef supplied as it doesn't contain a 'displayKey'\");\n            }\n        }\n        else {\n            console.warn('ag-Grid: no filter options for filter');\n        }\n    };\n    OptionsFactory.prototype.getDefaultOption = function () {\n        return this.defaultOption;\n    };\n    OptionsFactory.prototype.getCustomOption = function (name) {\n        return this.customFilterOptions[name];\n    };\n    return OptionsFactory;\n}());\nexports.OptionsFactory = OptionsFactory;\n"]},"metadata":{},"sourceType":"script"}