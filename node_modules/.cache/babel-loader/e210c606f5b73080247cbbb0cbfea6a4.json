{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/format/filter/Not\n */\n\n\nimport Filter from './Filter.js';\n/**\n * @classdesc\n * Represents a logical `<Not>` operator for a filter condition.\n * @api\n */\n\nvar Not =\n/** @class */\nfunction (_super) {\n  __extends(Not, _super);\n  /**\n   * @param {!import(\"./Filter.js\").default} condition Filter condition.\n   */\n\n\n  function Not(condition) {\n    var _this = _super.call(this, 'Not') || this;\n    /**\n     * @type {!import(\"./Filter.js\").default}\n     */\n\n\n    _this.condition = condition;\n    return _this;\n  }\n\n  return Not;\n}(Filter);\n\nexport default Not;","map":null,"metadata":{},"sourceType":"module"}