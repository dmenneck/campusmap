{"ast":null,"code":"/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.2.2\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar gridOptionsWrapper_1 = require(\"../../gridOptionsWrapper\");\n\nvar expressionService_1 = require(\"../../valueService/expressionService\");\n\nvar eventService_1 = require(\"../../eventService\");\n\nvar constants_1 = require(\"../../constants\");\n\nvar context_1 = require(\"../../context/context\");\n\nvar component_1 = require(\"../../widgets/component\");\n\nvar rowNode_1 = require(\"../../entities/rowNode\");\n\nvar valueFormatterService_1 = require(\"../valueFormatterService\");\n\nvar checkboxSelectionComponent_1 = require(\"../checkboxSelectionComponent\");\n\nvar columnController_1 = require(\"../../columnController/columnController\");\n\nvar column_1 = require(\"../../entities/column\");\n\nvar componentAnnotations_1 = require(\"../../widgets/componentAnnotations\");\n\nvar mouseEventService_1 = require(\"../../gridPanel/mouseEventService\");\n\nvar userComponentFactory_1 = require(\"../../components/framework/userComponentFactory\");\n\nvar utils_1 = require(\"../../utils\");\n\nvar GroupCellRenderer =\n/** @class */\nfunction (_super) {\n  __extends(GroupCellRenderer, _super);\n\n  function GroupCellRenderer() {\n    return _super.call(this, GroupCellRenderer.TEMPLATE) || this;\n  }\n\n  GroupCellRenderer.prototype.init = function (params) {\n    this.params = params;\n\n    if (this.gridOptionsWrapper.isGroupIncludeTotalFooter()) {\n      this.assignBlankValueToGroupFooterCell(params);\n    }\n\n    var embeddedRowMismatch = this.isEmbeddedRowMismatch(); // This allows for empty strings to appear as groups since\n    // it will only return for null or undefined.\n\n    var cellIsEmpty = params.value == null;\n    this.cellIsBlank = embeddedRowMismatch || cellIsEmpty;\n\n    if (this.cellIsBlank) {\n      return;\n    }\n\n    this.setupDragOpenParents();\n    this.addExpandAndContract();\n    this.addCheckboxIfNeeded();\n    this.addValueElement();\n    this.setupIndent();\n  };\n\n  GroupCellRenderer.prototype.assignBlankValueToGroupFooterCell = function (params) {\n    // this is not ideal, but it was the only way we could get footer working for the root node\n    if (!params.value && params.node.level == -1) {\n      params.value = '';\n    }\n  }; // if we are doing embedded full width rows, we only show the renderer when\n  // in the body, or if pinning in the pinned section, or if pinning and RTL,\n  // in the right section. otherwise we would have the cell repeated in each section.\n\n\n  GroupCellRenderer.prototype.isEmbeddedRowMismatch = function () {\n    if (this.params.fullWidth && this.gridOptionsWrapper.isEmbedFullWidthRows()) {\n      var pinnedLeftCell = this.params.pinned === column_1.Column.PINNED_LEFT;\n      var pinnedRightCell = this.params.pinned === column_1.Column.PINNED_RIGHT;\n      var bodyCell = !pinnedLeftCell && !pinnedRightCell;\n\n      if (this.gridOptionsWrapper.isEnableRtl()) {\n        if (this.columnController.isPinningLeft()) {\n          return !pinnedRightCell;\n        } else {\n          return !bodyCell;\n        }\n      } else {\n        if (this.columnController.isPinningLeft()) {\n          return !pinnedLeftCell;\n        } else {\n          return !bodyCell;\n        }\n      }\n    } else {\n      return false;\n    }\n  };\n\n  GroupCellRenderer.prototype.setIndent = function () {\n    if (this.gridOptionsWrapper.isGroupHideOpenParents()) {\n      return;\n    }\n\n    var params = this.params;\n    var rowNode = params.node;\n    var paddingCount = rowNode.uiLevel;\n    var userProvidedPaddingPixelsTheDeprecatedWay = params.padding >= 0;\n\n    if (userProvidedPaddingPixelsTheDeprecatedWay) {\n      this.setPaddingDeprecatedWay(paddingCount, params.padding);\n      return;\n    }\n\n    if (this.indentClass) {\n      this.removeCssClass(this.indentClass);\n    }\n\n    this.indentClass = 'ag-row-group-indent-' + paddingCount;\n    this.addCssClass(this.indentClass);\n  };\n\n  GroupCellRenderer.prototype.setPaddingDeprecatedWay = function (paddingCount, padding) {\n    utils_1._.doOnce(function () {\n      return console.warn('ag-Grid: since v14.2, configuring padding for groupCellRenderer should be done with Sass variables and themes. Please see the ag-Grid documentation page for Themes, in particular the property $row-group-indent-size.');\n    }, 'groupCellRenderer->doDeprecatedWay');\n\n    var paddingPx = paddingCount * padding;\n\n    if (this.gridOptionsWrapper.isEnableRtl()) {\n      // if doing rtl, padding is on the right\n      this.getGui().style.paddingRight = paddingPx + 'px';\n    } else {\n      // otherwise it is on the left\n      this.getGui().style.paddingLeft = paddingPx + 'px';\n    }\n  };\n\n  GroupCellRenderer.prototype.setupIndent = function () {\n    // only do this if an indent - as this overwrites the padding that\n    // the theme set, which will make things look 'not aligned' for the\n    // first group level.\n    var node = this.params.node;\n    var suppressPadding = this.params.suppressPadding;\n\n    if (!suppressPadding) {\n      this.addDestroyableEventListener(node, rowNode_1.RowNode.EVENT_UI_LEVEL_CHANGED, this.setIndent.bind(this));\n      this.setIndent();\n    }\n  };\n\n  GroupCellRenderer.prototype.addValueElement = function () {\n    var params = this.params;\n    var rowNode = this.displayedGroup;\n\n    if (rowNode.footer) {\n      this.createFooterCell();\n    } else if (rowNode.hasChildren() || utils_1._.get(params.colDef, 'cellRendererParams.innerRenderer', null) || utils_1._.get(params.colDef, 'cellRendererParams.innerRendererFramework', null)) {\n      this.createGroupCell();\n\n      if (rowNode.hasChildren()) {\n        this.addChildCount();\n      }\n    } else {\n      this.createLeafCell();\n    }\n  };\n\n  GroupCellRenderer.prototype.createFooterCell = function () {\n    var footerValue;\n    var footerValueGetter = this.params.footerValueGetter;\n\n    if (footerValueGetter) {\n      // params is same as we were given, except we set the value as the item to display\n      var paramsClone = utils_1._.cloneObject(this.params);\n\n      paramsClone.value = this.params.value;\n\n      if (typeof footerValueGetter === 'function') {\n        footerValue = footerValueGetter(paramsClone);\n      } else if (typeof footerValueGetter === 'string') {\n        footerValue = this.expressionService.evaluate(footerValueGetter, paramsClone);\n      } else {\n        console.warn('ag-Grid: footerValueGetter should be either a function or a string (expression)');\n      }\n    } else {\n      footerValue = 'Total ' + this.params.value;\n    }\n\n    this.eValue.innerHTML = footerValue;\n  };\n\n  GroupCellRenderer.prototype.createGroupCell = function () {\n    var _this = this;\n\n    var params = this.params;\n    var rowGroupColumn = this.displayedGroup.rowGroupColumn; // we try and use the cellRenderer of the column used for the grouping if we can\n\n    var columnToUse = rowGroupColumn ? rowGroupColumn : params.column;\n    var groupName = this.params.value;\n    var valueFormatted = columnToUse ? this.valueFormatterService.formatValue(columnToUse, params.node, params.scope, groupName) : null;\n    params.valueFormatted = valueFormatted;\n    var rendererPromise;\n\n    if (params.fullWidth == true) {\n      rendererPromise = this.useFullWidth(params);\n    } else {\n      rendererPromise = this.useInnerRenderer(this.params.colDef.cellRendererParams, columnToUse.getColDef(), params);\n    } // retain a reference to the created renderer - we'll use this later for cleanup (in destroy)\n\n\n    if (rendererPromise) {\n      rendererPromise.then(function (value) {\n        _this.innerCellRenderer = value;\n      });\n    }\n  };\n\n  GroupCellRenderer.prototype.useInnerRenderer = function (groupCellRendererParams, groupedColumnDef, // the column this group row is for, eg 'Country'\n  params) {\n    // when grouping, the normal case is we use the cell renderer of the grouped column. eg if grouping by country\n    // and then rating, we will use the country cell renderer for each country group row and likewise the rating\n    // cell renderer for each rating group row.\n    //\n    // however if the user has innerCellRenderer defined, this gets preference and we don't use cell renderers\n    // of the grouped columns.\n    //\n    // so we check and use in the following order:\n    //\n    // 1) thisColDef.cellRendererParams.innerRenderer of the column showing the groups (eg auto group column)\n    // 2) groupedColDef.cellRenderer of the grouped column\n    // 3) groupedColDef.cellRendererParams.innerRenderer\n    var _this = this;\n\n    var cellRendererPromise = null; // we check if cell renderer provided for the group cell renderer, eg colDef.cellRendererParams.innerRenderer\n\n    var groupInnerRendererClass = this.userComponentFactory.lookupComponentClassDef(groupCellRendererParams, \"innerRenderer\");\n\n    if (groupInnerRendererClass && groupInnerRendererClass.component != null && groupInnerRendererClass.source != userComponentFactory_1.ComponentSource.DEFAULT) {\n      // use the renderer defined in cellRendererParams.innerRenderer\n      cellRendererPromise = this.userComponentFactory.newInnerCellRenderer(groupCellRendererParams, params);\n    } else {\n      // otherwise see if we can use the cellRenderer of the column we are grouping by\n      var groupColumnRendererClass = this.userComponentFactory.lookupComponentClassDef(groupedColumnDef, \"cellRenderer\");\n\n      if (groupColumnRendererClass && groupColumnRendererClass.source != userComponentFactory_1.ComponentSource.DEFAULT) {\n        // Only if the original column is using a specific renderer, it it is a using a DEFAULT one ignore it\n        cellRendererPromise = this.userComponentFactory.newCellRenderer(groupedColumnDef, params);\n      } else if (groupColumnRendererClass && groupColumnRendererClass.source == userComponentFactory_1.ComponentSource.DEFAULT && utils_1._.get(groupedColumnDef, 'cellRendererParams.innerRenderer', null)) {\n        // EDGE CASE - THIS COMES FROM A COLUMN WHICH HAS BEEN GROUPED DYNAMICALLY, THAT HAS AS RENDERER 'group'\n        // AND HAS A INNER CELL RENDERER\n        cellRendererPromise = this.userComponentFactory.newInnerCellRenderer(groupedColumnDef.cellRendererParams, params);\n      } else {\n        // This forces the retrieval of the default plain cellRenderer that just renders the values.\n        cellRendererPromise = this.userComponentFactory.newCellRenderer({}, params);\n      }\n    }\n\n    if (cellRendererPromise != null) {\n      cellRendererPromise.then(function (rendererToUse) {\n        if (rendererToUse == null) {\n          _this.eValue.innerText = params.valueFormatted != null ? params.valueFormatted : params.value;\n          return;\n        }\n\n        utils_1._.bindCellRendererToHtmlElement(cellRendererPromise, _this.eValue);\n      });\n    } else {\n      this.eValue.innerText = params.valueFormatted != null ? params.valueFormatted : params.value;\n    }\n\n    return cellRendererPromise;\n  };\n\n  GroupCellRenderer.prototype.useFullWidth = function (params) {\n    var cellRendererPromise = this.userComponentFactory.newFullWidthGroupRowInnerCellRenderer(params);\n\n    if (cellRendererPromise != null) {\n      utils_1._.bindCellRendererToHtmlElement(cellRendererPromise, this.eValue);\n    } else {\n      this.eValue.innerText = params.valueFormatted != null ? params.valueFormatted : params.value;\n    }\n\n    return cellRendererPromise;\n  };\n\n  GroupCellRenderer.prototype.addChildCount = function () {\n    // only include the child count if it's included, eg if user doing custom aggregation,\n    // then this could be left out, or set to -1, ie no child count\n    if (this.params.suppressCount) {\n      return;\n    }\n\n    this.addDestroyableEventListener(this.displayedGroup, rowNode_1.RowNode.EVENT_ALL_CHILDREN_COUNT_CHANGED, this.updateChildCount.bind(this)); // filtering changes the child count, so need to cater for it\n\n    this.updateChildCount();\n  };\n\n  GroupCellRenderer.prototype.updateChildCount = function () {\n    var allChildrenCount = this.displayedGroup.allChildrenCount;\n    this.eChildCount.innerHTML = allChildrenCount >= 0 ? \"(\" + allChildrenCount + \")\" : \"\";\n  };\n\n  GroupCellRenderer.prototype.createLeafCell = function () {\n    if (utils_1._.exists(this.params.value)) {\n      this.eValue.innerText = this.params.valueFormatted ? this.params.valueFormatted : this.params.value;\n    }\n  };\n\n  GroupCellRenderer.prototype.isUserWantsSelected = function () {\n    var paramsCheckbox = this.params.checkbox;\n\n    if (typeof paramsCheckbox === 'function') {\n      return paramsCheckbox(this.params);\n    } else {\n      return paramsCheckbox === true;\n    }\n  };\n\n  GroupCellRenderer.prototype.addCheckboxIfNeeded = function () {\n    var rowNode = this.displayedGroup;\n    var checkboxNeeded = this.isUserWantsSelected() // footers cannot be selected\n    && !rowNode.footer // pinned rows cannot be selected\n    && !rowNode.rowPinned // details cannot be selected\n    && !rowNode.detail;\n\n    if (checkboxNeeded) {\n      var cbSelectionComponent_1 = new checkboxSelectionComponent_1.CheckboxSelectionComponent();\n      this.getContext().wireBean(cbSelectionComponent_1);\n      cbSelectionComponent_1.init({\n        rowNode: rowNode,\n        column: this.params.column\n      });\n      this.eCheckbox.appendChild(cbSelectionComponent_1.getGui());\n      this.addDestroyFunc(function () {\n        return cbSelectionComponent_1.destroy();\n      });\n    }\n\n    utils_1._.addOrRemoveCssClass(this.eCheckbox, 'ag-invisible', !checkboxNeeded);\n  };\n\n  GroupCellRenderer.prototype.addExpandAndContract = function () {\n    var params = this.params;\n    var eGroupCell = params.eGridCell;\n\n    var eExpandedIcon = utils_1._.createIconNoSpan('groupExpanded', this.gridOptionsWrapper, null);\n\n    var eContractedIcon = utils_1._.createIconNoSpan('groupContracted', this.gridOptionsWrapper, null);\n\n    this.eExpanded.appendChild(eExpandedIcon);\n    this.eContracted.appendChild(eContractedIcon);\n    this.addDestroyableEventListener(this.eExpanded, 'click', this.onExpandClicked.bind(this));\n    this.addDestroyableEventListener(this.eContracted, 'click', this.onExpandClicked.bind(this)); // expand / contract as the user hits enter\n\n    this.addDestroyableEventListener(eGroupCell, 'keydown', this.onKeyDown.bind(this));\n    this.addDestroyableEventListener(params.node, rowNode_1.RowNode.EVENT_EXPANDED_CHANGED, this.showExpandAndContractIcons.bind(this));\n    this.showExpandAndContractIcons(); // because we don't show the expand / contract when there are no children, we need to check every time\n    // the number of children change.\n\n    this.addDestroyableEventListener(this.displayedGroup, rowNode_1.RowNode.EVENT_ALL_CHILDREN_COUNT_CHANGED, this.onAllChildrenCountChanged.bind(this)); // if editing groups, then double click is to start editing\n\n    if (!this.gridOptionsWrapper.isEnableGroupEdit() && this.isExpandable() && !params.suppressDoubleClickExpand) {\n      this.addDestroyableEventListener(eGroupCell, 'dblclick', this.onCellDblClicked.bind(this));\n    }\n  };\n\n  GroupCellRenderer.prototype.onAllChildrenCountChanged = function () {\n    // maybe if no children now, we should hide the expand / contract icons\n    this.showExpandAndContractIcons(); // if we have no children, this impacts the indent\n\n    this.setIndent();\n  };\n\n  GroupCellRenderer.prototype.onKeyDown = function (event) {\n    var enterKeyPressed = utils_1._.isKeyPressed(event, constants_1.Constants.KEY_ENTER);\n\n    if (enterKeyPressed) {\n      if (this.params.suppressEnterExpand) {\n        return;\n      }\n\n      var cellEditable = this.params.column && this.params.column.isCellEditable(this.params.node);\n\n      if (cellEditable) {\n        return;\n      }\n\n      event.preventDefault();\n      this.onExpandOrContract();\n    }\n  };\n\n  GroupCellRenderer.prototype.setupDragOpenParents = function () {\n    var column = this.params.column;\n    var rowNode = this.params.node;\n\n    if (!this.gridOptionsWrapper.isGroupHideOpenParents()) {\n      this.draggedFromHideOpenParents = false;\n    } else if (!rowNode.hasChildren()) {\n      // if we are here, and we are not a group, then we must of been dragged down,\n      // as otherwise the cell would be blank, and if cell is blank, this method is never called.\n      this.draggedFromHideOpenParents = true;\n    } else {\n      var rowGroupColumn = rowNode.rowGroupColumn;\n\n      if (rowGroupColumn) {\n        // if the displayGroup column for this col matches the rowGroupColumn we grouped by for this node,\n        // then nothing was dragged down\n        this.draggedFromHideOpenParents = !column.isRowGroupDisplayed(rowGroupColumn.getId());\n      } else {\n        // the only way we can end up here (no column, but a group) is if we are at the root node,\n        // which only happens when 'groupIncludeTotalFooter' is true. here, we are never dragging\n        this.draggedFromHideOpenParents = false;\n      }\n    }\n\n    if (this.draggedFromHideOpenParents) {\n      var pointer = rowNode.parent;\n\n      while (true) {\n        if (utils_1._.missing(pointer)) {\n          break;\n        }\n\n        if (pointer.rowGroupColumn && column.isRowGroupDisplayed(pointer.rowGroupColumn.getId())) {\n          this.displayedGroup = pointer;\n          break;\n        }\n\n        pointer = pointer.parent;\n      }\n    } // if we didn't find a displayed group, set it to the row node\n\n\n    if (utils_1._.missing(this.displayedGroup)) {\n      this.displayedGroup = rowNode;\n    }\n  };\n\n  GroupCellRenderer.prototype.onExpandClicked = function (mouseEvent) {\n    if (utils_1._.isStopPropagationForAgGrid(mouseEvent)) {\n      return;\n    } // so if we expand a node, it does not also get selected.\n\n\n    utils_1._.stopPropagationForAgGrid(mouseEvent);\n\n    this.onExpandOrContract();\n  };\n\n  GroupCellRenderer.prototype.onCellDblClicked = function (mouseEvent) {\n    if (utils_1._.isStopPropagationForAgGrid(mouseEvent)) {\n      return;\n    } // we want to avoid acting on double click events on the expand / contract icon,\n    // as that icons already has expand / collapse functionality on it. otherwise if\n    // the icon was double clicked, we would get 'click', 'click', 'dblclick' which\n    // is open->close->open, however double click should be open->close only.\n\n\n    var targetIsExpandIcon = utils_1._.isElementInEventPath(this.eExpanded, mouseEvent) || utils_1._.isElementInEventPath(this.eContracted, mouseEvent);\n\n    if (!targetIsExpandIcon) {\n      this.onExpandOrContract();\n    }\n  };\n\n  GroupCellRenderer.prototype.onExpandOrContract = function () {\n    // must use the displayedGroup, so if data was dragged down, we expand the parent, not this row\n    var rowNode = this.displayedGroup;\n    rowNode.setExpanded(!rowNode.expanded);\n  };\n\n  GroupCellRenderer.prototype.isExpandable = function () {\n    var rowNode = this.params.node;\n    var reducedLeafNode = this.columnController.isPivotMode() && rowNode.leafGroup;\n    return this.draggedFromHideOpenParents || rowNode.isExpandable() && !rowNode.footer && !reducedLeafNode;\n  };\n\n  GroupCellRenderer.prototype.showExpandAndContractIcons = function () {\n    var rowNode = this.params.node;\n\n    if (this.isExpandable()) {\n      // if expandable, show one based on expand state.\n      // if we were dragged down, means our parent is always expanded\n      var expanded = this.draggedFromHideOpenParents ? true : rowNode.expanded;\n\n      utils_1._.setDisplayed(this.eContracted, !expanded);\n\n      utils_1._.setDisplayed(this.eExpanded, expanded);\n    } else {\n      // it not expandable, show neither\n      utils_1._.setDisplayed(this.eExpanded, false);\n\n      utils_1._.setDisplayed(this.eContracted, false);\n    }\n\n    var displayedGroup = this.displayedGroup; // compensation padding for leaf nodes, so there is blank space instead of the expand icon\n\n    var pivotModeAndLeafGroup = this.columnController.isPivotMode() && displayedGroup.leafGroup;\n    var notExpandable = !displayedGroup.isExpandable();\n    var addLeafIndentClass = displayedGroup.footer || notExpandable || pivotModeAndLeafGroup;\n    this.addOrRemoveCssClass('ag-row-group', !addLeafIndentClass);\n    this.addOrRemoveCssClass('ag-row-group-leaf-indent', addLeafIndentClass);\n  };\n\n  GroupCellRenderer.prototype.destroy = function () {\n    _super.prototype.destroy.call(this);\n\n    if (this.innerCellRenderer && this.innerCellRenderer.destroy) {\n      this.innerCellRenderer.destroy();\n    }\n  };\n\n  GroupCellRenderer.prototype.refresh = function () {\n    return false;\n  };\n\n  GroupCellRenderer.TEMPLATE = '<span class=\"ag-cell-wrapper\">' + '<span class=\"ag-group-expanded\" ref=\"eExpanded\"></span>' + '<span class=\"ag-group-contracted\" ref=\"eContracted\"></span>' + '<span class=\"ag-group-checkbox ag-invisible\" ref=\"eCheckbox\"></span>' + '<span class=\"ag-group-value\" ref=\"eValue\"></span>' + '<span class=\"ag-group-child-count\" ref=\"eChildCount\"></span>' + '</span>';\n\n  __decorate([context_1.Autowired('gridOptionsWrapper'), __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)], GroupCellRenderer.prototype, \"gridOptionsWrapper\", void 0);\n\n  __decorate([context_1.Autowired('expressionService'), __metadata(\"design:type\", expressionService_1.ExpressionService)], GroupCellRenderer.prototype, \"expressionService\", void 0);\n\n  __decorate([context_1.Autowired('eventService'), __metadata(\"design:type\", eventService_1.EventService)], GroupCellRenderer.prototype, \"eventService\", void 0);\n\n  __decorate([context_1.Autowired('valueFormatterService'), __metadata(\"design:type\", valueFormatterService_1.ValueFormatterService)], GroupCellRenderer.prototype, \"valueFormatterService\", void 0);\n\n  __decorate([context_1.Autowired('columnController'), __metadata(\"design:type\", columnController_1.ColumnController)], GroupCellRenderer.prototype, \"columnController\", void 0);\n\n  __decorate([context_1.Autowired('mouseEventService'), __metadata(\"design:type\", mouseEventService_1.MouseEventService)], GroupCellRenderer.prototype, \"mouseEventService\", void 0);\n\n  __decorate([context_1.Autowired('userComponentFactory'), __metadata(\"design:type\", userComponentFactory_1.UserComponentFactory)], GroupCellRenderer.prototype, \"userComponentFactory\", void 0);\n\n  __decorate([componentAnnotations_1.RefSelector('eExpanded'), __metadata(\"design:type\", HTMLElement)], GroupCellRenderer.prototype, \"eExpanded\", void 0);\n\n  __decorate([componentAnnotations_1.RefSelector('eContracted'), __metadata(\"design:type\", HTMLElement)], GroupCellRenderer.prototype, \"eContracted\", void 0);\n\n  __decorate([componentAnnotations_1.RefSelector('eCheckbox'), __metadata(\"design:type\", HTMLElement)], GroupCellRenderer.prototype, \"eCheckbox\", void 0);\n\n  __decorate([componentAnnotations_1.RefSelector('eValue'), __metadata(\"design:type\", HTMLElement)], GroupCellRenderer.prototype, \"eValue\", void 0);\n\n  __decorate([componentAnnotations_1.RefSelector('eChildCount'), __metadata(\"design:type\", HTMLElement)], GroupCellRenderer.prototype, \"eChildCount\", void 0);\n\n  return GroupCellRenderer;\n}(component_1.Component);\n\nexports.GroupCellRenderer = GroupCellRenderer;","map":{"version":3,"sources":["/Users/dirkmennecke77/Desktop/Lageplan/node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","k","v","metadata","exports","value","gridOptionsWrapper_1","require","expressionService_1","eventService_1","constants_1","context_1","component_1","rowNode_1","valueFormatterService_1","checkboxSelectionComponent_1","columnController_1","column_1","componentAnnotations_1","mouseEventService_1","userComponentFactory_1","utils_1","GroupCellRenderer","_super","call","TEMPLATE","init","params","gridOptionsWrapper","isGroupIncludeTotalFooter","assignBlankValueToGroupFooterCell","embeddedRowMismatch","isEmbeddedRowMismatch","cellIsEmpty","cellIsBlank","setupDragOpenParents","addExpandAndContract","addCheckboxIfNeeded","addValueElement","setupIndent","node","level","fullWidth","isEmbedFullWidthRows","pinnedLeftCell","pinned","Column","PINNED_LEFT","pinnedRightCell","PINNED_RIGHT","bodyCell","isEnableRtl","columnController","isPinningLeft","setIndent","isGroupHideOpenParents","rowNode","paddingCount","uiLevel","userProvidedPaddingPixelsTheDeprecatedWay","padding","setPaddingDeprecatedWay","indentClass","removeCssClass","addCssClass","_","doOnce","console","warn","paddingPx","getGui","style","paddingRight","paddingLeft","suppressPadding","addDestroyableEventListener","RowNode","EVENT_UI_LEVEL_CHANGED","bind","displayedGroup","footer","createFooterCell","hasChildren","get","colDef","createGroupCell","addChildCount","createLeafCell","footerValue","footerValueGetter","paramsClone","cloneObject","expressionService","evaluate","eValue","innerHTML","_this","rowGroupColumn","columnToUse","column","groupName","valueFormatted","valueFormatterService","formatValue","scope","rendererPromise","useFullWidth","useInnerRenderer","cellRendererParams","getColDef","then","innerCellRenderer","groupCellRendererParams","groupedColumnDef","cellRendererPromise","groupInnerRendererClass","userComponentFactory","lookupComponentClassDef","component","source","ComponentSource","DEFAULT","newInnerCellRenderer","groupColumnRendererClass","newCellRenderer","rendererToUse","innerText","bindCellRendererToHtmlElement","newFullWidthGroupRowInnerCellRenderer","suppressCount","EVENT_ALL_CHILDREN_COUNT_CHANGED","updateChildCount","allChildrenCount","eChildCount","exists","isUserWantsSelected","paramsCheckbox","checkbox","checkboxNeeded","rowPinned","detail","cbSelectionComponent_1","CheckboxSelectionComponent","getContext","wireBean","eCheckbox","appendChild","addDestroyFunc","destroy","addOrRemoveCssClass","eGroupCell","eGridCell","eExpandedIcon","createIconNoSpan","eContractedIcon","eExpanded","eContracted","onExpandClicked","onKeyDown","EVENT_EXPANDED_CHANGED","showExpandAndContractIcons","onAllChildrenCountChanged","isEnableGroupEdit","isExpandable","suppressDoubleClickExpand","onCellDblClicked","event","enterKeyPressed","isKeyPressed","Constants","KEY_ENTER","suppressEnterExpand","cellEditable","isCellEditable","preventDefault","onExpandOrContract","draggedFromHideOpenParents","isRowGroupDisplayed","getId","pointer","parent","missing","mouseEvent","isStopPropagationForAgGrid","stopPropagationForAgGrid","targetIsExpandIcon","isElementInEventPath","setExpanded","expanded","reducedLeafNode","isPivotMode","leafGroup","setDisplayed","pivotModeAndLeafGroup","notExpandable","addLeafIndentClass","refresh","Autowired","GridOptionsWrapper","ExpressionService","EventService","ValueFormatterService","ColumnController","MouseEventService","UserComponentFactory","RefSelector","HTMLElement","Component"],"mappings":"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","sourcesContent":["/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.2.2\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar gridOptionsWrapper_1 = require(\"../../gridOptionsWrapper\");\nvar expressionService_1 = require(\"../../valueService/expressionService\");\nvar eventService_1 = require(\"../../eventService\");\nvar constants_1 = require(\"../../constants\");\nvar context_1 = require(\"../../context/context\");\nvar component_1 = require(\"../../widgets/component\");\nvar rowNode_1 = require(\"../../entities/rowNode\");\nvar valueFormatterService_1 = require(\"../valueFormatterService\");\nvar checkboxSelectionComponent_1 = require(\"../checkboxSelectionComponent\");\nvar columnController_1 = require(\"../../columnController/columnController\");\nvar column_1 = require(\"../../entities/column\");\nvar componentAnnotations_1 = require(\"../../widgets/componentAnnotations\");\nvar mouseEventService_1 = require(\"../../gridPanel/mouseEventService\");\nvar userComponentFactory_1 = require(\"../../components/framework/userComponentFactory\");\nvar utils_1 = require(\"../../utils\");\nvar GroupCellRenderer = /** @class */ (function (_super) {\n    __extends(GroupCellRenderer, _super);\n    function GroupCellRenderer() {\n        return _super.call(this, GroupCellRenderer.TEMPLATE) || this;\n    }\n    GroupCellRenderer.prototype.init = function (params) {\n        this.params = params;\n        if (this.gridOptionsWrapper.isGroupIncludeTotalFooter()) {\n            this.assignBlankValueToGroupFooterCell(params);\n        }\n        var embeddedRowMismatch = this.isEmbeddedRowMismatch();\n        // This allows for empty strings to appear as groups since\n        // it will only return for null or undefined.\n        var cellIsEmpty = params.value == null;\n        this.cellIsBlank = embeddedRowMismatch || cellIsEmpty;\n        if (this.cellIsBlank) {\n            return;\n        }\n        this.setupDragOpenParents();\n        this.addExpandAndContract();\n        this.addCheckboxIfNeeded();\n        this.addValueElement();\n        this.setupIndent();\n    };\n    GroupCellRenderer.prototype.assignBlankValueToGroupFooterCell = function (params) {\n        // this is not ideal, but it was the only way we could get footer working for the root node\n        if (!params.value && params.node.level == -1) {\n            params.value = '';\n        }\n    };\n    // if we are doing embedded full width rows, we only show the renderer when\n    // in the body, or if pinning in the pinned section, or if pinning and RTL,\n    // in the right section. otherwise we would have the cell repeated in each section.\n    GroupCellRenderer.prototype.isEmbeddedRowMismatch = function () {\n        if (this.params.fullWidth && this.gridOptionsWrapper.isEmbedFullWidthRows()) {\n            var pinnedLeftCell = this.params.pinned === column_1.Column.PINNED_LEFT;\n            var pinnedRightCell = this.params.pinned === column_1.Column.PINNED_RIGHT;\n            var bodyCell = !pinnedLeftCell && !pinnedRightCell;\n            if (this.gridOptionsWrapper.isEnableRtl()) {\n                if (this.columnController.isPinningLeft()) {\n                    return !pinnedRightCell;\n                }\n                else {\n                    return !bodyCell;\n                }\n            }\n            else {\n                if (this.columnController.isPinningLeft()) {\n                    return !pinnedLeftCell;\n                }\n                else {\n                    return !bodyCell;\n                }\n            }\n        }\n        else {\n            return false;\n        }\n    };\n    GroupCellRenderer.prototype.setIndent = function () {\n        if (this.gridOptionsWrapper.isGroupHideOpenParents()) {\n            return;\n        }\n        var params = this.params;\n        var rowNode = params.node;\n        var paddingCount = rowNode.uiLevel;\n        var userProvidedPaddingPixelsTheDeprecatedWay = params.padding >= 0;\n        if (userProvidedPaddingPixelsTheDeprecatedWay) {\n            this.setPaddingDeprecatedWay(paddingCount, params.padding);\n            return;\n        }\n        if (this.indentClass) {\n            this.removeCssClass(this.indentClass);\n        }\n        this.indentClass = 'ag-row-group-indent-' + paddingCount;\n        this.addCssClass(this.indentClass);\n    };\n    GroupCellRenderer.prototype.setPaddingDeprecatedWay = function (paddingCount, padding) {\n        utils_1._.doOnce(function () { return console.warn('ag-Grid: since v14.2, configuring padding for groupCellRenderer should be done with Sass variables and themes. Please see the ag-Grid documentation page for Themes, in particular the property $row-group-indent-size.'); }, 'groupCellRenderer->doDeprecatedWay');\n        var paddingPx = paddingCount * padding;\n        if (this.gridOptionsWrapper.isEnableRtl()) {\n            // if doing rtl, padding is on the right\n            this.getGui().style.paddingRight = paddingPx + 'px';\n        }\n        else {\n            // otherwise it is on the left\n            this.getGui().style.paddingLeft = paddingPx + 'px';\n        }\n    };\n    GroupCellRenderer.prototype.setupIndent = function () {\n        // only do this if an indent - as this overwrites the padding that\n        // the theme set, which will make things look 'not aligned' for the\n        // first group level.\n        var node = this.params.node;\n        var suppressPadding = this.params.suppressPadding;\n        if (!suppressPadding) {\n            this.addDestroyableEventListener(node, rowNode_1.RowNode.EVENT_UI_LEVEL_CHANGED, this.setIndent.bind(this));\n            this.setIndent();\n        }\n    };\n    GroupCellRenderer.prototype.addValueElement = function () {\n        var params = this.params;\n        var rowNode = this.displayedGroup;\n        if (rowNode.footer) {\n            this.createFooterCell();\n        }\n        else if (rowNode.hasChildren() ||\n            utils_1._.get(params.colDef, 'cellRendererParams.innerRenderer', null) ||\n            utils_1._.get(params.colDef, 'cellRendererParams.innerRendererFramework', null)) {\n            this.createGroupCell();\n            if (rowNode.hasChildren()) {\n                this.addChildCount();\n            }\n        }\n        else {\n            this.createLeafCell();\n        }\n    };\n    GroupCellRenderer.prototype.createFooterCell = function () {\n        var footerValue;\n        var footerValueGetter = this.params.footerValueGetter;\n        if (footerValueGetter) {\n            // params is same as we were given, except we set the value as the item to display\n            var paramsClone = utils_1._.cloneObject(this.params);\n            paramsClone.value = this.params.value;\n            if (typeof footerValueGetter === 'function') {\n                footerValue = footerValueGetter(paramsClone);\n            }\n            else if (typeof footerValueGetter === 'string') {\n                footerValue = this.expressionService.evaluate(footerValueGetter, paramsClone);\n            }\n            else {\n                console.warn('ag-Grid: footerValueGetter should be either a function or a string (expression)');\n            }\n        }\n        else {\n            footerValue = 'Total ' + this.params.value;\n        }\n        this.eValue.innerHTML = footerValue;\n    };\n    GroupCellRenderer.prototype.createGroupCell = function () {\n        var _this = this;\n        var params = this.params;\n        var rowGroupColumn = this.displayedGroup.rowGroupColumn;\n        // we try and use the cellRenderer of the column used for the grouping if we can\n        var columnToUse = rowGroupColumn ? rowGroupColumn : params.column;\n        var groupName = this.params.value;\n        var valueFormatted = columnToUse ?\n            this.valueFormatterService.formatValue(columnToUse, params.node, params.scope, groupName) : null;\n        params.valueFormatted = valueFormatted;\n        var rendererPromise;\n        if (params.fullWidth == true) {\n            rendererPromise = this.useFullWidth(params);\n        }\n        else {\n            rendererPromise = this.useInnerRenderer(this.params.colDef.cellRendererParams, columnToUse.getColDef(), params);\n        }\n        // retain a reference to the created renderer - we'll use this later for cleanup (in destroy)\n        if (rendererPromise) {\n            rendererPromise.then(function (value) {\n                _this.innerCellRenderer = value;\n            });\n        }\n    };\n    GroupCellRenderer.prototype.useInnerRenderer = function (groupCellRendererParams, groupedColumnDef, // the column this group row is for, eg 'Country'\n    params) {\n        // when grouping, the normal case is we use the cell renderer of the grouped column. eg if grouping by country\n        // and then rating, we will use the country cell renderer for each country group row and likewise the rating\n        // cell renderer for each rating group row.\n        //\n        // however if the user has innerCellRenderer defined, this gets preference and we don't use cell renderers\n        // of the grouped columns.\n        //\n        // so we check and use in the following order:\n        //\n        // 1) thisColDef.cellRendererParams.innerRenderer of the column showing the groups (eg auto group column)\n        // 2) groupedColDef.cellRenderer of the grouped column\n        // 3) groupedColDef.cellRendererParams.innerRenderer\n        var _this = this;\n        var cellRendererPromise = null;\n        // we check if cell renderer provided for the group cell renderer, eg colDef.cellRendererParams.innerRenderer\n        var groupInnerRendererClass = this.userComponentFactory\n            .lookupComponentClassDef(groupCellRendererParams, \"innerRenderer\");\n        if (groupInnerRendererClass && groupInnerRendererClass.component != null\n            && groupInnerRendererClass.source != userComponentFactory_1.ComponentSource.DEFAULT) {\n            // use the renderer defined in cellRendererParams.innerRenderer\n            cellRendererPromise = this.userComponentFactory.newInnerCellRenderer(groupCellRendererParams, params);\n        }\n        else {\n            // otherwise see if we can use the cellRenderer of the column we are grouping by\n            var groupColumnRendererClass = this.userComponentFactory\n                .lookupComponentClassDef(groupedColumnDef, \"cellRenderer\");\n            if (groupColumnRendererClass && groupColumnRendererClass.source != userComponentFactory_1.ComponentSource.DEFAULT) {\n                // Only if the original column is using a specific renderer, it it is a using a DEFAULT one ignore it\n                cellRendererPromise = this.userComponentFactory.newCellRenderer(groupedColumnDef, params);\n            }\n            else if (groupColumnRendererClass && groupColumnRendererClass.source == userComponentFactory_1.ComponentSource.DEFAULT\n                && (utils_1._.get(groupedColumnDef, 'cellRendererParams.innerRenderer', null))) {\n                // EDGE CASE - THIS COMES FROM A COLUMN WHICH HAS BEEN GROUPED DYNAMICALLY, THAT HAS AS RENDERER 'group'\n                // AND HAS A INNER CELL RENDERER\n                cellRendererPromise = this.userComponentFactory.newInnerCellRenderer(groupedColumnDef.cellRendererParams, params);\n            }\n            else {\n                // This forces the retrieval of the default plain cellRenderer that just renders the values.\n                cellRendererPromise = this.userComponentFactory.newCellRenderer({}, params);\n            }\n        }\n        if (cellRendererPromise != null) {\n            cellRendererPromise.then(function (rendererToUse) {\n                if (rendererToUse == null) {\n                    _this.eValue.innerText = params.valueFormatted != null ? params.valueFormatted : params.value;\n                    return;\n                }\n                utils_1._.bindCellRendererToHtmlElement(cellRendererPromise, _this.eValue);\n            });\n        }\n        else {\n            this.eValue.innerText = params.valueFormatted != null ? params.valueFormatted : params.value;\n        }\n        return cellRendererPromise;\n    };\n    GroupCellRenderer.prototype.useFullWidth = function (params) {\n        var cellRendererPromise = this.userComponentFactory.newFullWidthGroupRowInnerCellRenderer(params);\n        if (cellRendererPromise != null) {\n            utils_1._.bindCellRendererToHtmlElement(cellRendererPromise, this.eValue);\n        }\n        else {\n            this.eValue.innerText = params.valueFormatted != null ? params.valueFormatted : params.value;\n        }\n        return cellRendererPromise;\n    };\n    GroupCellRenderer.prototype.addChildCount = function () {\n        // only include the child count if it's included, eg if user doing custom aggregation,\n        // then this could be left out, or set to -1, ie no child count\n        if (this.params.suppressCount) {\n            return;\n        }\n        this.addDestroyableEventListener(this.displayedGroup, rowNode_1.RowNode.EVENT_ALL_CHILDREN_COUNT_CHANGED, this.updateChildCount.bind(this));\n        // filtering changes the child count, so need to cater for it\n        this.updateChildCount();\n    };\n    GroupCellRenderer.prototype.updateChildCount = function () {\n        var allChildrenCount = this.displayedGroup.allChildrenCount;\n        this.eChildCount.innerHTML = allChildrenCount >= 0 ? \"(\" + allChildrenCount + \")\" : \"\";\n    };\n    GroupCellRenderer.prototype.createLeafCell = function () {\n        if (utils_1._.exists(this.params.value)) {\n            this.eValue.innerText = this.params.valueFormatted ? this.params.valueFormatted : this.params.value;\n        }\n    };\n    GroupCellRenderer.prototype.isUserWantsSelected = function () {\n        var paramsCheckbox = this.params.checkbox;\n        if (typeof paramsCheckbox === 'function') {\n            return paramsCheckbox(this.params);\n        }\n        else {\n            return paramsCheckbox === true;\n        }\n    };\n    GroupCellRenderer.prototype.addCheckboxIfNeeded = function () {\n        var rowNode = this.displayedGroup;\n        var checkboxNeeded = this.isUserWantsSelected()\n            // footers cannot be selected\n            && !rowNode.footer\n            // pinned rows cannot be selected\n            && !rowNode.rowPinned\n            // details cannot be selected\n            && !rowNode.detail;\n        if (checkboxNeeded) {\n            var cbSelectionComponent_1 = new checkboxSelectionComponent_1.CheckboxSelectionComponent();\n            this.getContext().wireBean(cbSelectionComponent_1);\n            cbSelectionComponent_1.init({ rowNode: rowNode, column: this.params.column });\n            this.eCheckbox.appendChild(cbSelectionComponent_1.getGui());\n            this.addDestroyFunc(function () { return cbSelectionComponent_1.destroy(); });\n        }\n        utils_1._.addOrRemoveCssClass(this.eCheckbox, 'ag-invisible', !checkboxNeeded);\n    };\n    GroupCellRenderer.prototype.addExpandAndContract = function () {\n        var params = this.params;\n        var eGroupCell = params.eGridCell;\n        var eExpandedIcon = utils_1._.createIconNoSpan('groupExpanded', this.gridOptionsWrapper, null);\n        var eContractedIcon = utils_1._.createIconNoSpan('groupContracted', this.gridOptionsWrapper, null);\n        this.eExpanded.appendChild(eExpandedIcon);\n        this.eContracted.appendChild(eContractedIcon);\n        this.addDestroyableEventListener(this.eExpanded, 'click', this.onExpandClicked.bind(this));\n        this.addDestroyableEventListener(this.eContracted, 'click', this.onExpandClicked.bind(this));\n        // expand / contract as the user hits enter\n        this.addDestroyableEventListener(eGroupCell, 'keydown', this.onKeyDown.bind(this));\n        this.addDestroyableEventListener(params.node, rowNode_1.RowNode.EVENT_EXPANDED_CHANGED, this.showExpandAndContractIcons.bind(this));\n        this.showExpandAndContractIcons();\n        // because we don't show the expand / contract when there are no children, we need to check every time\n        // the number of children change.\n        this.addDestroyableEventListener(this.displayedGroup, rowNode_1.RowNode.EVENT_ALL_CHILDREN_COUNT_CHANGED, this.onAllChildrenCountChanged.bind(this));\n        // if editing groups, then double click is to start editing\n        if (!this.gridOptionsWrapper.isEnableGroupEdit() && this.isExpandable() && !params.suppressDoubleClickExpand) {\n            this.addDestroyableEventListener(eGroupCell, 'dblclick', this.onCellDblClicked.bind(this));\n        }\n    };\n    GroupCellRenderer.prototype.onAllChildrenCountChanged = function () {\n        // maybe if no children now, we should hide the expand / contract icons\n        this.showExpandAndContractIcons();\n        // if we have no children, this impacts the indent\n        this.setIndent();\n    };\n    GroupCellRenderer.prototype.onKeyDown = function (event) {\n        var enterKeyPressed = utils_1._.isKeyPressed(event, constants_1.Constants.KEY_ENTER);\n        if (enterKeyPressed) {\n            if (this.params.suppressEnterExpand) {\n                return;\n            }\n            var cellEditable = this.params.column && this.params.column.isCellEditable(this.params.node);\n            if (cellEditable) {\n                return;\n            }\n            event.preventDefault();\n            this.onExpandOrContract();\n        }\n    };\n    GroupCellRenderer.prototype.setupDragOpenParents = function () {\n        var column = this.params.column;\n        var rowNode = this.params.node;\n        if (!this.gridOptionsWrapper.isGroupHideOpenParents()) {\n            this.draggedFromHideOpenParents = false;\n        }\n        else if (!rowNode.hasChildren()) {\n            // if we are here, and we are not a group, then we must of been dragged down,\n            // as otherwise the cell would be blank, and if cell is blank, this method is never called.\n            this.draggedFromHideOpenParents = true;\n        }\n        else {\n            var rowGroupColumn = rowNode.rowGroupColumn;\n            if (rowGroupColumn) {\n                // if the displayGroup column for this col matches the rowGroupColumn we grouped by for this node,\n                // then nothing was dragged down\n                this.draggedFromHideOpenParents = !column.isRowGroupDisplayed(rowGroupColumn.getId());\n            }\n            else {\n                // the only way we can end up here (no column, but a group) is if we are at the root node,\n                // which only happens when 'groupIncludeTotalFooter' is true. here, we are never dragging\n                this.draggedFromHideOpenParents = false;\n            }\n        }\n        if (this.draggedFromHideOpenParents) {\n            var pointer = rowNode.parent;\n            while (true) {\n                if (utils_1._.missing(pointer)) {\n                    break;\n                }\n                if (pointer.rowGroupColumn && column.isRowGroupDisplayed(pointer.rowGroupColumn.getId())) {\n                    this.displayedGroup = pointer;\n                    break;\n                }\n                pointer = pointer.parent;\n            }\n        }\n        // if we didn't find a displayed group, set it to the row node\n        if (utils_1._.missing(this.displayedGroup)) {\n            this.displayedGroup = rowNode;\n        }\n    };\n    GroupCellRenderer.prototype.onExpandClicked = function (mouseEvent) {\n        if (utils_1._.isStopPropagationForAgGrid(mouseEvent)) {\n            return;\n        }\n        // so if we expand a node, it does not also get selected.\n        utils_1._.stopPropagationForAgGrid(mouseEvent);\n        this.onExpandOrContract();\n    };\n    GroupCellRenderer.prototype.onCellDblClicked = function (mouseEvent) {\n        if (utils_1._.isStopPropagationForAgGrid(mouseEvent)) {\n            return;\n        }\n        // we want to avoid acting on double click events on the expand / contract icon,\n        // as that icons already has expand / collapse functionality on it. otherwise if\n        // the icon was double clicked, we would get 'click', 'click', 'dblclick' which\n        // is open->close->open, however double click should be open->close only.\n        var targetIsExpandIcon = utils_1._.isElementInEventPath(this.eExpanded, mouseEvent)\n            || utils_1._.isElementInEventPath(this.eContracted, mouseEvent);\n        if (!targetIsExpandIcon) {\n            this.onExpandOrContract();\n        }\n    };\n    GroupCellRenderer.prototype.onExpandOrContract = function () {\n        // must use the displayedGroup, so if data was dragged down, we expand the parent, not this row\n        var rowNode = this.displayedGroup;\n        rowNode.setExpanded(!rowNode.expanded);\n    };\n    GroupCellRenderer.prototype.isExpandable = function () {\n        var rowNode = this.params.node;\n        var reducedLeafNode = this.columnController.isPivotMode() && rowNode.leafGroup;\n        return this.draggedFromHideOpenParents ||\n            (rowNode.isExpandable() && !rowNode.footer && !reducedLeafNode);\n    };\n    GroupCellRenderer.prototype.showExpandAndContractIcons = function () {\n        var rowNode = this.params.node;\n        if (this.isExpandable()) {\n            // if expandable, show one based on expand state.\n            // if we were dragged down, means our parent is always expanded\n            var expanded = this.draggedFromHideOpenParents ? true : rowNode.expanded;\n            utils_1._.setDisplayed(this.eContracted, !expanded);\n            utils_1._.setDisplayed(this.eExpanded, expanded);\n        }\n        else {\n            // it not expandable, show neither\n            utils_1._.setDisplayed(this.eExpanded, false);\n            utils_1._.setDisplayed(this.eContracted, false);\n        }\n        var displayedGroup = this.displayedGroup;\n        // compensation padding for leaf nodes, so there is blank space instead of the expand icon\n        var pivotModeAndLeafGroup = this.columnController.isPivotMode() && displayedGroup.leafGroup;\n        var notExpandable = !displayedGroup.isExpandable();\n        var addLeafIndentClass = displayedGroup.footer || notExpandable || pivotModeAndLeafGroup;\n        this.addOrRemoveCssClass('ag-row-group', !addLeafIndentClass);\n        this.addOrRemoveCssClass('ag-row-group-leaf-indent', addLeafIndentClass);\n    };\n    GroupCellRenderer.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        if (this.innerCellRenderer && this.innerCellRenderer.destroy) {\n            this.innerCellRenderer.destroy();\n        }\n    };\n    GroupCellRenderer.prototype.refresh = function () {\n        return false;\n    };\n    GroupCellRenderer.TEMPLATE = '<span class=\"ag-cell-wrapper\">' +\n        '<span class=\"ag-group-expanded\" ref=\"eExpanded\"></span>' +\n        '<span class=\"ag-group-contracted\" ref=\"eContracted\"></span>' +\n        '<span class=\"ag-group-checkbox ag-invisible\" ref=\"eCheckbox\"></span>' +\n        '<span class=\"ag-group-value\" ref=\"eValue\"></span>' +\n        '<span class=\"ag-group-child-count\" ref=\"eChildCount\"></span>' +\n        '</span>';\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], GroupCellRenderer.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_1.Autowired('expressionService'),\n        __metadata(\"design:type\", expressionService_1.ExpressionService)\n    ], GroupCellRenderer.prototype, \"expressionService\", void 0);\n    __decorate([\n        context_1.Autowired('eventService'),\n        __metadata(\"design:type\", eventService_1.EventService)\n    ], GroupCellRenderer.prototype, \"eventService\", void 0);\n    __decorate([\n        context_1.Autowired('valueFormatterService'),\n        __metadata(\"design:type\", valueFormatterService_1.ValueFormatterService)\n    ], GroupCellRenderer.prototype, \"valueFormatterService\", void 0);\n    __decorate([\n        context_1.Autowired('columnController'),\n        __metadata(\"design:type\", columnController_1.ColumnController)\n    ], GroupCellRenderer.prototype, \"columnController\", void 0);\n    __decorate([\n        context_1.Autowired('mouseEventService'),\n        __metadata(\"design:type\", mouseEventService_1.MouseEventService)\n    ], GroupCellRenderer.prototype, \"mouseEventService\", void 0);\n    __decorate([\n        context_1.Autowired('userComponentFactory'),\n        __metadata(\"design:type\", userComponentFactory_1.UserComponentFactory)\n    ], GroupCellRenderer.prototype, \"userComponentFactory\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eExpanded'),\n        __metadata(\"design:type\", HTMLElement)\n    ], GroupCellRenderer.prototype, \"eExpanded\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eContracted'),\n        __metadata(\"design:type\", HTMLElement)\n    ], GroupCellRenderer.prototype, \"eContracted\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eCheckbox'),\n        __metadata(\"design:type\", HTMLElement)\n    ], GroupCellRenderer.prototype, \"eCheckbox\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eValue'),\n        __metadata(\"design:type\", HTMLElement)\n    ], GroupCellRenderer.prototype, \"eValue\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eChildCount'),\n        __metadata(\"design:type\", HTMLElement)\n    ], GroupCellRenderer.prototype, \"eChildCount\", void 0);\n    return GroupCellRenderer;\n}(component_1.Component));\nexports.GroupCellRenderer = GroupCellRenderer;\n"]},"metadata":{},"sourceType":"script"}