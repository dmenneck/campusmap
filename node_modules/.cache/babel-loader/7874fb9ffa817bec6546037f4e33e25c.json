{"ast":null,"code":"/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.2.2\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar context_1 = require(\"../context/context\");\n\nvar filterManager_1 = require(\"../filter/filterManager\");\n\nvar gridOptionsWrapper_1 = require(\"../gridOptionsWrapper\");\n\nvar FilterService =\n/** @class */\nfunction () {\n  function FilterService() {}\n\n  FilterService.prototype.postConstruct = function () {\n    this.doingTreeData = this.gridOptionsWrapper.isTreeData();\n  };\n\n  FilterService.prototype.filter = function (changedPath) {\n    var filterActive = this.filterManager.isAnyFilterPresent();\n    this.filterNodes(filterActive, changedPath);\n  };\n\n  FilterService.prototype.filterNodes = function (filterActive, changedPath) {\n    var _this = this;\n\n    var filterCallback = function (rowNode, includeChildNodes) {\n      // recursively get all children that are groups to also filter\n      if (rowNode.hasChildren()) {\n        // result of filter for this node. when filtering tree data, includeChildNodes = true when parent passes\n        if (filterActive && !includeChildNodes) {\n          rowNode.childrenAfterFilter = rowNode.childrenAfterGroup.filter(function (childNode) {\n            // a group is included in the result if it has any children of it's own.\n            // by this stage, the child groups are already filtered\n            var passBecauseChildren = childNode.childrenAfterFilter && childNode.childrenAfterFilter.length > 0; // both leaf level nodes and tree data nodes have data. these get added if\n            // the data passes the filter\n\n            var passBecauseDataPasses = childNode.data && _this.filterManager.doesRowPassFilter(childNode); // note - tree data nodes pass either if a) they pass themselves or b) any children of that node pass\n\n\n            return passBecauseChildren || passBecauseDataPasses;\n          });\n        } else {\n          // if not filtering, the result is the original list\n          rowNode.childrenAfterFilter = rowNode.childrenAfterGroup;\n        }\n\n        _this.setAllChildrenCount(rowNode);\n      } else {\n        rowNode.childrenAfterFilter = rowNode.childrenAfterGroup;\n        rowNode.setAllChildrenCount(null);\n      }\n    };\n\n    if (this.doingTreeDataFiltering()) {\n      var treeDataDepthFirstFilter_1 = function (rowNode, alreadyFoundInParent) {\n        // tree data filter traverses the hierarchy depth first and includes child nodes if parent passes\n        // filter, and parent nodes will be include if any children exist.\n        if (rowNode.childrenAfterGroup) {\n          for (var i = 0; i < rowNode.childrenAfterGroup.length; i++) {\n            var childNode = rowNode.childrenAfterGroup[i]; // first check if current node passes filter before invoking child nodes\n\n            var foundInParent = alreadyFoundInParent || _this.filterManager.doesRowPassFilter(childNode);\n\n            if (childNode.childrenAfterGroup) {\n              treeDataDepthFirstFilter_1(rowNode.childrenAfterGroup[i], foundInParent);\n            } else {\n              filterCallback(childNode, foundInParent);\n            }\n          }\n        }\n\n        filterCallback(rowNode, alreadyFoundInParent);\n      };\n\n      var treeDataFilterCallback = function (rowNode) {\n        return treeDataDepthFirstFilter_1(rowNode, false);\n      };\n\n      changedPath.executeFromRootNode(treeDataFilterCallback);\n    } else {\n      var defaultFilterCallback = function (rowNode) {\n        return filterCallback(rowNode, false);\n      };\n\n      changedPath.forEachChangedNodeDepthFirst(defaultFilterCallback, true);\n    }\n  };\n\n  FilterService.prototype.setAllChildrenCountTreeData = function (rowNode) {\n    // for tree data, we include all children, groups and leafs\n    var allChildrenCount = 0;\n    rowNode.childrenAfterFilter.forEach(function (child) {\n      // include child itself\n      allChildrenCount++; // include children of children\n\n      allChildrenCount += child.allChildrenCount;\n    });\n    rowNode.setAllChildrenCount(allChildrenCount);\n  };\n\n  FilterService.prototype.setAllChildrenCountGridGrouping = function (rowNode) {\n    // for grid data, we only count the leafs\n    var allChildrenCount = 0;\n    rowNode.childrenAfterFilter.forEach(function (child) {\n      if (child.group) {\n        allChildrenCount += child.allChildrenCount;\n      } else {\n        allChildrenCount++;\n      }\n    });\n    rowNode.setAllChildrenCount(allChildrenCount);\n  };\n\n  FilterService.prototype.setAllChildrenCount = function (rowNode) {\n    if (this.doingTreeData) {\n      this.setAllChildrenCountTreeData(rowNode);\n    } else {\n      this.setAllChildrenCountGridGrouping(rowNode);\n    }\n  };\n\n  FilterService.prototype.doingTreeDataFiltering = function () {\n    return this.gridOptionsWrapper.isTreeData() && !this.gridOptionsWrapper.isExcludeChildrenWhenTreeDataFiltering();\n  };\n\n  __decorate([context_1.Autowired('filterManager'), __metadata(\"design:type\", filterManager_1.FilterManager)], FilterService.prototype, \"filterManager\", void 0);\n\n  __decorate([context_1.Autowired('gridOptionsWrapper'), __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)], FilterService.prototype, \"gridOptionsWrapper\", void 0);\n\n  __decorate([context_1.PostConstruct, __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", []), __metadata(\"design:returntype\", void 0)], FilterService.prototype, \"postConstruct\", null);\n\n  FilterService = __decorate([context_1.Bean(\"filterService\")], FilterService);\n  return FilterService;\n}();\n\nexports.FilterService = FilterService;","map":{"version":3,"sources":["/Users/dirkmennecke77/Desktop/Lageplan/node_modules/ag-grid-community/dist/lib/rowNodes/filterService.js"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__metadata","k","v","metadata","exports","value","context_1","require","filterManager_1","gridOptionsWrapper_1","FilterService","prototype","postConstruct","doingTreeData","gridOptionsWrapper","isTreeData","filter","changedPath","filterActive","filterManager","isAnyFilterPresent","filterNodes","_this","filterCallback","rowNode","includeChildNodes","hasChildren","childrenAfterFilter","childrenAfterGroup","childNode","passBecauseChildren","passBecauseDataPasses","data","doesRowPassFilter","setAllChildrenCount","doingTreeDataFiltering","treeDataDepthFirstFilter_1","alreadyFoundInParent","foundInParent","treeDataFilterCallback","executeFromRootNode","defaultFilterCallback","forEachChangedNodeDepthFirst","setAllChildrenCountTreeData","allChildrenCount","forEach","child","setAllChildrenCountGridGrouping","group","isExcludeChildrenWhenTreeDataFiltering","Autowired","FilterManager","GridOptionsWrapper","PostConstruct","Function","Bean"],"mappings":"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","sourcesContent":["/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.2.2\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar context_1 = require(\"../context/context\");\nvar filterManager_1 = require(\"../filter/filterManager\");\nvar gridOptionsWrapper_1 = require(\"../gridOptionsWrapper\");\nvar FilterService = /** @class */ (function () {\n    function FilterService() {\n    }\n    FilterService.prototype.postConstruct = function () {\n        this.doingTreeData = this.gridOptionsWrapper.isTreeData();\n    };\n    FilterService.prototype.filter = function (changedPath) {\n        var filterActive = this.filterManager.isAnyFilterPresent();\n        this.filterNodes(filterActive, changedPath);\n    };\n    FilterService.prototype.filterNodes = function (filterActive, changedPath) {\n        var _this = this;\n        var filterCallback = function (rowNode, includeChildNodes) {\n            // recursively get all children that are groups to also filter\n            if (rowNode.hasChildren()) {\n                // result of filter for this node. when filtering tree data, includeChildNodes = true when parent passes\n                if (filterActive && !includeChildNodes) {\n                    rowNode.childrenAfterFilter = rowNode.childrenAfterGroup.filter(function (childNode) {\n                        // a group is included in the result if it has any children of it's own.\n                        // by this stage, the child groups are already filtered\n                        var passBecauseChildren = childNode.childrenAfterFilter && childNode.childrenAfterFilter.length > 0;\n                        // both leaf level nodes and tree data nodes have data. these get added if\n                        // the data passes the filter\n                        var passBecauseDataPasses = childNode.data && _this.filterManager.doesRowPassFilter(childNode);\n                        // note - tree data nodes pass either if a) they pass themselves or b) any children of that node pass\n                        return passBecauseChildren || passBecauseDataPasses;\n                    });\n                }\n                else {\n                    // if not filtering, the result is the original list\n                    rowNode.childrenAfterFilter = rowNode.childrenAfterGroup;\n                }\n                _this.setAllChildrenCount(rowNode);\n            }\n            else {\n                rowNode.childrenAfterFilter = rowNode.childrenAfterGroup;\n                rowNode.setAllChildrenCount(null);\n            }\n        };\n        if (this.doingTreeDataFiltering()) {\n            var treeDataDepthFirstFilter_1 = function (rowNode, alreadyFoundInParent) {\n                // tree data filter traverses the hierarchy depth first and includes child nodes if parent passes\n                // filter, and parent nodes will be include if any children exist.\n                if (rowNode.childrenAfterGroup) {\n                    for (var i = 0; i < rowNode.childrenAfterGroup.length; i++) {\n                        var childNode = rowNode.childrenAfterGroup[i];\n                        // first check if current node passes filter before invoking child nodes\n                        var foundInParent = alreadyFoundInParent || _this.filterManager.doesRowPassFilter(childNode);\n                        if (childNode.childrenAfterGroup) {\n                            treeDataDepthFirstFilter_1(rowNode.childrenAfterGroup[i], foundInParent);\n                        }\n                        else {\n                            filterCallback(childNode, foundInParent);\n                        }\n                    }\n                }\n                filterCallback(rowNode, alreadyFoundInParent);\n            };\n            var treeDataFilterCallback = function (rowNode) { return treeDataDepthFirstFilter_1(rowNode, false); };\n            changedPath.executeFromRootNode(treeDataFilterCallback);\n        }\n        else {\n            var defaultFilterCallback = function (rowNode) { return filterCallback(rowNode, false); };\n            changedPath.forEachChangedNodeDepthFirst(defaultFilterCallback, true);\n        }\n    };\n    FilterService.prototype.setAllChildrenCountTreeData = function (rowNode) {\n        // for tree data, we include all children, groups and leafs\n        var allChildrenCount = 0;\n        rowNode.childrenAfterFilter.forEach(function (child) {\n            // include child itself\n            allChildrenCount++;\n            // include children of children\n            allChildrenCount += child.allChildrenCount;\n        });\n        rowNode.setAllChildrenCount(allChildrenCount);\n    };\n    FilterService.prototype.setAllChildrenCountGridGrouping = function (rowNode) {\n        // for grid data, we only count the leafs\n        var allChildrenCount = 0;\n        rowNode.childrenAfterFilter.forEach(function (child) {\n            if (child.group) {\n                allChildrenCount += child.allChildrenCount;\n            }\n            else {\n                allChildrenCount++;\n            }\n        });\n        rowNode.setAllChildrenCount(allChildrenCount);\n    };\n    FilterService.prototype.setAllChildrenCount = function (rowNode) {\n        if (this.doingTreeData) {\n            this.setAllChildrenCountTreeData(rowNode);\n        }\n        else {\n            this.setAllChildrenCountGridGrouping(rowNode);\n        }\n    };\n    FilterService.prototype.doingTreeDataFiltering = function () {\n        return this.gridOptionsWrapper.isTreeData() && !this.gridOptionsWrapper.isExcludeChildrenWhenTreeDataFiltering();\n    };\n    __decorate([\n        context_1.Autowired('filterManager'),\n        __metadata(\"design:type\", filterManager_1.FilterManager)\n    ], FilterService.prototype, \"filterManager\", void 0);\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], FilterService.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], FilterService.prototype, \"postConstruct\", null);\n    FilterService = __decorate([\n        context_1.Bean(\"filterService\")\n    ], FilterService);\n    return FilterService;\n}());\nexports.FilterService = FilterService;\n"]},"metadata":{},"sourceType":"script"}