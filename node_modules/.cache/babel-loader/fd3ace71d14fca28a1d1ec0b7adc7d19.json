{"ast":null,"code":"'use strict';\n\nvar USE_TYPEDARRAY = typeof Uint8Array !== 'undefined' && typeof Uint16Array !== 'undefined' && typeof Uint32Array !== 'undefined';\n\nvar pako = require(\"pako\");\n\nexports.uncompressInputType = USE_TYPEDARRAY ? \"uint8array\" : \"array\";\nexports.compressInputType = USE_TYPEDARRAY ? \"uint8array\" : \"array\";\nexports.magic = \"\\x08\\x00\";\n\nexports.compress = function (input, compressionOptions) {\n  return pako.deflateRaw(input, {\n    level: compressionOptions.level || -1 // default compression\n\n  });\n};\n\nexports.uncompress = function (input) {\n  return pako.inflateRaw(input);\n};","map":{"version":3,"sources":["/Users/dirkmennecke77/Desktop/Lageplan/node_modules/jszip/lib/flate.js"],"names":["USE_TYPEDARRAY","Uint8Array","Uint16Array","Uint32Array","pako","require","exports","uncompressInputType","compressInputType","magic","compress","input","compressionOptions","deflateRaw","level","uncompress","inflateRaw"],"mappings":"AAAA;;AACA,IAAIA,cAAc,GAAI,OAAOC,UAAP,KAAsB,WAAvB,IAAwC,OAAOC,WAAP,KAAuB,WAA/D,IAAgF,OAAOC,WAAP,KAAuB,WAA5H;;AAEA,IAAIC,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;;AACAC,OAAO,CAACC,mBAAR,GAA8BP,cAAc,GAAG,YAAH,GAAkB,OAA9D;AACAM,OAAO,CAACE,iBAAR,GAA4BR,cAAc,GAAG,YAAH,GAAkB,OAA5D;AAEAM,OAAO,CAACG,KAAR,GAAgB,UAAhB;;AACAH,OAAO,CAACI,QAAR,GAAmB,UAASC,KAAT,EAAgBC,kBAAhB,EAAoC;AACnD,SAAOR,IAAI,CAACS,UAAL,CAAgBF,KAAhB,EAAuB;AAC1BG,IAAAA,KAAK,EAAGF,kBAAkB,CAACE,KAAnB,IAA4B,CAAC,CADX,CACa;;AADb,GAAvB,CAAP;AAGH,CAJD;;AAKAR,OAAO,CAACS,UAAR,GAAsB,UAASJ,KAAT,EAAgB;AAClC,SAAOP,IAAI,CAACY,UAAL,CAAgBL,KAAhB,CAAP;AACH,CAFD","sourcesContent":["'use strict';\nvar USE_TYPEDARRAY = (typeof Uint8Array !== 'undefined') && (typeof Uint16Array !== 'undefined') && (typeof Uint32Array !== 'undefined');\n\nvar pako = require(\"pako\");\nexports.uncompressInputType = USE_TYPEDARRAY ? \"uint8array\" : \"array\";\nexports.compressInputType = USE_TYPEDARRAY ? \"uint8array\" : \"array\";\n\nexports.magic = \"\\x08\\x00\";\nexports.compress = function(input, compressionOptions) {\n    return pako.deflateRaw(input, {\n        level : compressionOptions.level || -1 // default compression\n    });\n};\nexports.uncompress =  function(input) {\n    return pako.inflateRaw(input);\n};\n"]},"metadata":{},"sourceType":"script"}