{"ast":null,"code":"/**\n * @module ol/format/filter/Or\n */\nimport LogicalNary from './LogicalNary.js';\n/**\n * @classdesc\n * Represents a logical `<Or>` operator between two ore more filter conditions.\n * @api\n */\n\nvar Or =\n/*@__PURE__*/\nfunction (LogicalNary) {\n  function Or(conditions) {\n    LogicalNary.call(this, 'Or', Array.prototype.slice.call(arguments));\n  }\n\n  if (LogicalNary) Or.__proto__ = LogicalNary;\n  Or.prototype = Object.create(LogicalNary && LogicalNary.prototype);\n  Or.prototype.constructor = Or;\n  return Or;\n}(LogicalNary);\n\nexport default Or;","map":{"version":3,"sources":["../../../../src/ol/format/filter/Or.js"],"names":["super"],"mappings":"AAAA;;;AAGA,OAAO,WAAP,MAAwB,kBAAxB;;;;;;;AAOA,IAAM,EAAE;AAAoB;AAAA,UAAA,WAAA,EAAA;AAK1B,WAAA,EAAA,CAAY,UAAZ,EAAwB;AACtBA,IAAAA,WAAAA,CAAAA,IAAAA,CAAK,IAALA,EAAM,IAANA,EAAY,KAAK,CAAC,SAAN,CAAgB,KAAhB,CAAsB,IAAtB,CAA2B,SAA3B,CAAZA;;;;;AACD,EAAA,EAAA,CAAA,SAAA,CAAA,WAAA,GAAA,EAAA;;CAPyB,CAAX,WAAW,CAA5B;;AAWA,eAAe,EAAf","sourcesContent":["/**\n * @module ol/format/filter/Or\n */\nimport LogicalNary from './LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<Or>` operator between two ore more filter conditions.\n * @api\n */\nclass Or extends LogicalNary {\n\n  /**\n   * @param {...import(\"./Filter.js\").default} conditions Conditions.\n   */\n  constructor(conditions) {\n    super('Or', Array.prototype.slice.call(arguments));\n  }\n\n}\n\nexport default Or;\n"]},"metadata":{},"sourceType":"module"}