{"ast":null,"code":"/**\n * @module ol/format/filter/Not\n */\nimport Filter from './Filter.js';\n/**\n * @classdesc\n * Represents a logical `<Not>` operator for a filter condition.\n * @api\n */\n\nvar Not =\n/*@__PURE__*/\nfunction (Filter) {\n  function Not(condition) {\n    Filter.call(this, 'Not');\n    /**\n     * @type {!import(\"./Filter.js\").default}\n     */\n\n    this.condition = condition;\n  }\n\n  if (Filter) Not.__proto__ = Filter;\n  Not.prototype = Object.create(Filter && Filter.prototype);\n  Not.prototype.constructor = Not;\n  return Not;\n}(Filter);\n\nexport default Not;","map":{"version":3,"sources":["../../../../src/ol/format/filter/Not.js"],"names":["super"],"mappings":"AAAA;;;AAGA,OAAO,MAAP,MAAmB,aAAnB;;;;;;;AAOA,IAAM,GAAG;AAAe;AAAA,UAAA,MAAA,EAAA;AAKtB,WAAA,GAAA,CAAY,SAAZ,EAAuB;AAErBA,IAAAA,MAAAA,CAAAA,IAAAA,CAAK,IAALA,EAAM,KAANA;;;;;AAKA,SAAK,SAAL,GAAiB,SAAjB;;;;;AAED,EAAA,GAAA,CAAA,SAAA,CAAA,WAAA,GAAA,GAAA;;CAdqB,CAAN,MAAM,CAAxB;;AAkBA,eAAe,GAAf","sourcesContent":["/**\n * @module ol/format/filter/Not\n */\nimport Filter from './Filter.js';\n\n/**\n * @classdesc\n * Represents a logical `<Not>` operator for a filter condition.\n * @api\n */\nclass Not extends Filter {\n\n  /**\n   * @param {!import(\"./Filter.js\").default} condition Filter condition.\n   */\n  constructor(condition) {\n\n    super('Not');\n\n    /**\n     * @type {!import(\"./Filter.js\").default}\n     */\n    this.condition = condition;\n\n  }\n\n}\n\nexport default Not;\n"]},"metadata":{},"sourceType":"module"}