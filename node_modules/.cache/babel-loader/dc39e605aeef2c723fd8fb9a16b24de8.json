{"ast":null,"code":"/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.2.2\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar context_1 = require(\"../context/context\");\n\nvar logger_1 = require(\"../logger\");\n\nvar eventService_1 = require(\"../eventService\");\n\nvar events_1 = require(\"../events\");\n\nvar gridOptionsWrapper_1 = require(\"../gridOptionsWrapper\");\n\nvar columnApi_1 = require(\"../columnController/columnApi\");\n\nvar gridApi_1 = require(\"../gridApi\");\n\nvar utils_1 = require(\"../utils\");\n/** Adds drag listening onto an element. In ag-Grid this is used twice, first is resizing columns,\n * second is moving the columns and column groups around (ie the 'drag' part of Drag and Drop. */\n\n\nvar DragService =\n/** @class */\nfunction () {\n  function DragService() {\n    this.onMouseUpListener = this.onMouseUp.bind(this);\n    this.onMouseMoveListener = this.onMouseMove.bind(this);\n    this.onTouchEndListener = this.onTouchUp.bind(this);\n    this.onTouchMoveListener = this.onTouchMove.bind(this);\n    this.dragEndFunctions = [];\n    this.dragSources = [];\n  }\n\n  DragService.prototype.init = function () {\n    this.logger = this.loggerFactory.create('DragService');\n  };\n\n  DragService.prototype.destroy = function () {\n    this.dragSources.forEach(this.removeListener.bind(this));\n    this.dragSources.length = 0;\n  };\n\n  DragService.prototype.removeListener = function (dragSourceAndListener) {\n    var element = dragSourceAndListener.dragSource.eElement;\n    var mouseDownListener = dragSourceAndListener.mouseDownListener;\n    element.removeEventListener('mousedown', mouseDownListener); // remove touch listener only if it exists\n\n    if (dragSourceAndListener.touchEnabled) {\n      var touchStartListener = dragSourceAndListener.touchStartListener;\n      element.removeEventListener('touchstart', touchStartListener, {\n        passive: true\n      });\n    }\n  };\n\n  DragService.prototype.removeDragSource = function (params) {\n    var dragSourceAndListener = utils_1._.find(this.dragSources, function (item) {\n      return item.dragSource === params;\n    });\n\n    if (!dragSourceAndListener) {\n      return;\n    }\n\n    this.removeListener(dragSourceAndListener);\n\n    utils_1._.removeFromArray(this.dragSources, dragSourceAndListener);\n  };\n\n  DragService.prototype.setNoSelectToBody = function (noSelect) {\n    var eDocument = this.gridOptionsWrapper.getDocument();\n    var eBody = eDocument.querySelector('body');\n\n    if (utils_1._.exists(eBody)) {\n      // when we drag the mouse in ag-Grid, this class gets added / removed from the body, so that\n      // the mouse isn't selecting text when dragging.\n      utils_1._.addOrRemoveCssClass(eBody, 'ag-unselectable', noSelect);\n    }\n  };\n\n  DragService.prototype.addDragSource = function (params, includeTouch) {\n    if (includeTouch === void 0) {\n      includeTouch = false;\n    }\n\n    var mouseListener = this.onMouseDown.bind(this, params);\n    params.eElement.addEventListener('mousedown', mouseListener);\n    var touchListener = null;\n    var suppressTouch = this.gridOptionsWrapper.isSuppressTouch();\n\n    if (includeTouch && !suppressTouch) {\n      touchListener = this.onTouchStart.bind(this, params);\n      params.eElement.addEventListener('touchstart', touchListener, {\n        passive: false\n      });\n    }\n\n    this.dragSources.push({\n      dragSource: params,\n      mouseDownListener: mouseListener,\n      touchStartListener: touchListener,\n      touchEnabled: includeTouch\n    });\n  }; // gets called whenever mouse down on any drag source\n\n\n  DragService.prototype.onTouchStart = function (params, touchEvent) {\n    var _this = this;\n\n    this.currentDragParams = params;\n    this.dragging = false;\n    var touch = touchEvent.touches[0];\n    this.touchLastTime = touch;\n    this.touchStart = touch;\n    touchEvent.preventDefault(); // we temporally add these listeners, for the duration of the drag, they\n    // are removed in touch end handling.\n\n    params.eElement.addEventListener('touchmove', this.onTouchMoveListener, {\n      passive: true\n    });\n    params.eElement.addEventListener('touchend', this.onTouchEndListener, {\n      passive: true\n    });\n    params.eElement.addEventListener('touchcancel', this.onTouchEndListener, {\n      passive: true\n    });\n    this.dragEndFunctions.push(function () {\n      params.eElement.removeEventListener('touchmove', _this.onTouchMoveListener, {\n        passive: true\n      });\n      params.eElement.removeEventListener('touchend', _this.onTouchEndListener, {\n        passive: true\n      });\n      params.eElement.removeEventListener('touchcancel', _this.onTouchEndListener, {\n        passive: true\n      });\n    }); // see if we want to start dragging straight away\n\n    if (params.dragStartPixels === 0) {\n      this.onCommonMove(touch, this.touchStart);\n    }\n  }; // gets called whenever mouse down on any drag source\n\n\n  DragService.prototype.onMouseDown = function (params, mouseEvent) {\n    var _this = this; // we ignore when shift key is pressed. this is for the range selection, as when\n    // user shift-clicks a cell, this should not be interpreted as the start of a drag.\n    // if (mouseEvent.shiftKey) { return; }\n\n\n    if (params.skipMouseEvent) {\n      if (params.skipMouseEvent(mouseEvent)) {\n        return;\n      }\n    } // if there are two elements with parent / child relationship, and both are draggable,\n    // when we drag the child, we should NOT drag the parent. an example of this is row moving\n    // and range selection - row moving should get preference when use drags the rowDrag component.\n\n\n    if (mouseEvent._alreadyProcessedByDragService) {\n      return;\n    }\n\n    mouseEvent._alreadyProcessedByDragService = true; // only interested in left button clicks\n\n    if (mouseEvent.button !== 0) {\n      return;\n    }\n\n    this.currentDragParams = params;\n    this.dragging = false;\n    this.mouseStartEvent = mouseEvent;\n    var eDocument = this.gridOptionsWrapper.getDocument();\n    this.setNoSelectToBody(true); // we temporally add these listeners, for the duration of the drag, they\n    // are removed in mouseup handling.\n\n    eDocument.addEventListener('mousemove', this.onMouseMoveListener);\n    eDocument.addEventListener('mouseup', this.onMouseUpListener);\n    this.dragEndFunctions.push(function () {\n      eDocument.removeEventListener('mousemove', _this.onMouseMoveListener);\n      eDocument.removeEventListener('mouseup', _this.onMouseUpListener);\n    }); //see if we want to start dragging straight away\n\n    if (params.dragStartPixels === 0) {\n      this.onMouseMove(mouseEvent);\n    }\n  }; // returns true if the event is close to the original event by X pixels either vertically or horizontally.\n  // we only start dragging after X pixels so this allows us to know if we should start dragging yet.\n\n\n  DragService.prototype.isEventNearStartEvent = function (currentEvent, startEvent) {\n    // by default, we wait 4 pixels before starting the drag\n    var dragStartPixels = this.currentDragParams.dragStartPixels;\n    var requiredPixelDiff = utils_1._.exists(dragStartPixels) ? dragStartPixels : 4;\n    return utils_1._.areEventsNear(currentEvent, startEvent, requiredPixelDiff);\n  };\n\n  DragService.prototype.getFirstActiveTouch = function (touchList) {\n    for (var i = 0; i < touchList.length; i++) {\n      if (touchList[i].identifier === this.touchStart.identifier) {\n        return touchList[i];\n      }\n    }\n\n    return null;\n  };\n\n  DragService.prototype.onCommonMove = function (currentEvent, startEvent) {\n    if (!this.dragging) {\n      // if mouse hasn't travelled from the start position enough, do nothing\n      if (!this.dragging && this.isEventNearStartEvent(currentEvent, startEvent)) {\n        return;\n      }\n\n      this.dragging = true;\n      var event_1 = {\n        type: events_1.Events.EVENT_DRAG_STARTED,\n        api: this.gridApi,\n        columnApi: this.columnApi\n      };\n      this.eventService.dispatchEvent(event_1);\n      this.currentDragParams.onDragStart(startEvent);\n    }\n\n    this.currentDragParams.onDragging(currentEvent);\n  };\n\n  DragService.prototype.onTouchMove = function (touchEvent) {\n    var touch = this.getFirstActiveTouch(touchEvent.touches);\n\n    if (!touch) {\n      return;\n    } // this.___statusPanel.setInfoText(Math.random() + ' onTouchMove preventDefault stopPropagation');\n    // if we don't preview default, then the browser will try and do it's own touch stuff,\n    // like do 'back button' (chrome does this) or scroll the page (eg drag column could  be confused\n    // with scroll page in the app)\n    // touchEvent.preventDefault();\n\n\n    this.onCommonMove(touch, this.touchStart);\n  }; // only gets called after a mouse down - as this is only added after mouseDown\n  // and is removed when mouseUp happens\n\n\n  DragService.prototype.onMouseMove = function (mouseEvent) {\n    this.onCommonMove(mouseEvent, this.mouseStartEvent);\n  };\n\n  DragService.prototype.onTouchUp = function (touchEvent) {\n    var touch = this.getFirstActiveTouch(touchEvent.changedTouches); // i haven't worked this out yet, but there is no matching touch\n    // when we get the touch up event. to get around this, we swap in\n    // the last touch. this is a hack to 'get it working' while we\n    // figure out what's going on, why we are not getting a touch in\n    // current event.\n\n    if (!touch) {\n      touch = this.touchLastTime;\n    } // if mouse was left up before we started to move, then this is a tap.\n    // we check this before onUpCommon as onUpCommon resets the dragging\n    // let tap = !this.dragging;\n    // let tapTarget = this.currentDragParams.eElement;\n\n\n    this.onUpCommon(touch); // if tap, tell user\n    // console.log(`${Math.random()} tap = ${tap}`);\n    // if (tap) {\n    //     tapTarget.click();\n    // }\n  };\n\n  DragService.prototype.onMouseUp = function (mouseEvent) {\n    this.onUpCommon(mouseEvent);\n  };\n\n  DragService.prototype.onUpCommon = function (eventOrTouch) {\n    if (this.dragging) {\n      this.dragging = false;\n      this.currentDragParams.onDragStop(eventOrTouch);\n      var event_2 = {\n        type: events_1.Events.EVENT_DRAG_STOPPED,\n        api: this.gridApi,\n        columnApi: this.columnApi\n      };\n      this.eventService.dispatchEvent(event_2);\n    }\n\n    this.setNoSelectToBody(false);\n    this.mouseStartEvent = null;\n    this.touchStart = null;\n    this.touchLastTime = null;\n    this.currentDragParams = null;\n    this.dragEndFunctions.forEach(function (func) {\n      return func();\n    });\n    this.dragEndFunctions.length = 0;\n  };\n\n  __decorate([context_1.Autowired('loggerFactory'), __metadata(\"design:type\", logger_1.LoggerFactory)], DragService.prototype, \"loggerFactory\", void 0);\n\n  __decorate([context_1.Autowired('eventService'), __metadata(\"design:type\", eventService_1.EventService)], DragService.prototype, \"eventService\", void 0);\n\n  __decorate([context_1.Autowired('gridOptionsWrapper'), __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)], DragService.prototype, \"gridOptionsWrapper\", void 0);\n\n  __decorate([context_1.Autowired('columnApi'), __metadata(\"design:type\", columnApi_1.ColumnApi)], DragService.prototype, \"columnApi\", void 0);\n\n  __decorate([context_1.Autowired('gridApi'), __metadata(\"design:type\", gridApi_1.GridApi)], DragService.prototype, \"gridApi\", void 0);\n\n  __decorate([context_1.PostConstruct, __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", []), __metadata(\"design:returntype\", void 0)], DragService.prototype, \"init\", null);\n\n  __decorate([context_1.PreDestroy, __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", []), __metadata(\"design:returntype\", void 0)], DragService.prototype, \"destroy\", null);\n\n  DragService = __decorate([context_1.Bean('dragService')], DragService);\n  return DragService;\n}();\n\nexports.DragService = DragService;","map":{"version":3,"sources":["/Users/dirkmennecke77/Desktop/Lageplan/node_modules/ag-grid-community/dist/lib/dragAndDrop/dragService.js"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__metadata","k","v","metadata","exports","value","context_1","require","logger_1","eventService_1","events_1","gridOptionsWrapper_1","columnApi_1","gridApi_1","utils_1","DragService","onMouseUpListener","onMouseUp","bind","onMouseMoveListener","onMouseMove","onTouchEndListener","onTouchUp","onTouchMoveListener","onTouchMove","dragEndFunctions","dragSources","prototype","init","logger","loggerFactory","create","destroy","forEach","removeListener","dragSourceAndListener","element","dragSource","eElement","mouseDownListener","removeEventListener","touchEnabled","touchStartListener","passive","removeDragSource","params","_","find","item","removeFromArray","setNoSelectToBody","noSelect","eDocument","gridOptionsWrapper","getDocument","eBody","querySelector","exists","addOrRemoveCssClass","addDragSource","includeTouch","mouseListener","onMouseDown","addEventListener","touchListener","suppressTouch","isSuppressTouch","onTouchStart","push","touchEvent","_this","currentDragParams","dragging","touch","touches","touchLastTime","touchStart","preventDefault","dragStartPixels","onCommonMove","mouseEvent","skipMouseEvent","_alreadyProcessedByDragService","button","mouseStartEvent","isEventNearStartEvent","currentEvent","startEvent","requiredPixelDiff","areEventsNear","getFirstActiveTouch","touchList","identifier","event_1","type","Events","EVENT_DRAG_STARTED","api","gridApi","columnApi","eventService","dispatchEvent","onDragStart","onDragging","changedTouches","onUpCommon","eventOrTouch","onDragStop","event_2","EVENT_DRAG_STOPPED","func","Autowired","LoggerFactory","EventService","GridOptionsWrapper","ColumnApi","GridApi","PostConstruct","Function","PreDestroy","Bean"],"mappings":"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","sourcesContent":["/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.2.2\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar context_1 = require(\"../context/context\");\nvar logger_1 = require(\"../logger\");\nvar eventService_1 = require(\"../eventService\");\nvar events_1 = require(\"../events\");\nvar gridOptionsWrapper_1 = require(\"../gridOptionsWrapper\");\nvar columnApi_1 = require(\"../columnController/columnApi\");\nvar gridApi_1 = require(\"../gridApi\");\nvar utils_1 = require(\"../utils\");\n/** Adds drag listening onto an element. In ag-Grid this is used twice, first is resizing columns,\n * second is moving the columns and column groups around (ie the 'drag' part of Drag and Drop. */\nvar DragService = /** @class */ (function () {\n    function DragService() {\n        this.onMouseUpListener = this.onMouseUp.bind(this);\n        this.onMouseMoveListener = this.onMouseMove.bind(this);\n        this.onTouchEndListener = this.onTouchUp.bind(this);\n        this.onTouchMoveListener = this.onTouchMove.bind(this);\n        this.dragEndFunctions = [];\n        this.dragSources = [];\n    }\n    DragService.prototype.init = function () {\n        this.logger = this.loggerFactory.create('DragService');\n    };\n    DragService.prototype.destroy = function () {\n        this.dragSources.forEach(this.removeListener.bind(this));\n        this.dragSources.length = 0;\n    };\n    DragService.prototype.removeListener = function (dragSourceAndListener) {\n        var element = dragSourceAndListener.dragSource.eElement;\n        var mouseDownListener = dragSourceAndListener.mouseDownListener;\n        element.removeEventListener('mousedown', mouseDownListener);\n        // remove touch listener only if it exists\n        if (dragSourceAndListener.touchEnabled) {\n            var touchStartListener = dragSourceAndListener.touchStartListener;\n            element.removeEventListener('touchstart', touchStartListener, { passive: true });\n        }\n    };\n    DragService.prototype.removeDragSource = function (params) {\n        var dragSourceAndListener = utils_1._.find(this.dragSources, function (item) { return item.dragSource === params; });\n        if (!dragSourceAndListener) {\n            return;\n        }\n        this.removeListener(dragSourceAndListener);\n        utils_1._.removeFromArray(this.dragSources, dragSourceAndListener);\n    };\n    DragService.prototype.setNoSelectToBody = function (noSelect) {\n        var eDocument = this.gridOptionsWrapper.getDocument();\n        var eBody = eDocument.querySelector('body');\n        if (utils_1._.exists(eBody)) {\n            // when we drag the mouse in ag-Grid, this class gets added / removed from the body, so that\n            // the mouse isn't selecting text when dragging.\n            utils_1._.addOrRemoveCssClass(eBody, 'ag-unselectable', noSelect);\n        }\n    };\n    DragService.prototype.addDragSource = function (params, includeTouch) {\n        if (includeTouch === void 0) { includeTouch = false; }\n        var mouseListener = this.onMouseDown.bind(this, params);\n        params.eElement.addEventListener('mousedown', mouseListener);\n        var touchListener = null;\n        var suppressTouch = this.gridOptionsWrapper.isSuppressTouch();\n        if (includeTouch && !suppressTouch) {\n            touchListener = this.onTouchStart.bind(this, params);\n            params.eElement.addEventListener('touchstart', touchListener, { passive: false });\n        }\n        this.dragSources.push({\n            dragSource: params,\n            mouseDownListener: mouseListener,\n            touchStartListener: touchListener,\n            touchEnabled: includeTouch\n        });\n    };\n    // gets called whenever mouse down on any drag source\n    DragService.prototype.onTouchStart = function (params, touchEvent) {\n        var _this = this;\n        this.currentDragParams = params;\n        this.dragging = false;\n        var touch = touchEvent.touches[0];\n        this.touchLastTime = touch;\n        this.touchStart = touch;\n        touchEvent.preventDefault();\n        // we temporally add these listeners, for the duration of the drag, they\n        // are removed in touch end handling.\n        params.eElement.addEventListener('touchmove', this.onTouchMoveListener, { passive: true });\n        params.eElement.addEventListener('touchend', this.onTouchEndListener, { passive: true });\n        params.eElement.addEventListener('touchcancel', this.onTouchEndListener, { passive: true });\n        this.dragEndFunctions.push(function () {\n            params.eElement.removeEventListener('touchmove', _this.onTouchMoveListener, { passive: true });\n            params.eElement.removeEventListener('touchend', _this.onTouchEndListener, { passive: true });\n            params.eElement.removeEventListener('touchcancel', _this.onTouchEndListener, { passive: true });\n        });\n        // see if we want to start dragging straight away\n        if (params.dragStartPixels === 0) {\n            this.onCommonMove(touch, this.touchStart);\n        }\n    };\n    // gets called whenever mouse down on any drag source\n    DragService.prototype.onMouseDown = function (params, mouseEvent) {\n        var _this = this;\n        // we ignore when shift key is pressed. this is for the range selection, as when\n        // user shift-clicks a cell, this should not be interpreted as the start of a drag.\n        // if (mouseEvent.shiftKey) { return; }\n        if (params.skipMouseEvent) {\n            if (params.skipMouseEvent(mouseEvent)) {\n                return;\n            }\n        }\n        // if there are two elements with parent / child relationship, and both are draggable,\n        // when we drag the child, we should NOT drag the parent. an example of this is row moving\n        // and range selection - row moving should get preference when use drags the rowDrag component.\n        if (mouseEvent._alreadyProcessedByDragService) {\n            return;\n        }\n        mouseEvent._alreadyProcessedByDragService = true;\n        // only interested in left button clicks\n        if (mouseEvent.button !== 0) {\n            return;\n        }\n        this.currentDragParams = params;\n        this.dragging = false;\n        this.mouseStartEvent = mouseEvent;\n        var eDocument = this.gridOptionsWrapper.getDocument();\n        this.setNoSelectToBody(true);\n        // we temporally add these listeners, for the duration of the drag, they\n        // are removed in mouseup handling.\n        eDocument.addEventListener('mousemove', this.onMouseMoveListener);\n        eDocument.addEventListener('mouseup', this.onMouseUpListener);\n        this.dragEndFunctions.push(function () {\n            eDocument.removeEventListener('mousemove', _this.onMouseMoveListener);\n            eDocument.removeEventListener('mouseup', _this.onMouseUpListener);\n        });\n        //see if we want to start dragging straight away\n        if (params.dragStartPixels === 0) {\n            this.onMouseMove(mouseEvent);\n        }\n    };\n    // returns true if the event is close to the original event by X pixels either vertically or horizontally.\n    // we only start dragging after X pixels so this allows us to know if we should start dragging yet.\n    DragService.prototype.isEventNearStartEvent = function (currentEvent, startEvent) {\n        // by default, we wait 4 pixels before starting the drag\n        var dragStartPixels = this.currentDragParams.dragStartPixels;\n        var requiredPixelDiff = utils_1._.exists(dragStartPixels) ? dragStartPixels : 4;\n        return utils_1._.areEventsNear(currentEvent, startEvent, requiredPixelDiff);\n    };\n    DragService.prototype.getFirstActiveTouch = function (touchList) {\n        for (var i = 0; i < touchList.length; i++) {\n            if (touchList[i].identifier === this.touchStart.identifier) {\n                return touchList[i];\n            }\n        }\n        return null;\n    };\n    DragService.prototype.onCommonMove = function (currentEvent, startEvent) {\n        if (!this.dragging) {\n            // if mouse hasn't travelled from the start position enough, do nothing\n            if (!this.dragging && this.isEventNearStartEvent(currentEvent, startEvent)) {\n                return;\n            }\n            this.dragging = true;\n            var event_1 = {\n                type: events_1.Events.EVENT_DRAG_STARTED,\n                api: this.gridApi,\n                columnApi: this.columnApi\n            };\n            this.eventService.dispatchEvent(event_1);\n            this.currentDragParams.onDragStart(startEvent);\n        }\n        this.currentDragParams.onDragging(currentEvent);\n    };\n    DragService.prototype.onTouchMove = function (touchEvent) {\n        var touch = this.getFirstActiveTouch(touchEvent.touches);\n        if (!touch) {\n            return;\n        }\n        // this.___statusPanel.setInfoText(Math.random() + ' onTouchMove preventDefault stopPropagation');\n        // if we don't preview default, then the browser will try and do it's own touch stuff,\n        // like do 'back button' (chrome does this) or scroll the page (eg drag column could  be confused\n        // with scroll page in the app)\n        // touchEvent.preventDefault();\n        this.onCommonMove(touch, this.touchStart);\n    };\n    // only gets called after a mouse down - as this is only added after mouseDown\n    // and is removed when mouseUp happens\n    DragService.prototype.onMouseMove = function (mouseEvent) {\n        this.onCommonMove(mouseEvent, this.mouseStartEvent);\n    };\n    DragService.prototype.onTouchUp = function (touchEvent) {\n        var touch = this.getFirstActiveTouch(touchEvent.changedTouches);\n        // i haven't worked this out yet, but there is no matching touch\n        // when we get the touch up event. to get around this, we swap in\n        // the last touch. this is a hack to 'get it working' while we\n        // figure out what's going on, why we are not getting a touch in\n        // current event.\n        if (!touch) {\n            touch = this.touchLastTime;\n        }\n        // if mouse was left up before we started to move, then this is a tap.\n        // we check this before onUpCommon as onUpCommon resets the dragging\n        // let tap = !this.dragging;\n        // let tapTarget = this.currentDragParams.eElement;\n        this.onUpCommon(touch);\n        // if tap, tell user\n        // console.log(`${Math.random()} tap = ${tap}`);\n        // if (tap) {\n        //     tapTarget.click();\n        // }\n    };\n    DragService.prototype.onMouseUp = function (mouseEvent) {\n        this.onUpCommon(mouseEvent);\n    };\n    DragService.prototype.onUpCommon = function (eventOrTouch) {\n        if (this.dragging) {\n            this.dragging = false;\n            this.currentDragParams.onDragStop(eventOrTouch);\n            var event_2 = {\n                type: events_1.Events.EVENT_DRAG_STOPPED,\n                api: this.gridApi,\n                columnApi: this.columnApi\n            };\n            this.eventService.dispatchEvent(event_2);\n        }\n        this.setNoSelectToBody(false);\n        this.mouseStartEvent = null;\n        this.touchStart = null;\n        this.touchLastTime = null;\n        this.currentDragParams = null;\n        this.dragEndFunctions.forEach(function (func) { return func(); });\n        this.dragEndFunctions.length = 0;\n    };\n    __decorate([\n        context_1.Autowired('loggerFactory'),\n        __metadata(\"design:type\", logger_1.LoggerFactory)\n    ], DragService.prototype, \"loggerFactory\", void 0);\n    __decorate([\n        context_1.Autowired('eventService'),\n        __metadata(\"design:type\", eventService_1.EventService)\n    ], DragService.prototype, \"eventService\", void 0);\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], DragService.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_1.Autowired('columnApi'),\n        __metadata(\"design:type\", columnApi_1.ColumnApi)\n    ], DragService.prototype, \"columnApi\", void 0);\n    __decorate([\n        context_1.Autowired('gridApi'),\n        __metadata(\"design:type\", gridApi_1.GridApi)\n    ], DragService.prototype, \"gridApi\", void 0);\n    __decorate([\n        context_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], DragService.prototype, \"init\", null);\n    __decorate([\n        context_1.PreDestroy,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], DragService.prototype, \"destroy\", null);\n    DragService = __decorate([\n        context_1.Bean('dragService')\n    ], DragService);\n    return DragService;\n}());\nexports.DragService = DragService;\n"]},"metadata":{},"sourceType":"script"}