{"ast":null,"code":"/**\n * @module ol/pointer/EventSource\n */\n\n/**\n * @param {module:ol/pointer/PointerEventHandler} dispatcher Event handler.\n * @param {!Object.<string, function(Event)>} mapping Event mapping.\n * @constructor\n */\nconst EventSource = function (dispatcher, mapping) {\n  /**\n   * @type {module:ol/pointer/PointerEventHandler}\n   */\n  this.dispatcher = dispatcher;\n  /**\n   * @private\n   * @const\n   * @type {!Object.<string, function(Event)>}\n   */\n\n  this.mapping_ = mapping;\n};\n/**\n * List of events supported by this source.\n * @return {Array.<string>} Event names\n */\n\n\nEventSource.prototype.getEvents = function () {\n  return Object.keys(this.mapping_);\n};\n/**\n * Returns the handler that should handle a given event type.\n * @param {string} eventType The event type.\n * @return {function(Event)} Handler\n */\n\n\nEventSource.prototype.getHandlerForEvent = function (eventType) {\n  return this.mapping_[eventType];\n};\n\nexport default EventSource;","map":null,"metadata":{},"sourceType":"module"}