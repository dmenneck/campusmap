{"ast":null,"code":"/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.2.2\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/** Provides sync access to async component. Date component can be lazy created - this class encapsulates\n * this by keeping value locally until DateComp has loaded, then passing DateComp the value. */\n\nvar DateCompWrapper =\n/** @class */\nfunction () {\n  function DateCompWrapper(userComponentFactory, dateComponentParams, eParent) {\n    var _this = this;\n\n    this.alive = true;\n    userComponentFactory.newDateComponent(dateComponentParams).then(function (dateComp) {\n      // because async, check the filter still exists after component comes back\n      if (!_this.alive) {\n        if (dateComp.destroy) {\n          dateComp.destroy();\n        }\n\n        return;\n      }\n\n      _this.dateComp = dateComp;\n      eParent.appendChild(dateComp.getGui());\n\n      if (dateComp.afterGuiAttached) {\n        dateComp.afterGuiAttached();\n      }\n\n      if (_this.tempValue) {\n        dateComp.setDate(_this.tempValue);\n      }\n    });\n  }\n\n  DateCompWrapper.prototype.destroy = function () {\n    this.alive = false;\n\n    if (this.dateComp && this.dateComp.destroy) {\n      this.dateComp.destroy();\n    }\n  };\n\n  DateCompWrapper.prototype.getDate = function () {\n    if (this.dateComp) {\n      return this.dateComp.getDate();\n    } else {\n      return this.tempValue;\n    }\n  };\n\n  DateCompWrapper.prototype.setDate = function (value) {\n    if (this.dateComp) {\n      this.dateComp.setDate(value);\n    } else {\n      this.tempValue = value;\n    }\n  };\n\n  return DateCompWrapper;\n}();\n\nexports.DateCompWrapper = DateCompWrapper;","map":{"version":3,"sources":["/Users/dirkmennecke77/Desktop/Lageplan/node_modules/ag-grid-community/dist/lib/filter/provided/date/dateCompWrapper.js"],"names":["Object","defineProperty","exports","value","DateCompWrapper","userComponentFactory","dateComponentParams","eParent","_this","alive","newDateComponent","then","dateComp","destroy","appendChild","getGui","afterGuiAttached","tempValue","setDate","prototype","getDate"],"mappings":"AAAA;;;;;;AAMA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACA;;;AAEA,IAAIC,eAAe;AAAG;AAAe,YAAY;AAC7C,WAASA,eAAT,CAAyBC,oBAAzB,EAA+CC,mBAA/C,EAAoEC,OAApE,EAA6E;AACzE,QAAIC,KAAK,GAAG,IAAZ;;AACA,SAAKC,KAAL,GAAa,IAAb;AACAJ,IAAAA,oBAAoB,CAACK,gBAArB,CAAsCJ,mBAAtC,EAA2DK,IAA3D,CAAgE,UAAUC,QAAV,EAAoB;AAChF;AACA,UAAI,CAACJ,KAAK,CAACC,KAAX,EAAkB;AACd,YAAIG,QAAQ,CAACC,OAAb,EAAsB;AAClBD,UAAAA,QAAQ,CAACC,OAAT;AACH;;AACD;AACH;;AACDL,MAAAA,KAAK,CAACI,QAAN,GAAiBA,QAAjB;AACAL,MAAAA,OAAO,CAACO,WAAR,CAAoBF,QAAQ,CAACG,MAAT,EAApB;;AACA,UAAIH,QAAQ,CAACI,gBAAb,EAA+B;AAC3BJ,QAAAA,QAAQ,CAACI,gBAAT;AACH;;AACD,UAAIR,KAAK,CAACS,SAAV,EAAqB;AACjBL,QAAAA,QAAQ,CAACM,OAAT,CAAiBV,KAAK,CAACS,SAAvB;AACH;AACJ,KAhBD;AAiBH;;AACDb,EAAAA,eAAe,CAACe,SAAhB,CAA0BN,OAA1B,GAAoC,YAAY;AAC5C,SAAKJ,KAAL,GAAa,KAAb;;AACA,QAAI,KAAKG,QAAL,IAAiB,KAAKA,QAAL,CAAcC,OAAnC,EAA4C;AACxC,WAAKD,QAAL,CAAcC,OAAd;AACH;AACJ,GALD;;AAMAT,EAAAA,eAAe,CAACe,SAAhB,CAA0BC,OAA1B,GAAoC,YAAY;AAC5C,QAAI,KAAKR,QAAT,EAAmB;AACf,aAAO,KAAKA,QAAL,CAAcQ,OAAd,EAAP;AACH,KAFD,MAGK;AACD,aAAO,KAAKH,SAAZ;AACH;AACJ,GAPD;;AAQAb,EAAAA,eAAe,CAACe,SAAhB,CAA0BD,OAA1B,GAAoC,UAAUf,KAAV,EAAiB;AACjD,QAAI,KAAKS,QAAT,EAAmB;AACf,WAAKA,QAAL,CAAcM,OAAd,CAAsBf,KAAtB;AACH,KAFD,MAGK;AACD,WAAKc,SAAL,GAAiBd,KAAjB;AACH;AACJ,GAPD;;AAQA,SAAOC,eAAP;AACH,CA7CoC,EAArC;;AA8CAF,OAAO,CAACE,eAAR,GAA0BA,eAA1B","sourcesContent":["/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.2.2\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** Provides sync access to async component. Date component can be lazy created - this class encapsulates\n * this by keeping value locally until DateComp has loaded, then passing DateComp the value. */\nvar DateCompWrapper = /** @class */ (function () {\n    function DateCompWrapper(userComponentFactory, dateComponentParams, eParent) {\n        var _this = this;\n        this.alive = true;\n        userComponentFactory.newDateComponent(dateComponentParams).then(function (dateComp) {\n            // because async, check the filter still exists after component comes back\n            if (!_this.alive) {\n                if (dateComp.destroy) {\n                    dateComp.destroy();\n                }\n                return;\n            }\n            _this.dateComp = dateComp;\n            eParent.appendChild(dateComp.getGui());\n            if (dateComp.afterGuiAttached) {\n                dateComp.afterGuiAttached();\n            }\n            if (_this.tempValue) {\n                dateComp.setDate(_this.tempValue);\n            }\n        });\n    }\n    DateCompWrapper.prototype.destroy = function () {\n        this.alive = false;\n        if (this.dateComp && this.dateComp.destroy) {\n            this.dateComp.destroy();\n        }\n    };\n    DateCompWrapper.prototype.getDate = function () {\n        if (this.dateComp) {\n            return this.dateComp.getDate();\n        }\n        else {\n            return this.tempValue;\n        }\n    };\n    DateCompWrapper.prototype.setDate = function (value) {\n        if (this.dateComp) {\n            this.dateComp.setDate(value);\n        }\n        else {\n            this.tempValue = value;\n        }\n    };\n    return DateCompWrapper;\n}());\nexports.DateCompWrapper = DateCompWrapper;\n"]},"metadata":{},"sourceType":"script"}