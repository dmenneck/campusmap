{"ast":null,"code":"/**\n * @module ol/renderer/canvas/Map\n */\nimport { create as createTransform, apply as applyTransform, compose as composeTransform } from '../../transform.js';\nimport { includes, stableSort } from '../../array.js';\nimport { CLASS_UNSELECTABLE } from '../../css.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { visibleAtResolution } from '../../layer/Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport { rotateAtOffset } from '../../render/canvas.js';\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\nimport MapRenderer, { sortByZIndex } from '../Map.js';\nimport SourceState from '../../source/State.js';\n/**\n * @type {Array<typeof import(\"../Layer.js\").default>}\n */\n\nexport var layerRendererConstructors = [];\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\n\nvar CanvasMapRenderer =\n/*@__PURE__*/\nfunction (MapRenderer) {\n  function CanvasMapRenderer(map) {\n    MapRenderer.call(this, map);\n    var container = map.getViewport();\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n\n    this.context_ = createCanvasContext2D();\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n\n    this.canvas_ = this.context_.canvas;\n    this.canvas_.style.width = '100%';\n    this.canvas_.style.height = '100%';\n    this.canvas_.style.display = 'block';\n    this.canvas_.className = CLASS_UNSELECTABLE;\n    container.insertBefore(this.canvas_, container.childNodes[0] || null);\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this.renderedVisible_ = true;\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n\n    this.transform_ = createTransform();\n  }\n\n  if (MapRenderer) CanvasMapRenderer.__proto__ = MapRenderer;\n  CanvasMapRenderer.prototype = Object.create(MapRenderer && MapRenderer.prototype);\n  CanvasMapRenderer.prototype.constructor = CanvasMapRenderer;\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n\n  CanvasMapRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent(type, frameState) {\n    var map = this.getMap();\n    var context = this.context_;\n\n    if (map.hasListener(type)) {\n      var extent = frameState.extent;\n      var pixelRatio = frameState.pixelRatio;\n      var viewState = frameState.viewState;\n      var rotation = viewState.rotation;\n      var transform = this.getTransform(frameState);\n      var vectorContext = new CanvasImmediateRenderer(context, pixelRatio, extent, transform, rotation);\n      var composeEvent = new RenderEvent(type, vectorContext, frameState, context, null);\n      map.dispatchEvent(composeEvent);\n    }\n  };\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n\n\n  CanvasMapRenderer.prototype.getTransform = function getTransform(frameState) {\n    var viewState = frameState.viewState;\n    var dx1 = this.canvas_.width / 2;\n    var dy1 = this.canvas_.height / 2;\n    var sx = frameState.pixelRatio / viewState.resolution;\n    var sy = -sx;\n    var angle = -viewState.rotation;\n    var dx2 = -viewState.center[0];\n    var dy2 = -viewState.center[1];\n    return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  CanvasMapRenderer.prototype.renderFrame = function renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.canvas_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n\n      return;\n    }\n\n    var context = this.context_;\n    var pixelRatio = frameState.pixelRatio;\n    var width = Math.round(frameState.size[0] * pixelRatio);\n    var height = Math.round(frameState.size[1] * pixelRatio);\n\n    if (this.canvas_.width != width || this.canvas_.height != height) {\n      this.canvas_.width = width;\n      this.canvas_.height = height;\n    } else {\n      context.clearRect(0, 0, width, height);\n    }\n\n    var rotation = frameState.viewState.rotation;\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n    var layerStatesArray = frameState.layerStatesArray;\n    stableSort(layerStatesArray, sortByZIndex);\n\n    if (rotation) {\n      context.save();\n      rotateAtOffset(context, rotation, width / 2, height / 2);\n    }\n\n    var viewResolution = frameState.viewState.resolution;\n    var i, ii;\n\n    for (i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      var layerState = layerStatesArray[i];\n      var layer = layerState.layer;\n      var layerRenderer =\n      /** @type {import(\"./Layer.js\").default} */\n      this.getLayerRenderer(layer);\n\n      if (!visibleAtResolution(layerState, viewResolution) || layerState.sourceState != SourceState.READY) {\n        continue;\n      }\n\n      if (layerRenderer.prepareFrame(frameState, layerState)) {\n        layerRenderer.composeFrame(frameState, layerState, context);\n      }\n    }\n\n    if (rotation) {\n      context.restore();\n    }\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.canvas_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleRemoveUnusedLayerRenderers(frameState);\n    this.scheduleExpireIconCache(frameState);\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  CanvasMapRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\n    var result;\n    var viewState = frameState.viewState;\n    var viewResolution = viewState.resolution;\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n    var coordinate = applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n    var i;\n\n    for (i = numLayers - 1; i >= 0; --i) {\n      var layerState = layerStates[i];\n      var layer = layerState.layer;\n\n      if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n        var layerRenderer =\n        /** @type {import(\"./Layer.js\").default} */\n        this.getLayerRenderer(layer);\n        result = layerRenderer.forEachLayerAtCoordinate(coordinate, frameState, hitTolerance, callback, thisArg);\n\n        if (result) {\n          return result;\n        }\n      }\n    }\n\n    return undefined;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  CanvasMapRenderer.prototype.registerLayerRenderers = function registerLayerRenderers(constructors) {\n    MapRenderer.prototype.registerLayerRenderers.call(this, constructors);\n\n    for (var i = 0, ii = constructors.length; i < ii; ++i) {\n      var ctor = constructors[i];\n\n      if (!includes(layerRendererConstructors, ctor)) {\n        layerRendererConstructors.push(ctor);\n      }\n    }\n  };\n\n  return CanvasMapRenderer;\n}(MapRenderer);\n\nexport default CanvasMapRenderer;","map":{"version":3,"sources":["../../../../src/ol/renderer/canvas/Map.js"],"names":["const","super","let"],"mappings":"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","sourcesContent":["/**\n * @module ol/renderer/canvas/Map\n */\nimport {create as createTransform, apply as applyTransform, compose as composeTransform} from '../../transform.js';\nimport {includes, stableSort} from '../../array.js';\nimport {CLASS_UNSELECTABLE} from '../../css.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {visibleAtResolution} from '../../layer/Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\nimport MapRenderer, {sortByZIndex} from '../Map.js';\nimport SourceState from '../../source/State.js';\n\n\n/**\n * @type {Array<typeof import(\"../Layer.js\").default>}\n */\nexport const layerRendererConstructors = [];\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CanvasMapRenderer extends MapRenderer {\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    const container = map.getViewport();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = createCanvasContext2D();\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = this.context_.canvas;\n\n    this.canvas_.style.width = '100%';\n    this.canvas_.style.height = '100%';\n    this.canvas_.style.display = 'block';\n    this.canvas_.className = CLASS_UNSELECTABLE;\n    container.insertBefore(this.canvas_, container.childNodes[0] || null);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = createTransform();\n\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    const context = this.context_;\n    if (map.hasListener(type)) {\n      const extent = frameState.extent;\n      const pixelRatio = frameState.pixelRatio;\n      const viewState = frameState.viewState;\n      const rotation = viewState.rotation;\n\n      const transform = this.getTransform(frameState);\n\n      const vectorContext = new CanvasImmediateRenderer(context, pixelRatio,\n        extent, transform, rotation);\n      const composeEvent = new RenderEvent(type, vectorContext,\n        frameState, context, null);\n      map.dispatchEvent(composeEvent);\n    }\n  }\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getTransform(frameState) {\n    const viewState = frameState.viewState;\n    const dx1 = this.canvas_.width / 2;\n    const dy1 = this.canvas_.height / 2;\n    const sx = frameState.pixelRatio / viewState.resolution;\n    const sy = -sx;\n    const angle = -viewState.rotation;\n    const dx2 = -viewState.center[0];\n    const dy2 = -viewState.center[1];\n    return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  renderFrame(frameState) {\n\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.canvas_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const context = this.context_;\n    const pixelRatio = frameState.pixelRatio;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (this.canvas_.width != width || this.canvas_.height != height) {\n      this.canvas_.width = width;\n      this.canvas_.height = height;\n    } else {\n      context.clearRect(0, 0, width, height);\n    }\n\n    const rotation = frameState.viewState.rotation;\n\n    this.calculateMatrices2D(frameState);\n\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray;\n    stableSort(layerStatesArray, sortByZIndex);\n\n    if (rotation) {\n      context.save();\n      rotateAtOffset(context, rotation, width / 2, height / 2);\n    }\n\n    const viewResolution = frameState.viewState.resolution;\n    let i, ii;\n    for (i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      const layer = layerState.layer;\n      const layerRenderer = /** @type {import(\"./Layer.js\").default} */ (this.getLayerRenderer(layer));\n      if (!visibleAtResolution(layerState, viewResolution) ||\n          layerState.sourceState != SourceState.READY) {\n        continue;\n      }\n      if (layerRenderer.prepareFrame(frameState, layerState)) {\n        layerRenderer.composeFrame(frameState, layerState, context);\n      }\n    }\n\n    if (rotation) {\n      context.restore();\n    }\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.canvas_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleRemoveUnusedLayerRenderers(frameState);\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\n    let result;\n    const viewState = frameState.viewState;\n    const viewResolution = viewState.resolution;\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform, pixel.slice());\n\n    let i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n        const layerRenderer = /** @type {import(\"./Layer.js\").default} */ (this.getLayerRenderer(layer));\n        result = layerRenderer.forEachLayerAtCoordinate(\n          coordinate, frameState, hitTolerance, callback, thisArg);\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  registerLayerRenderers(constructors) {\n    super.registerLayerRenderers(constructors);\n    for (let i = 0, ii = constructors.length; i < ii; ++i) {\n      const ctor = constructors[i];\n      if (!includes(layerRendererConstructors, ctor)) {\n        layerRendererConstructors.push(ctor);\n      }\n    }\n  }\n}\n\n\nexport default CanvasMapRenderer;\n"]},"metadata":{},"sourceType":"module"}