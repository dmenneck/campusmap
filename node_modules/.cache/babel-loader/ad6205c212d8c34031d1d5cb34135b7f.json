{"ast":null,"code":"/**\n * @module ol/format/filter/IsLike\n */\nimport Comparison from './Comparison.js';\n/**\n * @classdesc\n * Represents a `<PropertyIsLike>` comparison operator.\n * @api\n */\n\nvar IsLike =\n/*@__PURE__*/\nfunction (Comparison) {\n  function IsLike(propertyName, pattern, opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n    Comparison.call(this, 'PropertyIsLike', propertyName);\n    /**\n     * @type {!string}\n     */\n\n    this.pattern = pattern;\n    /**\n     * @type {!string}\n     */\n\n    this.wildCard = opt_wildCard !== undefined ? opt_wildCard : '*';\n    /**\n     * @type {!string}\n     */\n\n    this.singleChar = opt_singleChar !== undefined ? opt_singleChar : '.';\n    /**\n     * @type {!string}\n     */\n\n    this.escapeChar = opt_escapeChar !== undefined ? opt_escapeChar : '!';\n    /**\n     * @type {boolean|undefined}\n     */\n\n    this.matchCase = opt_matchCase;\n  }\n\n  if (Comparison) IsLike.__proto__ = Comparison;\n  IsLike.prototype = Object.create(Comparison && Comparison.prototype);\n  IsLike.prototype.constructor = IsLike;\n  return IsLike;\n}(Comparison);\n\nexport default IsLike;","map":null,"metadata":{},"sourceType":"module"}