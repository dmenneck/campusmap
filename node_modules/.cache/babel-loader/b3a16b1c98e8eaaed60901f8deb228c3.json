{"ast":null,"code":"/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.2.2\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar constants_1 = require(\"../constants\");\n\nvar context_1 = require(\"../context/context\");\n\nvar pinnedRowModel_1 = require(\"../rowModels/pinnedRowModel\");\n\nvar utils_1 = require(\"../utils\");\n\nvar RowPositionUtils =\n/** @class */\nfunction () {\n  function RowPositionUtils() {}\n\n  RowPositionUtils.prototype.getRowNode = function (gridRow) {\n    switch (gridRow.rowPinned) {\n      case constants_1.Constants.PINNED_TOP:\n        return this.pinnedRowModel.getPinnedTopRowData()[gridRow.rowIndex];\n\n      case constants_1.Constants.PINNED_BOTTOM:\n        return this.pinnedRowModel.getPinnedBottomRowData()[gridRow.rowIndex];\n\n      default:\n        return this.rowModel.getRow(gridRow.rowIndex);\n    }\n  };\n\n  RowPositionUtils.prototype.sameRow = function (rowA, rowB) {\n    // if both missing\n    if (!rowA && !rowB) {\n      return true;\n    } // if only one missing\n\n\n    if (rowA && !rowB || !rowA && rowB) {\n      return false;\n    } // otherwise compare (use == to compare rowPinned because it can be null or undefined)\n\n\n    return rowA.rowIndex === rowB.rowIndex && rowA.rowPinned == rowB.rowPinned;\n  }; // tests if this row selection is before the other row selection\n\n\n  RowPositionUtils.prototype.before = function (rowA, rowB) {\n    switch (rowA.rowPinned) {\n      case constants_1.Constants.PINNED_TOP:\n        // we we are floating top, and other isn't, then we are always before\n        if (rowB.rowPinned !== constants_1.Constants.PINNED_TOP) {\n          return true;\n        }\n\n        break;\n\n      case constants_1.Constants.PINNED_BOTTOM:\n        // if we are floating bottom, and the other isn't, then we are never before\n        if (rowB.rowPinned !== constants_1.Constants.PINNED_BOTTOM) {\n          return false;\n        }\n\n        break;\n\n      default:\n        // if we are not floating, but the other one is floating...\n        if (utils_1._.exists(rowB.rowPinned)) {\n          return rowB.rowPinned !== constants_1.Constants.PINNED_TOP;\n        }\n\n        break;\n    }\n\n    return rowA.rowIndex < rowB.rowIndex;\n  };\n\n  __decorate([context_1.Autowired('rowModel'), __metadata(\"design:type\", Object)], RowPositionUtils.prototype, \"rowModel\", void 0);\n\n  __decorate([context_1.Autowired('pinnedRowModel'), __metadata(\"design:type\", pinnedRowModel_1.PinnedRowModel)], RowPositionUtils.prototype, \"pinnedRowModel\", void 0);\n\n  RowPositionUtils = __decorate([context_1.Bean('rowPositionUtils')], RowPositionUtils);\n  return RowPositionUtils;\n}();\n\nexports.RowPositionUtils = RowPositionUtils;","map":{"version":3,"sources":["/Users/dirkmennecke77/Desktop/Lageplan/node_modules/ag-grid-community/dist/lib/entities/rowPosition.js"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__metadata","k","v","metadata","exports","value","constants_1","require","context_1","pinnedRowModel_1","utils_1","RowPositionUtils","prototype","getRowNode","gridRow","rowPinned","Constants","PINNED_TOP","pinnedRowModel","getPinnedTopRowData","rowIndex","PINNED_BOTTOM","getPinnedBottomRowData","rowModel","getRow","sameRow","rowA","rowB","before","_","exists","Autowired","PinnedRowModel","Bean"],"mappings":"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","sourcesContent":["/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.2.2\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar constants_1 = require(\"../constants\");\nvar context_1 = require(\"../context/context\");\nvar pinnedRowModel_1 = require(\"../rowModels/pinnedRowModel\");\nvar utils_1 = require(\"../utils\");\nvar RowPositionUtils = /** @class */ (function () {\n    function RowPositionUtils() {\n    }\n    RowPositionUtils.prototype.getRowNode = function (gridRow) {\n        switch (gridRow.rowPinned) {\n            case constants_1.Constants.PINNED_TOP:\n                return this.pinnedRowModel.getPinnedTopRowData()[gridRow.rowIndex];\n            case constants_1.Constants.PINNED_BOTTOM:\n                return this.pinnedRowModel.getPinnedBottomRowData()[gridRow.rowIndex];\n            default:\n                return this.rowModel.getRow(gridRow.rowIndex);\n        }\n    };\n    RowPositionUtils.prototype.sameRow = function (rowA, rowB) {\n        // if both missing\n        if (!rowA && !rowB) {\n            return true;\n        }\n        // if only one missing\n        if ((rowA && !rowB) || (!rowA && rowB)) {\n            return false;\n        }\n        // otherwise compare (use == to compare rowPinned because it can be null or undefined)\n        return rowA.rowIndex === rowB.rowIndex && rowA.rowPinned == rowB.rowPinned;\n    };\n    // tests if this row selection is before the other row selection\n    RowPositionUtils.prototype.before = function (rowA, rowB) {\n        switch (rowA.rowPinned) {\n            case constants_1.Constants.PINNED_TOP:\n                // we we are floating top, and other isn't, then we are always before\n                if (rowB.rowPinned !== constants_1.Constants.PINNED_TOP) {\n                    return true;\n                }\n                break;\n            case constants_1.Constants.PINNED_BOTTOM:\n                // if we are floating bottom, and the other isn't, then we are never before\n                if (rowB.rowPinned !== constants_1.Constants.PINNED_BOTTOM) {\n                    return false;\n                }\n                break;\n            default:\n                // if we are not floating, but the other one is floating...\n                if (utils_1._.exists(rowB.rowPinned)) {\n                    return rowB.rowPinned !== constants_1.Constants.PINNED_TOP;\n                }\n                break;\n        }\n        return rowA.rowIndex < rowB.rowIndex;\n    };\n    __decorate([\n        context_1.Autowired('rowModel'),\n        __metadata(\"design:type\", Object)\n    ], RowPositionUtils.prototype, \"rowModel\", void 0);\n    __decorate([\n        context_1.Autowired('pinnedRowModel'),\n        __metadata(\"design:type\", pinnedRowModel_1.PinnedRowModel)\n    ], RowPositionUtils.prototype, \"pinnedRowModel\", void 0);\n    RowPositionUtils = __decorate([\n        context_1.Bean('rowPositionUtils')\n    ], RowPositionUtils);\n    return RowPositionUtils;\n}());\nexports.RowPositionUtils = RowPositionUtils;\n"]},"metadata":{},"sourceType":"script"}