{"ast":null,"code":"/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.2.2\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar context_1 = require(\"../../context/context\");\n\nvar rowNode_1 = require(\"../../entities/rowNode\");\n\nvar gridOptionsWrapper_1 = require(\"../../gridOptionsWrapper\");\n\nvar selectionController_1 = require(\"../../selectionController\");\n\nvar eventService_1 = require(\"../../eventService\");\n\nvar columnController_1 = require(\"../../columnController/columnController\");\n\nvar utils_1 = require(\"../../utils\");\n\nvar FlattenStage =\n/** @class */\nfunction () {\n  function FlattenStage() {}\n\n  FlattenStage.prototype.execute = function (params) {\n    var rootNode = params.rowNode; // even if not doing grouping, we do the mapping, as the client might\n    // of passed in data that already has a grouping in it somewhere\n\n    var result = []; // putting value into a wrapper so it's passed by reference\n\n    var nextRowTop = {\n      value: 0\n    };\n    var skipLeafNodes = this.columnController.isPivotMode(); // if we are reducing, and not grouping, then we want to show the root node, as that\n    // is where the pivot values are\n\n    var showRootNode = skipLeafNodes && rootNode.leafGroup;\n    var topList = showRootNode ? [rootNode] : rootNode.childrenAfterSort;\n    this.recursivelyAddToRowsToDisplay(topList, result, nextRowTop, skipLeafNodes, 0); // don't show total footer when showRootNode is true (i.e. in pivot mode and no groups)\n\n    var includeGroupTotalFooter = !showRootNode && this.gridOptionsWrapper.isGroupIncludeTotalFooter();\n\n    if (includeGroupTotalFooter) {\n      this.ensureFooterNodeExists(rootNode);\n      this.addRowNodeToRowsToDisplay(rootNode.sibling, result, nextRowTop, 0);\n    }\n\n    return result;\n  };\n\n  FlattenStage.prototype.recursivelyAddToRowsToDisplay = function (rowsToFlatten, result, nextRowTop, skipLeafNodes, uiLevel) {\n    if (utils_1._.missingOrEmpty(rowsToFlatten)) {\n      return;\n    }\n\n    var groupSuppressRow = this.gridOptionsWrapper.isGroupSuppressRow();\n    var hideOpenParents = this.gridOptionsWrapper.isGroupHideOpenParents(); // these two are mutually exclusive, so if first set, we don't set the second\n\n    var groupRemoveSingleChildren = this.gridOptionsWrapper.isGroupRemoveSingleChildren();\n    var groupRemoveLowestSingleChildren = !groupRemoveSingleChildren && this.gridOptionsWrapper.isGroupRemoveLowestSingleChildren();\n\n    for (var i = 0; i < rowsToFlatten.length; i++) {\n      var rowNode = rowsToFlatten[i]; // check all these cases, for working out if this row should be included in the final mapped list\n\n      var isParent = rowNode.hasChildren();\n      var isGroupSuppressedNode = groupSuppressRow && isParent;\n      var isSkippedLeafNode = skipLeafNodes && !isParent;\n      var isRemovedSingleChildrenGroup = groupRemoveSingleChildren && isParent && rowNode.childrenAfterGroup.length === 1;\n      var isRemovedLowestSingleChildrenGroup = groupRemoveLowestSingleChildren && isParent && rowNode.leafGroup && rowNode.childrenAfterGroup.length === 1; // hide open parents means when group is open, we don't show it. we also need to make sure the\n      // group is expandable in the first place (as leaf groups are not expandable if pivot mode is on).\n      // the UI will never allow expanding leaf  groups, however the user might via the API (or menu option 'expand all')\n\n      var neverAllowToExpand = skipLeafNodes && rowNode.leafGroup;\n      var isHiddenOpenParent = hideOpenParents && rowNode.expanded && !neverAllowToExpand;\n      var thisRowShouldBeRendered = !isSkippedLeafNode && !isGroupSuppressedNode && !isHiddenOpenParent && !isRemovedSingleChildrenGroup && !isRemovedLowestSingleChildrenGroup;\n\n      if (thisRowShouldBeRendered) {\n        this.addRowNodeToRowsToDisplay(rowNode, result, nextRowTop, uiLevel);\n      } // if we are pivoting, we never map below the leaf group\n\n\n      if (skipLeafNodes && rowNode.leafGroup) {\n        continue;\n      }\n\n      if (isParent) {\n        var excludedParent = isRemovedSingleChildrenGroup || isRemovedLowestSingleChildrenGroup; // we traverse the group if it is expended, however we always traverse if the parent node\n        // was removed (as the group will never be opened if it is not displayed, we show the children instead)\n\n        if (rowNode.expanded || excludedParent) {\n          // if the parent was excluded, then ui level is that of the parent\n          var uiLevelForChildren = excludedParent ? uiLevel : uiLevel + 1;\n          this.recursivelyAddToRowsToDisplay(rowNode.childrenAfterSort, result, nextRowTop, skipLeafNodes, uiLevelForChildren); // put a footer in if user is looking for it\n\n          if (this.gridOptionsWrapper.isGroupIncludeFooter()) {\n            this.ensureFooterNodeExists(rowNode);\n            this.addRowNodeToRowsToDisplay(rowNode.sibling, result, nextRowTop, uiLevel);\n          }\n        }\n      } else if (rowNode.master && rowNode.expanded) {\n        var detailNode = this.createDetailNode(rowNode);\n        this.addRowNodeToRowsToDisplay(detailNode, result, nextRowTop, uiLevel);\n      }\n    }\n  }; // duplicated method, it's also in floatingRowModel\n\n\n  FlattenStage.prototype.addRowNodeToRowsToDisplay = function (rowNode, result, nextRowTop, uiLevel) {\n    result.push(rowNode);\n    var isGroupMultiAutoColumn = this.gridOptionsWrapper.isGroupMultiAutoColumn();\n    rowNode.setUiLevel(isGroupMultiAutoColumn ? 0 : uiLevel);\n  };\n\n  FlattenStage.prototype.ensureFooterNodeExists = function (groupNode) {\n    // only create footer node once, otherwise we have daemons and\n    // the animate screws up with the daemons hanging around\n    if (utils_1._.exists(groupNode.sibling)) {\n      return;\n    }\n\n    var footerNode = new rowNode_1.RowNode();\n    this.context.wireBean(footerNode);\n    Object.keys(groupNode).forEach(function (key) {\n      footerNode[key] = groupNode[key];\n    });\n    footerNode.footer = true;\n    footerNode.rowTop = null;\n    footerNode.oldRowTop = null;\n\n    if (utils_1._.exists(footerNode.id)) {\n      footerNode.id = 'rowGroupFooter_' + footerNode.id;\n    } // get both header and footer to reference each other as siblings. this is never undone,\n    // only overwritten. so if a group is expanded, then contracted, it will have a ghost\n    // sibling - but that's fine, as we can ignore this if the header is contracted.\n\n\n    footerNode.sibling = groupNode;\n    groupNode.sibling = footerNode;\n  };\n\n  FlattenStage.prototype.createDetailNode = function (masterNode) {\n    if (utils_1._.exists(masterNode.detailNode)) {\n      return masterNode.detailNode;\n    } else {\n      var detailNode = new rowNode_1.RowNode();\n      this.context.wireBean(detailNode);\n      detailNode.detail = true;\n      detailNode.selectable = false; // flower was renamed to 'detail', but keeping for backwards compatibility\n\n      detailNode.flower = detailNode.detail;\n      detailNode.parent = masterNode;\n\n      if (utils_1._.exists(masterNode.id)) {\n        detailNode.id = 'detail_' + masterNode.id;\n      }\n\n      detailNode.data = masterNode.data;\n      detailNode.level = masterNode.level + 1;\n      masterNode.detailNode = detailNode;\n      masterNode.childFlower = masterNode.detailNode; // for backwards compatibility\n\n      return detailNode;\n    }\n  };\n\n  __decorate([context_1.Autowired('gridOptionsWrapper'), __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)], FlattenStage.prototype, \"gridOptionsWrapper\", void 0);\n\n  __decorate([context_1.Autowired('selectionController'), __metadata(\"design:type\", selectionController_1.SelectionController)], FlattenStage.prototype, \"selectionController\", void 0);\n\n  __decorate([context_1.Autowired('eventService'), __metadata(\"design:type\", eventService_1.EventService)], FlattenStage.prototype, \"eventService\", void 0);\n\n  __decorate([context_1.Autowired('context'), __metadata(\"design:type\", context_1.Context)], FlattenStage.prototype, \"context\", void 0);\n\n  __decorate([context_1.Autowired('columnController'), __metadata(\"design:type\", columnController_1.ColumnController)], FlattenStage.prototype, \"columnController\", void 0);\n\n  FlattenStage = __decorate([context_1.Bean('flattenStage')], FlattenStage);\n  return FlattenStage;\n}();\n\nexports.FlattenStage = FlattenStage;","map":{"version":3,"sources":["/Users/dirkmennecke77/Desktop/Lageplan/node_modules/ag-grid-community/dist/lib/rowModels/clientSide/flattenStage.js"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__metadata","k","v","metadata","exports","value","context_1","require","rowNode_1","gridOptionsWrapper_1","selectionController_1","eventService_1","columnController_1","utils_1","FlattenStage","prototype","execute","params","rootNode","rowNode","result","nextRowTop","skipLeafNodes","columnController","isPivotMode","showRootNode","leafGroup","topList","childrenAfterSort","recursivelyAddToRowsToDisplay","includeGroupTotalFooter","gridOptionsWrapper","isGroupIncludeTotalFooter","ensureFooterNodeExists","addRowNodeToRowsToDisplay","sibling","rowsToFlatten","uiLevel","_","missingOrEmpty","groupSuppressRow","isGroupSuppressRow","hideOpenParents","isGroupHideOpenParents","groupRemoveSingleChildren","isGroupRemoveSingleChildren","groupRemoveLowestSingleChildren","isGroupRemoveLowestSingleChildren","isParent","hasChildren","isGroupSuppressedNode","isSkippedLeafNode","isRemovedSingleChildrenGroup","childrenAfterGroup","isRemovedLowestSingleChildrenGroup","neverAllowToExpand","isHiddenOpenParent","expanded","thisRowShouldBeRendered","excludedParent","uiLevelForChildren","isGroupIncludeFooter","master","detailNode","createDetailNode","push","isGroupMultiAutoColumn","setUiLevel","groupNode","exists","footerNode","RowNode","context","wireBean","keys","forEach","footer","rowTop","oldRowTop","id","masterNode","detail","selectable","flower","parent","data","level","childFlower","Autowired","GridOptionsWrapper","SelectionController","EventService","Context","ColumnController","Bean"],"mappings":"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","sourcesContent":["/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.2.2\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar context_1 = require(\"../../context/context\");\nvar rowNode_1 = require(\"../../entities/rowNode\");\nvar gridOptionsWrapper_1 = require(\"../../gridOptionsWrapper\");\nvar selectionController_1 = require(\"../../selectionController\");\nvar eventService_1 = require(\"../../eventService\");\nvar columnController_1 = require(\"../../columnController/columnController\");\nvar utils_1 = require(\"../../utils\");\nvar FlattenStage = /** @class */ (function () {\n    function FlattenStage() {\n    }\n    FlattenStage.prototype.execute = function (params) {\n        var rootNode = params.rowNode;\n        // even if not doing grouping, we do the mapping, as the client might\n        // of passed in data that already has a grouping in it somewhere\n        var result = [];\n        // putting value into a wrapper so it's passed by reference\n        var nextRowTop = { value: 0 };\n        var skipLeafNodes = this.columnController.isPivotMode();\n        // if we are reducing, and not grouping, then we want to show the root node, as that\n        // is where the pivot values are\n        var showRootNode = skipLeafNodes && rootNode.leafGroup;\n        var topList = showRootNode ? [rootNode] : rootNode.childrenAfterSort;\n        this.recursivelyAddToRowsToDisplay(topList, result, nextRowTop, skipLeafNodes, 0);\n        // don't show total footer when showRootNode is true (i.e. in pivot mode and no groups)\n        var includeGroupTotalFooter = !showRootNode && this.gridOptionsWrapper.isGroupIncludeTotalFooter();\n        if (includeGroupTotalFooter) {\n            this.ensureFooterNodeExists(rootNode);\n            this.addRowNodeToRowsToDisplay(rootNode.sibling, result, nextRowTop, 0);\n        }\n        return result;\n    };\n    FlattenStage.prototype.recursivelyAddToRowsToDisplay = function (rowsToFlatten, result, nextRowTop, skipLeafNodes, uiLevel) {\n        if (utils_1._.missingOrEmpty(rowsToFlatten)) {\n            return;\n        }\n        var groupSuppressRow = this.gridOptionsWrapper.isGroupSuppressRow();\n        var hideOpenParents = this.gridOptionsWrapper.isGroupHideOpenParents();\n        // these two are mutually exclusive, so if first set, we don't set the second\n        var groupRemoveSingleChildren = this.gridOptionsWrapper.isGroupRemoveSingleChildren();\n        var groupRemoveLowestSingleChildren = !groupRemoveSingleChildren && this.gridOptionsWrapper.isGroupRemoveLowestSingleChildren();\n        for (var i = 0; i < rowsToFlatten.length; i++) {\n            var rowNode = rowsToFlatten[i];\n            // check all these cases, for working out if this row should be included in the final mapped list\n            var isParent = rowNode.hasChildren();\n            var isGroupSuppressedNode = groupSuppressRow && isParent;\n            var isSkippedLeafNode = skipLeafNodes && !isParent;\n            var isRemovedSingleChildrenGroup = groupRemoveSingleChildren && isParent && rowNode.childrenAfterGroup.length === 1;\n            var isRemovedLowestSingleChildrenGroup = groupRemoveLowestSingleChildren && isParent && rowNode.leafGroup && rowNode.childrenAfterGroup.length === 1;\n            // hide open parents means when group is open, we don't show it. we also need to make sure the\n            // group is expandable in the first place (as leaf groups are not expandable if pivot mode is on).\n            // the UI will never allow expanding leaf  groups, however the user might via the API (or menu option 'expand all')\n            var neverAllowToExpand = skipLeafNodes && rowNode.leafGroup;\n            var isHiddenOpenParent = hideOpenParents && rowNode.expanded && (!neverAllowToExpand);\n            var thisRowShouldBeRendered = !isSkippedLeafNode && !isGroupSuppressedNode && !isHiddenOpenParent && !isRemovedSingleChildrenGroup && !isRemovedLowestSingleChildrenGroup;\n            if (thisRowShouldBeRendered) {\n                this.addRowNodeToRowsToDisplay(rowNode, result, nextRowTop, uiLevel);\n            }\n            // if we are pivoting, we never map below the leaf group\n            if (skipLeafNodes && rowNode.leafGroup) {\n                continue;\n            }\n            if (isParent) {\n                var excludedParent = isRemovedSingleChildrenGroup || isRemovedLowestSingleChildrenGroup;\n                // we traverse the group if it is expended, however we always traverse if the parent node\n                // was removed (as the group will never be opened if it is not displayed, we show the children instead)\n                if (rowNode.expanded || excludedParent) {\n                    // if the parent was excluded, then ui level is that of the parent\n                    var uiLevelForChildren = excludedParent ? uiLevel : uiLevel + 1;\n                    this.recursivelyAddToRowsToDisplay(rowNode.childrenAfterSort, result, nextRowTop, skipLeafNodes, uiLevelForChildren);\n                    // put a footer in if user is looking for it\n                    if (this.gridOptionsWrapper.isGroupIncludeFooter()) {\n                        this.ensureFooterNodeExists(rowNode);\n                        this.addRowNodeToRowsToDisplay(rowNode.sibling, result, nextRowTop, uiLevel);\n                    }\n                }\n            }\n            else if (rowNode.master && rowNode.expanded) {\n                var detailNode = this.createDetailNode(rowNode);\n                this.addRowNodeToRowsToDisplay(detailNode, result, nextRowTop, uiLevel);\n            }\n        }\n    };\n    // duplicated method, it's also in floatingRowModel\n    FlattenStage.prototype.addRowNodeToRowsToDisplay = function (rowNode, result, nextRowTop, uiLevel) {\n        result.push(rowNode);\n        var isGroupMultiAutoColumn = this.gridOptionsWrapper.isGroupMultiAutoColumn();\n        rowNode.setUiLevel(isGroupMultiAutoColumn ? 0 : uiLevel);\n    };\n    FlattenStage.prototype.ensureFooterNodeExists = function (groupNode) {\n        // only create footer node once, otherwise we have daemons and\n        // the animate screws up with the daemons hanging around\n        if (utils_1._.exists(groupNode.sibling)) {\n            return;\n        }\n        var footerNode = new rowNode_1.RowNode();\n        this.context.wireBean(footerNode);\n        Object.keys(groupNode).forEach(function (key) {\n            footerNode[key] = groupNode[key];\n        });\n        footerNode.footer = true;\n        footerNode.rowTop = null;\n        footerNode.oldRowTop = null;\n        if (utils_1._.exists(footerNode.id)) {\n            footerNode.id = 'rowGroupFooter_' + footerNode.id;\n        }\n        // get both header and footer to reference each other as siblings. this is never undone,\n        // only overwritten. so if a group is expanded, then contracted, it will have a ghost\n        // sibling - but that's fine, as we can ignore this if the header is contracted.\n        footerNode.sibling = groupNode;\n        groupNode.sibling = footerNode;\n    };\n    FlattenStage.prototype.createDetailNode = function (masterNode) {\n        if (utils_1._.exists(masterNode.detailNode)) {\n            return masterNode.detailNode;\n        }\n        else {\n            var detailNode = new rowNode_1.RowNode();\n            this.context.wireBean(detailNode);\n            detailNode.detail = true;\n            detailNode.selectable = false;\n            // flower was renamed to 'detail', but keeping for backwards compatibility\n            detailNode.flower = detailNode.detail;\n            detailNode.parent = masterNode;\n            if (utils_1._.exists(masterNode.id)) {\n                detailNode.id = 'detail_' + masterNode.id;\n            }\n            detailNode.data = masterNode.data;\n            detailNode.level = masterNode.level + 1;\n            masterNode.detailNode = detailNode;\n            masterNode.childFlower = masterNode.detailNode; // for backwards compatibility\n            return detailNode;\n        }\n    };\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], FlattenStage.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_1.Autowired('selectionController'),\n        __metadata(\"design:type\", selectionController_1.SelectionController)\n    ], FlattenStage.prototype, \"selectionController\", void 0);\n    __decorate([\n        context_1.Autowired('eventService'),\n        __metadata(\"design:type\", eventService_1.EventService)\n    ], FlattenStage.prototype, \"eventService\", void 0);\n    __decorate([\n        context_1.Autowired('context'),\n        __metadata(\"design:type\", context_1.Context)\n    ], FlattenStage.prototype, \"context\", void 0);\n    __decorate([\n        context_1.Autowired('columnController'),\n        __metadata(\"design:type\", columnController_1.ColumnController)\n    ], FlattenStage.prototype, \"columnController\", void 0);\n    FlattenStage = __decorate([\n        context_1.Bean('flattenStage')\n    ], FlattenStage);\n    return FlattenStage;\n}());\nexports.FlattenStage = FlattenStage;\n"]},"metadata":{},"sourceType":"script"}