{"ast":null,"code":"/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.2.2\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar columnGroup_1 = require(\"./columnGroup\");\n\nvar column_1 = require(\"./column\");\n\nvar eventService_1 = require(\"../eventService\");\n\nvar OriginalColumnGroup =\n/** @class */\nfunction () {\n  function OriginalColumnGroup(colGroupDef, groupId, padding, level) {\n    this.localEventService = new eventService_1.EventService();\n    this.expandable = false;\n    this.colGroupDef = colGroupDef;\n    this.groupId = groupId;\n    this.expanded = colGroupDef && !!colGroupDef.openByDefault;\n    this.padding = padding;\n    this.level = level;\n  }\n\n  OriginalColumnGroup.prototype.setOriginalParent = function (originalParent) {\n    this.originalParent = this.originalParent;\n  };\n\n  OriginalColumnGroup.prototype.getOriginalParent = function () {\n    return this.originalParent;\n  };\n\n  OriginalColumnGroup.prototype.getLevel = function () {\n    return this.level;\n  };\n\n  OriginalColumnGroup.prototype.isVisible = function () {\n    // return true if at least one child is visible\n    if (this.children) {\n      return this.children.some(function (child) {\n        return child.isVisible();\n      });\n    }\n\n    return false;\n  };\n\n  OriginalColumnGroup.prototype.isPadding = function () {\n    return this.padding;\n  };\n\n  OriginalColumnGroup.prototype.setExpanded = function (expanded) {\n    this.expanded = expanded === undefined ? false : expanded;\n    var event = {\n      type: OriginalColumnGroup.EVENT_EXPANDED_CHANGED\n    };\n    this.localEventService.dispatchEvent(event);\n  };\n\n  OriginalColumnGroup.prototype.isExpandable = function () {\n    return this.expandable;\n  };\n\n  OriginalColumnGroup.prototype.isExpanded = function () {\n    return this.expanded;\n  };\n\n  OriginalColumnGroup.prototype.getGroupId = function () {\n    return this.groupId;\n  };\n\n  OriginalColumnGroup.prototype.getId = function () {\n    return this.getGroupId();\n  };\n\n  OriginalColumnGroup.prototype.setChildren = function (children) {\n    this.children = children;\n  };\n\n  OriginalColumnGroup.prototype.getChildren = function () {\n    return this.children;\n  };\n\n  OriginalColumnGroup.prototype.getColGroupDef = function () {\n    return this.colGroupDef;\n  };\n\n  OriginalColumnGroup.prototype.getLeafColumns = function () {\n    var result = [];\n    this.addLeafColumns(result);\n    return result;\n  };\n\n  OriginalColumnGroup.prototype.addLeafColumns = function (leafColumns) {\n    if (!this.children) {\n      return;\n    }\n\n    this.children.forEach(function (child) {\n      if (child instanceof column_1.Column) {\n        leafColumns.push(child);\n      } else if (child instanceof OriginalColumnGroup) {\n        child.addLeafColumns(leafColumns);\n      }\n    });\n  };\n\n  OriginalColumnGroup.prototype.getColumnGroupShow = function () {\n    return this.padding ? columnGroup_1.ColumnGroup.HEADER_GROUP_PADDING : this.colGroupDef.columnGroupShow;\n  }; // need to check that this group has at least one col showing when both expanded and contracted.\n  // if not, then we don't allow expanding and contracting on this group\n\n\n  OriginalColumnGroup.prototype.setupExpandable = function () {\n    var _this = this;\n\n    this.setExpandable(); // note - we should be removing this event listener\n\n    this.getLeafColumns().forEach(function (col) {\n      return col.addEventListener(column_1.Column.EVENT_VISIBLE_CHANGED, _this.onColumnVisibilityChanged.bind(_this));\n    });\n  };\n\n  OriginalColumnGroup.prototype.setExpandable = function () {\n    if (this.isPadding()) {\n      return;\n    } // want to make sure the group doesn't disappear when it's open\n\n\n    var atLeastOneShowingWhenOpen = false; // want to make sure the group doesn't disappear when it's closed\n\n    var atLeastOneShowingWhenClosed = false; // want to make sure the group has something to show / hide\n\n    var atLeastOneChangeable = false;\n    var children = this.findChildren();\n\n    for (var i = 0, j = children.length; i < j; i++) {\n      var abstractColumn = children[i];\n\n      if (!abstractColumn.isVisible()) {\n        continue;\n      } // if the abstractColumn is a grid generated group, there will be no colDef\n\n\n      var headerGroupShow = abstractColumn.getColumnGroupShow();\n\n      if (headerGroupShow === columnGroup_1.ColumnGroup.HEADER_GROUP_SHOW_OPEN) {\n        atLeastOneShowingWhenOpen = true;\n        atLeastOneChangeable = true;\n      } else if (headerGroupShow === columnGroup_1.ColumnGroup.HEADER_GROUP_SHOW_CLOSED) {\n        atLeastOneShowingWhenClosed = true;\n        atLeastOneChangeable = true;\n      } else {\n        atLeastOneShowingWhenOpen = true;\n        atLeastOneShowingWhenClosed = true;\n\n        if (headerGroupShow === columnGroup_1.ColumnGroup.HEADER_GROUP_PADDING) {\n          var column = abstractColumn;\n          atLeastOneChangeable = column.children.some(function (child) {\n            return child.getColumnGroupShow() !== undefined;\n          });\n        }\n      }\n    }\n\n    var expandable = atLeastOneShowingWhenOpen && atLeastOneShowingWhenClosed && atLeastOneChangeable;\n\n    if (this.expandable !== expandable) {\n      this.expandable = expandable;\n      var event_1 = {\n        type: OriginalColumnGroup.EVENT_EXPANDABLE_CHANGED\n      };\n      this.localEventService.dispatchEvent(event_1);\n    }\n  };\n\n  OriginalColumnGroup.prototype.findChildren = function () {\n    var children = this.children;\n    var firstChild = children[0];\n\n    if (firstChild && (!firstChild.isPadding || !firstChild.isPadding())) {\n      return children;\n    }\n\n    while (children.length === 1 && children[0] instanceof OriginalColumnGroup) {\n      children = children[0].children;\n    }\n\n    return children;\n  };\n\n  OriginalColumnGroup.prototype.onColumnVisibilityChanged = function () {\n    this.setExpandable();\n  };\n\n  OriginalColumnGroup.prototype.addEventListener = function (eventType, listener) {\n    this.localEventService.addEventListener(eventType, listener);\n  };\n\n  OriginalColumnGroup.prototype.removeEventListener = function (eventType, listener) {\n    this.localEventService.removeEventListener(eventType, listener);\n  };\n\n  OriginalColumnGroup.EVENT_EXPANDED_CHANGED = 'expandedChanged';\n  OriginalColumnGroup.EVENT_EXPANDABLE_CHANGED = 'expandableChanged';\n  return OriginalColumnGroup;\n}();\n\nexports.OriginalColumnGroup = OriginalColumnGroup;","map":{"version":3,"sources":["/Users/dirkmennecke77/Desktop/Lageplan/node_modules/ag-grid-community/dist/lib/entities/originalColumnGroup.js"],"names":["Object","defineProperty","exports","value","columnGroup_1","require","column_1","eventService_1","OriginalColumnGroup","colGroupDef","groupId","padding","level","localEventService","EventService","expandable","expanded","openByDefault","prototype","setOriginalParent","originalParent","getOriginalParent","getLevel","isVisible","children","some","child","isPadding","setExpanded","undefined","event","type","EVENT_EXPANDED_CHANGED","dispatchEvent","isExpandable","isExpanded","getGroupId","getId","setChildren","getChildren","getColGroupDef","getLeafColumns","result","addLeafColumns","leafColumns","forEach","Column","push","getColumnGroupShow","ColumnGroup","HEADER_GROUP_PADDING","columnGroupShow","setupExpandable","_this","setExpandable","col","addEventListener","EVENT_VISIBLE_CHANGED","onColumnVisibilityChanged","bind","atLeastOneShowingWhenOpen","atLeastOneShowingWhenClosed","atLeastOneChangeable","findChildren","i","j","length","abstractColumn","headerGroupShow","HEADER_GROUP_SHOW_OPEN","HEADER_GROUP_SHOW_CLOSED","column","event_1","EVENT_EXPANDABLE_CHANGED","firstChild","eventType","listener","removeEventListener"],"mappings":"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","sourcesContent":["/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.2.2\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar columnGroup_1 = require(\"./columnGroup\");\nvar column_1 = require(\"./column\");\nvar eventService_1 = require(\"../eventService\");\nvar OriginalColumnGroup = /** @class */ (function () {\n    function OriginalColumnGroup(colGroupDef, groupId, padding, level) {\n        this.localEventService = new eventService_1.EventService();\n        this.expandable = false;\n        this.colGroupDef = colGroupDef;\n        this.groupId = groupId;\n        this.expanded = colGroupDef && !!colGroupDef.openByDefault;\n        this.padding = padding;\n        this.level = level;\n    }\n    OriginalColumnGroup.prototype.setOriginalParent = function (originalParent) {\n        this.originalParent = this.originalParent;\n    };\n    OriginalColumnGroup.prototype.getOriginalParent = function () {\n        return this.originalParent;\n    };\n    OriginalColumnGroup.prototype.getLevel = function () {\n        return this.level;\n    };\n    OriginalColumnGroup.prototype.isVisible = function () {\n        // return true if at least one child is visible\n        if (this.children) {\n            return this.children.some(function (child) { return child.isVisible(); });\n        }\n        return false;\n    };\n    OriginalColumnGroup.prototype.isPadding = function () {\n        return this.padding;\n    };\n    OriginalColumnGroup.prototype.setExpanded = function (expanded) {\n        this.expanded = expanded === undefined ? false : expanded;\n        var event = {\n            type: OriginalColumnGroup.EVENT_EXPANDED_CHANGED\n        };\n        this.localEventService.dispatchEvent(event);\n    };\n    OriginalColumnGroup.prototype.isExpandable = function () {\n        return this.expandable;\n    };\n    OriginalColumnGroup.prototype.isExpanded = function () {\n        return this.expanded;\n    };\n    OriginalColumnGroup.prototype.getGroupId = function () {\n        return this.groupId;\n    };\n    OriginalColumnGroup.prototype.getId = function () {\n        return this.getGroupId();\n    };\n    OriginalColumnGroup.prototype.setChildren = function (children) {\n        this.children = children;\n    };\n    OriginalColumnGroup.prototype.getChildren = function () {\n        return this.children;\n    };\n    OriginalColumnGroup.prototype.getColGroupDef = function () {\n        return this.colGroupDef;\n    };\n    OriginalColumnGroup.prototype.getLeafColumns = function () {\n        var result = [];\n        this.addLeafColumns(result);\n        return result;\n    };\n    OriginalColumnGroup.prototype.addLeafColumns = function (leafColumns) {\n        if (!this.children) {\n            return;\n        }\n        this.children.forEach(function (child) {\n            if (child instanceof column_1.Column) {\n                leafColumns.push(child);\n            }\n            else if (child instanceof OriginalColumnGroup) {\n                child.addLeafColumns(leafColumns);\n            }\n        });\n    };\n    OriginalColumnGroup.prototype.getColumnGroupShow = function () {\n        return this.padding ? columnGroup_1.ColumnGroup.HEADER_GROUP_PADDING : this.colGroupDef.columnGroupShow;\n    };\n    // need to check that this group has at least one col showing when both expanded and contracted.\n    // if not, then we don't allow expanding and contracting on this group\n    OriginalColumnGroup.prototype.setupExpandable = function () {\n        var _this = this;\n        this.setExpandable();\n        // note - we should be removing this event listener\n        this.getLeafColumns().forEach(function (col) { return col.addEventListener(column_1.Column.EVENT_VISIBLE_CHANGED, _this.onColumnVisibilityChanged.bind(_this)); });\n    };\n    OriginalColumnGroup.prototype.setExpandable = function () {\n        if (this.isPadding()) {\n            return;\n        }\n        // want to make sure the group doesn't disappear when it's open\n        var atLeastOneShowingWhenOpen = false;\n        // want to make sure the group doesn't disappear when it's closed\n        var atLeastOneShowingWhenClosed = false;\n        // want to make sure the group has something to show / hide\n        var atLeastOneChangeable = false;\n        var children = this.findChildren();\n        for (var i = 0, j = children.length; i < j; i++) {\n            var abstractColumn = children[i];\n            if (!abstractColumn.isVisible()) {\n                continue;\n            }\n            // if the abstractColumn is a grid generated group, there will be no colDef\n            var headerGroupShow = abstractColumn.getColumnGroupShow();\n            if (headerGroupShow === columnGroup_1.ColumnGroup.HEADER_GROUP_SHOW_OPEN) {\n                atLeastOneShowingWhenOpen = true;\n                atLeastOneChangeable = true;\n            }\n            else if (headerGroupShow === columnGroup_1.ColumnGroup.HEADER_GROUP_SHOW_CLOSED) {\n                atLeastOneShowingWhenClosed = true;\n                atLeastOneChangeable = true;\n            }\n            else {\n                atLeastOneShowingWhenOpen = true;\n                atLeastOneShowingWhenClosed = true;\n                if (headerGroupShow === columnGroup_1.ColumnGroup.HEADER_GROUP_PADDING) {\n                    var column = abstractColumn;\n                    atLeastOneChangeable = column.children.some(function (child) { return child.getColumnGroupShow() !== undefined; });\n                }\n            }\n        }\n        var expandable = atLeastOneShowingWhenOpen && atLeastOneShowingWhenClosed && atLeastOneChangeable;\n        if (this.expandable !== expandable) {\n            this.expandable = expandable;\n            var event_1 = {\n                type: OriginalColumnGroup.EVENT_EXPANDABLE_CHANGED\n            };\n            this.localEventService.dispatchEvent(event_1);\n        }\n    };\n    OriginalColumnGroup.prototype.findChildren = function () {\n        var children = this.children;\n        var firstChild = children[0];\n        if (firstChild && (!firstChild.isPadding || !firstChild.isPadding())) {\n            return children;\n        }\n        while (children.length === 1 && children[0] instanceof OriginalColumnGroup) {\n            children = children[0].children;\n        }\n        return children;\n    };\n    OriginalColumnGroup.prototype.onColumnVisibilityChanged = function () {\n        this.setExpandable();\n    };\n    OriginalColumnGroup.prototype.addEventListener = function (eventType, listener) {\n        this.localEventService.addEventListener(eventType, listener);\n    };\n    OriginalColumnGroup.prototype.removeEventListener = function (eventType, listener) {\n        this.localEventService.removeEventListener(eventType, listener);\n    };\n    OriginalColumnGroup.EVENT_EXPANDED_CHANGED = 'expandedChanged';\n    OriginalColumnGroup.EVENT_EXPANDABLE_CHANGED = 'expandableChanged';\n    return OriginalColumnGroup;\n}());\nexports.OriginalColumnGroup = OriginalColumnGroup;\n"]},"metadata":{},"sourceType":"script"}