{"ast":null,"code":"/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * @see {@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface}\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/EventTarget~EventTarget}.\n *\n * @constructor\n * @param {string} type Type.\n */\nconst Event = function (type) {\n  /**\n   * @type {boolean}\n   */\n  this.propagationStopped;\n  /**\n   * The event type.\n   * @type {string}\n   * @api\n   */\n\n  this.type = type;\n  /**\n   * The event target.\n   * @type {Object}\n   * @api\n   */\n\n  this.target = null;\n};\n/**\n * Stop event propagation.\n * @function\n * @api\n */\n\n\nEvent.prototype.preventDefault =\n/**\n * Stop event propagation.\n * @function\n * @api\n */\nEvent.prototype.stopPropagation = function () {\n  this.propagationStopped = true;\n};\n/**\n * @param {Event|module:ol/events/Event} evt Event\n */\n\n\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n/**\n * @param {Event|module:ol/events/Event} evt Event\n */\n\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\nexport default Event;","map":null,"metadata":{},"sourceType":"module"}