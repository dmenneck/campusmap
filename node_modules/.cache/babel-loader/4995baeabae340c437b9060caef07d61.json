{"ast":null,"code":"/**\n * @module ol/format/filter/LessThanOrEqualTo\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n * @api\n */\n\nvar LessThanOrEqualTo =\n/*@__PURE__*/\nfunction (ComparisonBinary) {\n  function LessThanOrEqualTo(propertyName, expression) {\n    ComparisonBinary.call(this, 'PropertyIsLessThanOrEqualTo', propertyName, expression);\n  }\n\n  if (ComparisonBinary) LessThanOrEqualTo.__proto__ = ComparisonBinary;\n  LessThanOrEqualTo.prototype = Object.create(ComparisonBinary && ComparisonBinary.prototype);\n  LessThanOrEqualTo.prototype.constructor = LessThanOrEqualTo;\n  return LessThanOrEqualTo;\n}(ComparisonBinary);\n\nexport default LessThanOrEqualTo;","map":{"version":3,"sources":["../../../../src/ol/format/filter/LessThanOrEqualTo.js"],"names":["super"],"mappings":"AAAA;;;AAGA,OAAO,gBAAP,MAA6B,uBAA7B;;;;;;;AAOA,IAAM,iBAAiB;AAAyB;AAAA,UAAA,gBAAA,EAAA;AAM9C,WAAA,iBAAA,CAAY,YAAZ,EAA0B,UAA1B,EAAsC;AACpCA,IAAAA,gBAAAA,CAAAA,IAAAA,CAAK,IAALA,EAAM,6BAANA,EAAqC,YAArCA,EAAmD,UAAnDA;;;;;AACD,EAAA,iBAAA,CAAA,SAAA,CAAA,WAAA,GAAA,iBAAA;;CAR6C,CAAhB,gBAAgB,CAAhD;;AAYA,eAAe,iBAAf","sourcesContent":["/**\n * @module ol/format/filter/LessThanOrEqualTo\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n * @api\n */\nclass LessThanOrEqualTo extends ComparisonBinary {\n\n  /**\n   * @param {!string} propertyName Name of the context property to compare.\n   * @param {!number} expression The value to compare.\n   */\n  constructor(propertyName, expression) {\n    super('PropertyIsLessThanOrEqualTo', propertyName, expression);\n  }\n\n}\n\nexport default LessThanOrEqualTo;\n"]},"metadata":{},"sourceType":"module"}