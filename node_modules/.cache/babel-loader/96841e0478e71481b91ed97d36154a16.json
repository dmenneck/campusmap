{"ast":null,"code":"/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.2.2\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar gridOptionsWrapper_1 = require(\"./gridOptionsWrapper\");\n\nvar selectionController_1 = require(\"./selectionController\");\n\nvar columnApi_1 = require(\"./columnController/columnApi\");\n\nvar columnController_1 = require(\"./columnController/columnController\");\n\nvar rowRenderer_1 = require(\"./rendering/rowRenderer\");\n\nvar headerRootComp_1 = require(\"./headerRendering/headerRootComp\");\n\nvar filterManager_1 = require(\"./filter/filterManager\");\n\nvar valueService_1 = require(\"./valueService/valueService\");\n\nvar eventService_1 = require(\"./eventService\");\n\nvar gridPanel_1 = require(\"./gridPanel/gridPanel\");\n\nvar gridApi_1 = require(\"./gridApi\");\n\nvar columnFactory_1 = require(\"./columnController/columnFactory\");\n\nvar displayedGroupCreator_1 = require(\"./columnController/displayedGroupCreator\");\n\nvar expressionService_1 = require(\"./valueService/expressionService\");\n\nvar templateService_1 = require(\"./templateService\");\n\nvar popupService_1 = require(\"./widgets/popupService\");\n\nvar logger_1 = require(\"./logger\");\n\nvar columnUtils_1 = require(\"./columnController/columnUtils\");\n\nvar autoWidthCalculator_1 = require(\"./rendering/autoWidthCalculator\");\n\nvar horizontalResizeService_1 = require(\"./headerRendering/horizontalResizeService\");\n\nvar context_1 = require(\"./context/context\");\n\nvar csvCreator_1 = require(\"./exporter/csvCreator\");\n\nvar gridCore_1 = require(\"./gridCore\");\n\nvar standardMenu_1 = require(\"./headerRendering/standardMenu\");\n\nvar dragAndDropService_1 = require(\"./dragAndDrop/dragAndDropService\");\n\nvar dragService_1 = require(\"./dragAndDrop/dragService\");\n\nvar sortController_1 = require(\"./sortController\");\n\nvar focusedCellController_1 = require(\"./focusedCellController\");\n\nvar mouseEventService_1 = require(\"./gridPanel/mouseEventService\");\n\nvar cellNavigationService_1 = require(\"./cellNavigationService\");\n\nvar filterStage_1 = require(\"./rowModels/clientSide/filterStage\");\n\nvar sortStage_1 = require(\"./rowModels/clientSide/sortStage\");\n\nvar flattenStage_1 = require(\"./rowModels/clientSide/flattenStage\");\n\nvar events_1 = require(\"./events\");\n\nvar infiniteRowModel_1 = require(\"./rowModels/infinite/infiniteRowModel\");\n\nvar clientSideRowModel_1 = require(\"./rowModels/clientSide/clientSideRowModel\");\n\nvar cellRendererFactory_1 = require(\"./rendering/cellRendererFactory\");\n\nvar valueFormatterService_1 = require(\"./rendering/valueFormatterService\");\n\nvar agCheckbox_1 = require(\"./widgets/agCheckbox\");\n\nvar agRadioButton_1 = require(\"./widgets/agRadioButton\");\n\nvar vanillaFrameworkOverrides_1 = require(\"./vanillaFrameworkOverrides\");\n\nvar scrollVisibleService_1 = require(\"./gridPanel/scrollVisibleService\");\n\nvar downloader_1 = require(\"./exporter/downloader\");\n\nvar xmlFactory_1 = require(\"./exporter/xmlFactory\");\n\nvar gridSerializer_1 = require(\"./exporter/gridSerializer\");\n\nvar stylingService_1 = require(\"./styling/stylingService\");\n\nvar columnHoverService_1 = require(\"./rendering/columnHoverService\");\n\nvar columnAnimationService_1 = require(\"./rendering/columnAnimationService\");\n\nvar sortService_1 = require(\"./rowNodes/sortService\");\n\nvar filterService_1 = require(\"./rowNodes/filterService\");\n\nvar autoGroupColService_1 = require(\"./columnController/autoGroupColService\");\n\nvar paginationProxy_1 = require(\"./rowModels/paginationProxy\");\n\nvar paginationAutoPageSizeService_1 = require(\"./rowModels/paginationAutoPageSizeService\");\n\nvar immutableService_1 = require(\"./rowModels/clientSide/immutableService\");\n\nvar constants_1 = require(\"./constants\");\n\nvar valueCache_1 = require(\"./valueService/valueCache\");\n\nvar changeDetectionService_1 = require(\"./valueService/changeDetectionService\");\n\nvar alignedGridsService_1 = require(\"./alignedGridsService\");\n\nvar pinnedRowModel_1 = require(\"./rowModels/pinnedRowModel\");\n\nvar userComponentFactory_1 = require(\"./components/framework/userComponentFactory\");\n\nvar userComponentRegistry_1 = require(\"./components/framework/userComponentRegistry\");\n\nvar agComponentUtils_1 = require(\"./components/framework/agComponentUtils\");\n\nvar componentMetadataProvider_1 = require(\"./components/framework/componentMetadataProvider\");\n\nvar beans_1 = require(\"./rendering/beans\");\n\nvar environment_1 = require(\"./environment\");\n\nvar animationFrameService_1 = require(\"./misc/animationFrameService\");\n\nvar navigationService_1 = require(\"./gridPanel/navigationService\");\n\nvar maxDivHeightScaler_1 = require(\"./rendering/maxDivHeightScaler\");\n\nvar selectableService_1 = require(\"./rowNodes/selectableService\");\n\nvar autoHeightCalculator_1 = require(\"./rendering/autoHeightCalculator\");\n\nvar paginationComp_1 = require(\"./rowModels/pagination/paginationComp\");\n\nvar resizeObserverService_1 = require(\"./misc/resizeObserverService\");\n\nvar zipContainer_1 = require(\"./exporter/files/zip/zipContainer\");\n\nvar tooltipManager_1 = require(\"./widgets/tooltipManager\");\n\nvar overlayWrapperComponent_1 = require(\"./rendering/overlays/overlayWrapperComponent\");\n\nvar agGroupComponent_1 = require(\"./widgets/agGroupComponent\");\n\nvar agDialog_1 = require(\"./widgets/agDialog\");\n\nvar agPanel_1 = require(\"./widgets/agPanel\");\n\nvar agInputTextField_1 = require(\"./widgets/agInputTextField\");\n\nvar agInputTextArea_1 = require(\"./widgets/agInputTextArea\");\n\nvar agSlider_1 = require(\"./widgets/agSlider\");\n\nvar utils_1 = require(\"./utils\");\n\nvar agColorPicker_1 = require(\"./widgets/agColorPicker\");\n\nvar agInputNumberField_1 = require(\"./widgets/agInputNumberField\");\n\nvar agInputRange_1 = require(\"./widgets/agInputRange\");\n\nvar agSelect_1 = require(\"./widgets/agSelect\");\n\nvar agAngleSelect_1 = require(\"./widgets/agAngleSelect\");\n\nvar agToggleButton_1 = require(\"./widgets/agToggleButton\");\n\nvar detailRowCompCache_1 = require(\"./rendering/detailRowCompCache\");\n\nvar rowPosition_1 = require(\"./entities/rowPosition\");\n\nvar cellPosition_1 = require(\"./entities/cellPosition\");\n\nvar Grid =\n/** @class */\nfunction () {\n  function Grid(eGridDiv, gridOptions, params) {\n    if (!eGridDiv) {\n      console.error('ag-Grid: no div element provided to the grid');\n    }\n\n    if (!gridOptions) {\n      console.error('ag-Grid: no gridOptions provided to the grid');\n    }\n\n    this.gridOptions = gridOptions;\n    var rowModelClass = this.getRowModelClass(gridOptions);\n    var enterprise = !utils_1._.missingOrEmpty(Grid.enterpriseBeans);\n    var moduleBeans = this.extractModuleEntity(Grid.modulesToInclude, function (module) {\n      return module.beans ? module.beans : [];\n    });\n    var moduleEnterpriseBeans = this.extractModuleEntity(Grid.modulesToInclude, function (module) {\n      return module.enterpriseBeans ? module.enterpriseBeans : [];\n    });\n    var moduleEnterpriseComponents = this.extractModuleEntity(Grid.modulesToInclude, function (module) {\n      return module.enterpriseComponents ? module.enterpriseComponents : [];\n    });\n    var modulesEnterpriseDefaultComponents = this.extractModuleEntity(Grid.modulesToInclude, function (module) {\n      return module.enterpriseDefaultComponents ? module.enterpriseDefaultComponents : [];\n    });\n    var frameworkOverrides = params ? params.frameworkOverrides : null;\n\n    if (utils_1._.missing(frameworkOverrides)) {\n      frameworkOverrides = new vanillaFrameworkOverrides_1.VanillaFrameworkOverrides();\n    }\n\n    var overrideBeans = [];\n\n    if (Grid.enterpriseBeans) {\n      overrideBeans = overrideBeans.concat(Grid.enterpriseBeans).concat(moduleEnterpriseBeans);\n    }\n\n    if (Grid.frameworkBeans) {\n      overrideBeans = overrideBeans.concat(Grid.frameworkBeans);\n    }\n\n    var seed = {\n      enterprise: enterprise,\n      gridOptions: gridOptions,\n      eGridDiv: eGridDiv,\n      $scope: params ? params.$scope : null,\n      $compile: params ? params.$compile : null,\n      quickFilterOnScope: params ? params.quickFilterOnScope : null,\n      globalEventListener: params ? params.globalEventListener : null,\n      frameworkOverrides: frameworkOverrides\n    };\n\n    if (params && params.seedBeanInstances) {\n      utils_1._.assign(seed, params.seedBeanInstances);\n    }\n\n    var components = [{\n      componentName: 'AgCheckbox',\n      theClass: agCheckbox_1.AgCheckbox\n    }, {\n      componentName: 'AgRadioButton',\n      theClass: agRadioButton_1.AgRadioButton\n    }, {\n      componentName: 'AgToggleButton',\n      theClass: agToggleButton_1.AgToggleButton\n    }, {\n      componentName: 'AgInputTextField',\n      theClass: agInputTextField_1.AgInputTextField\n    }, {\n      componentName: 'AgInputTextArea',\n      theClass: agInputTextArea_1.AgInputTextArea\n    }, {\n      componentName: 'AgInputNumberField',\n      theClass: agInputNumberField_1.AgInputNumberField\n    }, {\n      componentName: 'AgInputRange',\n      theClass: agInputRange_1.AgInputRange\n    }, {\n      componentName: 'AgSelect',\n      theClass: agSelect_1.AgSelect\n    }, {\n      componentName: 'AgSlider',\n      theClass: agSlider_1.AgSlider\n    }, {\n      componentName: 'AgAngleSelect',\n      theClass: agAngleSelect_1.AgAngleSelect\n    }, {\n      componentName: 'AgColorPicker',\n      theClass: agColorPicker_1.AgColorPicker\n    }, {\n      componentName: 'AgGridComp',\n      theClass: gridPanel_1.GridPanel\n    }, {\n      componentName: 'AgHeaderRoot',\n      theClass: headerRootComp_1.HeaderRootComp\n    }, {\n      componentName: 'AgPagination',\n      theClass: paginationComp_1.PaginationComp\n    }, {\n      componentName: 'AgOverlayWrapper',\n      theClass: overlayWrapperComponent_1.OverlayWrapperComponent\n    }, {\n      componentName: 'AgGroupComponent',\n      theClass: agGroupComponent_1.AgGroupComponent\n    }, {\n      componentName: 'AgPanel',\n      theClass: agPanel_1.AgPanel\n    }, {\n      componentName: 'AgDialog',\n      theClass: agDialog_1.AgDialog\n    }];\n\n    if (Grid.enterpriseComponents) {\n      components = components.concat(Grid.enterpriseComponents).concat(moduleEnterpriseComponents);\n    }\n\n    var contextParams = {\n      overrideBeans: overrideBeans,\n      seed: seed,\n      //Careful with the order of the beans here, there are dependencies between them that need to be kept\n      beans: [// this should only contain SERVICES, it should NEVER contain COMPONENTS\n      rowModelClass, beans_1.Beans, rowPosition_1.RowPositionUtils, cellPosition_1.CellPositionUtils, paginationAutoPageSizeService_1.PaginationAutoPageSizeService, gridApi_1.GridApi, userComponentRegistry_1.UserComponentRegistry, agComponentUtils_1.AgComponentUtils, componentMetadataProvider_1.ComponentMetadataProvider, resizeObserverService_1.ResizeObserverService, userComponentRegistry_1.UserComponentRegistry, userComponentFactory_1.UserComponentFactory, maxDivHeightScaler_1.MaxDivHeightScaler, autoHeightCalculator_1.AutoHeightCalculator, cellRendererFactory_1.CellRendererFactory, horizontalResizeService_1.HorizontalResizeService, pinnedRowModel_1.PinnedRowModel, dragService_1.DragService, displayedGroupCreator_1.DisplayedGroupCreator, eventService_1.EventService, gridOptionsWrapper_1.GridOptionsWrapper, popupService_1.PopupService, selectionController_1.SelectionController, filterManager_1.FilterManager, columnController_1.ColumnController, paginationProxy_1.PaginationProxy, rowRenderer_1.RowRenderer, expressionService_1.ExpressionService, columnFactory_1.ColumnFactory, csvCreator_1.CsvCreator, downloader_1.Downloader, xmlFactory_1.XmlFactory, gridSerializer_1.GridSerializer, templateService_1.TemplateService, alignedGridsService_1.AlignedGridsService, navigationService_1.NavigationService, popupService_1.PopupService, valueCache_1.ValueCache, valueService_1.ValueService, logger_1.LoggerFactory, columnUtils_1.ColumnUtils, autoWidthCalculator_1.AutoWidthCalculator, standardMenu_1.StandardMenuFactory, dragAndDropService_1.DragAndDropService, columnApi_1.ColumnApi, focusedCellController_1.FocusedCellController, mouseEventService_1.MouseEventService, environment_1.Environment, cellNavigationService_1.CellNavigationService, filterStage_1.FilterStage, sortStage_1.SortStage, flattenStage_1.FlattenStage, filterService_1.FilterService, valueFormatterService_1.ValueFormatterService, stylingService_1.StylingService, scrollVisibleService_1.ScrollVisibleService, sortController_1.SortController, columnHoverService_1.ColumnHoverService, columnAnimationService_1.ColumnAnimationService, sortService_1.SortService, selectableService_1.SelectableService, autoGroupColService_1.AutoGroupColService, immutableService_1.ImmutableService, changeDetectionService_1.ChangeDetectionService, animationFrameService_1.AnimationFrameService, tooltipManager_1.TooltipManager, zipContainer_1.ZipContainer, detailRowCompCache_1.DetailRowCompCache].concat(moduleBeans),\n      components: components,\n      enterpriseDefaultComponents: Grid.enterpriseDefaultComponents.concat(modulesEnterpriseDefaultComponents),\n      registeredModules: Grid.modulesToInclude.map(function (module) {\n        return module.moduleName;\n      }),\n      debug: !!gridOptions.debug\n    };\n    this.logger = new logger_1.Logger('ag-Grid', function () {\n      return gridOptions.debug;\n    });\n    var contextLogger = new logger_1.Logger('Context', function () {\n      return contextParams.debug;\n    });\n    this.context = new context_1.Context(contextParams, contextLogger);\n    var gridCore = new gridCore_1.GridCore();\n    this.context.wireBean(gridCore);\n    this.setColumnsAndData();\n    this.dispatchGridReadyEvent(gridOptions);\n    this.logger.log(\"initialised successfully, enterprise = \" + enterprise);\n  }\n\n  Grid.setEnterpriseBeans = function (enterpriseBeans, rowModelClasses) {\n    Grid.enterpriseBeans = enterpriseBeans; // the enterprise can inject additional row models. this is how it injects the viewportRowModel\n\n    utils_1._.iterateObject(rowModelClasses, function (key, value) {\n      return Grid.RowModelClasses[key] = value;\n    });\n  };\n\n  Grid.setEnterpriseComponents = function (components) {\n    Grid.enterpriseComponents = components;\n  };\n\n  Grid.setFrameworkBeans = function (frameworkBeans) {\n    Grid.frameworkBeans = frameworkBeans;\n  };\n\n  Grid.setEnterpriseDefaultComponents = function (enterpriseDefaultComponents) {\n    Grid.enterpriseDefaultComponents = enterpriseDefaultComponents;\n  };\n\n  Grid.addModule = function (modulesToInclude) {\n    var _a; // de-duping would need to be done here (while ensuring order etc)\n\n\n    (_a = Grid.modulesToInclude).push.apply(_a, modulesToInclude);\n  };\n\n  Grid.prototype.extractModuleEntity = function (moduleEntities, extractor) {\n    return [].concat.apply([], moduleEntities.map(extractor));\n  };\n\n  Grid.prototype.setColumnsAndData = function () {\n    var gridOptionsWrapper = this.context.getBean('gridOptionsWrapper');\n    var columnController = this.context.getBean('columnController');\n    var rowModel = this.context.getBean('rowModel');\n    var columnDefs = gridOptionsWrapper.getColumnDefs();\n    var rowData = gridOptionsWrapper.getRowData();\n\n    var nothingToSet = utils_1._.missing(columnDefs) && utils_1._.missing(rowData);\n\n    if (nothingToSet) {\n      return;\n    }\n\n    if (utils_1._.exists(columnDefs)) {\n      columnController.setColumnDefs(columnDefs, \"gridInitializing\");\n    }\n\n    if (utils_1._.exists(rowData) && rowModel.getType() === constants_1.Constants.ROW_MODEL_TYPE_CLIENT_SIDE) {\n      var clientSideRowModel = rowModel;\n      clientSideRowModel.setRowData(rowData);\n    }\n  };\n\n  Grid.prototype.dispatchGridReadyEvent = function (gridOptions) {\n    var eventService = this.context.getBean('eventService');\n    var readyEvent = {\n      type: events_1.Events.EVENT_GRID_READY,\n      api: gridOptions.api,\n      columnApi: gridOptions.columnApi\n    };\n    eventService.dispatchEvent(readyEvent);\n  };\n\n  Grid.prototype.getRowModelClass = function (gridOptions) {\n    var rowModelType = gridOptions.rowModelType; //TODO: temporary measure before 'enterprise' is completely removed (similar handling in gridOptionsWrapper is also required)\n\n    rowModelType = rowModelType === 'enterprise' ? constants_1.Constants.ROW_MODEL_TYPE_SERVER_SIDE : rowModelType;\n\n    if (utils_1._.exists(rowModelType)) {\n      var rowModelClass = Grid.RowModelClasses[rowModelType];\n\n      if (utils_1._.exists(rowModelClass)) {\n        return rowModelClass;\n      } else {\n        if (rowModelType === 'normal') {\n          console.warn(\"ag-Grid: normal rowModel deprecated. Should now be called client side row model instead.\");\n          return clientSideRowModel_1.ClientSideRowModel;\n        }\n\n        console.error('ag-Grid: could not find matching row model for rowModelType ' + rowModelType);\n\n        if (rowModelType === constants_1.Constants.ROW_MODEL_TYPE_VIEWPORT) {\n          console.error('ag-Grid: rowModelType viewport is only available in ag-Grid Enterprise');\n        }\n\n        if (rowModelType === constants_1.Constants.ROW_MODEL_TYPE_SERVER_SIDE) {\n          console.error('ag-Grid: rowModelType server side is only available in ag-Grid Enterprise');\n        }\n      }\n    }\n\n    return clientSideRowModel_1.ClientSideRowModel;\n  };\n\n  Grid.prototype.destroy = function () {\n    this.gridOptions.api.destroy();\n  };\n\n  Grid.enterpriseBeans = [];\n  Grid.enterpriseComponents = [];\n  Grid.enterpriseDefaultComponents = [];\n  Grid.modulesToInclude = []; // the default is ClientSideRowModel, which is also used for pagination.\n  // the enterprise adds viewport to this list.\n\n  Grid.RowModelClasses = {\n    infinite: infiniteRowModel_1.InfiniteRowModel,\n    clientSide: clientSideRowModel_1.ClientSideRowModel\n  };\n  return Grid;\n}();\n\nexports.Grid = Grid;","map":{"version":3,"sources":["/Users/dirkmennecke77/Desktop/Lageplan/node_modules/ag-grid-community/dist/lib/grid.js"],"names":["Object","defineProperty","exports","value","gridOptionsWrapper_1","require","selectionController_1","columnApi_1","columnController_1","rowRenderer_1","headerRootComp_1","filterManager_1","valueService_1","eventService_1","gridPanel_1","gridApi_1","columnFactory_1","displayedGroupCreator_1","expressionService_1","templateService_1","popupService_1","logger_1","columnUtils_1","autoWidthCalculator_1","horizontalResizeService_1","context_1","csvCreator_1","gridCore_1","standardMenu_1","dragAndDropService_1","dragService_1","sortController_1","focusedCellController_1","mouseEventService_1","cellNavigationService_1","filterStage_1","sortStage_1","flattenStage_1","events_1","infiniteRowModel_1","clientSideRowModel_1","cellRendererFactory_1","valueFormatterService_1","agCheckbox_1","agRadioButton_1","vanillaFrameworkOverrides_1","scrollVisibleService_1","downloader_1","xmlFactory_1","gridSerializer_1","stylingService_1","columnHoverService_1","columnAnimationService_1","sortService_1","filterService_1","autoGroupColService_1","paginationProxy_1","paginationAutoPageSizeService_1","immutableService_1","constants_1","valueCache_1","changeDetectionService_1","alignedGridsService_1","pinnedRowModel_1","userComponentFactory_1","userComponentRegistry_1","agComponentUtils_1","componentMetadataProvider_1","beans_1","environment_1","animationFrameService_1","navigationService_1","maxDivHeightScaler_1","selectableService_1","autoHeightCalculator_1","paginationComp_1","resizeObserverService_1","zipContainer_1","tooltipManager_1","overlayWrapperComponent_1","agGroupComponent_1","agDialog_1","agPanel_1","agInputTextField_1","agInputTextArea_1","agSlider_1","utils_1","agColorPicker_1","agInputNumberField_1","agInputRange_1","agSelect_1","agAngleSelect_1","agToggleButton_1","detailRowCompCache_1","rowPosition_1","cellPosition_1","Grid","eGridDiv","gridOptions","params","console","error","rowModelClass","getRowModelClass","enterprise","_","missingOrEmpty","enterpriseBeans","moduleBeans","extractModuleEntity","modulesToInclude","module","beans","moduleEnterpriseBeans","moduleEnterpriseComponents","enterpriseComponents","modulesEnterpriseDefaultComponents","enterpriseDefaultComponents","frameworkOverrides","missing","VanillaFrameworkOverrides","overrideBeans","concat","frameworkBeans","seed","$scope","$compile","quickFilterOnScope","globalEventListener","seedBeanInstances","assign","components","componentName","theClass","AgCheckbox","AgRadioButton","AgToggleButton","AgInputTextField","AgInputTextArea","AgInputNumberField","AgInputRange","AgSelect","AgSlider","AgAngleSelect","AgColorPicker","GridPanel","HeaderRootComp","PaginationComp","OverlayWrapperComponent","AgGroupComponent","AgPanel","AgDialog","contextParams","Beans","RowPositionUtils","CellPositionUtils","PaginationAutoPageSizeService","GridApi","UserComponentRegistry","AgComponentUtils","ComponentMetadataProvider","ResizeObserverService","UserComponentFactory","MaxDivHeightScaler","AutoHeightCalculator","CellRendererFactory","HorizontalResizeService","PinnedRowModel","DragService","DisplayedGroupCreator","EventService","GridOptionsWrapper","PopupService","SelectionController","FilterManager","ColumnController","PaginationProxy","RowRenderer","ExpressionService","ColumnFactory","CsvCreator","Downloader","XmlFactory","GridSerializer","TemplateService","AlignedGridsService","NavigationService","ValueCache","ValueService","LoggerFactory","ColumnUtils","AutoWidthCalculator","StandardMenuFactory","DragAndDropService","ColumnApi","FocusedCellController","MouseEventService","Environment","CellNavigationService","FilterStage","SortStage","FlattenStage","FilterService","ValueFormatterService","StylingService","ScrollVisibleService","SortController","ColumnHoverService","ColumnAnimationService","SortService","SelectableService","AutoGroupColService","ImmutableService","ChangeDetectionService","AnimationFrameService","TooltipManager","ZipContainer","DetailRowCompCache","registeredModules","map","moduleName","debug","logger","Logger","contextLogger","context","Context","gridCore","GridCore","wireBean","setColumnsAndData","dispatchGridReadyEvent","log","setEnterpriseBeans","rowModelClasses","iterateObject","key","RowModelClasses","setEnterpriseComponents","setFrameworkBeans","setEnterpriseDefaultComponents","addModule","_a","push","apply","prototype","moduleEntities","extractor","gridOptionsWrapper","getBean","columnController","rowModel","columnDefs","getColumnDefs","rowData","getRowData","nothingToSet","exists","setColumnDefs","getType","Constants","ROW_MODEL_TYPE_CLIENT_SIDE","clientSideRowModel","setRowData","eventService","readyEvent","type","Events","EVENT_GRID_READY","api","columnApi","dispatchEvent","rowModelType","ROW_MODEL_TYPE_SERVER_SIDE","warn","ClientSideRowModel","ROW_MODEL_TYPE_VIEWPORT","destroy","infinite","InfiniteRowModel","clientSide"],"mappings":"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","sourcesContent":["/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.2.2\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar gridOptionsWrapper_1 = require(\"./gridOptionsWrapper\");\nvar selectionController_1 = require(\"./selectionController\");\nvar columnApi_1 = require(\"./columnController/columnApi\");\nvar columnController_1 = require(\"./columnController/columnController\");\nvar rowRenderer_1 = require(\"./rendering/rowRenderer\");\nvar headerRootComp_1 = require(\"./headerRendering/headerRootComp\");\nvar filterManager_1 = require(\"./filter/filterManager\");\nvar valueService_1 = require(\"./valueService/valueService\");\nvar eventService_1 = require(\"./eventService\");\nvar gridPanel_1 = require(\"./gridPanel/gridPanel\");\nvar gridApi_1 = require(\"./gridApi\");\nvar columnFactory_1 = require(\"./columnController/columnFactory\");\nvar displayedGroupCreator_1 = require(\"./columnController/displayedGroupCreator\");\nvar expressionService_1 = require(\"./valueService/expressionService\");\nvar templateService_1 = require(\"./templateService\");\nvar popupService_1 = require(\"./widgets/popupService\");\nvar logger_1 = require(\"./logger\");\nvar columnUtils_1 = require(\"./columnController/columnUtils\");\nvar autoWidthCalculator_1 = require(\"./rendering/autoWidthCalculator\");\nvar horizontalResizeService_1 = require(\"./headerRendering/horizontalResizeService\");\nvar context_1 = require(\"./context/context\");\nvar csvCreator_1 = require(\"./exporter/csvCreator\");\nvar gridCore_1 = require(\"./gridCore\");\nvar standardMenu_1 = require(\"./headerRendering/standardMenu\");\nvar dragAndDropService_1 = require(\"./dragAndDrop/dragAndDropService\");\nvar dragService_1 = require(\"./dragAndDrop/dragService\");\nvar sortController_1 = require(\"./sortController\");\nvar focusedCellController_1 = require(\"./focusedCellController\");\nvar mouseEventService_1 = require(\"./gridPanel/mouseEventService\");\nvar cellNavigationService_1 = require(\"./cellNavigationService\");\nvar filterStage_1 = require(\"./rowModels/clientSide/filterStage\");\nvar sortStage_1 = require(\"./rowModels/clientSide/sortStage\");\nvar flattenStage_1 = require(\"./rowModels/clientSide/flattenStage\");\nvar events_1 = require(\"./events\");\nvar infiniteRowModel_1 = require(\"./rowModels/infinite/infiniteRowModel\");\nvar clientSideRowModel_1 = require(\"./rowModels/clientSide/clientSideRowModel\");\nvar cellRendererFactory_1 = require(\"./rendering/cellRendererFactory\");\nvar valueFormatterService_1 = require(\"./rendering/valueFormatterService\");\nvar agCheckbox_1 = require(\"./widgets/agCheckbox\");\nvar agRadioButton_1 = require(\"./widgets/agRadioButton\");\nvar vanillaFrameworkOverrides_1 = require(\"./vanillaFrameworkOverrides\");\nvar scrollVisibleService_1 = require(\"./gridPanel/scrollVisibleService\");\nvar downloader_1 = require(\"./exporter/downloader\");\nvar xmlFactory_1 = require(\"./exporter/xmlFactory\");\nvar gridSerializer_1 = require(\"./exporter/gridSerializer\");\nvar stylingService_1 = require(\"./styling/stylingService\");\nvar columnHoverService_1 = require(\"./rendering/columnHoverService\");\nvar columnAnimationService_1 = require(\"./rendering/columnAnimationService\");\nvar sortService_1 = require(\"./rowNodes/sortService\");\nvar filterService_1 = require(\"./rowNodes/filterService\");\nvar autoGroupColService_1 = require(\"./columnController/autoGroupColService\");\nvar paginationProxy_1 = require(\"./rowModels/paginationProxy\");\nvar paginationAutoPageSizeService_1 = require(\"./rowModels/paginationAutoPageSizeService\");\nvar immutableService_1 = require(\"./rowModels/clientSide/immutableService\");\nvar constants_1 = require(\"./constants\");\nvar valueCache_1 = require(\"./valueService/valueCache\");\nvar changeDetectionService_1 = require(\"./valueService/changeDetectionService\");\nvar alignedGridsService_1 = require(\"./alignedGridsService\");\nvar pinnedRowModel_1 = require(\"./rowModels/pinnedRowModel\");\nvar userComponentFactory_1 = require(\"./components/framework/userComponentFactory\");\nvar userComponentRegistry_1 = require(\"./components/framework/userComponentRegistry\");\nvar agComponentUtils_1 = require(\"./components/framework/agComponentUtils\");\nvar componentMetadataProvider_1 = require(\"./components/framework/componentMetadataProvider\");\nvar beans_1 = require(\"./rendering/beans\");\nvar environment_1 = require(\"./environment\");\nvar animationFrameService_1 = require(\"./misc/animationFrameService\");\nvar navigationService_1 = require(\"./gridPanel/navigationService\");\nvar maxDivHeightScaler_1 = require(\"./rendering/maxDivHeightScaler\");\nvar selectableService_1 = require(\"./rowNodes/selectableService\");\nvar autoHeightCalculator_1 = require(\"./rendering/autoHeightCalculator\");\nvar paginationComp_1 = require(\"./rowModels/pagination/paginationComp\");\nvar resizeObserverService_1 = require(\"./misc/resizeObserverService\");\nvar zipContainer_1 = require(\"./exporter/files/zip/zipContainer\");\nvar tooltipManager_1 = require(\"./widgets/tooltipManager\");\nvar overlayWrapperComponent_1 = require(\"./rendering/overlays/overlayWrapperComponent\");\nvar agGroupComponent_1 = require(\"./widgets/agGroupComponent\");\nvar agDialog_1 = require(\"./widgets/agDialog\");\nvar agPanel_1 = require(\"./widgets/agPanel\");\nvar agInputTextField_1 = require(\"./widgets/agInputTextField\");\nvar agInputTextArea_1 = require(\"./widgets/agInputTextArea\");\nvar agSlider_1 = require(\"./widgets/agSlider\");\nvar utils_1 = require(\"./utils\");\nvar agColorPicker_1 = require(\"./widgets/agColorPicker\");\nvar agInputNumberField_1 = require(\"./widgets/agInputNumberField\");\nvar agInputRange_1 = require(\"./widgets/agInputRange\");\nvar agSelect_1 = require(\"./widgets/agSelect\");\nvar agAngleSelect_1 = require(\"./widgets/agAngleSelect\");\nvar agToggleButton_1 = require(\"./widgets/agToggleButton\");\nvar detailRowCompCache_1 = require(\"./rendering/detailRowCompCache\");\nvar rowPosition_1 = require(\"./entities/rowPosition\");\nvar cellPosition_1 = require(\"./entities/cellPosition\");\nvar Grid = /** @class */ (function () {\n    function Grid(eGridDiv, gridOptions, params) {\n        if (!eGridDiv) {\n            console.error('ag-Grid: no div element provided to the grid');\n        }\n        if (!gridOptions) {\n            console.error('ag-Grid: no gridOptions provided to the grid');\n        }\n        this.gridOptions = gridOptions;\n        var rowModelClass = this.getRowModelClass(gridOptions);\n        var enterprise = !utils_1._.missingOrEmpty(Grid.enterpriseBeans);\n        var moduleBeans = this.extractModuleEntity(Grid.modulesToInclude, function (module) { return module.beans ? module.beans : []; });\n        var moduleEnterpriseBeans = this.extractModuleEntity(Grid.modulesToInclude, function (module) { return module.enterpriseBeans ? module.enterpriseBeans : []; });\n        var moduleEnterpriseComponents = this.extractModuleEntity(Grid.modulesToInclude, function (module) { return module.enterpriseComponents ? module.enterpriseComponents : []; });\n        var modulesEnterpriseDefaultComponents = this.extractModuleEntity(Grid.modulesToInclude, function (module) { return module.enterpriseDefaultComponents ? module.enterpriseDefaultComponents : []; });\n        var frameworkOverrides = params ? params.frameworkOverrides : null;\n        if (utils_1._.missing(frameworkOverrides)) {\n            frameworkOverrides = new vanillaFrameworkOverrides_1.VanillaFrameworkOverrides();\n        }\n        var overrideBeans = [];\n        if (Grid.enterpriseBeans) {\n            overrideBeans = overrideBeans.concat(Grid.enterpriseBeans)\n                .concat(moduleEnterpriseBeans);\n        }\n        if (Grid.frameworkBeans) {\n            overrideBeans = overrideBeans.concat(Grid.frameworkBeans);\n        }\n        var seed = {\n            enterprise: enterprise,\n            gridOptions: gridOptions,\n            eGridDiv: eGridDiv,\n            $scope: params ? params.$scope : null,\n            $compile: params ? params.$compile : null,\n            quickFilterOnScope: params ? params.quickFilterOnScope : null,\n            globalEventListener: params ? params.globalEventListener : null,\n            frameworkOverrides: frameworkOverrides\n        };\n        if (params && params.seedBeanInstances) {\n            utils_1._.assign(seed, params.seedBeanInstances);\n        }\n        var components = [\n            { componentName: 'AgCheckbox', theClass: agCheckbox_1.AgCheckbox },\n            { componentName: 'AgRadioButton', theClass: agRadioButton_1.AgRadioButton },\n            { componentName: 'AgToggleButton', theClass: agToggleButton_1.AgToggleButton },\n            { componentName: 'AgInputTextField', theClass: agInputTextField_1.AgInputTextField },\n            { componentName: 'AgInputTextArea', theClass: agInputTextArea_1.AgInputTextArea },\n            { componentName: 'AgInputNumberField', theClass: agInputNumberField_1.AgInputNumberField },\n            { componentName: 'AgInputRange', theClass: agInputRange_1.AgInputRange },\n            { componentName: 'AgSelect', theClass: agSelect_1.AgSelect },\n            { componentName: 'AgSlider', theClass: agSlider_1.AgSlider },\n            { componentName: 'AgAngleSelect', theClass: agAngleSelect_1.AgAngleSelect },\n            { componentName: 'AgColorPicker', theClass: agColorPicker_1.AgColorPicker },\n            { componentName: 'AgGridComp', theClass: gridPanel_1.GridPanel },\n            { componentName: 'AgHeaderRoot', theClass: headerRootComp_1.HeaderRootComp },\n            { componentName: 'AgPagination', theClass: paginationComp_1.PaginationComp },\n            { componentName: 'AgOverlayWrapper', theClass: overlayWrapperComponent_1.OverlayWrapperComponent },\n            { componentName: 'AgGroupComponent', theClass: agGroupComponent_1.AgGroupComponent },\n            { componentName: 'AgPanel', theClass: agPanel_1.AgPanel },\n            { componentName: 'AgDialog', theClass: agDialog_1.AgDialog }\n        ];\n        if (Grid.enterpriseComponents) {\n            components = components.concat(Grid.enterpriseComponents)\n                .concat(moduleEnterpriseComponents);\n        }\n        var contextParams = {\n            overrideBeans: overrideBeans,\n            seed: seed,\n            //Careful with the order of the beans here, there are dependencies between them that need to be kept\n            beans: [\n                // this should only contain SERVICES, it should NEVER contain COMPONENTS\n                rowModelClass, beans_1.Beans, rowPosition_1.RowPositionUtils, cellPosition_1.CellPositionUtils,\n                paginationAutoPageSizeService_1.PaginationAutoPageSizeService, gridApi_1.GridApi, userComponentRegistry_1.UserComponentRegistry, agComponentUtils_1.AgComponentUtils,\n                componentMetadataProvider_1.ComponentMetadataProvider, resizeObserverService_1.ResizeObserverService, userComponentRegistry_1.UserComponentRegistry, userComponentFactory_1.UserComponentFactory,\n                maxDivHeightScaler_1.MaxDivHeightScaler, autoHeightCalculator_1.AutoHeightCalculator, cellRendererFactory_1.CellRendererFactory, horizontalResizeService_1.HorizontalResizeService,\n                pinnedRowModel_1.PinnedRowModel, dragService_1.DragService, displayedGroupCreator_1.DisplayedGroupCreator, eventService_1.EventService, gridOptionsWrapper_1.GridOptionsWrapper, popupService_1.PopupService,\n                selectionController_1.SelectionController, filterManager_1.FilterManager, columnController_1.ColumnController, paginationProxy_1.PaginationProxy, rowRenderer_1.RowRenderer, expressionService_1.ExpressionService,\n                columnFactory_1.ColumnFactory, csvCreator_1.CsvCreator, downloader_1.Downloader, xmlFactory_1.XmlFactory, gridSerializer_1.GridSerializer, templateService_1.TemplateService, alignedGridsService_1.AlignedGridsService,\n                navigationService_1.NavigationService, popupService_1.PopupService, valueCache_1.ValueCache, valueService_1.ValueService, logger_1.LoggerFactory, columnUtils_1.ColumnUtils, autoWidthCalculator_1.AutoWidthCalculator,\n                standardMenu_1.StandardMenuFactory, dragAndDropService_1.DragAndDropService, columnApi_1.ColumnApi, focusedCellController_1.FocusedCellController, mouseEventService_1.MouseEventService, environment_1.Environment,\n                cellNavigationService_1.CellNavigationService, filterStage_1.FilterStage, sortStage_1.SortStage, flattenStage_1.FlattenStage, filterService_1.FilterService,\n                valueFormatterService_1.ValueFormatterService, stylingService_1.StylingService, scrollVisibleService_1.ScrollVisibleService, sortController_1.SortController,\n                columnHoverService_1.ColumnHoverService, columnAnimationService_1.ColumnAnimationService, sortService_1.SortService, selectableService_1.SelectableService, autoGroupColService_1.AutoGroupColService,\n                immutableService_1.ImmutableService, changeDetectionService_1.ChangeDetectionService, animationFrameService_1.AnimationFrameService, tooltipManager_1.TooltipManager, zipContainer_1.ZipContainer,\n                detailRowCompCache_1.DetailRowCompCache\n            ].concat(moduleBeans),\n            components: components,\n            enterpriseDefaultComponents: Grid.enterpriseDefaultComponents.concat(modulesEnterpriseDefaultComponents),\n            registeredModules: Grid.modulesToInclude.map(function (module) { return module.moduleName; }),\n            debug: !!gridOptions.debug\n        };\n        this.logger = new logger_1.Logger('ag-Grid', function () { return gridOptions.debug; });\n        var contextLogger = new logger_1.Logger('Context', function () { return contextParams.debug; });\n        this.context = new context_1.Context(contextParams, contextLogger);\n        var gridCore = new gridCore_1.GridCore();\n        this.context.wireBean(gridCore);\n        this.setColumnsAndData();\n        this.dispatchGridReadyEvent(gridOptions);\n        this.logger.log(\"initialised successfully, enterprise = \" + enterprise);\n    }\n    Grid.setEnterpriseBeans = function (enterpriseBeans, rowModelClasses) {\n        Grid.enterpriseBeans = enterpriseBeans;\n        // the enterprise can inject additional row models. this is how it injects the viewportRowModel\n        utils_1._.iterateObject(rowModelClasses, function (key, value) { return Grid.RowModelClasses[key] = value; });\n    };\n    Grid.setEnterpriseComponents = function (components) {\n        Grid.enterpriseComponents = components;\n    };\n    Grid.setFrameworkBeans = function (frameworkBeans) {\n        Grid.frameworkBeans = frameworkBeans;\n    };\n    Grid.setEnterpriseDefaultComponents = function (enterpriseDefaultComponents) {\n        Grid.enterpriseDefaultComponents = enterpriseDefaultComponents;\n    };\n    Grid.addModule = function (modulesToInclude) {\n        var _a;\n        // de-duping would need to be done here (while ensuring order etc)\n        (_a = Grid.modulesToInclude).push.apply(_a, modulesToInclude);\n    };\n    Grid.prototype.extractModuleEntity = function (moduleEntities, extractor) {\n        return [].concat.apply([], moduleEntities.map(extractor));\n    };\n    Grid.prototype.setColumnsAndData = function () {\n        var gridOptionsWrapper = this.context.getBean('gridOptionsWrapper');\n        var columnController = this.context.getBean('columnController');\n        var rowModel = this.context.getBean('rowModel');\n        var columnDefs = gridOptionsWrapper.getColumnDefs();\n        var rowData = gridOptionsWrapper.getRowData();\n        var nothingToSet = utils_1._.missing(columnDefs) && utils_1._.missing(rowData);\n        if (nothingToSet) {\n            return;\n        }\n        if (utils_1._.exists(columnDefs)) {\n            columnController.setColumnDefs(columnDefs, \"gridInitializing\");\n        }\n        if (utils_1._.exists(rowData) && rowModel.getType() === constants_1.Constants.ROW_MODEL_TYPE_CLIENT_SIDE) {\n            var clientSideRowModel = rowModel;\n            clientSideRowModel.setRowData(rowData);\n        }\n    };\n    Grid.prototype.dispatchGridReadyEvent = function (gridOptions) {\n        var eventService = this.context.getBean('eventService');\n        var readyEvent = {\n            type: events_1.Events.EVENT_GRID_READY,\n            api: gridOptions.api,\n            columnApi: gridOptions.columnApi\n        };\n        eventService.dispatchEvent(readyEvent);\n    };\n    Grid.prototype.getRowModelClass = function (gridOptions) {\n        var rowModelType = gridOptions.rowModelType;\n        //TODO: temporary measure before 'enterprise' is completely removed (similar handling in gridOptionsWrapper is also required)\n        rowModelType = rowModelType === 'enterprise' ? constants_1.Constants.ROW_MODEL_TYPE_SERVER_SIDE : rowModelType;\n        if (utils_1._.exists(rowModelType)) {\n            var rowModelClass = Grid.RowModelClasses[rowModelType];\n            if (utils_1._.exists(rowModelClass)) {\n                return rowModelClass;\n            }\n            else {\n                if (rowModelType === 'normal') {\n                    console.warn(\"ag-Grid: normal rowModel deprecated. Should now be called client side row model instead.\");\n                    return clientSideRowModel_1.ClientSideRowModel;\n                }\n                console.error('ag-Grid: could not find matching row model for rowModelType ' + rowModelType);\n                if (rowModelType === constants_1.Constants.ROW_MODEL_TYPE_VIEWPORT) {\n                    console.error('ag-Grid: rowModelType viewport is only available in ag-Grid Enterprise');\n                }\n                if (rowModelType === constants_1.Constants.ROW_MODEL_TYPE_SERVER_SIDE) {\n                    console.error('ag-Grid: rowModelType server side is only available in ag-Grid Enterprise');\n                }\n            }\n        }\n        return clientSideRowModel_1.ClientSideRowModel;\n    };\n    Grid.prototype.destroy = function () {\n        this.gridOptions.api.destroy();\n    };\n    Grid.enterpriseBeans = [];\n    Grid.enterpriseComponents = [];\n    Grid.enterpriseDefaultComponents = [];\n    Grid.modulesToInclude = [];\n    // the default is ClientSideRowModel, which is also used for pagination.\n    // the enterprise adds viewport to this list.\n    Grid.RowModelClasses = {\n        infinite: infiniteRowModel_1.InfiniteRowModel,\n        clientSide: clientSideRowModel_1.ClientSideRowModel\n    };\n    return Grid;\n}());\nexports.Grid = Grid;\n"]},"metadata":{},"sourceType":"script"}