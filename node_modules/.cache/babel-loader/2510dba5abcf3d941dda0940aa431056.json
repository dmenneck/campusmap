{"ast":null,"code":"/**\n * @module ol/format/filter/LogicalNary\n */\nimport { assert } from '../../asserts.js';\nimport Filter from './Filter.js';\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature n-ary logical filters.\n *\n * @abstract\n */\n\nvar LogicalNary =\n/*@__PURE__*/\nfunction (Filter) {\n  function LogicalNary(tagName, conditions) {\n    Filter.call(this, tagName);\n    /**\n     * @type {Array<import(\"./Filter.js\").default>}\n     */\n\n    this.conditions = conditions;\n    assert(this.conditions.length >= 2, 57); // At least 2 conditions are required.\n  }\n\n  if (Filter) LogicalNary.__proto__ = Filter;\n  LogicalNary.prototype = Object.create(Filter && Filter.prototype);\n  LogicalNary.prototype.constructor = LogicalNary;\n  return LogicalNary;\n}(Filter);\n\nexport default LogicalNary;","map":{"version":3,"sources":["../../../../src/ol/format/filter/LogicalNary.js"],"names":["super"],"mappings":"AAAA;;;AAGA,SAAQ,MAAR,QAAqB,kBAArB;AACA,OAAO,MAAP,MAAmB,aAAnB;;;;;;;;;AASA,IAAM,WAAW;AAAe;AAAA,UAAA,MAAA,EAAA;AAM9B,WAAA,WAAA,CAAY,OAAZ,EAAqB,UAArB,EAAiC;AAE/BA,IAAAA,MAAAA,CAAAA,IAAAA,CAAK,IAALA,EAAM,OAANA;;;;;AAKA,SAAK,UAAL,GAAkB,UAAlB;AACA,IAAA,MAAM,CAAC,KAAK,UAAL,CAAgB,MAAhB,IAA0B,CAA3B,EAA8B,EAA9B,CAAN,CAR+B,CAQS;;;;;AACzC,EAAA,WAAA,CAAA,SAAA,CAAA,WAAA,GAAA,WAAA;;CAf6B,CAAN,MAAM,CAAhC;;AAmBA,eAAe,WAAf","sourcesContent":["/**\n * @module ol/format/filter/LogicalNary\n */\nimport {assert} from '../../asserts.js';\nimport Filter from './Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature n-ary logical filters.\n *\n * @abstract\n */\nclass LogicalNary extends Filter {\n\n  /**\n   * @param {!string} tagName The XML tag name for this filter.\n   * @param {Array<import(\"./Filter.js\").default>} conditions Conditions.\n   */\n  constructor(tagName, conditions) {\n\n    super(tagName);\n\n    /**\n     * @type {Array<import(\"./Filter.js\").default>}\n     */\n    this.conditions = conditions;\n    assert(this.conditions.length >= 2, 57); // At least 2 conditions are required.\n  }\n\n}\n\nexport default LogicalNary;\n"]},"metadata":{},"sourceType":"module"}