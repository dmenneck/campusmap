{"ast":null,"code":"/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.2.2\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar agCheckbox_1 = require(\"../../widgets/agCheckbox\");\n\nvar beanStub_1 = require(\"../../context/beanStub\");\n\nvar context_1 = require(\"../../context/context\");\n\nvar columnApi_1 = require(\"../../columnController/columnApi\");\n\nvar gridApi_1 = require(\"../../gridApi\");\n\nvar events_1 = require(\"../../events\");\n\nvar eventService_1 = require(\"../../eventService\");\n\nvar constants_1 = require(\"../../constants\");\n\nvar selectionController_1 = require(\"../../selectionController\");\n\nvar gridOptionsWrapper_1 = require(\"../../gridOptionsWrapper\");\n\nvar SelectAllFeature =\n/** @class */\nfunction (_super) {\n  __extends(SelectAllFeature, _super);\n\n  function SelectAllFeature(cbSelectAll, column) {\n    var _this = _super.call(this) || this;\n\n    _this.cbSelectAllVisible = false;\n    _this.processingEventFromCheckbox = false;\n    _this.cbSelectAll = cbSelectAll;\n    _this.column = column;\n    var colDef = column.getColDef();\n    _this.filteredOnly = colDef ? !!colDef.headerCheckboxSelectionFilteredOnly : false;\n    return _this;\n  }\n\n  SelectAllFeature.prototype.postConstruct = function () {\n    this.showOrHideSelectAll();\n    this.addDestroyableEventListener(this.eventService, events_1.Events.EVENT_DISPLAYED_COLUMNS_CHANGED, this.showOrHideSelectAll.bind(this));\n    this.addDestroyableEventListener(this.eventService, events_1.Events.EVENT_SELECTION_CHANGED, this.onSelectionChanged.bind(this));\n    this.addDestroyableEventListener(this.eventService, events_1.Events.EVENT_MODEL_UPDATED, this.onModelChanged.bind(this));\n    this.addDestroyableEventListener(this.cbSelectAll, agCheckbox_1.AgCheckbox.EVENT_CHANGED, this.onCbSelectAll.bind(this));\n  };\n\n  SelectAllFeature.prototype.showOrHideSelectAll = function () {\n    this.cbSelectAllVisible = this.isCheckboxSelection();\n    this.cbSelectAll.setDisplayed(this.cbSelectAllVisible);\n\n    if (this.cbSelectAllVisible) {\n      // in case user is trying this feature with the wrong model type\n      this.checkRightRowModelType(); // make sure checkbox is showing the right state\n\n      this.updateStateOfCheckbox();\n    }\n  };\n\n  SelectAllFeature.prototype.onModelChanged = function () {\n    if (!this.cbSelectAllVisible) {\n      return;\n    }\n\n    this.updateStateOfCheckbox();\n  };\n\n  SelectAllFeature.prototype.onSelectionChanged = function () {\n    if (!this.cbSelectAllVisible) {\n      return;\n    }\n\n    this.updateStateOfCheckbox();\n  };\n\n  SelectAllFeature.prototype.getNextCheckboxState = function (selectionCount) {\n    if (selectionCount.selected === 0 && selectionCount.notSelected === 0) {\n      // if no rows, always have it unselected\n      return false;\n    } else if (selectionCount.selected > 0 && selectionCount.notSelected > 0) {\n      // if mix of selected and unselected, this is the tri-state\n      return null;\n    } else if (selectionCount.selected > 0) {\n      // only selected\n      return true;\n    } else {\n      // nothing selected\n      return false;\n    }\n  };\n\n  SelectAllFeature.prototype.updateStateOfCheckbox = function () {\n    if (this.processingEventFromCheckbox) {\n      return;\n    }\n\n    this.processingEventFromCheckbox = true;\n    var selectionCount = this.getSelectionCount();\n    var allSelected = this.getNextCheckboxState(selectionCount);\n    this.cbSelectAll.setValue(allSelected);\n    this.processingEventFromCheckbox = false;\n  };\n\n  SelectAllFeature.prototype.getSelectionCount = function () {\n    var _this = this;\n\n    var selectedCount = 0;\n    var notSelectedCount = 0;\n\n    var callback = function (node) {\n      if (_this.gridOptionsWrapper.isGroupSelectsChildren() && node.group) {\n        return;\n      }\n\n      if (node.isSelected()) {\n        selectedCount++;\n      } else if (!node.selectable) {// don't count non-selectable nodes!\n      } else {\n        notSelectedCount++;\n      }\n    };\n\n    if (this.filteredOnly) {\n      this.gridApi.forEachNodeAfterFilter(callback);\n    } else {\n      this.gridApi.forEachNode(callback);\n    }\n\n    return {\n      notSelected: notSelectedCount,\n      selected: selectedCount\n    };\n  };\n\n  SelectAllFeature.prototype.checkRightRowModelType = function () {\n    var rowModelType = this.rowModel.getType();\n    var rowModelMatches = rowModelType === constants_1.Constants.ROW_MODEL_TYPE_CLIENT_SIDE;\n\n    if (!rowModelMatches) {\n      console.warn(\"ag-Grid: selectAllCheckbox is only available if using normal row model, you are using \" + rowModelType);\n    }\n  };\n\n  SelectAllFeature.prototype.onCbSelectAll = function () {\n    if (this.processingEventFromCheckbox) {\n      return;\n    }\n\n    if (!this.cbSelectAllVisible) {\n      return;\n    }\n\n    var value = this.cbSelectAll.getValue();\n\n    if (value) {\n      this.selectionController.selectAllRowNodes(this.filteredOnly);\n    } else {\n      this.selectionController.deselectAllRowNodes(this.filteredOnly);\n    }\n  };\n\n  SelectAllFeature.prototype.isCheckboxSelection = function () {\n    var result = this.column.getColDef().headerCheckboxSelection;\n\n    if (typeof result === 'function') {\n      var func = result;\n      result = func({\n        column: this.column,\n        colDef: this.column.getColDef(),\n        columnApi: this.columnApi,\n        api: this.gridApi\n      });\n    }\n\n    if (result) {\n      if (this.gridOptionsWrapper.isRowModelServerSide()) {\n        console.warn('headerCheckboxSelection is not supported for Server Side Row Model');\n        return false;\n      }\n\n      if (this.gridOptionsWrapper.isRowModelInfinite()) {\n        console.warn('headerCheckboxSelection is not supported for Infinite Row Model');\n        return false;\n      }\n\n      if (this.gridOptionsWrapper.isRowModelViewport()) {\n        console.warn('headerCheckboxSelection is not supported for Viewport Row Model');\n        return false;\n      } // otherwise the row model is compatible, so return true\n\n\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  __decorate([context_1.Autowired('gridApi'), __metadata(\"design:type\", gridApi_1.GridApi)], SelectAllFeature.prototype, \"gridApi\", void 0);\n\n  __decorate([context_1.Autowired('columnApi'), __metadata(\"design:type\", columnApi_1.ColumnApi)], SelectAllFeature.prototype, \"columnApi\", void 0);\n\n  __decorate([context_1.Autowired('eventService'), __metadata(\"design:type\", eventService_1.EventService)], SelectAllFeature.prototype, \"eventService\", void 0);\n\n  __decorate([context_1.Autowired('rowModel'), __metadata(\"design:type\", Object)], SelectAllFeature.prototype, \"rowModel\", void 0);\n\n  __decorate([context_1.Autowired('selectionController'), __metadata(\"design:type\", selectionController_1.SelectionController)], SelectAllFeature.prototype, \"selectionController\", void 0);\n\n  __decorate([context_1.Autowired('gridOptionsWrapper'), __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)], SelectAllFeature.prototype, \"gridOptionsWrapper\", void 0);\n\n  __decorate([context_1.PostConstruct, __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", []), __metadata(\"design:returntype\", void 0)], SelectAllFeature.prototype, \"postConstruct\", null);\n\n  return SelectAllFeature;\n}(beanStub_1.BeanStub);\n\nexports.SelectAllFeature = SelectAllFeature;","map":{"version":3,"sources":["/Users/dirkmennecke77/Desktop/Lageplan/node_modules/ag-grid-community/dist/lib/headerRendering/header/selectAllFeature.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","k","v","metadata","exports","value","agCheckbox_1","require","beanStub_1","context_1","columnApi_1","gridApi_1","events_1","eventService_1","constants_1","selectionController_1","gridOptionsWrapper_1","SelectAllFeature","_super","cbSelectAll","column","_this","call","cbSelectAllVisible","processingEventFromCheckbox","colDef","getColDef","filteredOnly","headerCheckboxSelectionFilteredOnly","postConstruct","showOrHideSelectAll","addDestroyableEventListener","eventService","Events","EVENT_DISPLAYED_COLUMNS_CHANGED","bind","EVENT_SELECTION_CHANGED","onSelectionChanged","EVENT_MODEL_UPDATED","onModelChanged","AgCheckbox","EVENT_CHANGED","onCbSelectAll","isCheckboxSelection","setDisplayed","checkRightRowModelType","updateStateOfCheckbox","getNextCheckboxState","selectionCount","selected","notSelected","getSelectionCount","allSelected","setValue","selectedCount","notSelectedCount","callback","node","gridOptionsWrapper","isGroupSelectsChildren","group","isSelected","selectable","gridApi","forEachNodeAfterFilter","forEachNode","rowModelType","rowModel","getType","rowModelMatches","Constants","ROW_MODEL_TYPE_CLIENT_SIDE","console","warn","getValue","selectionController","selectAllRowNodes","deselectAllRowNodes","result","headerCheckboxSelection","func","columnApi","api","isRowModelServerSide","isRowModelInfinite","isRowModelViewport","Autowired","GridApi","ColumnApi","EventService","SelectionController","GridOptionsWrapper","PostConstruct","Function","BeanStub"],"mappings":"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","sourcesContent":["/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.2.2\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar agCheckbox_1 = require(\"../../widgets/agCheckbox\");\nvar beanStub_1 = require(\"../../context/beanStub\");\nvar context_1 = require(\"../../context/context\");\nvar columnApi_1 = require(\"../../columnController/columnApi\");\nvar gridApi_1 = require(\"../../gridApi\");\nvar events_1 = require(\"../../events\");\nvar eventService_1 = require(\"../../eventService\");\nvar constants_1 = require(\"../../constants\");\nvar selectionController_1 = require(\"../../selectionController\");\nvar gridOptionsWrapper_1 = require(\"../../gridOptionsWrapper\");\nvar SelectAllFeature = /** @class */ (function (_super) {\n    __extends(SelectAllFeature, _super);\n    function SelectAllFeature(cbSelectAll, column) {\n        var _this = _super.call(this) || this;\n        _this.cbSelectAllVisible = false;\n        _this.processingEventFromCheckbox = false;\n        _this.cbSelectAll = cbSelectAll;\n        _this.column = column;\n        var colDef = column.getColDef();\n        _this.filteredOnly = colDef ? !!colDef.headerCheckboxSelectionFilteredOnly : false;\n        return _this;\n    }\n    SelectAllFeature.prototype.postConstruct = function () {\n        this.showOrHideSelectAll();\n        this.addDestroyableEventListener(this.eventService, events_1.Events.EVENT_DISPLAYED_COLUMNS_CHANGED, this.showOrHideSelectAll.bind(this));\n        this.addDestroyableEventListener(this.eventService, events_1.Events.EVENT_SELECTION_CHANGED, this.onSelectionChanged.bind(this));\n        this.addDestroyableEventListener(this.eventService, events_1.Events.EVENT_MODEL_UPDATED, this.onModelChanged.bind(this));\n        this.addDestroyableEventListener(this.cbSelectAll, agCheckbox_1.AgCheckbox.EVENT_CHANGED, this.onCbSelectAll.bind(this));\n    };\n    SelectAllFeature.prototype.showOrHideSelectAll = function () {\n        this.cbSelectAllVisible = this.isCheckboxSelection();\n        this.cbSelectAll.setDisplayed(this.cbSelectAllVisible);\n        if (this.cbSelectAllVisible) {\n            // in case user is trying this feature with the wrong model type\n            this.checkRightRowModelType();\n            // make sure checkbox is showing the right state\n            this.updateStateOfCheckbox();\n        }\n    };\n    SelectAllFeature.prototype.onModelChanged = function () {\n        if (!this.cbSelectAllVisible) {\n            return;\n        }\n        this.updateStateOfCheckbox();\n    };\n    SelectAllFeature.prototype.onSelectionChanged = function () {\n        if (!this.cbSelectAllVisible) {\n            return;\n        }\n        this.updateStateOfCheckbox();\n    };\n    SelectAllFeature.prototype.getNextCheckboxState = function (selectionCount) {\n        if (selectionCount.selected === 0 && selectionCount.notSelected === 0) {\n            // if no rows, always have it unselected\n            return false;\n        }\n        else if (selectionCount.selected > 0 && selectionCount.notSelected > 0) {\n            // if mix of selected and unselected, this is the tri-state\n            return null;\n        }\n        else if (selectionCount.selected > 0) {\n            // only selected\n            return true;\n        }\n        else {\n            // nothing selected\n            return false;\n        }\n    };\n    SelectAllFeature.prototype.updateStateOfCheckbox = function () {\n        if (this.processingEventFromCheckbox) {\n            return;\n        }\n        this.processingEventFromCheckbox = true;\n        var selectionCount = this.getSelectionCount();\n        var allSelected = this.getNextCheckboxState(selectionCount);\n        this.cbSelectAll.setValue(allSelected);\n        this.processingEventFromCheckbox = false;\n    };\n    SelectAllFeature.prototype.getSelectionCount = function () {\n        var _this = this;\n        var selectedCount = 0;\n        var notSelectedCount = 0;\n        var callback = function (node) {\n            if (_this.gridOptionsWrapper.isGroupSelectsChildren() && node.group) {\n                return;\n            }\n            if (node.isSelected()) {\n                selectedCount++;\n            }\n            else if (!node.selectable) {\n                // don't count non-selectable nodes!\n            }\n            else {\n                notSelectedCount++;\n            }\n        };\n        if (this.filteredOnly) {\n            this.gridApi.forEachNodeAfterFilter(callback);\n        }\n        else {\n            this.gridApi.forEachNode(callback);\n        }\n        return {\n            notSelected: notSelectedCount,\n            selected: selectedCount\n        };\n    };\n    SelectAllFeature.prototype.checkRightRowModelType = function () {\n        var rowModelType = this.rowModel.getType();\n        var rowModelMatches = rowModelType === constants_1.Constants.ROW_MODEL_TYPE_CLIENT_SIDE;\n        if (!rowModelMatches) {\n            console.warn(\"ag-Grid: selectAllCheckbox is only available if using normal row model, you are using \" + rowModelType);\n        }\n    };\n    SelectAllFeature.prototype.onCbSelectAll = function () {\n        if (this.processingEventFromCheckbox) {\n            return;\n        }\n        if (!this.cbSelectAllVisible) {\n            return;\n        }\n        var value = this.cbSelectAll.getValue();\n        if (value) {\n            this.selectionController.selectAllRowNodes(this.filteredOnly);\n        }\n        else {\n            this.selectionController.deselectAllRowNodes(this.filteredOnly);\n        }\n    };\n    SelectAllFeature.prototype.isCheckboxSelection = function () {\n        var result = this.column.getColDef().headerCheckboxSelection;\n        if (typeof result === 'function') {\n            var func = result;\n            result = func({\n                column: this.column,\n                colDef: this.column.getColDef(),\n                columnApi: this.columnApi,\n                api: this.gridApi\n            });\n        }\n        if (result) {\n            if (this.gridOptionsWrapper.isRowModelServerSide()) {\n                console.warn('headerCheckboxSelection is not supported for Server Side Row Model');\n                return false;\n            }\n            if (this.gridOptionsWrapper.isRowModelInfinite()) {\n                console.warn('headerCheckboxSelection is not supported for Infinite Row Model');\n                return false;\n            }\n            if (this.gridOptionsWrapper.isRowModelViewport()) {\n                console.warn('headerCheckboxSelection is not supported for Viewport Row Model');\n                return false;\n            }\n            // otherwise the row model is compatible, so return true\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    __decorate([\n        context_1.Autowired('gridApi'),\n        __metadata(\"design:type\", gridApi_1.GridApi)\n    ], SelectAllFeature.prototype, \"gridApi\", void 0);\n    __decorate([\n        context_1.Autowired('columnApi'),\n        __metadata(\"design:type\", columnApi_1.ColumnApi)\n    ], SelectAllFeature.prototype, \"columnApi\", void 0);\n    __decorate([\n        context_1.Autowired('eventService'),\n        __metadata(\"design:type\", eventService_1.EventService)\n    ], SelectAllFeature.prototype, \"eventService\", void 0);\n    __decorate([\n        context_1.Autowired('rowModel'),\n        __metadata(\"design:type\", Object)\n    ], SelectAllFeature.prototype, \"rowModel\", void 0);\n    __decorate([\n        context_1.Autowired('selectionController'),\n        __metadata(\"design:type\", selectionController_1.SelectionController)\n    ], SelectAllFeature.prototype, \"selectionController\", void 0);\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], SelectAllFeature.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], SelectAllFeature.prototype, \"postConstruct\", null);\n    return SelectAllFeature;\n}(beanStub_1.BeanStub));\nexports.SelectAllFeature = SelectAllFeature;\n"]},"metadata":{},"sourceType":"script"}