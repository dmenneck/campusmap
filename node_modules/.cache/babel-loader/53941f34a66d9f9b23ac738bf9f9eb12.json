{"ast":null,"code":"import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport { EPSLN, HALF_PI, FORTPI } from '../constants/values';\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------*/\n\nexport function init() {\n  this.no_off = this.no_off || false;\n  this.no_rot = this.no_rot || false;\n\n  if (isNaN(this.k0)) {\n    this.k0 = 1;\n  }\n\n  var sinlat = Math.sin(this.lat0);\n  var coslat = Math.cos(this.lat0);\n  var con = this.e * sinlat;\n  this.bl = Math.sqrt(1 + this.es / (1 - this.es) * Math.pow(coslat, 4));\n  this.al = this.a * this.bl * this.k0 * Math.sqrt(1 - this.es) / (1 - con * con);\n  var t0 = tsfnz(this.e, this.lat0, sinlat);\n  var dl = this.bl / coslat * Math.sqrt((1 - this.es) / (1 - con * con));\n\n  if (dl * dl < 1) {\n    dl = 1;\n  }\n\n  var fl;\n  var gl;\n\n  if (!isNaN(this.longc)) {\n    //Central point and azimuth method\n    if (this.lat0 >= 0) {\n      fl = dl + Math.sqrt(dl * dl - 1);\n    } else {\n      fl = dl - Math.sqrt(dl * dl - 1);\n    }\n\n    this.el = fl * Math.pow(t0, this.bl);\n    gl = 0.5 * (fl - 1 / fl);\n    this.gamma0 = Math.asin(Math.sin(this.alpha) / dl);\n    this.long0 = this.longc - Math.asin(gl * Math.tan(this.gamma0)) / this.bl;\n  } else {\n    //2 points method\n    var t1 = tsfnz(this.e, this.lat1, Math.sin(this.lat1));\n    var t2 = tsfnz(this.e, this.lat2, Math.sin(this.lat2));\n\n    if (this.lat0 >= 0) {\n      this.el = (dl + Math.sqrt(dl * dl - 1)) * Math.pow(t0, this.bl);\n    } else {\n      this.el = (dl - Math.sqrt(dl * dl - 1)) * Math.pow(t0, this.bl);\n    }\n\n    var hl = Math.pow(t1, this.bl);\n    var ll = Math.pow(t2, this.bl);\n    fl = this.el / hl;\n    gl = 0.5 * (fl - 1 / fl);\n    var jl = (this.el * this.el - ll * hl) / (this.el * this.el + ll * hl);\n    var pl = (ll - hl) / (ll + hl);\n    var dlon12 = adjust_lon(this.long1 - this.long2);\n    this.long0 = 0.5 * (this.long1 + this.long2) - Math.atan(jl * Math.tan(0.5 * this.bl * dlon12) / pl) / this.bl;\n    this.long0 = adjust_lon(this.long0);\n    var dlon10 = adjust_lon(this.long1 - this.long0);\n    this.gamma0 = Math.atan(Math.sin(this.bl * dlon10) / gl);\n    this.alpha = Math.asin(dl * Math.sin(this.gamma0));\n  }\n\n  if (this.no_off) {\n    this.uc = 0;\n  } else {\n    if (this.lat0 >= 0) {\n      this.uc = this.al / this.bl * Math.atan2(Math.sqrt(dl * dl - 1), Math.cos(this.alpha));\n    } else {\n      this.uc = -1 * this.al / this.bl * Math.atan2(Math.sqrt(dl * dl - 1), Math.cos(this.alpha));\n    }\n  }\n}\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ----------------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var dlon = adjust_lon(lon - this.long0);\n  var us, vs;\n  var con;\n\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    if (lat > 0) {\n      con = -1;\n    } else {\n      con = 1;\n    }\n\n    vs = this.al / this.bl * Math.log(Math.tan(FORTPI + con * this.gamma0 * 0.5));\n    us = -1 * con * HALF_PI * this.al / this.bl;\n  } else {\n    var t = tsfnz(this.e, lat, Math.sin(lat));\n    var ql = this.el / Math.pow(t, this.bl);\n    var sl = 0.5 * (ql - 1 / ql);\n    var tl = 0.5 * (ql + 1 / ql);\n    var vl = Math.sin(this.bl * dlon);\n    var ul = (sl * Math.sin(this.gamma0) - vl * Math.cos(this.gamma0)) / tl;\n\n    if (Math.abs(Math.abs(ul) - 1) <= EPSLN) {\n      vs = Number.POSITIVE_INFINITY;\n    } else {\n      vs = 0.5 * this.al * Math.log((1 - ul) / (1 + ul)) / this.bl;\n    }\n\n    if (Math.abs(Math.cos(this.bl * dlon)) <= EPSLN) {\n      us = this.al * this.bl * dlon;\n    } else {\n      us = this.al * Math.atan2(sl * Math.cos(this.gamma0) + vl * Math.sin(this.gamma0), Math.cos(this.bl * dlon)) / this.bl;\n    }\n  }\n\n  if (this.no_rot) {\n    p.x = this.x0 + us;\n    p.y = this.y0 + vs;\n  } else {\n    us -= this.uc;\n    p.x = this.x0 + vs * Math.cos(this.alpha) + us * Math.sin(this.alpha);\n    p.y = this.y0 + us * Math.cos(this.alpha) - vs * Math.sin(this.alpha);\n  }\n\n  return p;\n}\nexport function inverse(p) {\n  var us, vs;\n\n  if (this.no_rot) {\n    vs = p.y - this.y0;\n    us = p.x - this.x0;\n  } else {\n    vs = (p.x - this.x0) * Math.cos(this.alpha) - (p.y - this.y0) * Math.sin(this.alpha);\n    us = (p.y - this.y0) * Math.cos(this.alpha) + (p.x - this.x0) * Math.sin(this.alpha);\n    us += this.uc;\n  }\n\n  var qp = Math.exp(-1 * this.bl * vs / this.al);\n  var sp = 0.5 * (qp - 1 / qp);\n  var tp = 0.5 * (qp + 1 / qp);\n  var vp = Math.sin(this.bl * us / this.al);\n  var up = (vp * Math.cos(this.gamma0) + sp * Math.sin(this.gamma0)) / tp;\n  var ts = Math.pow(this.el / Math.sqrt((1 + up) / (1 - up)), 1 / this.bl);\n\n  if (Math.abs(up - 1) < EPSLN) {\n    p.x = this.long0;\n    p.y = HALF_PI;\n  } else if (Math.abs(up + 1) < EPSLN) {\n    p.x = this.long0;\n    p.y = -1 * HALF_PI;\n  } else {\n    p.y = phi2z(this.e, ts);\n    p.x = adjust_lon(this.long0 - Math.atan2(sp * Math.cos(this.gamma0) - vp * Math.sin(this.gamma0), Math.cos(this.bl * us / this.al)) / this.bl);\n  }\n\n  return p;\n}\nexport var names = [\"Hotine_Oblique_Mercator\", \"Hotine Oblique Mercator\", \"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\", \"Hotine_Oblique_Mercator_Azimuth_Center\", \"omerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","map":{"version":3,"sources":["/Users/dirkmennecke77/Desktop/Lageplan/node_modules/proj4/lib/projections/omerc.js"],"names":["tsfnz","adjust_lon","phi2z","EPSLN","HALF_PI","FORTPI","init","no_off","no_rot","isNaN","k0","sinlat","Math","sin","lat0","coslat","cos","con","e","bl","sqrt","es","pow","al","a","t0","dl","fl","gl","longc","el","gamma0","asin","alpha","long0","tan","t1","lat1","t2","lat2","hl","ll","jl","pl","dlon12","long1","long2","atan","dlon10","uc","atan2","forward","p","lon","x","lat","y","dlon","us","vs","abs","log","t","ql","sl","tl","vl","ul","Number","POSITIVE_INFINITY","x0","y0","inverse","qp","exp","sp","tp","vp","up","ts","names"],"mappings":"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","sourcesContent":["import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {EPSLN, HALF_PI, FORTPI} from '../constants/values';\n\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------*/\nexport function init() {\n  this.no_off = this.no_off || false;\n  this.no_rot = this.no_rot || false;\n\n  if (isNaN(this.k0)) {\n    this.k0 = 1;\n  }\n  var sinlat = Math.sin(this.lat0);\n  var coslat = Math.cos(this.lat0);\n  var con = this.e * sinlat;\n\n  this.bl = Math.sqrt(1 + this.es / (1 - this.es) * Math.pow(coslat, 4));\n  this.al = this.a * this.bl * this.k0 * Math.sqrt(1 - this.es) / (1 - con * con);\n  var t0 = tsfnz(this.e, this.lat0, sinlat);\n  var dl = this.bl / coslat * Math.sqrt((1 - this.es) / (1 - con * con));\n  if (dl * dl < 1) {\n    dl = 1;\n  }\n  var fl;\n  var gl;\n  if (!isNaN(this.longc)) {\n    //Central point and azimuth method\n\n    if (this.lat0 >= 0) {\n      fl = dl + Math.sqrt(dl * dl - 1);\n    }\n    else {\n      fl = dl - Math.sqrt(dl * dl - 1);\n    }\n    this.el = fl * Math.pow(t0, this.bl);\n    gl = 0.5 * (fl - 1 / fl);\n    this.gamma0 = Math.asin(Math.sin(this.alpha) / dl);\n    this.long0 = this.longc - Math.asin(gl * Math.tan(this.gamma0)) / this.bl;\n\n  }\n  else {\n    //2 points method\n    var t1 = tsfnz(this.e, this.lat1, Math.sin(this.lat1));\n    var t2 = tsfnz(this.e, this.lat2, Math.sin(this.lat2));\n    if (this.lat0 >= 0) {\n      this.el = (dl + Math.sqrt(dl * dl - 1)) * Math.pow(t0, this.bl);\n    }\n    else {\n      this.el = (dl - Math.sqrt(dl * dl - 1)) * Math.pow(t0, this.bl);\n    }\n    var hl = Math.pow(t1, this.bl);\n    var ll = Math.pow(t2, this.bl);\n    fl = this.el / hl;\n    gl = 0.5 * (fl - 1 / fl);\n    var jl = (this.el * this.el - ll * hl) / (this.el * this.el + ll * hl);\n    var pl = (ll - hl) / (ll + hl);\n    var dlon12 = adjust_lon(this.long1 - this.long2);\n    this.long0 = 0.5 * (this.long1 + this.long2) - Math.atan(jl * Math.tan(0.5 * this.bl * (dlon12)) / pl) / this.bl;\n    this.long0 = adjust_lon(this.long0);\n    var dlon10 = adjust_lon(this.long1 - this.long0);\n    this.gamma0 = Math.atan(Math.sin(this.bl * (dlon10)) / gl);\n    this.alpha = Math.asin(dl * Math.sin(this.gamma0));\n  }\n\n  if (this.no_off) {\n    this.uc = 0;\n  }\n  else {\n    if (this.lat0 >= 0) {\n      this.uc = this.al / this.bl * Math.atan2(Math.sqrt(dl * dl - 1), Math.cos(this.alpha));\n    }\n    else {\n      this.uc = -1 * this.al / this.bl * Math.atan2(Math.sqrt(dl * dl - 1), Math.cos(this.alpha));\n    }\n  }\n\n}\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var dlon = adjust_lon(lon - this.long0);\n  var us, vs;\n  var con;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    if (lat > 0) {\n      con = -1;\n    }\n    else {\n      con = 1;\n    }\n    vs = this.al / this.bl * Math.log(Math.tan(FORTPI + con * this.gamma0 * 0.5));\n    us = -1 * con * HALF_PI * this.al / this.bl;\n  }\n  else {\n    var t = tsfnz(this.e, lat, Math.sin(lat));\n    var ql = this.el / Math.pow(t, this.bl);\n    var sl = 0.5 * (ql - 1 / ql);\n    var tl = 0.5 * (ql + 1 / ql);\n    var vl = Math.sin(this.bl * (dlon));\n    var ul = (sl * Math.sin(this.gamma0) - vl * Math.cos(this.gamma0)) / tl;\n    if (Math.abs(Math.abs(ul) - 1) <= EPSLN) {\n      vs = Number.POSITIVE_INFINITY;\n    }\n    else {\n      vs = 0.5 * this.al * Math.log((1 - ul) / (1 + ul)) / this.bl;\n    }\n    if (Math.abs(Math.cos(this.bl * (dlon))) <= EPSLN) {\n      us = this.al * this.bl * (dlon);\n    }\n    else {\n      us = this.al * Math.atan2(sl * Math.cos(this.gamma0) + vl * Math.sin(this.gamma0), Math.cos(this.bl * dlon)) / this.bl;\n    }\n  }\n\n  if (this.no_rot) {\n    p.x = this.x0 + us;\n    p.y = this.y0 + vs;\n  }\n  else {\n\n    us -= this.uc;\n    p.x = this.x0 + vs * Math.cos(this.alpha) + us * Math.sin(this.alpha);\n    p.y = this.y0 + us * Math.cos(this.alpha) - vs * Math.sin(this.alpha);\n  }\n  return p;\n}\n\nexport function inverse(p) {\n  var us, vs;\n  if (this.no_rot) {\n    vs = p.y - this.y0;\n    us = p.x - this.x0;\n  }\n  else {\n    vs = (p.x - this.x0) * Math.cos(this.alpha) - (p.y - this.y0) * Math.sin(this.alpha);\n    us = (p.y - this.y0) * Math.cos(this.alpha) + (p.x - this.x0) * Math.sin(this.alpha);\n    us += this.uc;\n  }\n  var qp = Math.exp(-1 * this.bl * vs / this.al);\n  var sp = 0.5 * (qp - 1 / qp);\n  var tp = 0.5 * (qp + 1 / qp);\n  var vp = Math.sin(this.bl * us / this.al);\n  var up = (vp * Math.cos(this.gamma0) + sp * Math.sin(this.gamma0)) / tp;\n  var ts = Math.pow(this.el / Math.sqrt((1 + up) / (1 - up)), 1 / this.bl);\n  if (Math.abs(up - 1) < EPSLN) {\n    p.x = this.long0;\n    p.y = HALF_PI;\n  }\n  else if (Math.abs(up + 1) < EPSLN) {\n    p.x = this.long0;\n    p.y = -1 * HALF_PI;\n  }\n  else {\n    p.y = phi2z(this.e, ts);\n    p.x = adjust_lon(this.long0 - Math.atan2(sp * Math.cos(this.gamma0) - vp * Math.sin(this.gamma0), Math.cos(this.bl * us / this.al)) / this.bl);\n  }\n  return p;\n}\n\nexport var names = [\"Hotine_Oblique_Mercator\", \"Hotine Oblique Mercator\", \"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\", \"Hotine_Oblique_Mercator_Azimuth_Center\", \"omerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n"]},"metadata":{},"sourceType":"module"}