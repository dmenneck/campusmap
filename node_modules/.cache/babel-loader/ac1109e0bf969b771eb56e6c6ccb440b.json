{"ast":null,"code":"/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.2.2\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar context_1 = require(\"../context/context\");\n\nvar gridOptionsWrapper_1 = require(\"../gridOptionsWrapper\");\n\nvar changedPath_1 = require(\"../rowModels/clientSide/changedPath\");\n\nvar rowRenderer_1 = require(\"../rendering/rowRenderer\");\n\nvar eventService_1 = require(\"../eventService\");\n\nvar constants_1 = require(\"../constants\");\n\nvar beanStub_1 = require(\"../context/beanStub\");\n\nvar events_1 = require(\"../events\");\n\nvar ChangeDetectionService =\n/** @class */\nfunction (_super) {\n  __extends(ChangeDetectionService, _super);\n\n  function ChangeDetectionService() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ChangeDetectionService.prototype.init = function () {\n    if (this.rowModel.getType() === constants_1.Constants.ROW_MODEL_TYPE_CLIENT_SIDE) {\n      this.clientSideRowModel = this.rowModel;\n    }\n\n    this.addDestroyableEventListener(this.eventService, events_1.Events.EVENT_CELL_VALUE_CHANGED, this.onCellValueChanged.bind(this));\n  };\n\n  ChangeDetectionService.prototype.onCellValueChanged = function (event) {\n    this.doChangeDetection(event.node, event.column);\n  };\n\n  ChangeDetectionService.prototype.doChangeDetection = function (rowNode, column) {\n    if (this.gridOptionsWrapper.isSuppressChangeDetection()) {\n      return;\n    } // clipboard service manages it's own change detection, so no need to do it here.\n    // the clipboard manages it own, as otherwise this would happen once for every cell\n    // that got updated as part of a paste operation. so eg if 100 cells in a paste operation,\n    // this doChangeDetection would get called 100 times (once for each cell), instead clipboard\n    // service executes the logic we have here once (in essence batching up all cell changes\n    // into one change detection).\n\n\n    if (this.clipboardService && this.clipboardService.isPasteOperationActive()) {\n      return;\n    } // step 1 of change detection is to update the aggregated values\n\n\n    if (this.clientSideRowModel && !rowNode.isRowPinned()) {\n      var onlyChangedColumns = this.gridOptionsWrapper.isAggregateOnlyChangedColumns();\n      var changedPath = new changedPath_1.ChangedPath(onlyChangedColumns, this.clientSideRowModel.getRootNode());\n      changedPath.addParentNode(rowNode.parent, [column]);\n      this.clientSideRowModel.doAggregate(changedPath);\n    } // step 2 of change detection is to refresh the cells\n\n\n    this.rowRenderer.refreshCells();\n  };\n\n  __decorate([context_1.Autowired('gridOptionsWrapper'), __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)], ChangeDetectionService.prototype, \"gridOptionsWrapper\", void 0);\n\n  __decorate([context_1.Autowired('rowModel'), __metadata(\"design:type\", Object)], ChangeDetectionService.prototype, \"rowModel\", void 0);\n\n  __decorate([context_1.Autowired('rowRenderer'), __metadata(\"design:type\", rowRenderer_1.RowRenderer)], ChangeDetectionService.prototype, \"rowRenderer\", void 0);\n\n  __decorate([context_1.Autowired('eventService'), __metadata(\"design:type\", eventService_1.EventService)], ChangeDetectionService.prototype, \"eventService\", void 0);\n\n  __decorate([context_1.Optional('clipboardService'), __metadata(\"design:type\", Object)], ChangeDetectionService.prototype, \"clipboardService\", void 0);\n\n  __decorate([context_1.PostConstruct, __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", []), __metadata(\"design:returntype\", void 0)], ChangeDetectionService.prototype, \"init\", null);\n\n  ChangeDetectionService = __decorate([context_1.Bean('changeDetectionService')], ChangeDetectionService);\n  return ChangeDetectionService;\n}(beanStub_1.BeanStub);\n\nexports.ChangeDetectionService = ChangeDetectionService;","map":{"version":3,"sources":["/Users/dirkmennecke77/Desktop/Lageplan/node_modules/ag-grid-community/dist/lib/valueService/changeDetectionService.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","k","v","metadata","exports","value","context_1","require","gridOptionsWrapper_1","changedPath_1","rowRenderer_1","eventService_1","constants_1","beanStub_1","events_1","ChangeDetectionService","_super","apply","init","rowModel","getType","Constants","ROW_MODEL_TYPE_CLIENT_SIDE","clientSideRowModel","addDestroyableEventListener","eventService","Events","EVENT_CELL_VALUE_CHANGED","onCellValueChanged","bind","event","doChangeDetection","node","column","rowNode","gridOptionsWrapper","isSuppressChangeDetection","clipboardService","isPasteOperationActive","isRowPinned","onlyChangedColumns","isAggregateOnlyChangedColumns","changedPath","ChangedPath","getRootNode","addParentNode","parent","doAggregate","rowRenderer","refreshCells","Autowired","GridOptionsWrapper","RowRenderer","EventService","Optional","PostConstruct","Function","Bean","BeanStub"],"mappings":"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","sourcesContent":["/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.2.2\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar context_1 = require(\"../context/context\");\nvar gridOptionsWrapper_1 = require(\"../gridOptionsWrapper\");\nvar changedPath_1 = require(\"../rowModels/clientSide/changedPath\");\nvar rowRenderer_1 = require(\"../rendering/rowRenderer\");\nvar eventService_1 = require(\"../eventService\");\nvar constants_1 = require(\"../constants\");\nvar beanStub_1 = require(\"../context/beanStub\");\nvar events_1 = require(\"../events\");\nvar ChangeDetectionService = /** @class */ (function (_super) {\n    __extends(ChangeDetectionService, _super);\n    function ChangeDetectionService() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ChangeDetectionService.prototype.init = function () {\n        if (this.rowModel.getType() === constants_1.Constants.ROW_MODEL_TYPE_CLIENT_SIDE) {\n            this.clientSideRowModel = this.rowModel;\n        }\n        this.addDestroyableEventListener(this.eventService, events_1.Events.EVENT_CELL_VALUE_CHANGED, this.onCellValueChanged.bind(this));\n    };\n    ChangeDetectionService.prototype.onCellValueChanged = function (event) {\n        this.doChangeDetection(event.node, event.column);\n    };\n    ChangeDetectionService.prototype.doChangeDetection = function (rowNode, column) {\n        if (this.gridOptionsWrapper.isSuppressChangeDetection()) {\n            return;\n        }\n        // clipboard service manages it's own change detection, so no need to do it here.\n        // the clipboard manages it own, as otherwise this would happen once for every cell\n        // that got updated as part of a paste operation. so eg if 100 cells in a paste operation,\n        // this doChangeDetection would get called 100 times (once for each cell), instead clipboard\n        // service executes the logic we have here once (in essence batching up all cell changes\n        // into one change detection).\n        if (this.clipboardService && this.clipboardService.isPasteOperationActive()) {\n            return;\n        }\n        // step 1 of change detection is to update the aggregated values\n        if (this.clientSideRowModel && !rowNode.isRowPinned()) {\n            var onlyChangedColumns = this.gridOptionsWrapper.isAggregateOnlyChangedColumns();\n            var changedPath = new changedPath_1.ChangedPath(onlyChangedColumns, this.clientSideRowModel.getRootNode());\n            changedPath.addParentNode(rowNode.parent, [column]);\n            this.clientSideRowModel.doAggregate(changedPath);\n        }\n        // step 2 of change detection is to refresh the cells\n        this.rowRenderer.refreshCells();\n    };\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], ChangeDetectionService.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_1.Autowired('rowModel'),\n        __metadata(\"design:type\", Object)\n    ], ChangeDetectionService.prototype, \"rowModel\", void 0);\n    __decorate([\n        context_1.Autowired('rowRenderer'),\n        __metadata(\"design:type\", rowRenderer_1.RowRenderer)\n    ], ChangeDetectionService.prototype, \"rowRenderer\", void 0);\n    __decorate([\n        context_1.Autowired('eventService'),\n        __metadata(\"design:type\", eventService_1.EventService)\n    ], ChangeDetectionService.prototype, \"eventService\", void 0);\n    __decorate([\n        context_1.Optional('clipboardService'),\n        __metadata(\"design:type\", Object)\n    ], ChangeDetectionService.prototype, \"clipboardService\", void 0);\n    __decorate([\n        context_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], ChangeDetectionService.prototype, \"init\", null);\n    ChangeDetectionService = __decorate([\n        context_1.Bean('changeDetectionService')\n    ], ChangeDetectionService);\n    return ChangeDetectionService;\n}(beanStub_1.BeanStub));\nexports.ChangeDetectionService = ChangeDetectionService;\n"]},"metadata":{},"sourceType":"script"}