{"ast":null,"code":"/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.2.2\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar context_1 = require(\"../../context/context\");\n\nvar gridOptionsWrapper_1 = require(\"../../gridOptionsWrapper\");\n\nvar userComponentRegistry_1 = require(\"./userComponentRegistry\");\n\nvar agComponentUtils_1 = require(\"./agComponentUtils\");\n\nvar componentMetadataProvider_1 = require(\"./componentMetadataProvider\");\n\nvar utils_1 = require(\"../../utils\");\n\nvar ComponentSource;\n\n(function (ComponentSource) {\n  ComponentSource[ComponentSource[\"DEFAULT\"] = 0] = \"DEFAULT\";\n  ComponentSource[ComponentSource[\"REGISTERED_BY_NAME\"] = 1] = \"REGISTERED_BY_NAME\";\n  ComponentSource[ComponentSource[\"HARDCODED\"] = 2] = \"HARDCODED\";\n})(ComponentSource = exports.ComponentSource || (exports.ComponentSource = {}));\n\nvar UserComponentFactory =\n/** @class */\nfunction () {\n  function UserComponentFactory() {}\n\n  UserComponentFactory.prototype.newDateComponent = function (params) {\n    return this.createAndInitUserComponent(this.gridOptions, params, \"dateComponent\", \"agDateInput\");\n  };\n\n  UserComponentFactory.prototype.newHeaderComponent = function (params) {\n    return this.createAndInitUserComponent(params.column.getColDef(), params, \"headerComponent\", \"agColumnHeader\");\n  };\n\n  UserComponentFactory.prototype.newHeaderGroupComponent = function (params) {\n    return this.createAndInitUserComponent(params.columnGroup.getColGroupDef(), params, \"headerGroupComponent\", \"agColumnGroupHeader\");\n  };\n\n  UserComponentFactory.prototype.newFullWidthGroupRowInnerCellRenderer = function (params) {\n    return this.createAndInitUserComponent(this.gridOptions, params, \"groupRowInnerRenderer\", null, true);\n  }; // this one is unusual, as it can be LoadingCellRenderer, DetailCellRenderer, FullWidthCellRenderer or GroupRowRenderer.\n  // so we have to pass the type in.\n\n\n  UserComponentFactory.prototype.newFullWidthCellRenderer = function (params, cellRendererType, cellRendererName) {\n    return this.createAndInitUserComponent(null, params, cellRendererType, cellRendererName);\n  };\n\n  UserComponentFactory.prototype.newCellRenderer = function (target, params) {\n    return this.createAndInitUserComponent(target, params, \"cellRenderer\", null, true);\n  };\n\n  UserComponentFactory.prototype.newPinnedRowCellRenderer = function (target, params) {\n    return this.createAndInitUserComponent(target, params, \"pinnedRowCellRenderer\", null, true);\n  };\n\n  UserComponentFactory.prototype.newCellEditor = function (colDef, params) {\n    return this.createAndInitUserComponent(colDef, params, 'cellEditor', 'agCellEditor');\n  };\n\n  UserComponentFactory.prototype.newInnerCellRenderer = function (target, params) {\n    return this.createAndInitUserComponent(target, params, \"innerRenderer\", null);\n  };\n\n  UserComponentFactory.prototype.newLoadingOverlayComponent = function (params) {\n    return this.createAndInitUserComponent(this.gridOptions, params, \"loadingOverlayComponent\", \"agLoadingOverlay\");\n  };\n\n  UserComponentFactory.prototype.newNoRowsOverlayComponent = function (params) {\n    return this.createAndInitUserComponent(this.gridOptions, params, \"noRowsOverlayComponent\", \"agNoRowsOverlay\");\n  };\n\n  UserComponentFactory.prototype.newTooltipComponent = function (params) {\n    var colDef = params.colDef;\n    return this.createAndInitUserComponent(colDef, params, \"tooltipComponent\", 'agTooltipComponent');\n  };\n\n  UserComponentFactory.prototype.newFilterComponent = function (colDef, params, defaultFilter, modifyParamsCallback) {\n    return this.createAndInitUserComponent(colDef, params, 'filter', defaultFilter, false, modifyParamsCallback);\n  };\n\n  UserComponentFactory.prototype.newFloatingFilterComponent = function (colDef, params, defaultFloatingFilter) {\n    return this.createAndInitUserComponent(colDef, params, \"floatingFilterComponent\", defaultFloatingFilter, true);\n  };\n\n  UserComponentFactory.prototype.newToolPanelComponent = function (toolPanelDef, params) {\n    return this.createAndInitUserComponent(toolPanelDef, params, 'toolPanel');\n  };\n\n  UserComponentFactory.prototype.newStatusPanelComponent = function (def, params) {\n    return this.createAndInitUserComponent(def, params, 'statusPanel');\n  };\n  /**\n   * This method creates a component given everything needed to guess what sort of component needs to be instantiated\n   * It takes\n   *  @param definitionObject: This is the context for which this component needs to be created, it can be gridOptions\n   *      (global) or columnDef mostly.\n   *  @param paramsFromGrid: Params to be passed to the component and passed by ag-Grid. This will get merged with any params\n   *      specified by the user in the configuration\n   *  @param propertyName: The name of the property used in ag-grid as a convention to refer to the component, it can be:\n   *      'floatingFilter', 'cellRenderer', is used to find if the user is specifying a custom component\n   *  @param defaultComponentName: The actual name of the component to instantiate, this is usually the same as propertyName, but in\n   *      some cases is not, like floatingFilter, if it is the same is not necessary to specify\n   *  @param optional: Handy method to tell if this should return a component ALWAYS. if that is the case, but there is no\n   *      component found, it throws an error, by default all components are MANDATORY\n   *  @param modifyParamsCallback: A chance to customise the params passed to the init method. It receives what the current\n   *  params are and the component that init is about to get called for\n   */\n\n\n  UserComponentFactory.prototype.createAndInitUserComponent = function (definitionObject, paramsFromGrid, propertyName, defaultComponentName, // optional items are: FloatingFilter, CellComp (for cellRenderer)\n  optional, // used by FilterManager only\n  modifyParamsCallback) {\n    if (optional === void 0) {\n      optional = false;\n    }\n\n    if (!definitionObject) {\n      definitionObject = this.gridOptions;\n    } // Create the component instance\n\n\n    var componentAndParams = this.createComponentInstance(definitionObject, propertyName, paramsFromGrid, defaultComponentName, optional);\n\n    if (!componentAndParams) {\n      return null;\n    }\n\n    var componentInstance = componentAndParams.componentInstance; // Wire the component and call the init method with the correct params\n\n    var params = this.createFinalParams(definitionObject, propertyName, paramsFromGrid, componentAndParams.paramsFromSelector);\n    this.addReactHacks(params); // give caller chance to set any params that depend on the componentInstance (need here as the\n    // componentInstance was not available when createUserComponent was called)\n\n    var paramsAfterCallback = modifyParamsCallback ? modifyParamsCallback(params, componentInstance) : params;\n    var deferredInit = this.initComponent(componentInstance, paramsAfterCallback);\n\n    if (deferredInit == null) {\n      // const p = new Promise<A>(resolve => {\n      //     setTimeout( ()=> {\n      //         resolve(componentInstance);\n      //     }, 1000);\n      // });\n      // return p;\n      return utils_1.Promise.resolve(componentInstance);\n    } else {\n      var asPromise = deferredInit;\n      return asPromise.map(function (notRelevant) {\n        return componentInstance;\n      });\n    }\n  };\n\n  UserComponentFactory.prototype.addReactHacks = function (params) {\n    // a temporary fix for AG-1574\n    // AG-1715 raised to do a wider ranging refactor to improve this\n    var agGridReact = this.context.getBean('agGridReact');\n\n    if (agGridReact) {\n      params.agGridReact = utils_1._.cloneObject(agGridReact);\n    } // AG-1716 - directly related to AG-1574 and AG-1715\n\n\n    var frameworkComponentWrapper = this.context.getBean('frameworkComponentWrapper');\n\n    if (frameworkComponentWrapper) {\n      params.frameworkComponentWrapper = frameworkComponentWrapper;\n    }\n  };\n  /**\n   * This method creates a component given everything needed to guess what sort of component needs to be instantiated\n   * It takes\n   *  @param clazz: The class to instantiate,\n   *  @param agGridParams: Params to be passed to the component and passed by ag-Grid. This will get merged with any params\n   *      specified by the user in the configuration\n   *  @param modifyParamsCallback: A chance to customise the params passed to the init method. It receives what the current\n   *  params are and the component that init is about to get called for\n   */\n\n\n  UserComponentFactory.prototype.createUserComponentFromConcreteClass = function (clazz, agGridParams) {\n    var internalComponent = new clazz();\n    this.initComponent(internalComponent, agGridParams);\n    return internalComponent;\n  };\n  /**\n   * This method returns the underlying representation of the component to be created. ie for Javascript the\n   * underlying function where we should be calling new into. In case of the frameworks, the framework class\n   * object that represents the component to be created.\n   *\n   * This method is handy for different reasons, for example if you want to check if a component has a particular\n   * method implemented without having to create the component, just by inspecting the source component\n   *\n   * It takes\n   *  @param definitionObject: This is the context for which this component needs to be created, it can be gridOptions\n   *      (global) or columnDef mostly.\n   *  @param propertyName: The name of the property used in ag-grid as a convention to refer to the component, it can be:\n   *      'floatingFilter', 'cellRenderer', is used to find if the user is specifying a custom component\n   *  @param params: Params to be passed to the dynamic component function in case it needs to be\n   *      invoked\n   *  @param defaultComponentName: The name of the component to load if there is no component specified\n   */\n\n\n  UserComponentFactory.prototype.lookupComponentClassDef = function (definitionObject, propertyName, params, defaultComponentName) {\n    if (params === void 0) {\n      params = null;\n    }\n    /**\n     * There are five things that can happen when resolving a component.\n     *  a) HardcodedFwComponent: That holder[propertyName]Framework has associated a Framework native component\n     *  b) HardcodedJsComponent: That holder[propertyName] has associate a JS component\n     *  c) hardcodedJsFunction: That holder[propertyName] has associate a JS function\n     *  d) hardcodedNameComponent: That holder[propertyName] has associate a string that represents a component to load\n     *  e) That none of the three previous are specified, then we need to use the DefaultRegisteredComponent\n     */\n\n\n    var hardcodedNameComponent = null;\n    var HardcodedJsComponent = null;\n    var hardcodedJsFunction = null;\n    var HardcodedFwComponent = null;\n    var componentSelectorFunc;\n\n    if (definitionObject != null) {\n      var componentPropertyValue = definitionObject[propertyName]; // for filters only, we allow 'true' for the component, which means default filter to be used\n\n      var usingDefaultComponent = componentPropertyValue === true;\n\n      if (componentPropertyValue != null && !usingDefaultComponent) {\n        if (typeof componentPropertyValue === 'string') {\n          hardcodedNameComponent = componentPropertyValue;\n        } else if (typeof componentPropertyValue === 'boolean') {// never happens, as we test for usingDefaultComponent above,\n          // however it's needed for the next block to compile\n        } else if (this.agComponentUtils.doesImplementIComponent(componentPropertyValue)) {\n          HardcodedJsComponent = componentPropertyValue;\n        } else {\n          hardcodedJsFunction = componentPropertyValue;\n        }\n      }\n\n      HardcodedFwComponent = definitionObject[propertyName + \"Framework\"];\n      componentSelectorFunc = definitionObject[propertyName + \"Selector\"];\n    }\n    /**\n     * Since we allow many types of flavors for specifying the components, let's make sure this is not an illegal\n     * combination\n     */\n\n\n    if (HardcodedJsComponent && HardcodedFwComponent || hardcodedNameComponent && HardcodedFwComponent || hardcodedJsFunction && HardcodedFwComponent) {\n      throw Error(\"ag-grid: you are trying to specify: \" + propertyName + \" twice as a component.\");\n    }\n\n    if (HardcodedFwComponent && !this.frameworkComponentWrapper) {\n      throw Error(\"ag-grid: you are specifying a framework component but you are not using a framework version of ag-grid for : \" + propertyName);\n    }\n\n    if (componentSelectorFunc && (hardcodedNameComponent || HardcodedJsComponent || hardcodedJsFunction || HardcodedFwComponent)) {\n      throw Error(\"ag-grid: you can't specify both, the selector and the component of ag-grid for : \" + propertyName);\n    }\n    /**\n     * At this stage we are guaranteed to either have,\n     * DEPRECATED\n     * - A unique HardcodedFwComponent\n     * - A unique HardcodedJsComponent\n     * - A unique hardcodedJsFunction\n     * BY NAME- FAVOURED APPROACH\n     * - A unique hardcodedNameComponent\n     * - None of the previous, hence we revert to: RegisteredComponent\n     */\n\n\n    if (HardcodedFwComponent) {\n      // console.warn(`ag-grid: Since version 12.1.0 specifying a component directly is deprecated, you should register the component by name`);\n      // console.warn(`${HardcodedFwComponent}`);\n      return {\n        componentFromFramework: true,\n        component: HardcodedFwComponent,\n        source: ComponentSource.HARDCODED,\n        paramsFromSelector: null\n      };\n    }\n\n    if (HardcodedJsComponent) {\n      // console.warn(`ag-grid: Since version 12.1.0 specifying a component directly is deprecated, you should register the component by name`);\n      // console.warn(`${HardcodedJsComponent}`);\n      return {\n        componentFromFramework: false,\n        component: HardcodedJsComponent,\n        source: ComponentSource.HARDCODED,\n        paramsFromSelector: null\n      };\n    }\n\n    if (hardcodedJsFunction) {\n      // console.warn(`ag-grid: Since version 12.1.0 specifying a function directly is deprecated, you should register the component by name`);\n      // console.warn(`${hardcodedJsFunction}`);\n      return this.agComponentUtils.adaptFunction(propertyName, hardcodedJsFunction, false, ComponentSource.HARDCODED);\n    }\n\n    var selectorResult = componentSelectorFunc ? componentSelectorFunc(params) : null;\n    var componentNameToUse;\n\n    if (selectorResult && selectorResult.component) {\n      componentNameToUse = selectorResult.component;\n    } else if (hardcodedNameComponent) {\n      componentNameToUse = hardcodedNameComponent;\n    } else {\n      componentNameToUse = defaultComponentName;\n    }\n\n    if (!componentNameToUse) {\n      return null;\n    }\n\n    var registeredCompClassDef = this.lookupFromRegisteredComponents(propertyName, componentNameToUse);\n    return {\n      componentFromFramework: registeredCompClassDef.componentFromFramework,\n      component: registeredCompClassDef.component,\n      source: registeredCompClassDef.source,\n      paramsFromSelector: selectorResult ? selectorResult.params : null\n    };\n  };\n\n  UserComponentFactory.prototype.lookupFromRegisteredComponents = function (propertyName, componentNameOpt) {\n    var componentName = componentNameOpt != null ? componentNameOpt : propertyName;\n    var registeredComponent = this.userComponentRegistry.retrieve(componentName);\n\n    if (registeredComponent == null) {\n      return null;\n    } //If it is a FW it has to be registered as a component\n\n\n    if (registeredComponent.componentFromFramework) {\n      return {\n        component: registeredComponent.component,\n        componentFromFramework: true,\n        source: ComponentSource.REGISTERED_BY_NAME,\n        paramsFromSelector: null\n      };\n    } //If it is JS it may be a function or a component\n\n\n    if (this.agComponentUtils.doesImplementIComponent(registeredComponent.component)) {\n      return {\n        component: registeredComponent.component,\n        componentFromFramework: false,\n        source: registeredComponent.source == userComponentRegistry_1.RegisteredComponentSource.REGISTERED ? ComponentSource.REGISTERED_BY_NAME : ComponentSource.DEFAULT,\n        paramsFromSelector: null\n      };\n    } // This is a function\n\n\n    return this.agComponentUtils.adaptFunction(propertyName, registeredComponent.component, registeredComponent.componentFromFramework, registeredComponent.source == userComponentRegistry_1.RegisteredComponentSource.REGISTERED ? ComponentSource.REGISTERED_BY_NAME : ComponentSource.DEFAULT);\n  };\n  /**\n   * Useful to check what would be the resultant params for a given object\n   *  @param definitionObject: This is the context for which this component needs to be created, it can be gridOptions\n   *      (global) or columnDef mostly.\n   *  @param propertyName: The name of the property used in ag-grid as a convention to refer to the component, it can be:\n   *      'floatingFilter', 'cellRenderer', is used to find if the user is specifying a custom component\n   *  @param paramsFromGrid: Params to be passed to the component and passed by ag-Grid. This will get merged with any params\n   *      specified by the user in the configuration\n   * @returns {any} It merges the user agGridParams with the actual params specified by the user.\n   */\n\n\n  UserComponentFactory.prototype.createFinalParams = function (definitionObject, propertyName, paramsFromGrid, paramsFromSelector) {\n    if (paramsFromSelector === void 0) {\n      paramsFromSelector = null;\n    }\n\n    var res = {};\n\n    utils_1._.mergeDeep(res, paramsFromGrid);\n\n    var userParams = definitionObject ? definitionObject[propertyName + \"Params\"] : null;\n\n    if (userParams != null) {\n      if (typeof userParams === 'function') {\n        utils_1._.mergeDeep(res, userParams(paramsFromGrid));\n      } else if (typeof userParams === 'object') {\n        utils_1._.mergeDeep(res, userParams);\n      }\n    }\n\n    utils_1._.mergeDeep(res, paramsFromSelector);\n\n    return res;\n  };\n\n  UserComponentFactory.prototype.createComponentInstance = function (holder, propertyName, paramsForSelector, defaultComponentName, optional) {\n    var componentToUse = this.lookupComponentClassDef(holder, propertyName, paramsForSelector, defaultComponentName);\n    var missing = !componentToUse || !componentToUse.component;\n\n    if (missing) {\n      if (!optional) {\n        console.error(\"Error creating component \" + propertyName + \"=>\" + defaultComponentName);\n      }\n\n      return null;\n    }\n\n    var componentInstance;\n\n    if (componentToUse.componentFromFramework) {\n      // Using framework component\n      var FrameworkComponentRaw = componentToUse.component;\n      var thisComponentConfig = this.componentMetadataProvider.retrieve(propertyName);\n      componentInstance = this.frameworkComponentWrapper.wrap(FrameworkComponentRaw, thisComponentConfig.mandatoryMethodList, thisComponentConfig.optionalMethodList, defaultComponentName);\n    } else {\n      // Using plain JavaScript component\n      componentInstance = new componentToUse.component();\n    }\n\n    return {\n      componentInstance: componentInstance,\n      paramsFromSelector: componentToUse.paramsFromSelector\n    };\n  };\n\n  UserComponentFactory.prototype.initComponent = function (component, finalParams) {\n    this.context.wireBean(component);\n\n    if (component.init == null) {\n      return;\n    } else {\n      return component.init(finalParams);\n    }\n  };\n\n  __decorate([context_1.Autowired(\"gridOptions\"), __metadata(\"design:type\", Object)], UserComponentFactory.prototype, \"gridOptions\", void 0);\n\n  __decorate([context_1.Autowired(\"gridOptionsWrapper\"), __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)], UserComponentFactory.prototype, \"gridOptionsWrapper\", void 0);\n\n  __decorate([context_1.Autowired(\"context\"), __metadata(\"design:type\", context_1.Context)], UserComponentFactory.prototype, \"context\", void 0);\n\n  __decorate([context_1.Autowired(\"agComponentUtils\"), __metadata(\"design:type\", agComponentUtils_1.AgComponentUtils)], UserComponentFactory.prototype, \"agComponentUtils\", void 0);\n\n  __decorate([context_1.Autowired(\"componentMetadataProvider\"), __metadata(\"design:type\", componentMetadataProvider_1.ComponentMetadataProvider)], UserComponentFactory.prototype, \"componentMetadataProvider\", void 0);\n\n  __decorate([context_1.Autowired(\"userComponentRegistry\"), __metadata(\"design:type\", userComponentRegistry_1.UserComponentRegistry)], UserComponentFactory.prototype, \"userComponentRegistry\", void 0);\n\n  __decorate([context_1.Optional(\"frameworkComponentWrapper\"), __metadata(\"design:type\", Object)], UserComponentFactory.prototype, \"frameworkComponentWrapper\", void 0);\n\n  UserComponentFactory = __decorate([context_1.Bean('userComponentFactory')], UserComponentFactory);\n  return UserComponentFactory;\n}();\n\nexports.UserComponentFactory = UserComponentFactory;","map":{"version":3,"sources":["/Users/dirkmennecke77/Desktop/Lageplan/node_modules/ag-grid-community/dist/lib/components/framework/userComponentFactory.js"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__metadata","k","v","metadata","exports","value","context_1","require","gridOptionsWrapper_1","userComponentRegistry_1","agComponentUtils_1","componentMetadataProvider_1","utils_1","ComponentSource","UserComponentFactory","prototype","newDateComponent","params","createAndInitUserComponent","gridOptions","newHeaderComponent","column","getColDef","newHeaderGroupComponent","columnGroup","getColGroupDef","newFullWidthGroupRowInnerCellRenderer","newFullWidthCellRenderer","cellRendererType","cellRendererName","newCellRenderer","newPinnedRowCellRenderer","newCellEditor","colDef","newInnerCellRenderer","newLoadingOverlayComponent","newNoRowsOverlayComponent","newTooltipComponent","newFilterComponent","defaultFilter","modifyParamsCallback","newFloatingFilterComponent","defaultFloatingFilter","newToolPanelComponent","toolPanelDef","newStatusPanelComponent","def","definitionObject","paramsFromGrid","propertyName","defaultComponentName","optional","componentAndParams","createComponentInstance","componentInstance","createFinalParams","paramsFromSelector","addReactHacks","paramsAfterCallback","deferredInit","initComponent","Promise","resolve","asPromise","map","notRelevant","agGridReact","context","getBean","_","cloneObject","frameworkComponentWrapper","createUserComponentFromConcreteClass","clazz","agGridParams","internalComponent","lookupComponentClassDef","hardcodedNameComponent","HardcodedJsComponent","hardcodedJsFunction","HardcodedFwComponent","componentSelectorFunc","componentPropertyValue","usingDefaultComponent","agComponentUtils","doesImplementIComponent","Error","componentFromFramework","component","source","HARDCODED","adaptFunction","selectorResult","componentNameToUse","registeredCompClassDef","lookupFromRegisteredComponents","componentNameOpt","componentName","registeredComponent","userComponentRegistry","retrieve","REGISTERED_BY_NAME","RegisteredComponentSource","REGISTERED","DEFAULT","res","mergeDeep","userParams","holder","paramsForSelector","componentToUse","missing","console","error","FrameworkComponentRaw","thisComponentConfig","componentMetadataProvider","wrap","mandatoryMethodList","optionalMethodList","finalParams","wireBean","init","Autowired","GridOptionsWrapper","Context","AgComponentUtils","ComponentMetadataProvider","UserComponentRegistry","Optional","Bean"],"mappings":"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","sourcesContent":["/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.2.2\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar context_1 = require(\"../../context/context\");\nvar gridOptionsWrapper_1 = require(\"../../gridOptionsWrapper\");\nvar userComponentRegistry_1 = require(\"./userComponentRegistry\");\nvar agComponentUtils_1 = require(\"./agComponentUtils\");\nvar componentMetadataProvider_1 = require(\"./componentMetadataProvider\");\nvar utils_1 = require(\"../../utils\");\nvar ComponentSource;\n(function (ComponentSource) {\n    ComponentSource[ComponentSource[\"DEFAULT\"] = 0] = \"DEFAULT\";\n    ComponentSource[ComponentSource[\"REGISTERED_BY_NAME\"] = 1] = \"REGISTERED_BY_NAME\";\n    ComponentSource[ComponentSource[\"HARDCODED\"] = 2] = \"HARDCODED\";\n})(ComponentSource = exports.ComponentSource || (exports.ComponentSource = {}));\nvar UserComponentFactory = /** @class */ (function () {\n    function UserComponentFactory() {\n    }\n    UserComponentFactory.prototype.newDateComponent = function (params) {\n        return this.createAndInitUserComponent(this.gridOptions, params, \"dateComponent\", \"agDateInput\");\n    };\n    UserComponentFactory.prototype.newHeaderComponent = function (params) {\n        return this.createAndInitUserComponent(params.column.getColDef(), params, \"headerComponent\", \"agColumnHeader\");\n    };\n    UserComponentFactory.prototype.newHeaderGroupComponent = function (params) {\n        return this.createAndInitUserComponent(params.columnGroup.getColGroupDef(), params, \"headerGroupComponent\", \"agColumnGroupHeader\");\n    };\n    UserComponentFactory.prototype.newFullWidthGroupRowInnerCellRenderer = function (params) {\n        return this.createAndInitUserComponent(this.gridOptions, params, \"groupRowInnerRenderer\", null, true);\n    };\n    // this one is unusual, as it can be LoadingCellRenderer, DetailCellRenderer, FullWidthCellRenderer or GroupRowRenderer.\n    // so we have to pass the type in.\n    UserComponentFactory.prototype.newFullWidthCellRenderer = function (params, cellRendererType, cellRendererName) {\n        return this.createAndInitUserComponent(null, params, cellRendererType, cellRendererName);\n    };\n    UserComponentFactory.prototype.newCellRenderer = function (target, params) {\n        return this.createAndInitUserComponent(target, params, \"cellRenderer\", null, true);\n    };\n    UserComponentFactory.prototype.newPinnedRowCellRenderer = function (target, params) {\n        return this.createAndInitUserComponent(target, params, \"pinnedRowCellRenderer\", null, true);\n    };\n    UserComponentFactory.prototype.newCellEditor = function (colDef, params) {\n        return this.createAndInitUserComponent(colDef, params, 'cellEditor', 'agCellEditor');\n    };\n    UserComponentFactory.prototype.newInnerCellRenderer = function (target, params) {\n        return this.createAndInitUserComponent(target, params, \"innerRenderer\", null);\n    };\n    UserComponentFactory.prototype.newLoadingOverlayComponent = function (params) {\n        return this.createAndInitUserComponent(this.gridOptions, params, \"loadingOverlayComponent\", \"agLoadingOverlay\");\n    };\n    UserComponentFactory.prototype.newNoRowsOverlayComponent = function (params) {\n        return this.createAndInitUserComponent(this.gridOptions, params, \"noRowsOverlayComponent\", \"agNoRowsOverlay\");\n    };\n    UserComponentFactory.prototype.newTooltipComponent = function (params) {\n        var colDef = params.colDef;\n        return this.createAndInitUserComponent(colDef, params, \"tooltipComponent\", 'agTooltipComponent');\n    };\n    UserComponentFactory.prototype.newFilterComponent = function (colDef, params, defaultFilter, modifyParamsCallback) {\n        return this.createAndInitUserComponent(colDef, params, 'filter', defaultFilter, false, modifyParamsCallback);\n    };\n    UserComponentFactory.prototype.newFloatingFilterComponent = function (colDef, params, defaultFloatingFilter) {\n        return this.createAndInitUserComponent(colDef, params, \"floatingFilterComponent\", defaultFloatingFilter, true);\n    };\n    UserComponentFactory.prototype.newToolPanelComponent = function (toolPanelDef, params) {\n        return this.createAndInitUserComponent(toolPanelDef, params, 'toolPanel');\n    };\n    UserComponentFactory.prototype.newStatusPanelComponent = function (def, params) {\n        return this.createAndInitUserComponent(def, params, 'statusPanel');\n    };\n    /**\n     * This method creates a component given everything needed to guess what sort of component needs to be instantiated\n     * It takes\n     *  @param definitionObject: This is the context for which this component needs to be created, it can be gridOptions\n     *      (global) or columnDef mostly.\n     *  @param paramsFromGrid: Params to be passed to the component and passed by ag-Grid. This will get merged with any params\n     *      specified by the user in the configuration\n     *  @param propertyName: The name of the property used in ag-grid as a convention to refer to the component, it can be:\n     *      'floatingFilter', 'cellRenderer', is used to find if the user is specifying a custom component\n     *  @param defaultComponentName: The actual name of the component to instantiate, this is usually the same as propertyName, but in\n     *      some cases is not, like floatingFilter, if it is the same is not necessary to specify\n     *  @param optional: Handy method to tell if this should return a component ALWAYS. if that is the case, but there is no\n     *      component found, it throws an error, by default all components are MANDATORY\n     *  @param modifyParamsCallback: A chance to customise the params passed to the init method. It receives what the current\n     *  params are and the component that init is about to get called for\n     */\n    UserComponentFactory.prototype.createAndInitUserComponent = function (definitionObject, paramsFromGrid, propertyName, defaultComponentName, \n    // optional items are: FloatingFilter, CellComp (for cellRenderer)\n    optional, \n    // used by FilterManager only\n    modifyParamsCallback) {\n        if (optional === void 0) { optional = false; }\n        if (!definitionObject) {\n            definitionObject = this.gridOptions;\n        }\n        // Create the component instance\n        var componentAndParams = this.createComponentInstance(definitionObject, propertyName, paramsFromGrid, defaultComponentName, optional);\n        if (!componentAndParams) {\n            return null;\n        }\n        var componentInstance = componentAndParams.componentInstance;\n        // Wire the component and call the init method with the correct params\n        var params = this.createFinalParams(definitionObject, propertyName, paramsFromGrid, componentAndParams.paramsFromSelector);\n        this.addReactHacks(params);\n        // give caller chance to set any params that depend on the componentInstance (need here as the\n        // componentInstance was not available when createUserComponent was called)\n        var paramsAfterCallback = modifyParamsCallback ? modifyParamsCallback(params, componentInstance) : params;\n        var deferredInit = this.initComponent(componentInstance, paramsAfterCallback);\n        if (deferredInit == null) {\n            // const p = new Promise<A>(resolve => {\n            //     setTimeout( ()=> {\n            //         resolve(componentInstance);\n            //     }, 1000);\n            // });\n            // return p;\n            return utils_1.Promise.resolve(componentInstance);\n        }\n        else {\n            var asPromise = deferredInit;\n            return asPromise.map(function (notRelevant) { return componentInstance; });\n        }\n    };\n    UserComponentFactory.prototype.addReactHacks = function (params) {\n        // a temporary fix for AG-1574\n        // AG-1715 raised to do a wider ranging refactor to improve this\n        var agGridReact = this.context.getBean('agGridReact');\n        if (agGridReact) {\n            params.agGridReact = utils_1._.cloneObject(agGridReact);\n        }\n        // AG-1716 - directly related to AG-1574 and AG-1715\n        var frameworkComponentWrapper = this.context.getBean('frameworkComponentWrapper');\n        if (frameworkComponentWrapper) {\n            params.frameworkComponentWrapper = frameworkComponentWrapper;\n        }\n    };\n    /**\n     * This method creates a component given everything needed to guess what sort of component needs to be instantiated\n     * It takes\n     *  @param clazz: The class to instantiate,\n     *  @param agGridParams: Params to be passed to the component and passed by ag-Grid. This will get merged with any params\n     *      specified by the user in the configuration\n     *  @param modifyParamsCallback: A chance to customise the params passed to the init method. It receives what the current\n     *  params are and the component that init is about to get called for\n     */\n    UserComponentFactory.prototype.createUserComponentFromConcreteClass = function (clazz, agGridParams) {\n        var internalComponent = new clazz();\n        this.initComponent(internalComponent, agGridParams);\n        return internalComponent;\n    };\n    /**\n     * This method returns the underlying representation of the component to be created. ie for Javascript the\n     * underlying function where we should be calling new into. In case of the frameworks, the framework class\n     * object that represents the component to be created.\n     *\n     * This method is handy for different reasons, for example if you want to check if a component has a particular\n     * method implemented without having to create the component, just by inspecting the source component\n     *\n     * It takes\n     *  @param definitionObject: This is the context for which this component needs to be created, it can be gridOptions\n     *      (global) or columnDef mostly.\n     *  @param propertyName: The name of the property used in ag-grid as a convention to refer to the component, it can be:\n     *      'floatingFilter', 'cellRenderer', is used to find if the user is specifying a custom component\n     *  @param params: Params to be passed to the dynamic component function in case it needs to be\n     *      invoked\n     *  @param defaultComponentName: The name of the component to load if there is no component specified\n     */\n    UserComponentFactory.prototype.lookupComponentClassDef = function (definitionObject, propertyName, params, defaultComponentName) {\n        if (params === void 0) { params = null; }\n        /**\n         * There are five things that can happen when resolving a component.\n         *  a) HardcodedFwComponent: That holder[propertyName]Framework has associated a Framework native component\n         *  b) HardcodedJsComponent: That holder[propertyName] has associate a JS component\n         *  c) hardcodedJsFunction: That holder[propertyName] has associate a JS function\n         *  d) hardcodedNameComponent: That holder[propertyName] has associate a string that represents a component to load\n         *  e) That none of the three previous are specified, then we need to use the DefaultRegisteredComponent\n         */\n        var hardcodedNameComponent = null;\n        var HardcodedJsComponent = null;\n        var hardcodedJsFunction = null;\n        var HardcodedFwComponent = null;\n        var componentSelectorFunc;\n        if (definitionObject != null) {\n            var componentPropertyValue = definitionObject[propertyName];\n            // for filters only, we allow 'true' for the component, which means default filter to be used\n            var usingDefaultComponent = componentPropertyValue === true;\n            if (componentPropertyValue != null && !usingDefaultComponent) {\n                if (typeof componentPropertyValue === 'string') {\n                    hardcodedNameComponent = componentPropertyValue;\n                }\n                else if (typeof componentPropertyValue === 'boolean') {\n                    // never happens, as we test for usingDefaultComponent above,\n                    // however it's needed for the next block to compile\n                }\n                else if (this.agComponentUtils.doesImplementIComponent(componentPropertyValue)) {\n                    HardcodedJsComponent = componentPropertyValue;\n                }\n                else {\n                    hardcodedJsFunction = componentPropertyValue;\n                }\n            }\n            HardcodedFwComponent = definitionObject[propertyName + \"Framework\"];\n            componentSelectorFunc = definitionObject[propertyName + \"Selector\"];\n        }\n        /**\n         * Since we allow many types of flavors for specifying the components, let's make sure this is not an illegal\n         * combination\n         */\n        if ((HardcodedJsComponent && HardcodedFwComponent) ||\n            (hardcodedNameComponent && HardcodedFwComponent) ||\n            (hardcodedJsFunction && HardcodedFwComponent)) {\n            throw Error(\"ag-grid: you are trying to specify: \" + propertyName + \" twice as a component.\");\n        }\n        if (HardcodedFwComponent && !this.frameworkComponentWrapper) {\n            throw Error(\"ag-grid: you are specifying a framework component but you are not using a framework version of ag-grid for : \" + propertyName);\n        }\n        if (componentSelectorFunc && (hardcodedNameComponent || HardcodedJsComponent || hardcodedJsFunction || HardcodedFwComponent)) {\n            throw Error(\"ag-grid: you can't specify both, the selector and the component of ag-grid for : \" + propertyName);\n        }\n        /**\n         * At this stage we are guaranteed to either have,\n         * DEPRECATED\n         * - A unique HardcodedFwComponent\n         * - A unique HardcodedJsComponent\n         * - A unique hardcodedJsFunction\n         * BY NAME- FAVOURED APPROACH\n         * - A unique hardcodedNameComponent\n         * - None of the previous, hence we revert to: RegisteredComponent\n         */\n        if (HardcodedFwComponent) {\n            // console.warn(`ag-grid: Since version 12.1.0 specifying a component directly is deprecated, you should register the component by name`);\n            // console.warn(`${HardcodedFwComponent}`);\n            return {\n                componentFromFramework: true,\n                component: HardcodedFwComponent,\n                source: ComponentSource.HARDCODED,\n                paramsFromSelector: null\n            };\n        }\n        if (HardcodedJsComponent) {\n            // console.warn(`ag-grid: Since version 12.1.0 specifying a component directly is deprecated, you should register the component by name`);\n            // console.warn(`${HardcodedJsComponent}`);\n            return {\n                componentFromFramework: false,\n                component: HardcodedJsComponent,\n                source: ComponentSource.HARDCODED,\n                paramsFromSelector: null\n            };\n        }\n        if (hardcodedJsFunction) {\n            // console.warn(`ag-grid: Since version 12.1.0 specifying a function directly is deprecated, you should register the component by name`);\n            // console.warn(`${hardcodedJsFunction}`);\n            return this.agComponentUtils.adaptFunction(propertyName, hardcodedJsFunction, false, ComponentSource.HARDCODED);\n        }\n        var selectorResult = componentSelectorFunc ? componentSelectorFunc(params) : null;\n        var componentNameToUse;\n        if (selectorResult && selectorResult.component) {\n            componentNameToUse = selectorResult.component;\n        }\n        else if (hardcodedNameComponent) {\n            componentNameToUse = hardcodedNameComponent;\n        }\n        else {\n            componentNameToUse = defaultComponentName;\n        }\n        if (!componentNameToUse) {\n            return null;\n        }\n        var registeredCompClassDef = this.lookupFromRegisteredComponents(propertyName, componentNameToUse);\n        return {\n            componentFromFramework: registeredCompClassDef.componentFromFramework,\n            component: registeredCompClassDef.component,\n            source: registeredCompClassDef.source,\n            paramsFromSelector: selectorResult ? selectorResult.params : null\n        };\n    };\n    UserComponentFactory.prototype.lookupFromRegisteredComponents = function (propertyName, componentNameOpt) {\n        var componentName = componentNameOpt != null ? componentNameOpt : propertyName;\n        var registeredComponent = this.userComponentRegistry.retrieve(componentName);\n        if (registeredComponent == null) {\n            return null;\n        }\n        //If it is a FW it has to be registered as a component\n        if (registeredComponent.componentFromFramework) {\n            return {\n                component: registeredComponent.component,\n                componentFromFramework: true,\n                source: ComponentSource.REGISTERED_BY_NAME,\n                paramsFromSelector: null\n            };\n        }\n        //If it is JS it may be a function or a component\n        if (this.agComponentUtils.doesImplementIComponent(registeredComponent.component)) {\n            return {\n                component: registeredComponent.component,\n                componentFromFramework: false,\n                source: (registeredComponent.source == userComponentRegistry_1.RegisteredComponentSource.REGISTERED) ? ComponentSource.REGISTERED_BY_NAME : ComponentSource.DEFAULT,\n                paramsFromSelector: null\n            };\n        }\n        // This is a function\n        return this.agComponentUtils.adaptFunction(propertyName, registeredComponent.component, registeredComponent.componentFromFramework, (registeredComponent.source == userComponentRegistry_1.RegisteredComponentSource.REGISTERED) ? ComponentSource.REGISTERED_BY_NAME : ComponentSource.DEFAULT);\n    };\n    /**\n     * Useful to check what would be the resultant params for a given object\n     *  @param definitionObject: This is the context for which this component needs to be created, it can be gridOptions\n     *      (global) or columnDef mostly.\n     *  @param propertyName: The name of the property used in ag-grid as a convention to refer to the component, it can be:\n     *      'floatingFilter', 'cellRenderer', is used to find if the user is specifying a custom component\n     *  @param paramsFromGrid: Params to be passed to the component and passed by ag-Grid. This will get merged with any params\n     *      specified by the user in the configuration\n     * @returns {any} It merges the user agGridParams with the actual params specified by the user.\n     */\n    UserComponentFactory.prototype.createFinalParams = function (definitionObject, propertyName, paramsFromGrid, paramsFromSelector) {\n        if (paramsFromSelector === void 0) { paramsFromSelector = null; }\n        var res = {};\n        utils_1._.mergeDeep(res, paramsFromGrid);\n        var userParams = definitionObject ? definitionObject[propertyName + \"Params\"] : null;\n        if (userParams != null) {\n            if (typeof userParams === 'function') {\n                utils_1._.mergeDeep(res, userParams(paramsFromGrid));\n            }\n            else if (typeof userParams === 'object') {\n                utils_1._.mergeDeep(res, userParams);\n            }\n        }\n        utils_1._.mergeDeep(res, paramsFromSelector);\n        return res;\n    };\n    UserComponentFactory.prototype.createComponentInstance = function (holder, propertyName, paramsForSelector, defaultComponentName, optional) {\n        var componentToUse = this.lookupComponentClassDef(holder, propertyName, paramsForSelector, defaultComponentName);\n        var missing = !componentToUse || !componentToUse.component;\n        if (missing) {\n            if (!optional) {\n                console.error(\"Error creating component \" + propertyName + \"=>\" + defaultComponentName);\n            }\n            return null;\n        }\n        var componentInstance;\n        if (componentToUse.componentFromFramework) {\n            // Using framework component\n            var FrameworkComponentRaw = componentToUse.component;\n            var thisComponentConfig = this.componentMetadataProvider.retrieve(propertyName);\n            componentInstance = this.frameworkComponentWrapper.wrap(FrameworkComponentRaw, thisComponentConfig.mandatoryMethodList, thisComponentConfig.optionalMethodList, defaultComponentName);\n        }\n        else {\n            // Using plain JavaScript component\n            componentInstance = new componentToUse.component();\n        }\n        return { componentInstance: componentInstance, paramsFromSelector: componentToUse.paramsFromSelector };\n    };\n    UserComponentFactory.prototype.initComponent = function (component, finalParams) {\n        this.context.wireBean(component);\n        if (component.init == null) {\n            return;\n        }\n        else {\n            return component.init(finalParams);\n        }\n    };\n    __decorate([\n        context_1.Autowired(\"gridOptions\"),\n        __metadata(\"design:type\", Object)\n    ], UserComponentFactory.prototype, \"gridOptions\", void 0);\n    __decorate([\n        context_1.Autowired(\"gridOptionsWrapper\"),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], UserComponentFactory.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_1.Autowired(\"context\"),\n        __metadata(\"design:type\", context_1.Context)\n    ], UserComponentFactory.prototype, \"context\", void 0);\n    __decorate([\n        context_1.Autowired(\"agComponentUtils\"),\n        __metadata(\"design:type\", agComponentUtils_1.AgComponentUtils)\n    ], UserComponentFactory.prototype, \"agComponentUtils\", void 0);\n    __decorate([\n        context_1.Autowired(\"componentMetadataProvider\"),\n        __metadata(\"design:type\", componentMetadataProvider_1.ComponentMetadataProvider)\n    ], UserComponentFactory.prototype, \"componentMetadataProvider\", void 0);\n    __decorate([\n        context_1.Autowired(\"userComponentRegistry\"),\n        __metadata(\"design:type\", userComponentRegistry_1.UserComponentRegistry)\n    ], UserComponentFactory.prototype, \"userComponentRegistry\", void 0);\n    __decorate([\n        context_1.Optional(\"frameworkComponentWrapper\"),\n        __metadata(\"design:type\", Object)\n    ], UserComponentFactory.prototype, \"frameworkComponentWrapper\", void 0);\n    UserComponentFactory = __decorate([\n        context_1.Bean('userComponentFactory')\n    ], UserComponentFactory);\n    return UserComponentFactory;\n}());\nexports.UserComponentFactory = UserComponentFactory;\n"]},"metadata":{},"sourceType":"script"}