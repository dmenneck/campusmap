{"ast":null,"code":"/**\n * @module ol/interaction/DragZoom\n */\nimport { easeOut } from '../easing.js';\nimport { shiftKeyOnly } from '../events/condition.js';\nimport { createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter } from '../extent.js';\nimport DragBox from './DragBox.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\n\nvar DragZoom =\n/*@__PURE__*/\nfunction (DragBox) {\n  function DragZoom(opt_options) {\n    var options = opt_options ? opt_options : {};\n    var condition = options.condition ? options.condition : shiftKeyOnly;\n    DragBox.call(this, {\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      onBoxEnd: onBoxEnd\n    });\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  if (DragBox) DragZoom.__proto__ = DragBox;\n  DragZoom.prototype = Object.create(DragBox && DragBox.prototype);\n  DragZoom.prototype.constructor = DragZoom;\n  return DragZoom;\n}(DragBox);\n/**\n * @this {DragZoom}\n */\n\n\nfunction onBoxEnd() {\n  var map = this.getMap();\n  var view =\n  /** @type {!import(\"../View.js\").default} */\n  map.getView();\n  var size =\n  /** @type {!import(\"../size.js\").Size} */\n  map.getSize();\n  var extent = this.getGeometry().getExtent();\n\n  if (this.out_) {\n    var mapExtent = view.calculateExtent(size);\n    var boxPixelExtent = createOrUpdateFromCoordinates([map.getPixelFromCoordinate(getBottomLeft(extent)), map.getPixelFromCoordinate(getTopRight(extent))]);\n    var factor = view.getResolutionForExtent(boxPixelExtent, size);\n    scaleFromCenter(mapExtent, 1 / factor);\n    extent = mapExtent;\n  }\n\n  var resolution = view.constrainResolution(view.getResolutionForExtent(extent, size));\n  var center = getCenter(extent);\n  center = view.constrainCenter(center);\n  view.animate({\n    resolution: resolution,\n    center: center,\n    duration: this.duration_,\n    easing: easeOut\n  });\n}\n\nexport default DragZoom;","map":{"version":3,"sources":["../../../src/ol/interaction/DragZoom.js"],"names":["const","super","let"],"mappings":"AAAA;;;AAGA,SAAQ,OAAR,QAAsB,cAAtB;AACA,SAAQ,YAAR,QAA2B,wBAA3B;AACA,SAAQ,6BAAR,EAAuC,aAAvC,EAAsD,SAAtD,EAAiE,WAAjE,EAA8E,eAA9E,QAAoG,cAApG;AACA,OAAO,OAAP,MAAoB,cAApB;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,IAAM,QAAQ;AAAgB;AAAA,UAAA,OAAA,EAAA;AAI5B,WAAA,QAAA,CAAY,WAAZ,EAAyB;AACvBA,QAAM,OAAO,GAAG,WAAW,GAAG,WAAH,GAAiB,EAA5CA;AAEAA,QAAM,SAAS,GAAG,OAAO,CAAC,SAAR,GAAoB,OAAO,CAAC,SAA5B,GAAwC,YAA1DA;AAEAC,IAAAA,OAAAA,CAAAA,IAAAA,CAAK,IAALA,EAAM;AACJ,MAAA,SAAS,EAAE,SADP;AAEJ,MAAA,SAAS,EAAE,OAAO,CAAC,SAAR,IAAqB,aAF5B;AAGJ,MAAA,QAAQ,EAAE;AAHN,KAANA;;;;;;AAUA,SAAK,SAAL,GAAiB,OAAO,CAAC,QAAR,KAAqB,SAArB,GAAiC,OAAO,CAAC,QAAzC,GAAoD,GAArE;;;;;;AAMA,SAAK,IAAL,GAAY,OAAO,CAAC,GAAR,KAAgB,SAAhB,GAA4B,OAAO,CAAC,GAApC,GAA0C,KAAtD;;;;;AACD,EAAA,QAAA,CAAA,SAAA,CAAA,WAAA,GAAA,QAAA;;CA1B2B,CAAP,OAAO,CAA9B;;;;;;AAiCA,SAAS,QAAT,GAAoB;AAClBD,MAAM,GAAG,GAAG,KAAK,MAAL,EAAZA;AACAA,MAAM,IAAI;AAAA;AAAiD,EAAA,GAAG,CAAC,OAAJ,EAA3DA;AACAA,MAAM,IAAI;AAAA;AAA8C,EAAA,GAAG,CAAC,OAAJ,EAAxDA;AACAE,MAAI,MAAM,GAAG,KAAK,WAAL,GAAmB,SAAnB,EAAbA;;AAEA,MAAI,KAAK,IAAT,EAAe;AACbF,QAAM,SAAS,GAAG,IAAI,CAAC,eAAL,CAAqB,IAArB,CAAlBA;AACAA,QAAM,cAAc,GAAG,6BAA6B,CAAC,CACnD,GAAG,CAAC,sBAAJ,CAA2B,aAAa,CAAC,MAAD,CAAxC,CADmD,EAEnD,GAAG,CAAC,sBAAJ,CAA2B,WAAW,CAAC,MAAD,CAAtC,CAFmD,CAAD,CAApDA;AAGAA,QAAM,MAAM,GAAG,IAAI,CAAC,sBAAL,CAA4B,cAA5B,EAA4C,IAA5C,CAAfA;AAEA,IAAA,eAAe,CAAC,SAAD,EAAY,IAAI,MAAhB,CAAf;AACA,IAAA,MAAM,GAAG,SAAT;AACD;;AAEDA,MAAM,UAAU,GAAG,IAAI,CAAC,mBAAL,CACjB,IAAI,CAAC,sBAAL,CAA4B,MAA5B,EAAoC,IAApC,CADiB,CAAnBA;AAGAE,MAAI,MAAM,GAAG,SAAS,CAAC,MAAD,CAAtBA;AACA,EAAA,MAAM,GAAG,IAAI,CAAC,eAAL,CAAqB,MAArB,CAAT;AAEA,EAAA,IAAI,CAAC,OAAL,CAAa;AACX,IAAA,UAAU,EAAE,UADD;AAEX,IAAA,MAAM,EAAE,MAFG;AAGX,IAAA,QAAQ,EAAE,KAAK,SAHJ;AAIX,IAAA,MAAM,EAAE;AAJG,GAAb;AAMD;;AAGD,eAAe,QAAf","sourcesContent":["/**\n * @module ol/interaction/DragZoom\n */\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\nimport {createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter} from '../extent.js';\nimport DragBox from './DragBox.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      onBoxEnd: onBoxEnd\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n}\n\n\n/**\n * @this {DragZoom}\n */\nfunction onBoxEnd() {\n  const map = this.getMap();\n  const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n  const size = /** @type {!import(\"../size.js\").Size} */ (map.getSize());\n  let extent = this.getGeometry().getExtent();\n\n  if (this.out_) {\n    const mapExtent = view.calculateExtent(size);\n    const boxPixelExtent = createOrUpdateFromCoordinates([\n      map.getPixelFromCoordinate(getBottomLeft(extent)),\n      map.getPixelFromCoordinate(getTopRight(extent))]);\n    const factor = view.getResolutionForExtent(boxPixelExtent, size);\n\n    scaleFromCenter(mapExtent, 1 / factor);\n    extent = mapExtent;\n  }\n\n  const resolution = view.constrainResolution(\n    view.getResolutionForExtent(extent, size));\n\n  let center = getCenter(extent);\n  center = view.constrainCenter(center);\n\n  view.animate({\n    resolution: resolution,\n    center: center,\n    duration: this.duration_,\n    easing: easeOut\n  });\n}\n\n\nexport default DragZoom;\n"]},"metadata":{},"sourceType":"module"}