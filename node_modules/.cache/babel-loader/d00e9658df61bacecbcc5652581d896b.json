{"ast":null,"code":"/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.2.2\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar beanStub_1 = require(\"../context/beanStub\");\n\nvar context_1 = require(\"../context/context\");\n\nvar eventService_1 = require(\"../eventService\");\n\nvar eventKeys_1 = require(\"../eventKeys\");\n\nvar gridOptionsWrapper_1 = require(\"../gridOptionsWrapper\");\n\nvar utils_1 = require(\"../utils\");\n/**\n * This class solves the 'max height' problem, where the user might want to show more data than\n * the max div height actually allows.\n */\n\n\nvar MaxDivHeightScaler =\n/** @class */\nfunction (_super) {\n  __extends(MaxDivHeightScaler, _super);\n\n  function MaxDivHeightScaler() {\n    var _this = _super !== null && _super.apply(this, arguments) || this; // the scrollY position\n\n\n    _this.scrollY = 0; // how tall the body is\n\n    _this.uiBodyHeight = 0;\n    return _this;\n  }\n\n  MaxDivHeightScaler.prototype.postConstruct = function () {\n    this.addDestroyableEventListener(this.eventService, eventKeys_1.Events.EVENT_BODY_HEIGHT_CHANGED, this.updateOffset.bind(this));\n    this.scrollBarWidth = this.gridOptionsWrapper.getScrollbarWidth();\n    this.maxDivHeight = utils_1._.getMaxDivHeight();\n  };\n\n  MaxDivHeightScaler.prototype.registerGridComp = function (gridPanel) {\n    this.gridPanel = gridPanel;\n  };\n\n  MaxDivHeightScaler.prototype.isScaling = function () {\n    return this.scaling;\n  };\n\n  MaxDivHeightScaler.prototype.getOffset = function () {\n    return this.offset;\n  };\n\n  MaxDivHeightScaler.prototype.updateOffset = function () {\n    if (!this.scaling) {\n      return;\n    }\n\n    var newScrollY = this.gridPanel.getVScrollPosition().top;\n    var newBodyHeight = this.getUiBodyHeight();\n    var atLeastOneChanged = newScrollY !== this.scrollY || newBodyHeight !== this.uiBodyHeight;\n\n    if (atLeastOneChanged) {\n      this.scrollY = newScrollY;\n      this.uiBodyHeight = newBodyHeight;\n      this.calculateOffset();\n    }\n  };\n\n  MaxDivHeightScaler.prototype.calculateOffset = function () {\n    this.uiContainerHeight = this.maxDivHeight;\n    this.pixelsToShave = this.modelHeight - this.uiContainerHeight;\n    this.maxScrollY = this.uiContainerHeight - this.uiBodyHeight;\n    var scrollPercent = this.scrollY / this.maxScrollY;\n    this.setOffset(scrollPercent * this.pixelsToShave);\n  };\n\n  MaxDivHeightScaler.prototype.clearOffset = function () {\n    this.uiContainerHeight = this.modelHeight;\n    this.pixelsToShave = 0;\n    this.setOffset(0);\n  };\n\n  MaxDivHeightScaler.prototype.setOffset = function (newOffset) {\n    // because we are talking pixels, no point in confusing things with half numbers\n    var newOffsetFloor = typeof newOffset === 'number' ? Math.floor(newOffset) : null;\n\n    if (this.offset === newOffsetFloor) {\n      return;\n    }\n\n    this.offset = newOffsetFloor;\n    this.eventService.dispatchEvent({\n      type: eventKeys_1.Events.EVENT_HEIGHT_SCALE_CHANGED\n    });\n  };\n\n  MaxDivHeightScaler.prototype.setModelHeight = function (modelHeight) {\n    this.modelHeight = modelHeight;\n    this.scaling = this.maxDivHeight > 0 && modelHeight > this.maxDivHeight;\n\n    if (this.scaling) {\n      this.calculateOffset();\n    } else {\n      this.clearOffset();\n    }\n  };\n\n  MaxDivHeightScaler.prototype.getUiContainerHeight = function () {\n    return this.uiContainerHeight;\n  };\n\n  MaxDivHeightScaler.prototype.getRealPixelPosition = function (modelPixel) {\n    return modelPixel - this.offset;\n  };\n\n  MaxDivHeightScaler.prototype.getUiBodyHeight = function () {\n    var pos = this.gridPanel.getVScrollPosition();\n    return pos.bottom - pos.top;\n  };\n\n  MaxDivHeightScaler.prototype.getScrollPositionForPixel = function (rowTop) {\n    if (this.pixelsToShave <= 0) {\n      return rowTop;\n    }\n\n    var modelMaxScroll = this.modelHeight - this.getUiBodyHeight();\n    var scrollPercent = rowTop / modelMaxScroll;\n    var scrollPixel = this.maxScrollY * scrollPercent;\n    return scrollPixel;\n  };\n\n  __decorate([context_1.Autowired('eventService'), __metadata(\"design:type\", eventService_1.EventService)], MaxDivHeightScaler.prototype, \"eventService\", void 0);\n\n  __decorate([context_1.Autowired('gridOptionsWrapper'), __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)], MaxDivHeightScaler.prototype, \"gridOptionsWrapper\", void 0);\n\n  __decorate([context_1.PostConstruct, __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", []), __metadata(\"design:returntype\", void 0)], MaxDivHeightScaler.prototype, \"postConstruct\", null);\n\n  MaxDivHeightScaler = __decorate([context_1.Bean('maxDivHeightScaler')], MaxDivHeightScaler);\n  return MaxDivHeightScaler;\n}(beanStub_1.BeanStub);\n\nexports.MaxDivHeightScaler = MaxDivHeightScaler;","map":{"version":3,"sources":["/Users/dirkmennecke77/Desktop/Lageplan/node_modules/ag-grid-community/dist/lib/rendering/maxDivHeightScaler.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","k","v","metadata","exports","value","beanStub_1","require","context_1","eventService_1","eventKeys_1","gridOptionsWrapper_1","utils_1","MaxDivHeightScaler","_super","_this","apply","scrollY","uiBodyHeight","postConstruct","addDestroyableEventListener","eventService","Events","EVENT_BODY_HEIGHT_CHANGED","updateOffset","bind","scrollBarWidth","gridOptionsWrapper","getScrollbarWidth","maxDivHeight","_","getMaxDivHeight","registerGridComp","gridPanel","isScaling","scaling","getOffset","offset","newScrollY","getVScrollPosition","top","newBodyHeight","getUiBodyHeight","atLeastOneChanged","calculateOffset","uiContainerHeight","pixelsToShave","modelHeight","maxScrollY","scrollPercent","setOffset","clearOffset","newOffset","newOffsetFloor","Math","floor","dispatchEvent","type","EVENT_HEIGHT_SCALE_CHANGED","setModelHeight","getUiContainerHeight","getRealPixelPosition","modelPixel","pos","bottom","getScrollPositionForPixel","rowTop","modelMaxScroll","scrollPixel","Autowired","EventService","GridOptionsWrapper","PostConstruct","Function","Bean","BeanStub"],"mappings":"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","sourcesContent":["/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.2.2\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar beanStub_1 = require(\"../context/beanStub\");\nvar context_1 = require(\"../context/context\");\nvar eventService_1 = require(\"../eventService\");\nvar eventKeys_1 = require(\"../eventKeys\");\nvar gridOptionsWrapper_1 = require(\"../gridOptionsWrapper\");\nvar utils_1 = require(\"../utils\");\n/**\n * This class solves the 'max height' problem, where the user might want to show more data than\n * the max div height actually allows.\n */\nvar MaxDivHeightScaler = /** @class */ (function (_super) {\n    __extends(MaxDivHeightScaler, _super);\n    function MaxDivHeightScaler() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        // the scrollY position\n        _this.scrollY = 0;\n        // how tall the body is\n        _this.uiBodyHeight = 0;\n        return _this;\n    }\n    MaxDivHeightScaler.prototype.postConstruct = function () {\n        this.addDestroyableEventListener(this.eventService, eventKeys_1.Events.EVENT_BODY_HEIGHT_CHANGED, this.updateOffset.bind(this));\n        this.scrollBarWidth = this.gridOptionsWrapper.getScrollbarWidth();\n        this.maxDivHeight = utils_1._.getMaxDivHeight();\n    };\n    MaxDivHeightScaler.prototype.registerGridComp = function (gridPanel) {\n        this.gridPanel = gridPanel;\n    };\n    MaxDivHeightScaler.prototype.isScaling = function () {\n        return this.scaling;\n    };\n    MaxDivHeightScaler.prototype.getOffset = function () {\n        return this.offset;\n    };\n    MaxDivHeightScaler.prototype.updateOffset = function () {\n        if (!this.scaling) {\n            return;\n        }\n        var newScrollY = this.gridPanel.getVScrollPosition().top;\n        var newBodyHeight = this.getUiBodyHeight();\n        var atLeastOneChanged = newScrollY !== this.scrollY || newBodyHeight !== this.uiBodyHeight;\n        if (atLeastOneChanged) {\n            this.scrollY = newScrollY;\n            this.uiBodyHeight = newBodyHeight;\n            this.calculateOffset();\n        }\n    };\n    MaxDivHeightScaler.prototype.calculateOffset = function () {\n        this.uiContainerHeight = this.maxDivHeight;\n        this.pixelsToShave = this.modelHeight - this.uiContainerHeight;\n        this.maxScrollY = this.uiContainerHeight - this.uiBodyHeight;\n        var scrollPercent = this.scrollY / this.maxScrollY;\n        this.setOffset(scrollPercent * this.pixelsToShave);\n    };\n    MaxDivHeightScaler.prototype.clearOffset = function () {\n        this.uiContainerHeight = this.modelHeight;\n        this.pixelsToShave = 0;\n        this.setOffset(0);\n    };\n    MaxDivHeightScaler.prototype.setOffset = function (newOffset) {\n        // because we are talking pixels, no point in confusing things with half numbers\n        var newOffsetFloor = typeof newOffset === 'number' ? Math.floor(newOffset) : null;\n        if (this.offset === newOffsetFloor) {\n            return;\n        }\n        this.offset = newOffsetFloor;\n        this.eventService.dispatchEvent({ type: eventKeys_1.Events.EVENT_HEIGHT_SCALE_CHANGED });\n    };\n    MaxDivHeightScaler.prototype.setModelHeight = function (modelHeight) {\n        this.modelHeight = modelHeight;\n        this.scaling = this.maxDivHeight > 0 && modelHeight > this.maxDivHeight;\n        if (this.scaling) {\n            this.calculateOffset();\n        }\n        else {\n            this.clearOffset();\n        }\n    };\n    MaxDivHeightScaler.prototype.getUiContainerHeight = function () {\n        return this.uiContainerHeight;\n    };\n    MaxDivHeightScaler.prototype.getRealPixelPosition = function (modelPixel) {\n        return modelPixel - this.offset;\n    };\n    MaxDivHeightScaler.prototype.getUiBodyHeight = function () {\n        var pos = this.gridPanel.getVScrollPosition();\n        return pos.bottom - pos.top;\n    };\n    MaxDivHeightScaler.prototype.getScrollPositionForPixel = function (rowTop) {\n        if (this.pixelsToShave <= 0) {\n            return rowTop;\n        }\n        var modelMaxScroll = this.modelHeight - this.getUiBodyHeight();\n        var scrollPercent = rowTop / modelMaxScroll;\n        var scrollPixel = this.maxScrollY * scrollPercent;\n        return scrollPixel;\n    };\n    __decorate([\n        context_1.Autowired('eventService'),\n        __metadata(\"design:type\", eventService_1.EventService)\n    ], MaxDivHeightScaler.prototype, \"eventService\", void 0);\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], MaxDivHeightScaler.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], MaxDivHeightScaler.prototype, \"postConstruct\", null);\n    MaxDivHeightScaler = __decorate([\n        context_1.Bean('maxDivHeightScaler')\n    ], MaxDivHeightScaler);\n    return MaxDivHeightScaler;\n}(beanStub_1.BeanStub));\nexports.MaxDivHeightScaler = MaxDivHeightScaler;\n"]},"metadata":{},"sourceType":"script"}