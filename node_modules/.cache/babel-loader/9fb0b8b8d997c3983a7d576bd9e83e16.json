{"ast":null,"code":"/**\n * @module ol/format/filter/LogicalNary\n */\nimport { inherits } from '../../util.js';\nimport { assert } from '../../asserts.js';\nimport Filter from '../filter/Filter.js';\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature n-ary logical filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {...module:ol/format/filter/Filter} conditions Conditions.\n * @extends {module:ol/format/filter/Filter}\n */\n\nconst LogicalNary = function (tagName, conditions) {\n  Filter.call(this, tagName);\n  /**\n   * @type {Array.<module:ol/format/filter/Filter>}\n   */\n\n  this.conditions = Array.prototype.slice.call(arguments, 1);\n  assert(this.conditions.length >= 2, 57); // At least 2 conditions are required.\n};\n\ninherits(LogicalNary, Filter);\nexport default LogicalNary;","map":null,"metadata":{},"sourceType":"module"}