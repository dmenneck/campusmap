{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.WfsSearch = void 0;\n\nrequire(\"antd/es/spin/style\");\n\nvar _spin = _interopRequireDefault(require(\"antd/es/spin\"));\n\nrequire(\"antd/es/auto-complete/style\");\n\nvar _autoComplete = _interopRequireDefault(require(\"antd/es/auto-complete\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _Map = _interopRequireDefault(require(\"ol/Map\"));\n\nvar _GeoJSON = _interopRequireDefault(require(\"ol/format/GeoJSON\"));\n\nvar _isFunction = _interopRequireDefault(require(\"lodash/isFunction\"));\n\nvar _debounce = _interopRequireDefault(require(\"lodash/debounce\"));\n\nvar _Logger = _interopRequireDefault(require(\"@terrestris/base-util/dist/Logger\"));\n\nvar _WfsFilterUtil = _interopRequireDefault(require(\"@terrestris/ol-util/dist/WfsFilterUtil/WfsFilterUtil\"));\n\nvar _constants = require(\"../../constants\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    if (i % 2) {\n      var source = arguments[i] != null ? arguments[i] : {};\n      var ownKeys = Object.keys(source);\n\n      if (typeof Object.getOwnPropertySymbols === 'function') {\n        ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n          return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n        }));\n      }\n\n      ownKeys.forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(arguments[i]));\n    }\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar Option = _autoComplete[\"default\"].Option;\n/**\n * The WfsSearch field.\n * Implements an input field to do a WFS-GetFeature request.\n *\n * The GetFeature request is created with `ol.format.WFS.writeGetFeature`\n * so most of the WFS specific options work like document in the corresponding\n * API-docs: https://openlayers.org/en/latest/apidoc/module-ol_format_WFS.html\n *\n * @class WfsSearch\n * @extends React.Component\n */\n\nvar WfsSearch =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(WfsSearch, _React$Component);\n  /**\n   * The className added to this component.\n   * @type {String}\n   * @private\n   */\n\n\n  function WfsSearch(props) {\n    var _this;\n\n    _classCallCheck(this, WfsSearch);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(WfsSearch).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"className\", \"\".concat(_constants.CSS_PREFIX, \"wfssearch\"));\n\n    _this.state = {\n      searchTerm: '',\n      data: []\n    };\n    _this.onUpdateInput = _this.onUpdateInput.bind(_assertThisInitialized(_this));\n    _this.onMenuItemSelected = _this.onMenuItemSelected.bind(_assertThisInitialized(_this)); // delay requests invoking\n\n    _this.doSearch = (0, _debounce[\"default\"])(_this.doSearch, _this.props.delay);\n    return _this;\n  }\n  /**\n   * Called if the input of the AutoComplete is being updated. It sets the\n   * current inputValue as searchTerm and starts a search if the inputValue has\n   * a length of at least `this.props.minChars` (default 3).\n   *\n   * @param {String|undefined} value The inputValue. Undefined if clear btn\n   *                                      is pressed.\n   */\n\n\n  _createClass(WfsSearch, [{\n    key: \"onUpdateInput\",\n    value: function onUpdateInput(value) {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          minChars = _this$props.minChars,\n          onChange = _this$props.onChange,\n          onBeforeSearch = _this$props.onBeforeSearch;\n      this.setState({\n        data: []\n      });\n\n      if ((0, _isFunction[\"default\"])(onBeforeSearch)) {\n        value = onBeforeSearch(value);\n      }\n\n      this.setState({\n        searchTerm: value\n      }, function () {\n        if (_this2.state.searchTerm && _this2.state.searchTerm.length >= minChars) {\n          _this2.doSearch();\n        }\n      });\n\n      if ((0, _isFunction[\"default\"])(onChange)) {\n        onChange(value);\n      }\n    }\n    /**\n     * Perform the search.\n     * @private\n     */\n\n  }, {\n    key: \"doSearch\",\n    value: function doSearch() {\n      var _this3 = this;\n\n      var _this$props2 = this.props,\n          additionalFetchOptions = _this$props2.additionalFetchOptions,\n          baseUrl = _this$props2.baseUrl,\n          featureNS = _this$props2.featureNS,\n          featurePrefix = _this$props2.featurePrefix,\n          featureTypes = _this$props2.featureTypes,\n          geometryName = _this$props2.geometryName,\n          maxFeatures = _this$props2.maxFeatures,\n          outputFormat = _this$props2.outputFormat,\n          propertyNames = _this$props2.propertyNames,\n          srsName = _this$props2.srsName,\n          wfsFormatOptions = _this$props2.wfsFormatOptions,\n          searchAttributes = _this$props2.searchAttributes,\n          attributeDetails = _this$props2.attributeDetails;\n      var searchOpts = {\n        featureNS: featureNS,\n        featurePrefix: featurePrefix,\n        featureTypes: featureTypes,\n        geometryName: geometryName,\n        maxFeatures: maxFeatures,\n        outputFormat: outputFormat,\n        propertyNames: propertyNames,\n        srsName: srsName,\n        wfsFormatOptions: wfsFormatOptions,\n        searchAttributes: searchAttributes,\n        attributeDetails: attributeDetails\n      };\n\n      var request = _WfsFilterUtil[\"default\"].getCombinedRequests(searchOpts, this.state.searchTerm);\n\n      if (request) {\n        this.setState({\n          fetching: true\n        }, function () {\n          fetch(\"\".concat(baseUrl), _objectSpread({\n            method: 'POST',\n            credentials: additionalFetchOptions.credentials ? additionalFetchOptions.credentials : 'same-origin',\n            body: new XMLSerializer().serializeToString(request)\n          }, additionalFetchOptions)).then(function (response) {\n            return response.json();\n          }).then(_this3.onFetchSuccess.bind(_this3))[\"catch\"](_this3.onFetchError.bind(_this3));\n        });\n      } else {\n        this.onFetchError('Missing GetFeature request parameters');\n      }\n    }\n    /**\n     * This function gets called on success of the WFS GetFeature fetch request.\n     * It sets the response as data.\n     *\n     * @param {Array<object>} response The found features.\n     */\n\n  }, {\n    key: \"onFetchSuccess\",\n    value: function onFetchSuccess(response) {\n      var _this4 = this;\n\n      var data = response.features ? response.features : [];\n      data.forEach(function (feature) {\n        return feature.searchTerm = _this4.state.searchTerm;\n      });\n      this.setState({\n        data: data,\n        fetching: false\n      });\n    }\n    /**\n     * This function gets called when the WFS GetFeature fetch request returns an error.\n     * It logs the error to the console.\n     *\n     * @param {String} error The errorstring.\n     */\n\n  }, {\n    key: \"onFetchError\",\n    value: function onFetchError(error) {\n      _Logger[\"default\"].error(\"Error while requesting WFS GetFeature: \".concat(error));\n\n      this.setState({\n        fetching: false\n      });\n    }\n    /**\n     * The function describes what to do when an item is selected.\n     *\n     * @param {String|number} value The value of the selected option.\n     * @param {Node} option The selected option.\n     */\n\n  }, {\n    key: \"onMenuItemSelected\",\n    value: function onMenuItemSelected(value, option) {\n      var _this$props3 = this.props,\n          map = _this$props3.map,\n          idProperty = _this$props3.idProperty;\n      var selectedFeature = this.state.data.filter(function (feat) {\n        return feat[idProperty] === option.key;\n      })[0];\n      this.props.onSelect(selectedFeature, map);\n    }\n    /**\n     * The render function.\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var _this$state = this.state,\n          data = _this$state.data,\n          fetching = _this$state.fetching;\n\n      var _this$props4 = this.props,\n          additionalFetchOptions = _this$props4.additionalFetchOptions,\n          baseUrl = _this$props4.baseUrl,\n          className = _this$props4.className,\n          featureNS = _this$props4.featureNS,\n          featurePrefix = _this$props4.featurePrefix,\n          featureTypes = _this$props4.featureTypes,\n          filter = _this$props4.filter,\n          geometryName = _this$props4.geometryName,\n          map = _this$props4.map,\n          maxFeatures = _this$props4.maxFeatures,\n          minChars = _this$props4.minChars,\n          outputFormat = _this$props4.outputFormat,\n          onChange = _this$props4.onChange,\n          onSelect = _this$props4.onSelect,\n          propertyNames = _this$props4.propertyNames,\n          renderOption = _this$props4.renderOption,\n          searchAttributes = _this$props4.searchAttributes,\n          attributeDetails = _this$props4.attributeDetails,\n          srsName = _this$props4.srsName,\n          wfsFormatOptions = _this$props4.wfsFormatOptions,\n          displayValue = _this$props4.displayValue,\n          passThroughProps = _objectWithoutProperties(_this$props4, [\"additionalFetchOptions\", \"baseUrl\", \"className\", \"featureNS\", \"featurePrefix\", \"featureTypes\", \"filter\", \"geometryName\", \"map\", \"maxFeatures\", \"minChars\", \"outputFormat\", \"onChange\", \"onSelect\", \"propertyNames\", \"renderOption\", \"searchAttributes\", \"attributeDetails\", \"srsName\", \"wfsFormatOptions\", \"displayValue\"]);\n\n      var finalClassName = className ? \"\".concat(className, \" \").concat(this.className) : this.className;\n      return _react[\"default\"].createElement(_autoComplete[\"default\"], _extends({\n        className: finalClassName,\n        defaultActiveFirstOption: false,\n        allowClear: true,\n        onChange: this.onUpdateInput,\n        onSelect: this.onMenuItemSelected,\n        notFoundContent: fetching ? _react[\"default\"].createElement(_spin[\"default\"], {\n          size: \"small\"\n        }) : null,\n        filterOption: false,\n        showArrow: false\n      }, passThroughProps), data.map(function (d) {\n        return renderOption(d, _this5.props);\n      }));\n    }\n  }]);\n\n  return WfsSearch;\n}(_react[\"default\"].Component);\n\nexports.WfsSearch = WfsSearch;\n\n_defineProperty(WfsSearch, \"propTypes\", {\n  /**\n   * An optional CSS class which should be added.\n   * @type {String}\n   */\n  className: _propTypes[\"default\"].string,\n\n  /**\n   * The base URL. Please make sure that the WFS-Server supports CORS.\n   * @type {String}\n   */\n  baseUrl: _propTypes[\"default\"].string.isRequired,\n\n  /**\n   * An object mapping feature types to an array of attributes that should be searched through.\n   * @type {Object}\n   */\n  searchAttributes: _propTypes[\"default\"].object.isRequired,\n\n  /**\n   * A nested object mapping feature types to an object of attribute details,\n   * which are also mapped by search attribute name.\n   *\n   * Example:\n   *   ```\n   *   attributeDetails: {\n   *    featType1: {\n   *      attr1: {\n   *        matchCase: true,\n   *        type: 'number',\n   *        exactSearch: false\n   *      },\n   *      attr2: {\n   *        matchCase: false,\n   *        type: 'string',\n   *        exactSearch: true\n   *      }\n   *    },\n   *    featType2: {...}\n   *   }\n   *   ```\n   * @type {Object}\n   */\n  attributeDetails: _propTypes[\"default\"].objectOf(_propTypes[\"default\"].objectOf(_propTypes[\"default\"].shape({\n    matchCase: _propTypes[\"default\"].bool,\n    type: _propTypes[\"default\"].string,\n    exactSearch: _propTypes[\"default\"].bool\n  }))),\n\n  /**\n   * The namespace URI used for features.\n   * @type {String}\n   */\n  featureNS: _propTypes[\"default\"].string,\n\n  /**\n   * The prefix for the feature namespace.\n   * @type {String}\n   */\n  featurePrefix: _propTypes[\"default\"].string,\n\n  /**\n   * The feature type names. Required.\n   * @type {String[]}\n   */\n  featureTypes: _propTypes[\"default\"].arrayOf(_propTypes[\"default\"].string).isRequired,\n\n  /**\n   * SRS name. No srsName attribute will be set on geometries when this is not\n   * provided.\n   * @type {String}\n   */\n  srsName: _propTypes[\"default\"].string,\n\n  /**\n   * The output format of the response.\n   * @type {String}\n   */\n  outputFormat: _propTypes[\"default\"].string,\n\n  /**\n   * Maximum number of features to fetch.\n   * @type {Number}\n   */\n  maxFeatures: _propTypes[\"default\"].number,\n\n  /**\n   * Geometry name to use in a BBOX filter.\n   * @type {String}\n   */\n  geometryName: _propTypes[\"default\"].string,\n\n  /**\n   * Optional list of property names to serialize.\n   * @type {String[]}\n   */\n  propertyNames: _propTypes[\"default\"].arrayOf(_propTypes[\"default\"].string),\n\n  /**\n   * Filter condition. See https://openlayers.org/en/latest/apidoc/module-ol_format_filter.html\n   * for more information.\n   * @type {Object}\n   */\n  filter: _propTypes[\"default\"].object,\n\n  /**\n   * The ol.map to interact with on selection.\n   *\n   * @type {ol.Map}\n   */\n  map: _propTypes[\"default\"].instanceOf(_Map[\"default\"]),\n\n  /**\n   * The minimal amount of characters entered in the input to start a search.\n   * @type {Number}\n   */\n  minChars: _propTypes[\"default\"].number,\n\n  /**\n   * A render function which gets called with the selected item as it is\n   * returned by the server. It must return an `AutoComplete.Option` with\n   * `key={feature.id}`.\n   * The default will display the property `name` if existing or the\n   * property defined in `props.idProperty` (default is to `id`).\n   * @type {Function}\n   */\n  renderOption: _propTypes[\"default\"].func,\n\n  /**\n   * An onSelect function which gets called with the selected feature as it is\n   * returned by server.\n   * The default function will create a searchlayer, adds the feature and will\n   * zoom to its extend.\n   * @type {Function}\n   */\n  onSelect: _propTypes[\"default\"].func,\n\n  /**\n   * An onChange function which gets called with the current value of the\n   * field.\n   * @type {Function}\n   */\n  onChange: _propTypes[\"default\"].func,\n\n  /**\n    * Optional callback function, that will be called before WFS search starts.\n    * Can be useful if input value manipulation is needed (e.g. umlaut\n    * replacement `ä => oa` etc.)\n    * @type {Function}\n    */\n  onBeforeSearch: _propTypes[\"default\"].func,\n\n  /**\n   * Options which are added to the fetch-POST-request. credentials is set to\n   * 'same-origin' as default but can be overwritten. See also\n   * https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch\n   * @type {Object}\n   */\n  additionalFetchOptions: _propTypes[\"default\"].object,\n\n  /**\n   * Options which are passed to the constructor of the ol.format.WFS.\n   * compare: https://openlayers.org/en/latest/apidoc/module-ol_format_WFS.html\n   * @type {Object}\n   */\n  wfsFormatOptions: _propTypes[\"default\"].object,\n\n  /**\n   * Which prop value of option will render as content of select.\n   * @type {String}\n   */\n  displayValue: _propTypes[\"default\"].string,\n\n  /**\n   * The id property of the feature. Default is to `id`.\n   * @type {String}\n   */\n  idProperty: _propTypes[\"default\"].string,\n\n  /**\n   * Delay in ms before actually sending requests.\n   * @type {Number}\n   */\n  delay: _propTypes[\"default\"].number\n});\n\n_defineProperty(WfsSearch, \"defaultProps\", {\n  srsName: 'EPSG:3857',\n  outputFormat: 'application/json',\n  minChars: 3,\n  additionalFetchOptions: {},\n  displayValue: 'name',\n  idProperty: 'id',\n  attributeDetails: {},\n  delay: 300,\n\n  /**\n   * Create an AutoComplete.Option from the given data.\n   *\n   * @param {Object} feature The feature as returned by the server.\n   * @param {Object} props The current props of the component.\n   * @return {AutoComplete.Option} The AutoComplete.Option that will be\n   * rendered for each feature.\n   */\n  renderOption: function renderOption(feature, props) {\n    var displayValue = props.displayValue,\n        idProperty = props.idProperty;\n    var display = feature.properties[displayValue] ? feature.properties[displayValue] : feature[idProperty];\n    return _react[\"default\"].createElement(Option, {\n      value: display,\n      key: feature[idProperty],\n      title: display\n    }, display);\n  },\n\n  /**\n   * The default onSelect method if no onSelect prop is given. It zooms to the\n   * selected item.\n   *\n   * @param {object} feature The selected feature as returned by the server.\n   * @param {ol.map} olMap The openlayers map that was passed via prop.\n   */\n  onSelect: function onSelect(feature, olMap) {\n    if (feature) {\n      var olView = olMap.getView();\n      var geoJsonFormat = new _GeoJSON[\"default\"]();\n      var olFeature = geoJsonFormat.readFeature(feature);\n      var geometry = olFeature.getGeometry();\n\n      if (geometry) {\n        olView.fit(geometry, {\n          duration: 500\n        });\n      }\n    }\n  },\n  style: {\n    width: 200\n  }\n  /**\n   * Create the WfsSearch.\n   *\n   * @param {Object} props The initial props.\n   * @constructs WfsSearch\n   */\n\n});\n\nvar _default = WfsSearch;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/dirkmennecke77/Desktop/Lageplan/node_modules/@terrestris/react-geo/dist/Field/WfsSearch/WfsSearch.js"],"names":["Object","defineProperty","exports","value","WfsSearch","require","_spin","_interopRequireDefault","_autoComplete","_react","_propTypes","_Map","_GeoJSON","_isFunction","_debounce","_Logger","_WfsFilterUtil","_constants","obj","__esModule","_typeof","Symbol","iterator","constructor","prototype","_extends","assign","target","i","arguments","length","source","key","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","indexOf","propertyIsEnumerable","sourceKeys","keys","_objectSpread","ownKeys","concat","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","_defineProperty","defineProperties","getOwnPropertyDescriptors","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","descriptor","configurable","writable","_createClass","protoProps","staticProps","_possibleConstructorReturn","self","_assertThisInitialized","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","ReferenceError","_inherits","subClass","superClass","create","_setPrototypeOf","p","Option","_React$Component","_this","CSS_PREFIX","state","searchTerm","data","onUpdateInput","bind","onMenuItemSelected","doSearch","delay","_this2","_this$props","minChars","onChange","onBeforeSearch","setState","_this3","_this$props2","additionalFetchOptions","baseUrl","featureNS","featurePrefix","featureTypes","geometryName","maxFeatures","outputFormat","propertyNames","srsName","wfsFormatOptions","searchAttributes","attributeDetails","searchOpts","request","getCombinedRequests","fetching","fetch","method","credentials","body","XMLSerializer","serializeToString","then","response","json","onFetchSuccess","onFetchError","_this4","features","feature","error","option","_this$props3","map","idProperty","selectedFeature","feat","onSelect","render","_this5","_this$state","_this$props4","className","renderOption","displayValue","passThroughProps","finalClassName","createElement","defaultActiveFirstOption","allowClear","notFoundContent","size","filterOption","showArrow","d","Component","string","isRequired","object","objectOf","shape","matchCase","bool","type","exactSearch","arrayOf","number","instanceOf","func","display","properties","title","olMap","olView","getView","geoJsonFormat","olFeature","readFeature","geometry","getGeometry","fit","duration","style","width","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.WfsSearch = void 0;\n\nrequire(\"antd/es/spin/style\");\n\nvar _spin = _interopRequireDefault(require(\"antd/es/spin\"));\n\nrequire(\"antd/es/auto-complete/style\");\n\nvar _autoComplete = _interopRequireDefault(require(\"antd/es/auto-complete\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _Map = _interopRequireDefault(require(\"ol/Map\"));\n\nvar _GeoJSON = _interopRequireDefault(require(\"ol/format/GeoJSON\"));\n\nvar _isFunction = _interopRequireDefault(require(\"lodash/isFunction\"));\n\nvar _debounce = _interopRequireDefault(require(\"lodash/debounce\"));\n\nvar _Logger = _interopRequireDefault(require(\"@terrestris/base-util/dist/Logger\"));\n\nvar _WfsFilterUtil = _interopRequireDefault(require(\"@terrestris/ol-util/dist/WfsFilterUtil/WfsFilterUtil\"));\n\nvar _constants = require(\"../../constants\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { if (i % 2) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } else { Object.defineProperties(target, Object.getOwnPropertyDescriptors(arguments[i])); } } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar Option = _autoComplete[\"default\"].Option;\n\n/**\n * The WfsSearch field.\n * Implements an input field to do a WFS-GetFeature request.\n *\n * The GetFeature request is created with `ol.format.WFS.writeGetFeature`\n * so most of the WFS specific options work like document in the corresponding\n * API-docs: https://openlayers.org/en/latest/apidoc/module-ol_format_WFS.html\n *\n * @class WfsSearch\n * @extends React.Component\n */\nvar WfsSearch =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(WfsSearch, _React$Component);\n\n  /**\n   * The className added to this component.\n   * @type {String}\n   * @private\n   */\n  function WfsSearch(props) {\n    var _this;\n\n    _classCallCheck(this, WfsSearch);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(WfsSearch).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"className\", \"\".concat(_constants.CSS_PREFIX, \"wfssearch\"));\n\n    _this.state = {\n      searchTerm: '',\n      data: []\n    };\n    _this.onUpdateInput = _this.onUpdateInput.bind(_assertThisInitialized(_this));\n    _this.onMenuItemSelected = _this.onMenuItemSelected.bind(_assertThisInitialized(_this)); // delay requests invoking\n\n    _this.doSearch = (0, _debounce[\"default\"])(_this.doSearch, _this.props.delay);\n    return _this;\n  }\n  /**\n   * Called if the input of the AutoComplete is being updated. It sets the\n   * current inputValue as searchTerm and starts a search if the inputValue has\n   * a length of at least `this.props.minChars` (default 3).\n   *\n   * @param {String|undefined} value The inputValue. Undefined if clear btn\n   *                                      is pressed.\n   */\n\n\n  _createClass(WfsSearch, [{\n    key: \"onUpdateInput\",\n    value: function onUpdateInput(value) {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          minChars = _this$props.minChars,\n          onChange = _this$props.onChange,\n          onBeforeSearch = _this$props.onBeforeSearch;\n      this.setState({\n        data: []\n      });\n\n      if ((0, _isFunction[\"default\"])(onBeforeSearch)) {\n        value = onBeforeSearch(value);\n      }\n\n      this.setState({\n        searchTerm: value\n      }, function () {\n        if (_this2.state.searchTerm && _this2.state.searchTerm.length >= minChars) {\n          _this2.doSearch();\n        }\n      });\n\n      if ((0, _isFunction[\"default\"])(onChange)) {\n        onChange(value);\n      }\n    }\n    /**\n     * Perform the search.\n     * @private\n     */\n\n  }, {\n    key: \"doSearch\",\n    value: function doSearch() {\n      var _this3 = this;\n\n      var _this$props2 = this.props,\n          additionalFetchOptions = _this$props2.additionalFetchOptions,\n          baseUrl = _this$props2.baseUrl,\n          featureNS = _this$props2.featureNS,\n          featurePrefix = _this$props2.featurePrefix,\n          featureTypes = _this$props2.featureTypes,\n          geometryName = _this$props2.geometryName,\n          maxFeatures = _this$props2.maxFeatures,\n          outputFormat = _this$props2.outputFormat,\n          propertyNames = _this$props2.propertyNames,\n          srsName = _this$props2.srsName,\n          wfsFormatOptions = _this$props2.wfsFormatOptions,\n          searchAttributes = _this$props2.searchAttributes,\n          attributeDetails = _this$props2.attributeDetails;\n      var searchOpts = {\n        featureNS: featureNS,\n        featurePrefix: featurePrefix,\n        featureTypes: featureTypes,\n        geometryName: geometryName,\n        maxFeatures: maxFeatures,\n        outputFormat: outputFormat,\n        propertyNames: propertyNames,\n        srsName: srsName,\n        wfsFormatOptions: wfsFormatOptions,\n        searchAttributes: searchAttributes,\n        attributeDetails: attributeDetails\n      };\n\n      var request = _WfsFilterUtil[\"default\"].getCombinedRequests(searchOpts, this.state.searchTerm);\n\n      if (request) {\n        this.setState({\n          fetching: true\n        }, function () {\n          fetch(\"\".concat(baseUrl), _objectSpread({\n            method: 'POST',\n            credentials: additionalFetchOptions.credentials ? additionalFetchOptions.credentials : 'same-origin',\n            body: new XMLSerializer().serializeToString(request)\n          }, additionalFetchOptions)).then(function (response) {\n            return response.json();\n          }).then(_this3.onFetchSuccess.bind(_this3))[\"catch\"](_this3.onFetchError.bind(_this3));\n        });\n      } else {\n        this.onFetchError('Missing GetFeature request parameters');\n      }\n    }\n    /**\n     * This function gets called on success of the WFS GetFeature fetch request.\n     * It sets the response as data.\n     *\n     * @param {Array<object>} response The found features.\n     */\n\n  }, {\n    key: \"onFetchSuccess\",\n    value: function onFetchSuccess(response) {\n      var _this4 = this;\n\n      var data = response.features ? response.features : [];\n      data.forEach(function (feature) {\n        return feature.searchTerm = _this4.state.searchTerm;\n      });\n      this.setState({\n        data: data,\n        fetching: false\n      });\n    }\n    /**\n     * This function gets called when the WFS GetFeature fetch request returns an error.\n     * It logs the error to the console.\n     *\n     * @param {String} error The errorstring.\n     */\n\n  }, {\n    key: \"onFetchError\",\n    value: function onFetchError(error) {\n      _Logger[\"default\"].error(\"Error while requesting WFS GetFeature: \".concat(error));\n\n      this.setState({\n        fetching: false\n      });\n    }\n    /**\n     * The function describes what to do when an item is selected.\n     *\n     * @param {String|number} value The value of the selected option.\n     * @param {Node} option The selected option.\n     */\n\n  }, {\n    key: \"onMenuItemSelected\",\n    value: function onMenuItemSelected(value, option) {\n      var _this$props3 = this.props,\n          map = _this$props3.map,\n          idProperty = _this$props3.idProperty;\n      var selectedFeature = this.state.data.filter(function (feat) {\n        return feat[idProperty] === option.key;\n      })[0];\n      this.props.onSelect(selectedFeature, map);\n    }\n    /**\n     * The render function.\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var _this$state = this.state,\n          data = _this$state.data,\n          fetching = _this$state.fetching;\n\n      var _this$props4 = this.props,\n          additionalFetchOptions = _this$props4.additionalFetchOptions,\n          baseUrl = _this$props4.baseUrl,\n          className = _this$props4.className,\n          featureNS = _this$props4.featureNS,\n          featurePrefix = _this$props4.featurePrefix,\n          featureTypes = _this$props4.featureTypes,\n          filter = _this$props4.filter,\n          geometryName = _this$props4.geometryName,\n          map = _this$props4.map,\n          maxFeatures = _this$props4.maxFeatures,\n          minChars = _this$props4.minChars,\n          outputFormat = _this$props4.outputFormat,\n          onChange = _this$props4.onChange,\n          onSelect = _this$props4.onSelect,\n          propertyNames = _this$props4.propertyNames,\n          renderOption = _this$props4.renderOption,\n          searchAttributes = _this$props4.searchAttributes,\n          attributeDetails = _this$props4.attributeDetails,\n          srsName = _this$props4.srsName,\n          wfsFormatOptions = _this$props4.wfsFormatOptions,\n          displayValue = _this$props4.displayValue,\n          passThroughProps = _objectWithoutProperties(_this$props4, [\"additionalFetchOptions\", \"baseUrl\", \"className\", \"featureNS\", \"featurePrefix\", \"featureTypes\", \"filter\", \"geometryName\", \"map\", \"maxFeatures\", \"minChars\", \"outputFormat\", \"onChange\", \"onSelect\", \"propertyNames\", \"renderOption\", \"searchAttributes\", \"attributeDetails\", \"srsName\", \"wfsFormatOptions\", \"displayValue\"]);\n\n      var finalClassName = className ? \"\".concat(className, \" \").concat(this.className) : this.className;\n      return _react[\"default\"].createElement(_autoComplete[\"default\"], _extends({\n        className: finalClassName,\n        defaultActiveFirstOption: false,\n        allowClear: true,\n        onChange: this.onUpdateInput,\n        onSelect: this.onMenuItemSelected,\n        notFoundContent: fetching ? _react[\"default\"].createElement(_spin[\"default\"], {\n          size: \"small\"\n        }) : null,\n        filterOption: false,\n        showArrow: false\n      }, passThroughProps), data.map(function (d) {\n        return renderOption(d, _this5.props);\n      }));\n    }\n  }]);\n\n  return WfsSearch;\n}(_react[\"default\"].Component);\n\nexports.WfsSearch = WfsSearch;\n\n_defineProperty(WfsSearch, \"propTypes\", {\n  /**\n   * An optional CSS class which should be added.\n   * @type {String}\n   */\n  className: _propTypes[\"default\"].string,\n\n  /**\n   * The base URL. Please make sure that the WFS-Server supports CORS.\n   * @type {String}\n   */\n  baseUrl: _propTypes[\"default\"].string.isRequired,\n\n  /**\n   * An object mapping feature types to an array of attributes that should be searched through.\n   * @type {Object}\n   */\n  searchAttributes: _propTypes[\"default\"].object.isRequired,\n\n  /**\n   * A nested object mapping feature types to an object of attribute details,\n   * which are also mapped by search attribute name.\n   *\n   * Example:\n   *   ```\n   *   attributeDetails: {\n   *    featType1: {\n   *      attr1: {\n   *        matchCase: true,\n   *        type: 'number',\n   *        exactSearch: false\n   *      },\n   *      attr2: {\n   *        matchCase: false,\n   *        type: 'string',\n   *        exactSearch: true\n   *      }\n   *    },\n   *    featType2: {...}\n   *   }\n   *   ```\n   * @type {Object}\n   */\n  attributeDetails: _propTypes[\"default\"].objectOf(_propTypes[\"default\"].objectOf(_propTypes[\"default\"].shape({\n    matchCase: _propTypes[\"default\"].bool,\n    type: _propTypes[\"default\"].string,\n    exactSearch: _propTypes[\"default\"].bool\n  }))),\n\n  /**\n   * The namespace URI used for features.\n   * @type {String}\n   */\n  featureNS: _propTypes[\"default\"].string,\n\n  /**\n   * The prefix for the feature namespace.\n   * @type {String}\n   */\n  featurePrefix: _propTypes[\"default\"].string,\n\n  /**\n   * The feature type names. Required.\n   * @type {String[]}\n   */\n  featureTypes: _propTypes[\"default\"].arrayOf(_propTypes[\"default\"].string).isRequired,\n\n  /**\n   * SRS name. No srsName attribute will be set on geometries when this is not\n   * provided.\n   * @type {String}\n   */\n  srsName: _propTypes[\"default\"].string,\n\n  /**\n   * The output format of the response.\n   * @type {String}\n   */\n  outputFormat: _propTypes[\"default\"].string,\n\n  /**\n   * Maximum number of features to fetch.\n   * @type {Number}\n   */\n  maxFeatures: _propTypes[\"default\"].number,\n\n  /**\n   * Geometry name to use in a BBOX filter.\n   * @type {String}\n   */\n  geometryName: _propTypes[\"default\"].string,\n\n  /**\n   * Optional list of property names to serialize.\n   * @type {String[]}\n   */\n  propertyNames: _propTypes[\"default\"].arrayOf(_propTypes[\"default\"].string),\n\n  /**\n   * Filter condition. See https://openlayers.org/en/latest/apidoc/module-ol_format_filter.html\n   * for more information.\n   * @type {Object}\n   */\n  filter: _propTypes[\"default\"].object,\n\n  /**\n   * The ol.map to interact with on selection.\n   *\n   * @type {ol.Map}\n   */\n  map: _propTypes[\"default\"].instanceOf(_Map[\"default\"]),\n\n  /**\n   * The minimal amount of characters entered in the input to start a search.\n   * @type {Number}\n   */\n  minChars: _propTypes[\"default\"].number,\n\n  /**\n   * A render function which gets called with the selected item as it is\n   * returned by the server. It must return an `AutoComplete.Option` with\n   * `key={feature.id}`.\n   * The default will display the property `name` if existing or the\n   * property defined in `props.idProperty` (default is to `id`).\n   * @type {Function}\n   */\n  renderOption: _propTypes[\"default\"].func,\n\n  /**\n   * An onSelect function which gets called with the selected feature as it is\n   * returned by server.\n   * The default function will create a searchlayer, adds the feature and will\n   * zoom to its extend.\n   * @type {Function}\n   */\n  onSelect: _propTypes[\"default\"].func,\n\n  /**\n   * An onChange function which gets called with the current value of the\n   * field.\n   * @type {Function}\n   */\n  onChange: _propTypes[\"default\"].func,\n\n  /**\n    * Optional callback function, that will be called before WFS search starts.\n    * Can be useful if input value manipulation is needed (e.g. umlaut\n    * replacement `ä => oa` etc.)\n    * @type {Function}\n    */\n  onBeforeSearch: _propTypes[\"default\"].func,\n\n  /**\n   * Options which are added to the fetch-POST-request. credentials is set to\n   * 'same-origin' as default but can be overwritten. See also\n   * https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch\n   * @type {Object}\n   */\n  additionalFetchOptions: _propTypes[\"default\"].object,\n\n  /**\n   * Options which are passed to the constructor of the ol.format.WFS.\n   * compare: https://openlayers.org/en/latest/apidoc/module-ol_format_WFS.html\n   * @type {Object}\n   */\n  wfsFormatOptions: _propTypes[\"default\"].object,\n\n  /**\n   * Which prop value of option will render as content of select.\n   * @type {String}\n   */\n  displayValue: _propTypes[\"default\"].string,\n\n  /**\n   * The id property of the feature. Default is to `id`.\n   * @type {String}\n   */\n  idProperty: _propTypes[\"default\"].string,\n\n  /**\n   * Delay in ms before actually sending requests.\n   * @type {Number}\n   */\n  delay: _propTypes[\"default\"].number\n});\n\n_defineProperty(WfsSearch, \"defaultProps\", {\n  srsName: 'EPSG:3857',\n  outputFormat: 'application/json',\n  minChars: 3,\n  additionalFetchOptions: {},\n  displayValue: 'name',\n  idProperty: 'id',\n  attributeDetails: {},\n  delay: 300,\n\n  /**\n   * Create an AutoComplete.Option from the given data.\n   *\n   * @param {Object} feature The feature as returned by the server.\n   * @param {Object} props The current props of the component.\n   * @return {AutoComplete.Option} The AutoComplete.Option that will be\n   * rendered for each feature.\n   */\n  renderOption: function renderOption(feature, props) {\n    var displayValue = props.displayValue,\n        idProperty = props.idProperty;\n    var display = feature.properties[displayValue] ? feature.properties[displayValue] : feature[idProperty];\n    return _react[\"default\"].createElement(Option, {\n      value: display,\n      key: feature[idProperty],\n      title: display\n    }, display);\n  },\n\n  /**\n   * The default onSelect method if no onSelect prop is given. It zooms to the\n   * selected item.\n   *\n   * @param {object} feature The selected feature as returned by the server.\n   * @param {ol.map} olMap The openlayers map that was passed via prop.\n   */\n  onSelect: function onSelect(feature, olMap) {\n    if (feature) {\n      var olView = olMap.getView();\n      var geoJsonFormat = new _GeoJSON[\"default\"]();\n      var olFeature = geoJsonFormat.readFeature(feature);\n      var geometry = olFeature.getGeometry();\n\n      if (geometry) {\n        olView.fit(geometry, {\n          duration: 500\n        });\n      }\n    }\n  },\n  style: {\n    width: 200\n  }\n  /**\n   * Create the WfsSearch.\n   *\n   * @param {Object} props The initial props.\n   * @constructs WfsSearch\n   */\n\n});\n\nvar _default = WfsSearch;\nexports[\"default\"] = _default;"]},"metadata":{},"sourceType":"script"}