{"ast":null,"code":"var _jsxFileName = \"/Users/dirkmennecke77/Desktop/Lageplan/src/components/Map.js\";\n\n/* Noch zu Erledigen: \n- Button um Übersichtskarte einzublenden\n- Button für vorige und folgende Kartenansicht\n- make divs dragable\n- set png as pointlayer src\n- change/swap basemap onClick -> stamenLayer Switcher\n- AgFeatureGrid fixen\n\n*/\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as PropTypes from \"prop-types\";\nimport \"ol/ol.css\";\nimport \"antd/dist/antd.css\"; //import \"../react-geo.css\";\n\nimport OlMap from \"ol/Map\";\nimport OlView from \"ol/View\";\nimport OlVector from \"ol/layer/Vector\";\nimport OlVectorSource from \"ol/source/Vector\";\nimport GeoJSON from \"ol/format/GeoJSON\";\nimport OlLayerTile from \"ol/layer/Tile\";\nimport OlSourceOsm from \"ol/source/OSM\";\nimport OlSourceStamen from \"ol/source/Stamen\"; //import Projection from \"ol/proj/Projection\";\n\nimport OlStamen from \"ol/source/Stamen\";\nimport { Drawer, Icon } from \"antd\";\nimport { SimpleButton, MapComponent, AgFeatureGrid, ZoomToExtentButton, GeoLocationButton, LayerTransparencySlider, ToggleGroup, ToggleButton, NominatimSearch, Window, MeasureButton } from \"@terrestris/react-geo\";\nimport OlFormatGeoJSON from \"ol/format/GeoJSON\";\nimport Select from \"ol/interaction/Select\";\nimport { ZoomSlider } from \"ol/control\";\nimport TileLayer from \"ol/layer/Tile\";\nimport OSM from \"ol/source/OSM\";\nimport View from \"ol/View\";\nimport { defaults as defaultControls, FullScreen } from \"ol/control\";\nimport { fromLonLat } from \"ol/proj\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Card, Accordion, Button } from \"react-bootstrap\";\nimport { NavLink } from \"react-router-dom\";\nimport uniSchriftzug from \"../img/uniSchriftzug.jpg\";\nimport getlocation from \"../img/getlocation.png\";\nimport haus from \"../img/haus.jpg\";\nimport search from \"../img/search.png\";\nimport toilets from \"../img/unisex.png\";\nimport ruler from \"../img/ruler.png\";\nimport layerpng from \"../img/layer.png\";\nimport buildingsData from \"../campusGisBuildings.geojson\";\nimport klinikumBuildings from \"../UniklinikBuildings.geojson\";\nimport toiletsPoints from \"../toilets.geojson\";\nimport testdata from \"../testdata.json\";\nimport RundbauGrundriss from \"../RundbauGrundriss.geojson\";\nimport EtageEinsRäume from \"../EtageEinsRäume.geojson\";\nimport EtageZweiRäume from \"../EtageZweiRäume.geojson\";\nimport EtageEinsGang from \"../EtageEinsGang.geojson\";\nimport { Style, Fill, Stroke } from \"ol/style\";\nconst layer = new OlLayerTile({\n  source: new OlSourceOsm()\n});\nconst stamenLayer = new OlLayerTile({\n  source: new OlStamen({\n    layer: \"terrain\"\n  })\n});\nconst center = [771105.02, 6608382.01]; //Cologne\n// create a new instance of ol.map in ES6 syntax\n\nconst map = new OlMap({\n  controls: defaultControls().extend([new FullScreen()]),\n  view: new OlView({\n    center: center,\n    zoom: 0.9,\n    maxResolution: 7\n  }),\n  layers: [stamenLayer]\n});\nvar zoomslider = new ZoomSlider();\nmap.addControl(zoomslider); // adding GeoJSON to the map (buildings)\n\nconst vector = new OlVector({\n  source: new OlVectorSource({\n    url: buildingsData,\n    format: new GeoJSON()\n  }),\n  style: new Style({\n    fill: new Fill({\n      color: \"#354d60\"\n    })\n    /* the following few lines of code will make the map buggy\n    stroke: new Stroke({\n      color: \"black\",\n      width: 0.2\n    })\n    */\n\n  }),\n  minResolution: 0.4\n});\nmap.addLayer(vector); // adding GeoJSON to the map (rooms)\n\nconst vectorTwo = new OlVector({\n  source: new OlVectorSource({\n    url: RundbauGrundriss,\n    format: new GeoJSON()\n  }),\n  style: new Style({\n    fill: new Fill({\n      color: \"grey\"\n    }),\n    stroke: new Stroke({\n      color: \"black\",\n      width: 1.2\n    })\n  }),\n  maxResolution: 0.39999999\n});\nmap.addLayer(vectorTwo); // adding GeoJSON to the map (Gang)\n\nconst GangRundbau = new OlVector({\n  source: new OlVectorSource({\n    url: EtageEinsGang,\n    format: new GeoJSON()\n  }),\n  style: new Style({\n    fill: new Fill({\n      color: \"grey\"\n    }),\n    stroke: new Stroke({\n      color: \"red\",\n      width: 5\n    })\n  }),\n  maxResolution: 0.39999999\n});\nmap.addLayer(GangRundbau); // adding GeoJSON to the map (rooms)\n\nconst vectorThree = new OlVector({\n  source: new OlVectorSource({\n    url: klinikumBuildings,\n    format: new GeoJSON()\n  }),\n  style: new Style({\n    fill: new Fill({\n      color: \"#5493C4\"\n    }),\n    stroke: new Stroke({\n      color: \"black\",\n      width: 1.2\n    })\n  }),\n  minResolution: 0.4\n});\nmap.addLayer(vectorThree); // adding GeoJSON to the map (EtageEinsRäume)\n\nconst EtageEinsRäumeLayer = new OlVector({\n  source: new OlVectorSource({\n    url: EtageEinsRäume,\n    format: new GeoJSON()\n  }),\n  style: new Style({\n    fill: new Fill({\n      color: \"blue\"\n    }),\n    stroke: new Stroke({\n      color: \"black\",\n      width: 1.2\n    })\n  }),\n  maxResolution: 0.39999999\n});\nmap.addLayer(EtageEinsRäumeLayer); // adding GeoJSON to the map (EtageZweiRäume)\n\nconst EtageZweiRäumeLayer = new OlVector({\n  source: new OlVectorSource({\n    url: EtageZweiRäume,\n    format: new GeoJSON()\n  }),\n  style: new Style({\n    fill: new Fill({\n      color: \"blue\"\n    }),\n    stroke: new Stroke({\n      color: \"black\",\n      width: 1.2\n    })\n  }),\n  maxResolution: 0.39999999\n});\nmap.addLayer(EtageZweiRäumeLayer); // adding GeoJSON to the map (toilets)\n\nconst toiletsPointsLayer = new OlVector({\n  source: new OlVectorSource({\n    url: toiletsPoints,\n    format: new GeoJSON(),\n    src: toilets\n  })\n});\nmap.addLayer(toiletsPointsLayer);\nmap.on(\"postcompose\", map.updateSize);\n\nclass Ebenen extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      show: true,\n      showTwo: true,\n      color: false\n    };\n\n    this.hideLayer = () => {\n      EtageEinsRäumeLayer.setVisible(false);\n    };\n\n    this.showLayer = () => {\n      EtageEinsRäumeLayer.setVisible(true);\n    };\n\n    this.hideLayerTwo = () => {\n      EtageZweiRäumeLayer.setVisible(false);\n    };\n\n    this.showLayerTwo = () => {\n      EtageZweiRäumeLayer.setVisible(true);\n    };\n\n    this.toggle = () => this.setState(currentState => ({\n      show: !currentState.show\n    }));\n\n    this.toggleTwo = () => this.setState(currentState => ({\n      showTwo: !currentState.showTwo\n    }));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"ContainerEbenen\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"EbenenBtn\",\n      onClick: this.toggleTwo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, this.state.showTwo ? this.hideLayerTwo() : this.showLayerTwo(), \"Etage 2\"), React.createElement(\"button\", {\n      className: \"EbenenBtn\",\n      id: \"button\",\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, this.state.show ? this.hideLayer() : this.showLayer(), \" Etage 1\"));\n  }\n\n}\n\nclass Displaydata extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      id: \"displayData\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"rowOne\",\n      className: \"rowDisplayData\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, \"Geb\\xE4udenummer\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, \"Klinikum/Universit\\xE4t\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, \"Stra\\xDFe\")), React.createElement(\"div\", {\n      id: \"rowTwo\",\n      className: \"rowDisplayData\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      id: \"Geb\\xE4udenummer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      id: \"Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      id: \"Art\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      id: \"Stra\\xDFe\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    })));\n  }\n\n} // when the user moves the mouse, get the name property\n// from each feature under the mouse and display it in <DisplayData />\n\n\nfunction onMouseMove(browserEvent) {\n  var coordinate = browserEvent.coordinate;\n  var pixel = map.getPixelFromCoordinate(coordinate);\n  var el = document.getElementById(\"Gebäudenummer\");\n  el.innerHTML = \"\";\n  map.forEachFeatureAtPixel(pixel, function (feature) {\n    el.innerHTML += feature.get(\"GEBNR\") + \"<br>\";\n  });\n  var el = document.getElementById(\"Name\");\n  el.innerHTML = \"\";\n  map.forEachFeatureAtPixel(pixel, function (feature) {\n    el.innerHTML += feature.get(\"NAME\") + \"<br>\";\n  });\n  var el = document.getElementById(\"Straße\");\n  el.innerHTML = \"\";\n  map.forEachFeatureAtPixel(pixel, function (feature) {\n    el.innerHTML += feature.get(\"Straße\") + \"<br>\";\n  });\n  var el = document.getElementById(\"Art\");\n  el.innerHTML = \"\";\n  map.forEachFeatureAtPixel(pixel, function (feature) {\n    el.innerHTML += feature.get(\"Klinikum/Universität\") + \"<br>\";\n  });\n}\n\nmap.on(\"click\", onMouseMove); // AgFeatureGrid\n\nconst format = new OlFormatGeoJSON();\nconst features = format.readFeatures(testdata); // An array of numbers representing an extent: [minx, miny, maxx, maxy].\n\nconst extent1 = [988948, 1584461, 50935173, 6953101]; // map class with map component, DisplayData Class, Simple Button and Drawer\n\nclass Map extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      visible: false,\n      show: false,\n      showTwo: false\n    };\n\n    this.toggleDrawer = () => {\n      this.setState({\n        visible: !this.state.visible\n      });\n    };\n\n    this.hideLayer = () => {\n      vector.setVisible(false);\n    };\n\n    this.showLayer = () => {\n      vector.setVisible(true);\n    };\n\n    this.hideLayerTwo = () => {\n      vectorThree.setVisible(false);\n    };\n\n    this.showLayerTwo = () => {\n      vectorThree.setVisible(true);\n    };\n\n    this.toggle = () => this.setState(currentState => ({\n      show: !currentState.show\n    }));\n\n    this.toggleTwo = () => this.setState(currentState => ({\n      showTwo: !currentState.showTwo\n    }));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374\n      },\n      __self: this\n    }, React.createElement(Accordion, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375\n      },\n      __self: this\n    }, React.createElement(Card, {\n      id: \"LegendeLayerAccordion\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      id: \"LegendeLayerToggle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377\n      },\n      __self: this\n    }, React.createElement(Accordion.Toggle, {\n      as: Button,\n      variant: \"link\",\n      eventKey: \"0\",\n      id: \"LegendeLayerToggle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      id: \"layerpng\",\n      src: layerpng,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384\n      },\n      __self: this\n    }))), React.createElement(Accordion.Collapse, {\n      eventKey: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"containerHintergrund\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"underline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390\n      },\n      __self: this\n    }, \"Hintergrund Karte\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      id: \"hintergrundBtnOne\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392\n      },\n      __self: this\n    }, \"1\"), React.createElement(\"button\", {\n      id: \"hintergrundBtnTwo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393\n      },\n      __self: this\n    }, \"2\")), React.createElement(\"div\", {\n      id: \"containerEbenen\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"underline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396\n      },\n      __self: this\n    }, \"Etagen\"), React.createElement(Ebenen, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"containerLayer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"underline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400\n      },\n      __self: this\n    }, \"Layer\"), React.createElement(\"div\", {\n      id: \"containerLayerGrid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401\n      },\n      __self: this\n    }, React.createElement(SimpleButton, {\n      onClick: this.toggle,\n      className: \"layerVisibilityBtn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402\n      },\n      __self: this\n    }, this.state.showTwo ? this.hideLayerTwo() : this.showLayerTwo()), React.createElement(\"div\", {\n      id: \"blue\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"LayerLegendeText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411\n      },\n      __self: this\n    }, \"Universit\\xE4t\")), React.createElement(LayerTransparencySlider, {\n      layer: vector,\n      className: \"transparencyVector\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"containerLayer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"containerLayerGrid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420\n      },\n      __self: this\n    }, React.createElement(SimpleButton, {\n      onClick: this.toggleTwo,\n      className: \"layerVisibilityBtn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421\n      },\n      __self: this\n    }, this.state.show ? this.hideLayer() : this.showLayer()), React.createElement(\"div\", {\n      id: \"red\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"LayerLegendeText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428\n      },\n      __self: this\n    }, \"Uniklinik\"), React.createElement(LayerTransparencySlider, {\n      layer: vectorThree,\n      className: \"transparencyVector\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429\n      },\n      __self: this\n    }))))))), React.createElement(\"div\", {\n      id: \"options\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440\n      },\n      __self: this\n    }, React.createElement(SimpleButton, {\n      onClick: this.toggleDrawer,\n      icon: \"bars\",\n      id: \"menuBtn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441\n      },\n      __self: this\n    }), React.createElement(ZoomToExtentButton, {\n      id: \"zoomToExtBtn\",\n      map: map,\n      extent: extent1,\n      fitOptions: {\n        duration: 3000\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: haus,\n      alt: \"full extend\",\n      style: {\n        width: \"30px\",\n        heigth: \"auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450\n      },\n      __self: this\n    })), React.createElement(GeoLocationButton, {\n      onGeolocationChange: () => undefined,\n      map: map,\n      showMarker: true,\n      follow: true,\n      id: \"getlocationbtn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: getlocation,\n      alt: \"get Location\",\n      style: {\n        width: \"30px\",\n        heigth: \"auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464\n      },\n      __self: this\n    }))), React.createElement(SimpleButton, {\n      id: \"getSearchBar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: search,\n      id: \"search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473\n      },\n      __self: this\n    })), React.createElement(Displaydata, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477\n      },\n      __self: this\n    }), React.createElement(MapComponent, {\n      map: map,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479\n      },\n      __self: this\n    }), React.createElement(Drawer, {\n      title: \"Men\\xFCleiste\",\n      placement: \"left\",\n      onClose: this.toggleDrawer,\n      visible: this.state.visible,\n      mask: false,\n      width: \"60vh\",\n      id: \"Drawer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483\n      },\n      __self: this\n    }, React.createElement(Accordion, {\n      defaultActiveKey: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495\n      },\n      __self: this\n    }, React.createElement(Accordion.Toggle, {\n      as: Button,\n      variant: \"link\",\n      eventKey: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496\n      },\n      __self: this\n    }, \"Filterfunktionen\")), React.createElement(Accordion.Collapse, {\n      eventKey: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501\n      },\n      __self: this\n    }, React.createElement(SimpleButton, {\n      id: \"getSearchBarInDrawer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: search,\n      id: \"search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 503\n      },\n      __self: this\n    })), React.createElement(SimpleButton, {\n      id: \"measureBtnInDrawer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: ruler,\n      id: \"search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507\n      },\n      __self: this\n    })))))), React.createElement(Accordion, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 513\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515\n      },\n      __self: this\n    }, React.createElement(Accordion.Toggle, {\n      as: Button,\n      variant: \"link\",\n      eventKey: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 516\n      },\n      __self: this\n    }, \"Geb\\xE4udeliste\")), React.createElement(Accordion.Collapse, {\n      eventKey: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 520\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 521\n      },\n      __self: this\n    }, React.createElement(AgFeatureGrid, {\n      features: features,\n      map: this.map,\n      zoomToExtent: true,\n      selectable: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 522\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 528\n      },\n      __self: this\n    }, \"Klicke \", React.createElement(NavLink, {\n      to: \"/Buildings\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 529\n      },\n      __self: this\n    }, \"hier\"), \", um zu der ausf\\xFChrlichen Geb\\xE4ude\\xFCbersicht zu gelangen.\"))))), React.createElement(Accordion, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 536\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 537\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 538\n      },\n      __self: this\n    }, React.createElement(Accordion.Toggle, {\n      as: Button,\n      variant: \"link\",\n      eventKey: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 539\n      },\n      __self: this\n    }, \"Links\")), React.createElement(Accordion.Collapse, {\n      eventKey: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 543\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 544\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 545\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 546\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      to: \"/Buildings\",\n      target: \"_blank\",\n      id: \"gebauelisteLink\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 547\n      },\n      __self: this\n    }, \"Geb\\xE4udeliste\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 555\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"http://www.uni-koeln.de/uni/gebaeude/liste.html\",\n      target: \"_blank\",\n      id: \"gebauelisteLink\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 556\n      },\n      __self: this\n    }, \"Lagepl\\xE4ne der Uniklinik\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 564\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"https://verwaltung.uni-koeln.de/abteilung54/content/sachgebiet_4/parkraumbewirtschaftung/index_ger.html\",\n      target: \"_blank\",\n      id: \"gebauelisteLink\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 565\n      },\n      __self: this\n    }, \"Parken an der Uni\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 573\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"https://www.kvb.koeln/\",\n      target: \"_blank\",\n      id: \"gebauelisteLink\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 574\n      },\n      __self: this\n    }, \"Liniennetzplan der KVB\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 582\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"http://www.portal.uni-koeln.de/oeffnungszeiten_adr.html#c36618\",\n      target: \"_blank\",\n      id: \"gebauelisteLink\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 583\n      },\n      __self: this\n    }, \"\\xD6ffnungszeiten zentrale Geb\\xE4ude\"))))))), React.createElement(Accordion, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 596\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 597\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 598\n      },\n      __self: this\n    }, React.createElement(Accordion.Toggle, {\n      as: Button,\n      variant: \"link\",\n      eventKey: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 599\n      },\n      __self: this\n    }, \"Folge der Universit\\xE4t zu K\\xF6ln!\")), React.createElement(Accordion.Collapse, {\n      eventKey: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 603\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 604\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"https://www.facebook.com/universitaetkoeln/\",\n      target: \"_blank\",\n      className: \"fa fa-facebook\",\n      id: \"socialMediaBtn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 605\n      },\n      __self: this\n    }), React.createElement(\"a\", {\n      href: \"https://www.instagram.com/uni_koeln/?hl=de\",\n      target: \"_blank\",\n      className: \"fa fa-instagram\",\n      id: \"socialMediaBtn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 611\n      },\n      __self: this\n    }), React.createElement(\"a\", {\n      href: \"https://www.youtube.com/user/UniversitaetzuKoeln\",\n      target: \"_blank\",\n      className: \"fa fa-youtube\",\n      id: \"socialMediaBtn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 617\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 623\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 624\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"https://www.uni-koeln.de/\",\n      target: \"_blank\",\n      id: \"uniKoelnLink\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 625\n      },\n      __self: this\n    }, \"Universit\\xE4t zu K\\xF6ln\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 633\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"https://www.geographie.uni-koeln.de/\",\n      target: \"_blank\",\n      id: \"geoInstitutLink\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 634\n      },\n      __self: this\n    }, \"Geographisches Institut\"))))))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 647\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 648\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 649\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 650\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 651\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      src: uniSchriftzug,\n      alt: \"logo\",\n      id: \"logoSchriftzug\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 652\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Map;","map":{"version":3,"sources":["/Users/dirkmennecke77/Desktop/Lageplan/src/components/Map.js"],"names":["React","Component","ReactDOM","PropTypes","OlMap","OlView","OlVector","OlVectorSource","GeoJSON","OlLayerTile","OlSourceOsm","OlSourceStamen","OlStamen","Drawer","Icon","SimpleButton","MapComponent","AgFeatureGrid","ZoomToExtentButton","GeoLocationButton","LayerTransparencySlider","ToggleGroup","ToggleButton","NominatimSearch","Window","MeasureButton","OlFormatGeoJSON","Select","ZoomSlider","TileLayer","OSM","View","defaults","defaultControls","FullScreen","fromLonLat","Card","Accordion","Button","NavLink","uniSchriftzug","getlocation","haus","search","toilets","ruler","layerpng","buildingsData","klinikumBuildings","toiletsPoints","testdata","RundbauGrundriss","EtageEinsRäume","EtageZweiRäume","EtageEinsGang","Style","Fill","Stroke","layer","source","stamenLayer","center","map","controls","extend","view","zoom","maxResolution","layers","zoomslider","addControl","vector","url","format","style","fill","color","minResolution","addLayer","vectorTwo","stroke","width","GangRundbau","vectorThree","EtageEinsRäumeLayer","EtageZweiRäumeLayer","toiletsPointsLayer","src","on","updateSize","Ebenen","state","show","showTwo","hideLayer","setVisible","showLayer","hideLayerTwo","showLayerTwo","toggle","setState","currentState","toggleTwo","render","Displaydata","onMouseMove","browserEvent","coordinate","pixel","getPixelFromCoordinate","el","document","getElementById","innerHTML","forEachFeatureAtPixel","feature","get","features","readFeatures","extent1","Map","visible","toggleDrawer","duration","heigth","undefined"],"mappings":"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","sourcesContent":["/* Noch zu Erledigen: \n- Button um Übersichtskarte einzublenden\n- Button für vorige und folgende Kartenansicht\n- make divs dragable\n- set png as pointlayer src\n- change/swap basemap onClick -> stamenLayer Switcher\n- AgFeatureGrid fixen\n\n*/\n\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as PropTypes from \"prop-types\";\n\nimport \"ol/ol.css\";\nimport \"antd/dist/antd.css\";\n//import \"../react-geo.css\";\nimport OlMap from \"ol/Map\";\nimport OlView from \"ol/View\";\nimport OlVector from \"ol/layer/Vector\";\nimport OlVectorSource from \"ol/source/Vector\";\nimport GeoJSON from \"ol/format/GeoJSON\";\nimport OlLayerTile from \"ol/layer/Tile\";\nimport OlSourceOsm from \"ol/source/OSM\";\nimport OlSourceStamen from \"ol/source/Stamen\";\n//import Projection from \"ol/proj/Projection\";\nimport OlStamen from \"ol/source/Stamen\";\nimport { Drawer, Icon } from \"antd\";\nimport {\n  SimpleButton,\n  MapComponent,\n  AgFeatureGrid,\n  ZoomToExtentButton,\n  GeoLocationButton,\n  LayerTransparencySlider,\n  ToggleGroup,\n  ToggleButton,\n  NominatimSearch,\n  Window,\n  MeasureButton\n} from \"@terrestris/react-geo\";\nimport OlFormatGeoJSON from \"ol/format/GeoJSON\";\nimport Select from \"ol/interaction/Select\";\nimport { ZoomSlider } from \"ol/control\";\nimport TileLayer from \"ol/layer/Tile\";\nimport OSM from \"ol/source/OSM\";\nimport View from \"ol/View\";\nimport { defaults as defaultControls, FullScreen } from \"ol/control\";\nimport { fromLonLat } from \"ol/proj\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Card, Accordion, Button } from \"react-bootstrap\";\n\nimport { NavLink } from \"react-router-dom\";\n\nimport uniSchriftzug from \"../img/uniSchriftzug.jpg\";\nimport getlocation from \"../img/getlocation.png\";\nimport haus from \"../img/haus.jpg\";\nimport search from \"../img/search.png\";\nimport toilets from \"../img/unisex.png\";\nimport ruler from \"../img/ruler.png\";\nimport layerpng from \"../img/layer.png\";\n\nimport buildingsData from \"../campusGisBuildings.geojson\";\nimport klinikumBuildings from \"../UniklinikBuildings.geojson\";\nimport toiletsPoints from \"../toilets.geojson\";\nimport testdata from \"../testdata.json\";\n\nimport RundbauGrundriss from \"../RundbauGrundriss.geojson\";\nimport EtageEinsRäume from \"../EtageEinsRäume.geojson\";\nimport EtageZweiRäume from \"../EtageZweiRäume.geojson\";\nimport EtageEinsGang from \"../EtageEinsGang.geojson\";\n\nimport { Style, Fill, Stroke } from \"ol/style\";\n\nconst layer = new OlLayerTile({\n  source: new OlSourceOsm()\n});\n\nconst stamenLayer = new OlLayerTile({\n  source: new OlStamen({\n    layer: \"terrain\"\n  })\n});\n\nconst center = [771105.02, 6608382.01]; //Cologne\n\n// create a new instance of ol.map in ES6 syntax\nconst map = new OlMap({\n  controls: defaultControls().extend([new FullScreen()]),\n  view: new OlView({\n    center: center,\n    zoom: 0.9,\n    maxResolution: 7\n  }),\n  layers: [stamenLayer]\n});\n\nvar zoomslider = new ZoomSlider();\nmap.addControl(zoomslider);\n\n// adding GeoJSON to the map (buildings)\nconst vector = new OlVector({\n  source: new OlVectorSource({\n    url: buildingsData,\n    format: new GeoJSON()\n  }),\n  style: new Style({\n    fill: new Fill({\n      color: \"#354d60\"\n    })\n    /* the following few lines of code will make the map buggy\n    stroke: new Stroke({\n      color: \"black\",\n      width: 0.2\n    })\n    */\n  }),\n  minResolution: 0.4\n});\n\nmap.addLayer(vector);\n\n// adding GeoJSON to the map (rooms)\nconst vectorTwo = new OlVector({\n  source: new OlVectorSource({\n    url: RundbauGrundriss,\n    format: new GeoJSON()\n  }),\n  style: new Style({\n    fill: new Fill({\n      color: \"grey\"\n    }),\n    stroke: new Stroke({\n      color: \"black\",\n      width: 1.2\n    })\n  }),\n  maxResolution: 0.39999999\n});\n\nmap.addLayer(vectorTwo);\n\n// adding GeoJSON to the map (Gang)\nconst GangRundbau = new OlVector({\n  source: new OlVectorSource({\n    url: EtageEinsGang,\n    format: new GeoJSON()\n  }),\n  style: new Style({\n    fill: new Fill({\n      color: \"grey\"\n    }),\n    stroke: new Stroke({\n      color: \"red\",\n      width: 5\n    })\n  }),\n  maxResolution: 0.39999999\n});\n\nmap.addLayer(GangRundbau);\n\n// adding GeoJSON to the map (rooms)\nconst vectorThree = new OlVector({\n  source: new OlVectorSource({\n    url: klinikumBuildings,\n    format: new GeoJSON()\n  }),\n  style: new Style({\n    fill: new Fill({\n      color: \"#5493C4\"\n    }),\n    stroke: new Stroke({\n      color: \"black\",\n      width: 1.2\n    })\n  }),\n  minResolution: 0.4\n});\n\nmap.addLayer(vectorThree);\n\n// adding GeoJSON to the map (EtageEinsRäume)\nconst EtageEinsRäumeLayer = new OlVector({\n  source: new OlVectorSource({\n    url: EtageEinsRäume,\n    format: new GeoJSON()\n  }),\n  style: new Style({\n    fill: new Fill({\n      color: \"blue\"\n    }),\n    stroke: new Stroke({\n      color: \"black\",\n      width: 1.2\n    })\n  }),\n  maxResolution: 0.39999999\n});\n\nmap.addLayer(EtageEinsRäumeLayer);\n\n// adding GeoJSON to the map (EtageZweiRäume)\nconst EtageZweiRäumeLayer = new OlVector({\n  source: new OlVectorSource({\n    url: EtageZweiRäume,\n    format: new GeoJSON()\n  }),\n  style: new Style({\n    fill: new Fill({\n      color: \"blue\"\n    }),\n    stroke: new Stroke({\n      color: \"black\",\n      width: 1.2\n    })\n  }),\n  maxResolution: 0.39999999\n});\n\nmap.addLayer(EtageZweiRäumeLayer);\n\n// adding GeoJSON to the map (toilets)\nconst toiletsPointsLayer = new OlVector({\n  source: new OlVectorSource({\n    url: toiletsPoints,\n    format: new GeoJSON(),\n    src: toilets\n  })\n});\n\nmap.addLayer(toiletsPointsLayer);\n\nmap.on(\"postcompose\", map.updateSize);\n\nclass Ebenen extends Component {\n  state = {\n    show: true,\n    showTwo: true,\n    color: false\n  };\n\n  hideLayer = () => {\n    EtageEinsRäumeLayer.setVisible(false);\n  };\n\n  showLayer = () => {\n    EtageEinsRäumeLayer.setVisible(true);\n  };\n\n  hideLayerTwo = () => {\n    EtageZweiRäumeLayer.setVisible(false);\n  };\n\n  showLayerTwo = () => {\n    EtageZweiRäumeLayer.setVisible(true);\n  };\n\n  toggle = () => this.setState(currentState => ({ show: !currentState.show }));\n\n  toggleTwo = () =>\n    this.setState(currentState => ({ showTwo: !currentState.showTwo }));\n\n  render() {\n    return (\n      <div id='ContainerEbenen'>\n        <button className='EbenenBtn' onClick={this.toggleTwo}>\n          {this.state.showTwo ? this.hideLayerTwo() : this.showLayerTwo()}Etage\n          2\n        </button>\n\n        <button className='EbenenBtn' id='button' onClick={this.toggle}>\n          {this.state.show ? this.hideLayer() : this.showLayer()} Etage 1\n        </button>\n      </div>\n    );\n  }\n}\n\nclass Displaydata extends Component {\n  render() {\n    return (\n      <div id='displayData'>\n        <div id='rowOne' className='rowDisplayData'>\n          <p>Gebäudenummer</p>\n          <p>Name</p>\n          <p>Klinikum/Universität</p>\n          <p>Straße</p>\n        </div>\n\n        {/* the clicked table rows data from Buildings.js should apear here */}\n        <div id='rowTwo' className='rowDisplayData'>\n          <p id='Gebäudenummer'></p>\n          <p id='Name'></p>\n          <p id='Art'></p>\n          <p id='Straße'></p>\n        </div>\n      </div>\n    );\n  }\n}\n\n// when the user moves the mouse, get the name property\n// from each feature under the mouse and display it in <DisplayData />\nfunction onMouseMove(browserEvent) {\n  var coordinate = browserEvent.coordinate;\n  var pixel = map.getPixelFromCoordinate(coordinate);\n  var el = document.getElementById(\"Gebäudenummer\");\n  el.innerHTML = \"\";\n  map.forEachFeatureAtPixel(pixel, function(feature) {\n    el.innerHTML += feature.get(\"GEBNR\") + \"<br>\";\n  });\n\n  var el = document.getElementById(\"Name\");\n  el.innerHTML = \"\";\n  map.forEachFeatureAtPixel(pixel, function(feature) {\n    el.innerHTML += feature.get(\"NAME\") + \"<br>\";\n  });\n\n  var el = document.getElementById(\"Straße\");\n  el.innerHTML = \"\";\n  map.forEachFeatureAtPixel(pixel, function(feature) {\n    el.innerHTML += feature.get(\"Straße\") + \"<br>\";\n  });\n\n  var el = document.getElementById(\"Art\");\n  el.innerHTML = \"\";\n  map.forEachFeatureAtPixel(pixel, function(feature) {\n    el.innerHTML += feature.get(\"Klinikum/Universität\") + \"<br>\";\n  });\n}\nmap.on(\"click\", onMouseMove);\n\n// AgFeatureGrid\n\nconst format = new OlFormatGeoJSON();\nconst features = format.readFeatures(testdata);\n\n// An array of numbers representing an extent: [minx, miny, maxx, maxy].\nconst extent1 = [988948, 1584461, 50935173, 6953101];\n\n// map class with map component, DisplayData Class, Simple Button and Drawer\nclass Map extends Component {\n  state = { visible: false, show: false, showTwo: false };\n\n  toggleDrawer = () => {\n    this.setState({ visible: !this.state.visible });\n  };\n\n  hideLayer = () => {\n    vector.setVisible(false);\n  };\n\n  showLayer = () => {\n    vector.setVisible(true);\n  };\n\n  hideLayerTwo = () => {\n    vectorThree.setVisible(false);\n  };\n\n  showLayerTwo = () => {\n    vectorThree.setVisible(true);\n  };\n\n  toggle = () => this.setState(currentState => ({ show: !currentState.show }));\n\n  toggleTwo = () =>\n    this.setState(currentState => ({ showTwo: !currentState.showTwo }));\n\n  render() {\n    return (\n      <div className='App'>\n        <Accordion>\n          <Card id='LegendeLayerAccordion'>\n            <Card.Header id='LegendeLayerToggle'>\n              <Accordion.Toggle\n                as={Button}\n                variant='link'\n                eventKey='0'\n                id='LegendeLayerToggle'\n              >\n                <img id='layerpng' src={layerpng}></img>\n              </Accordion.Toggle>\n            </Card.Header>\n            <Accordion.Collapse eventKey='0'>\n              <Card.Body>\n                <div id='containerHintergrund'>\n                  <span className='underline'>Hintergrund Karte</span>\n                  <br></br>\n                  <button id='hintergrundBtnOne'>1</button>\n                  <button id='hintergrundBtnTwo'>2</button>\n                </div>\n                <div id='containerEbenen'>\n                  <span className='underline'>Etagen</span>\n                  <Ebenen />\n                </div>\n                <div id='containerLayer'>\n                  <span className='underline'>Layer</span>\n                  <div id='containerLayerGrid'>\n                    <SimpleButton\n                      onClick={this.toggle}\n                      className='layerVisibilityBtn'\n                    >\n                      {this.state.showTwo\n                        ? this.hideLayerTwo()\n                        : this.showLayerTwo()}\n                    </SimpleButton>\n                    <div id='blue'></div>\n                    <div className='LayerLegendeText'>Universität</div>\n                  </div>\n                  <LayerTransparencySlider\n                    layer={vector}\n                    className='transparencyVector'\n                  />\n                </div>\n\n                <div id='containerLayer'>\n                  <div id='containerLayerGrid'>\n                    <SimpleButton\n                      onClick={this.toggleTwo}\n                      className='layerVisibilityBtn'\n                    >\n                      {this.state.show ? this.hideLayer() : this.showLayer()}\n                    </SimpleButton>\n                    <div id='red'></div>\n                    <div className='LayerLegendeText'>Uniklinik</div>\n                    <LayerTransparencySlider\n                      layer={vectorThree}\n                      className='transparencyVector'\n                    />\n                  </div>\n                </div>\n              </Card.Body>\n            </Accordion.Collapse>\n          </Card>\n        </Accordion>\n\n        <div id='options'>\n          <SimpleButton onClick={this.toggleDrawer} icon='bars' id='menuBtn' />\n          <ZoomToExtentButton\n            id='zoomToExtBtn'\n            map={map}\n            extent={extent1}\n            fitOptions={{\n              duration: 3000\n            }}\n          >\n            <img\n              src={haus}\n              alt='full extend'\n              style={{ width: \"30px\", heigth: \"auto\" }}\n            ></img>\n          </ZoomToExtentButton>\n\n          <GeoLocationButton\n            onGeolocationChange={() => undefined}\n            map={map}\n            showMarker={true}\n            follow={true}\n            id='getlocationbtn'\n          >\n            <img\n              src={getlocation}\n              alt='get Location'\n              style={{ width: \"30px\", heigth: \"auto\" }}\n            ></img>\n          </GeoLocationButton>\n        </div>\n\n        <SimpleButton id='getSearchBar'>\n          <img src={search} id='search'></img>\n        </SimpleButton>\n\n        {/* DisplayData at the bottom left */}\n        <Displaydata />\n        {/* MAP */}\n        <MapComponent map={map} />\n        {/* Button on the left -> opens menu bar on click*/}\n\n        {/* this is the menu bar */}\n        <Drawer\n          title='Menüleiste'\n          placement='left'\n          onClose={this.toggleDrawer}\n          visible={this.state.visible}\n          mask={false}\n          width='60vh'\n          id='Drawer'\n        >\n          {/* this is the accordion within the menu bar */}\n          <Accordion defaultActiveKey='0'>\n            <Card>\n              <Card.Header>\n                <Accordion.Toggle as={Button} variant='link' eventKey='0'>\n                  Filterfunktionen\n                </Accordion.Toggle>\n              </Card.Header>\n              <Accordion.Collapse eventKey='0'>\n                <Card.Body>\n                  <SimpleButton id='getSearchBarInDrawer'>\n                    <img src={search} id='search'></img>\n                  </SimpleButton>\n\n                  <SimpleButton id='measureBtnInDrawer'>\n                    <img src={ruler} id='search'></img>\n                  </SimpleButton>\n                </Card.Body>\n              </Accordion.Collapse>\n            </Card>\n          </Accordion>\n          <Accordion>\n            <Card>\n              <Card.Header>\n                <Accordion.Toggle as={Button} variant='link' eventKey='0'>\n                  Gebäudeliste\n                </Accordion.Toggle>\n              </Card.Header>\n              <Accordion.Collapse eventKey='0'>\n                <Card.Body>\n                  <AgFeatureGrid\n                    features={features}\n                    map={this.map}\n                    zoomToExtent={true}\n                    selectable={true}\n                  />\n                  <span>\n                    Klicke <NavLink to='/Buildings'>hier</NavLink>, um zu der\n                    ausführlichen Gebäudeübersicht zu gelangen.\n                  </span>\n                </Card.Body>\n              </Accordion.Collapse>\n            </Card>\n          </Accordion>\n          <Accordion>\n            <Card>\n              <Card.Header>\n                <Accordion.Toggle as={Button} variant='link' eventKey='0'>\n                  Links\n                </Accordion.Toggle>\n              </Card.Header>\n              <Accordion.Collapse eventKey='0'>\n                <Card.Body>\n                  <ul>\n                    <li>\n                      <NavLink\n                        to='/Buildings'\n                        target='_blank'\n                        id='gebauelisteLink'\n                      >\n                        Gebäudeliste\n                      </NavLink>\n                    </li>\n                    <li>\n                      <a\n                        href='http://www.uni-koeln.de/uni/gebaeude/liste.html'\n                        target='_blank'\n                        id='gebauelisteLink'\n                      >\n                        Lagepläne der Uniklinik\n                      </a>\n                    </li>\n                    <li>\n                      <a\n                        href='https://verwaltung.uni-koeln.de/abteilung54/content/sachgebiet_4/parkraumbewirtschaftung/index_ger.html'\n                        target='_blank'\n                        id='gebauelisteLink'\n                      >\n                        Parken an der Uni\n                      </a>\n                    </li>\n                    <li>\n                      <a\n                        href='https://www.kvb.koeln/'\n                        target='_blank'\n                        id='gebauelisteLink'\n                      >\n                        Liniennetzplan der KVB\n                      </a>\n                    </li>\n                    <li>\n                      <a\n                        href='http://www.portal.uni-koeln.de/oeffnungszeiten_adr.html#c36618'\n                        target='_blank'\n                        id='gebauelisteLink'\n                      >\n                        Öffnungszeiten zentrale Gebäude\n                      </a>\n                    </li>\n                  </ul>\n                </Card.Body>\n              </Accordion.Collapse>\n            </Card>\n          </Accordion>\n          <Accordion>\n            <Card>\n              <Card.Header>\n                <Accordion.Toggle as={Button} variant='link' eventKey='0'>\n                  Folge der Universität zu Köln!\n                </Accordion.Toggle>\n              </Card.Header>\n              <Accordion.Collapse eventKey='0'>\n                <Card.Body>\n                  <a\n                    href='https://www.facebook.com/universitaetkoeln/'\n                    target='_blank'\n                    className='fa fa-facebook'\n                    id='socialMediaBtn'\n                  ></a>\n                  <a\n                    href='https://www.instagram.com/uni_koeln/?hl=de'\n                    target='_blank'\n                    className='fa fa-instagram'\n                    id='socialMediaBtn'\n                  ></a>\n                  <a\n                    href='https://www.youtube.com/user/UniversitaetzuKoeln'\n                    target='_blank'\n                    className='fa fa-youtube'\n                    id='socialMediaBtn'\n                  ></a>\n                  <ul>\n                    <li>\n                      <a\n                        href='https://www.uni-koeln.de/'\n                        target='_blank'\n                        id='uniKoelnLink'\n                      >\n                        Universität zu Köln\n                      </a>\n                    </li>\n                    <li>\n                      <a\n                        href='https://www.geographie.uni-koeln.de/'\n                        target='_blank'\n                        id='geoInstitutLink'\n                      >\n                        Geographisches Institut\n                      </a>\n                    </li>\n                  </ul>\n                </Card.Body>\n              </Accordion.Collapse>\n            </Card>\n          </Accordion>\n          <br></br>\n          <br></br>\n          <br></br>\n          <br></br>\n          <br></br>\n          <img src={uniSchriftzug} alt='logo' id='logoSchriftzug' />\n        </Drawer>\n      </div>\n    );\n  }\n}\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}