{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nrequire(\"antd/es/tooltip/style\");\n\nvar _tooltip = _interopRequireDefault(require(\"antd/es/tooltip\"));\n\nrequire(\"antd/es/button/style\");\n\nvar _button = _interopRequireDefault(require(\"antd/es/button\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactFa = require(\"react-fa\");\n\nvar _isFunction = _interopRequireDefault(require(\"lodash/isFunction\"));\n\nrequire(\"./ToggleButton.less\");\n\nvar _constants = require(\"../../constants\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/**\n * The ToggleButton.\n *\n * @class The ToggleButton\n * @extends React.Component\n */\n\n\nvar ToggleButton =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ToggleButton, _React$Component);\n\n  _createClass(ToggleButton, null, [{\n    key: \"getDerivedStateFromProps\",\n\n    /**\n     * The className added to this component.\n     * @type {String}\n     * @private\n     */\n\n    /**\n     * The class to apply for a toggled/pressed button.\n     * @type {String}\n     */\n\n    /**\n     * The properties.\n     * @type {Object}\n     */\n\n    /**\n     * The default properties.\n     * @type {Object}\n     */\n\n    /**\n     * Invoked right before calling the render method, both on the initial mount\n     * and on subsequent updates. It should return an object to update the state,\n     * or null to update nothing.\n     * @param {Object} nextProps The next properties.\n     * @param {Object} prevState The previous state.\n     */\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      // Checks to see if the pressed property has changed\n      if (prevState.pressed !== nextProps.pressed) {\n        return {\n          pressed: nextProps.pressed,\n          overallPressed: nextProps.pressed,\n          isClicked: false,\n          lastClickEvt: null\n        };\n      }\n\n      return null;\n    }\n    /**\n     * Creates the ToggleButton.\n     *\n     * @constructs ToggleButton\n     */\n\n  }]);\n\n  function ToggleButton(props) {\n    var _this;\n\n    _classCallCheck(this, ToggleButton);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ToggleButton).call(this, props)); // Instantiate the state.\n    // components state\n\n    _defineProperty(_assertThisInitialized(_this), \"className\", \"\".concat(_constants.CSS_PREFIX, \"togglebutton\"));\n\n    _defineProperty(_assertThisInitialized(_this), \"pressedClass\", 'btn-pressed');\n\n    _this.state = {\n      pressed: props.pressed,\n      lastClickEvt: null,\n      overallPressed: props.pressed,\n      isClicked: false\n    };\n    return _this;\n  }\n  /**\n   * We will handle the initial state of the button here.\n   * If it is pressed, we will have to call its `onToggle`\n   * method, if it exists, in order to reflect the initial\n   * state correctly (e.g. activating ol.Controls)\n   */\n\n\n  _createClass(ToggleButton, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.onToggle && this.props.pressed === true) {\n        this.props.onToggle(true, null);\n      }\n    }\n    /**\n     * Invoked immediately after updating occurs. This method is not called\n     * for the initial render.\n     * @method\n     */\n\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var onToggle = this.props.onToggle;\n      var _this$state = this.state,\n          pressed = _this$state.pressed,\n          lastClickEvt = _this$state.lastClickEvt,\n          overallPressed = _this$state.overallPressed,\n          isClicked = _this$state.isClicked;\n      /**\n       * the following is performed here as a hack to keep track of the pressed changes.\n       *\n       * check if the button has been clicked\n       * |__ YES: ==> toggle the button\n       * |\n       * |__ NO: check if the prop has changed\n       *        |__ YES: ==> Toggle the button\n       *        |__ NO: check if previous update action was a click\n       *                |__ YES: ==> run the Toggle function fo the prop value\n       */\n\n      var shouldToggle;\n\n      if (isClicked || prevState.pressed !== pressed || prevState.isClicked) {\n        if (isClicked) {\n          // button is clicked\n          shouldToggle = true;\n        } else {\n          // check for prop change\n          if (pressed !== prevState.overallPressed) {\n            // pressed prop has changed\n            shouldToggle = true;\n          } else {\n            if (prevState.isClicked) {\n              // prop has not changed but the previous was click event\n              if (prevState.overallPressed !== overallPressed) {\n                shouldToggle = true;\n              }\n            }\n          }\n        }\n\n        if (shouldToggle && onToggle) {\n          onToggle(overallPressed, lastClickEvt);\n        }\n      }\n    }\n    /**\n     * Called on click.\n     *\n     * @param {ClickEvent} evt The ClickEvent.\n     * @method\n     */\n\n  }, {\n    key: \"onClick\",\n    value: function onClick(evt) {\n      var _this2 = this;\n\n      this.setState({\n        overallPressed: !this.state.overallPressed,\n        lastClickEvt: evt,\n        isClicked: true\n      }, function () {\n        // This part can be removed in future if the ToggleGroup button is removed.\n        if (_this2.context.toggleGroup && (0, _isFunction[\"default\"])(_this2.context.toggleGroup.onChange)) {\n          _this2.context.toggleGroup.onChange(_this2.props); // this allows for the allowDeselect property to be taken into account\n          // when used with ToggleGroup. Since the ToggleGroup changes the\n          // pressed prop for its child components the click event dose not need to\n          // change the pressed property.\n\n\n          _this2.setState({\n            overallPressed: !_this2.state.overallPressed\n          });\n        }\n      });\n    }\n    /**\n     * The render function.\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          name = _this$props.name,\n          icon = _this$props.icon,\n          pressedIcon = _this$props.pressedIcon,\n          fontIcon = _this$props.fontIcon,\n          pressed = _this$props.pressed,\n          onToggle = _this$props.onToggle,\n          tooltip = _this$props.tooltip,\n          tooltipPlacement = _this$props.tooltipPlacement,\n          tooltipProps = _this$props.tooltipProps,\n          antBtnProps = _objectWithoutProperties(_this$props, [\"className\", \"name\", \"icon\", \"pressedIcon\", \"fontIcon\", \"pressed\", \"onToggle\", \"tooltip\", \"tooltipPlacement\", \"tooltipProps\"]);\n\n      var onClick = antBtnProps.onClick,\n          filteredAntBtnProps = _objectWithoutProperties(antBtnProps, [\"onClick\"]);\n\n      var finalClassName = className ? \"\".concat(className, \" \").concat(this.className) : this.className;\n      var iconName = icon;\n      var pressedClass = '';\n\n      if (this.state.overallPressed) {\n        iconName = pressedIcon || icon;\n        pressedClass = \" \".concat(this.pressedClass, \" \");\n      }\n\n      return _react[\"default\"].createElement(_tooltip[\"default\"], _extends({\n        title: tooltip,\n        placement: tooltipPlacement\n      }, tooltipProps), _react[\"default\"].createElement(_button[\"default\"], _extends({\n        className: \"\".concat(finalClassName).concat(pressedClass),\n        onClick: this.onClick.bind(this)\n      }, filteredAntBtnProps), _react[\"default\"].createElement(_reactFa.Icon, {\n        name: iconName,\n        className: fontIcon\n      }), antBtnProps.children));\n    }\n  }]);\n\n  return ToggleButton;\n}(_react[\"default\"].Component);\n\n_defineProperty(ToggleButton, \"propTypes\", {\n  name: _propTypes[\"default\"].string,\n  icon: _propTypes[\"default\"].string,\n  pressedIcon: _propTypes[\"default\"].string,\n  fontIcon: _propTypes[\"default\"].string,\n  pressed: _propTypes[\"default\"].bool,\n  onToggle: _propTypes[\"default\"].func,\n  tooltip: _propTypes[\"default\"].string,\n  tooltipPlacement: _propTypes[\"default\"].string,\n\n  /**\n   * Additional [antd tooltip](https://ant.design/components/tooltip/)\n   * properties to pass to the tooltip component. Note: The props `title`\n   * and `placement` will override the props `tooltip` and `tooltipPlacement`\n   * of this component!\n   * @type {Object}\n   */\n  tooltipProps: _propTypes[\"default\"].object,\n  className: _propTypes[\"default\"].string\n});\n\n_defineProperty(ToggleButton, \"defaultProps\", {\n  type: 'primary',\n  icon: '',\n  pressed: false,\n  tooltipProps: {\n    mouseEnterDelay: 1.5\n  }\n  /**\n   * The context types.\n   * @type {Object}\n   */\n\n});\n\n_defineProperty(ToggleButton, \"contextTypes\", {\n  toggleGroup: _propTypes[\"default\"].object\n});\n\nvar _default = ToggleButton;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/dirkmennecke77/Desktop/Lageplan/node_modules/@terrestris/react-geo/dist/Button/ToggleButton/ToggleButton.js"],"names":["Object","defineProperty","exports","value","require","_tooltip","_interopRequireDefault","_button","_react","_propTypes","_reactFa","_isFunction","_constants","obj","__esModule","_typeof","Symbol","iterator","constructor","prototype","_extends","assign","target","i","arguments","length","source","key","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","indexOf","propertyIsEnumerable","sourceKeys","keys","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","_assertThisInitialized","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","ReferenceError","_defineProperties","props","descriptor","enumerable","configurable","writable","_createClass","protoProps","staticProps","_inherits","subClass","superClass","create","_setPrototypeOf","p","_defineProperty","ToggleButton","_React$Component","getDerivedStateFromProps","nextProps","prevState","pressed","overallPressed","isClicked","lastClickEvt","_this","concat","CSS_PREFIX","state","componentDidMount","onToggle","componentDidUpdate","prevProps","_this$state","shouldToggle","onClick","evt","_this2","setState","context","toggleGroup","onChange","render","_this$props","className","name","icon","pressedIcon","fontIcon","tooltip","tooltipPlacement","tooltipProps","antBtnProps","filteredAntBtnProps","finalClassName","iconName","pressedClass","createElement","title","placement","bind","Icon","children","Component","string","bool","func","object","type","mouseEnterDelay","_default"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAAC,SAAD,CAAP,GAAqB,KAAK,CAA1B;;AAEAE,OAAO,CAAC,uBAAD,CAAP;;AAEA,IAAIC,QAAQ,GAAGC,sBAAsB,CAACF,OAAO,CAAC,iBAAD,CAAR,CAArC;;AAEAA,OAAO,CAAC,sBAAD,CAAP;;AAEA,IAAIG,OAAO,GAAGD,sBAAsB,CAACF,OAAO,CAAC,gBAAD,CAAR,CAApC;;AAEA,IAAII,MAAM,GAAGF,sBAAsB,CAACF,OAAO,CAAC,OAAD,CAAR,CAAnC;;AAEA,IAAIK,UAAU,GAAGH,sBAAsB,CAACF,OAAO,CAAC,YAAD,CAAR,CAAvC;;AAEA,IAAIM,QAAQ,GAAGN,OAAO,CAAC,UAAD,CAAtB;;AAEA,IAAIO,WAAW,GAAGL,sBAAsB,CAACF,OAAO,CAAC,mBAAD,CAAR,CAAxC;;AAEAA,OAAO,CAAC,qBAAD,CAAP;;AAEA,IAAIQ,UAAU,GAAGR,OAAO,CAAC,iBAAD,CAAxB;;AAEA,SAASE,sBAAT,CAAgCO,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAE,eAAWA;AAAb,GAArC;AAA0D;;AAEjG,SAASE,OAAT,CAAiBF,GAAjB,EAAsB;AAAE,MAAI,OAAOG,MAAP,KAAkB,UAAlB,IAAgC,OAAOA,MAAM,CAACC,QAAd,KAA2B,QAA/D,EAAyE;AAAEF,IAAAA,OAAO,GAAG,SAASA,OAAT,CAAiBF,GAAjB,EAAsB;AAAE,aAAO,OAAOA,GAAd;AAAoB,KAAtD;AAAyD,GAApI,MAA0I;AAAEE,IAAAA,OAAO,GAAG,SAASA,OAAT,CAAiBF,GAAjB,EAAsB;AAAE,aAAOA,GAAG,IAAI,OAAOG,MAAP,KAAkB,UAAzB,IAAuCH,GAAG,CAACK,WAAJ,KAAoBF,MAA3D,IAAqEH,GAAG,KAAKG,MAAM,CAACG,SAApF,GAAgG,QAAhG,GAA2G,OAAON,GAAzH;AAA+H,KAAjK;AAAoK;;AAAC,SAAOE,OAAO,CAACF,GAAD,CAAd;AAAsB;;AAE/V,SAASO,QAAT,GAAoB;AAAEA,EAAAA,QAAQ,GAAGpB,MAAM,CAACqB,MAAP,IAAiB,UAAUC,MAAV,EAAkB;AAAE,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,UAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;AAA2B,WAAK,IAAII,GAAT,IAAgBD,MAAhB,EAAwB;AAAE,YAAI1B,MAAM,CAACmB,SAAP,CAAiBS,cAAjB,CAAgCC,IAAhC,CAAqCH,MAArC,EAA6CC,GAA7C,CAAJ,EAAuD;AAAEL,UAAAA,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AAA4B;AAAE;AAAE;;AAAC,WAAOL,MAAP;AAAgB,GAA5P;;AAA8P,SAAOF,QAAQ,CAACU,KAAT,CAAe,IAAf,EAAqBN,SAArB,CAAP;AAAyC;;AAE7T,SAASO,wBAAT,CAAkCL,MAAlC,EAA0CM,QAA1C,EAAoD;AAAE,MAAIN,MAAM,IAAI,IAAd,EAAoB,OAAO,EAAP;;AAAW,MAAIJ,MAAM,GAAGW,6BAA6B,CAACP,MAAD,EAASM,QAAT,CAA1C;;AAA8D,MAAIL,GAAJ,EAASJ,CAAT;;AAAY,MAAIvB,MAAM,CAACkC,qBAAX,EAAkC;AAAE,QAAIC,gBAAgB,GAAGnC,MAAM,CAACkC,qBAAP,CAA6BR,MAA7B,CAAvB;;AAA6D,SAAKH,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGY,gBAAgB,CAACV,MAAjC,EAAyCF,CAAC,EAA1C,EAA8C;AAAEI,MAAAA,GAAG,GAAGQ,gBAAgB,CAACZ,CAAD,CAAtB;AAA2B,UAAIS,QAAQ,CAACI,OAAT,CAAiBT,GAAjB,KAAyB,CAA7B,EAAgC;AAAU,UAAI,CAAC3B,MAAM,CAACmB,SAAP,CAAiBkB,oBAAjB,CAAsCR,IAAtC,CAA2CH,MAA3C,EAAmDC,GAAnD,CAAL,EAA8D;AAAUL,MAAAA,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AAA4B;AAAE;;AAAC,SAAOL,MAAP;AAAgB;;AAE5e,SAASW,6BAAT,CAAuCP,MAAvC,EAA+CM,QAA/C,EAAyD;AAAE,MAAIN,MAAM,IAAI,IAAd,EAAoB,OAAO,EAAP;AAAW,MAAIJ,MAAM,GAAG,EAAb;AAAiB,MAAIgB,UAAU,GAAGtC,MAAM,CAACuC,IAAP,CAAYb,MAAZ,CAAjB;AAAsC,MAAIC,GAAJ,EAASJ,CAAT;;AAAY,OAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGe,UAAU,CAACb,MAA3B,EAAmCF,CAAC,EAApC,EAAwC;AAAEI,IAAAA,GAAG,GAAGW,UAAU,CAACf,CAAD,CAAhB;AAAqB,QAAIS,QAAQ,CAACI,OAAT,CAAiBT,GAAjB,KAAyB,CAA7B,EAAgC;AAAUL,IAAAA,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AAA4B;;AAAC,SAAOL,MAAP;AAAgB;;AAEnT,SAASkB,eAAT,CAAyBC,QAAzB,EAAmCC,WAAnC,EAAgD;AAAE,MAAI,EAAED,QAAQ,YAAYC,WAAtB,CAAJ,EAAwC;AAAE,UAAM,IAAIC,SAAJ,CAAc,mCAAd,CAAN;AAA2D;AAAE;;AAEzJ,SAASC,0BAAT,CAAoCC,IAApC,EAA0ChB,IAA1C,EAAgD;AAAE,MAAIA,IAAI,KAAKd,OAAO,CAACc,IAAD,CAAP,KAAkB,QAAlB,IAA8B,OAAOA,IAAP,KAAgB,UAAnD,CAAR,EAAwE;AAAE,WAAOA,IAAP;AAAc;;AAAC,SAAOiB,sBAAsB,CAACD,IAAD,CAA7B;AAAsC;;AAEjL,SAASE,eAAT,CAAyBC,CAAzB,EAA4B;AAAED,EAAAA,eAAe,GAAG/C,MAAM,CAACiD,cAAP,GAAwBjD,MAAM,CAACkD,cAA/B,GAAgD,SAASH,eAAT,CAAyBC,CAAzB,EAA4B;AAAE,WAAOA,CAAC,CAACG,SAAF,IAAenD,MAAM,CAACkD,cAAP,CAAsBF,CAAtB,CAAtB;AAAiD,GAAjJ;AAAmJ,SAAOD,eAAe,CAACC,CAAD,CAAtB;AAA4B;;AAE7M,SAASF,sBAAT,CAAgCD,IAAhC,EAAsC;AAAE,MAAIA,IAAI,KAAK,KAAK,CAAlB,EAAqB;AAAE,UAAM,IAAIO,cAAJ,CAAmB,2DAAnB,CAAN;AAAwF;;AAAC,SAAOP,IAAP;AAAc;;AAEtK,SAASQ,iBAAT,CAA2B/B,MAA3B,EAAmCgC,KAAnC,EAA0C;AAAE,OAAK,IAAI/B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG+B,KAAK,CAAC7B,MAA1B,EAAkCF,CAAC,EAAnC,EAAuC;AAAE,QAAIgC,UAAU,GAAGD,KAAK,CAAC/B,CAAD,CAAtB;AAA2BgC,IAAAA,UAAU,CAACC,UAAX,GAAwBD,UAAU,CAACC,UAAX,IAAyB,KAAjD;AAAwDD,IAAAA,UAAU,CAACE,YAAX,GAA0B,IAA1B;AAAgC,QAAI,WAAWF,UAAf,EAA2BA,UAAU,CAACG,QAAX,GAAsB,IAAtB;AAA4B1D,IAAAA,MAAM,CAACC,cAAP,CAAsBqB,MAAtB,EAA8BiC,UAAU,CAAC5B,GAAzC,EAA8C4B,UAA9C;AAA4D;AAAE;;AAE7T,SAASI,YAAT,CAAsBjB,WAAtB,EAAmCkB,UAAnC,EAA+CC,WAA/C,EAA4D;AAAE,MAAID,UAAJ,EAAgBP,iBAAiB,CAACX,WAAW,CAACvB,SAAb,EAAwByC,UAAxB,CAAjB;AAAsD,MAAIC,WAAJ,EAAiBR,iBAAiB,CAACX,WAAD,EAAcmB,WAAd,CAAjB;AAA6C,SAAOnB,WAAP;AAAqB;;AAEvN,SAASoB,SAAT,CAAmBC,QAAnB,EAA6BC,UAA7B,EAAyC;AAAE,MAAI,OAAOA,UAAP,KAAsB,UAAtB,IAAoCA,UAAU,KAAK,IAAvD,EAA6D;AAAE,UAAM,IAAIrB,SAAJ,CAAc,oDAAd,CAAN;AAA4E;;AAACoB,EAAAA,QAAQ,CAAC5C,SAAT,GAAqBnB,MAAM,CAACiE,MAAP,CAAcD,UAAU,IAAIA,UAAU,CAAC7C,SAAvC,EAAkD;AAAED,IAAAA,WAAW,EAAE;AAAEf,MAAAA,KAAK,EAAE4D,QAAT;AAAmBL,MAAAA,QAAQ,EAAE,IAA7B;AAAmCD,MAAAA,YAAY,EAAE;AAAjD;AAAf,GAAlD,CAArB;AAAkJ,MAAIO,UAAJ,EAAgBE,eAAe,CAACH,QAAD,EAAWC,UAAX,CAAf;AAAwC;;AAEjY,SAASE,eAAT,CAAyBlB,CAAzB,EAA4BmB,CAA5B,EAA+B;AAAED,EAAAA,eAAe,GAAGlE,MAAM,CAACiD,cAAP,IAAyB,SAASiB,eAAT,CAAyBlB,CAAzB,EAA4BmB,CAA5B,EAA+B;AAAEnB,IAAAA,CAAC,CAACG,SAAF,GAAcgB,CAAd;AAAiB,WAAOnB,CAAP;AAAW,GAAxG;;AAA0G,SAAOkB,eAAe,CAAClB,CAAD,EAAImB,CAAJ,CAAtB;AAA+B;;AAE1K,SAASC,eAAT,CAAyBvD,GAAzB,EAA8Bc,GAA9B,EAAmCxB,KAAnC,EAA0C;AAAE,MAAIwB,GAAG,IAAId,GAAX,EAAgB;AAAEb,IAAAA,MAAM,CAACC,cAAP,CAAsBY,GAAtB,EAA2Bc,GAA3B,EAAgC;AAAExB,MAAAA,KAAK,EAAEA,KAAT;AAAgBqD,MAAAA,UAAU,EAAE,IAA5B;AAAkCC,MAAAA,YAAY,EAAE,IAAhD;AAAsDC,MAAAA,QAAQ,EAAE;AAAhE,KAAhC;AAA0G,GAA5H,MAAkI;AAAE7C,IAAAA,GAAG,CAACc,GAAD,CAAH,GAAWxB,KAAX;AAAmB;;AAAC,SAAOU,GAAP;AAAa;AAEjN;;;;;;;;AAMA,IAAIwD,YAAY;AAChB;AACA,UAAUC,gBAAV,EAA4B;AAC1BR,EAAAA,SAAS,CAACO,YAAD,EAAeC,gBAAf,CAAT;;AAEAX,EAAAA,YAAY,CAACU,YAAD,EAAe,IAAf,EAAqB,CAAC;AAChC1C,IAAAA,GAAG,EAAE,0BAD2B;;AAGhC;;;;;;AAMA;;;;;AAKA;;;;;AAKA;;;;;AAKA;;;;;;;AAOAxB,IAAAA,KAAK,EAAE,SAASoE,wBAAT,CAAkCC,SAAlC,EAA6CC,SAA7C,EAAwD;AAC7D;AACA,UAAIA,SAAS,CAACC,OAAV,KAAsBF,SAAS,CAACE,OAApC,EAA6C;AAC3C,eAAO;AACLA,UAAAA,OAAO,EAAEF,SAAS,CAACE,OADd;AAELC,UAAAA,cAAc,EAAEH,SAAS,CAACE,OAFrB;AAGLE,UAAAA,SAAS,EAAE,KAHN;AAILC,UAAAA,YAAY,EAAE;AAJT,SAAP;AAMD;;AAED,aAAO,IAAP;AACD;AACD;;;;;;AA5CgC,GAAD,CAArB,CAAZ;;AAoDA,WAASR,YAAT,CAAsBf,KAAtB,EAA6B;AAC3B,QAAIwB,KAAJ;;AAEAtC,IAAAA,eAAe,CAAC,IAAD,EAAO6B,YAAP,CAAf;;AAEAS,IAAAA,KAAK,GAAGlC,0BAA0B,CAAC,IAAD,EAAOG,eAAe,CAACsB,YAAD,CAAf,CAA8BxC,IAA9B,CAAmC,IAAnC,EAAyCyB,KAAzC,CAAP,CAAlC,CAL2B,CAKgE;AAC3F;;AAEAc,IAAAA,eAAe,CAACtB,sBAAsB,CAACgC,KAAD,CAAvB,EAAgC,WAAhC,EAA6C,GAAGC,MAAH,CAAUnE,UAAU,CAACoE,UAArB,EAAiC,cAAjC,CAA7C,CAAf;;AAEAZ,IAAAA,eAAe,CAACtB,sBAAsB,CAACgC,KAAD,CAAvB,EAAgC,cAAhC,EAAgD,aAAhD,CAAf;;AAEAA,IAAAA,KAAK,CAACG,KAAN,GAAc;AACZP,MAAAA,OAAO,EAAEpB,KAAK,CAACoB,OADH;AAEZG,MAAAA,YAAY,EAAE,IAFF;AAGZF,MAAAA,cAAc,EAAErB,KAAK,CAACoB,OAHV;AAIZE,MAAAA,SAAS,EAAE;AAJC,KAAd;AAMA,WAAOE,KAAP;AACD;AACD;;;;;;;;AAQAnB,EAAAA,YAAY,CAACU,YAAD,EAAe,CAAC;AAC1B1C,IAAAA,GAAG,EAAE,mBADqB;AAE1BxB,IAAAA,KAAK,EAAE,SAAS+E,iBAAT,GAA6B;AAClC,UAAI,KAAK5B,KAAL,CAAW6B,QAAX,IAAuB,KAAK7B,KAAL,CAAWoB,OAAX,KAAuB,IAAlD,EAAwD;AACtD,aAAKpB,KAAL,CAAW6B,QAAX,CAAoB,IAApB,EAA0B,IAA1B;AACD;AACF;AACD;;;;;;AAP0B,GAAD,EAaxB;AACDxD,IAAAA,GAAG,EAAE,oBADJ;AAEDxB,IAAAA,KAAK,EAAE,SAASiF,kBAAT,CAA4BC,SAA5B,EAAuCZ,SAAvC,EAAkD;AACvD,UAAIU,QAAQ,GAAG,KAAK7B,KAAL,CAAW6B,QAA1B;AACA,UAAIG,WAAW,GAAG,KAAKL,KAAvB;AAAA,UACIP,OAAO,GAAGY,WAAW,CAACZ,OAD1B;AAAA,UAEIG,YAAY,GAAGS,WAAW,CAACT,YAF/B;AAAA,UAGIF,cAAc,GAAGW,WAAW,CAACX,cAHjC;AAAA,UAIIC,SAAS,GAAGU,WAAW,CAACV,SAJ5B;AAKA;;;;;;;;;;;;AAYA,UAAIW,YAAJ;;AAEA,UAAIX,SAAS,IAAIH,SAAS,CAACC,OAAV,KAAsBA,OAAnC,IAA8CD,SAAS,CAACG,SAA5D,EAAuE;AACrE,YAAIA,SAAJ,EAAe;AACb;AACAW,UAAAA,YAAY,GAAG,IAAf;AACD,SAHD,MAGO;AACL;AACA,cAAIb,OAAO,KAAKD,SAAS,CAACE,cAA1B,EAA0C;AACxC;AACAY,YAAAA,YAAY,GAAG,IAAf;AACD,WAHD,MAGO;AACL,gBAAId,SAAS,CAACG,SAAd,EAAyB;AACvB;AACA,kBAAIH,SAAS,CAACE,cAAV,KAA6BA,cAAjC,EAAiD;AAC/CY,gBAAAA,YAAY,GAAG,IAAf;AACD;AACF;AACF;AACF;;AAED,YAAIA,YAAY,IAAIJ,QAApB,EAA8B;AAC5BA,UAAAA,QAAQ,CAACR,cAAD,EAAiBE,YAAjB,CAAR;AACD;AACF;AACF;AACD;;;;;;;AA/CC,GAbwB,EAmExB;AACDlD,IAAAA,GAAG,EAAE,SADJ;AAEDxB,IAAAA,KAAK,EAAE,SAASqF,OAAT,CAAiBC,GAAjB,EAAsB;AAC3B,UAAIC,MAAM,GAAG,IAAb;;AAEA,WAAKC,QAAL,CAAc;AACZhB,QAAAA,cAAc,EAAE,CAAC,KAAKM,KAAL,CAAWN,cADhB;AAEZE,QAAAA,YAAY,EAAEY,GAFF;AAGZb,QAAAA,SAAS,EAAE;AAHC,OAAd,EAIG,YAAY;AACb;AACA,YAAIc,MAAM,CAACE,OAAP,CAAeC,WAAf,IAA8B,CAAC,GAAGlF,WAAW,CAAC,SAAD,CAAf,EAA4B+E,MAAM,CAACE,OAAP,CAAeC,WAAf,CAA2BC,QAAvD,CAAlC,EAAoG;AAClGJ,UAAAA,MAAM,CAACE,OAAP,CAAeC,WAAf,CAA2BC,QAA3B,CAAoCJ,MAAM,CAACpC,KAA3C,EADkG,CAC/C;AACnD;AACA;AACA;;;AAGAoC,UAAAA,MAAM,CAACC,QAAP,CAAgB;AACdhB,YAAAA,cAAc,EAAE,CAACe,MAAM,CAACT,KAAP,CAAaN;AADhB,WAAhB;AAGD;AACF,OAjBD;AAkBD;AACD;;;;AAxBC,GAnEwB,EA+FxB;AACDhD,IAAAA,GAAG,EAAE,QADJ;AAEDxB,IAAAA,KAAK,EAAE,SAAS4F,MAAT,GAAkB;AACvB,UAAIC,WAAW,GAAG,KAAK1C,KAAvB;AAAA,UACI2C,SAAS,GAAGD,WAAW,CAACC,SAD5B;AAAA,UAEIC,IAAI,GAAGF,WAAW,CAACE,IAFvB;AAAA,UAGIC,IAAI,GAAGH,WAAW,CAACG,IAHvB;AAAA,UAIIC,WAAW,GAAGJ,WAAW,CAACI,WAJ9B;AAAA,UAKIC,QAAQ,GAAGL,WAAW,CAACK,QAL3B;AAAA,UAMI3B,OAAO,GAAGsB,WAAW,CAACtB,OAN1B;AAAA,UAOIS,QAAQ,GAAGa,WAAW,CAACb,QAP3B;AAAA,UAQImB,OAAO,GAAGN,WAAW,CAACM,OAR1B;AAAA,UASIC,gBAAgB,GAAGP,WAAW,CAACO,gBATnC;AAAA,UAUIC,YAAY,GAAGR,WAAW,CAACQ,YAV/B;AAAA,UAWIC,WAAW,GAAG1E,wBAAwB,CAACiE,WAAD,EAAc,CAAC,WAAD,EAAc,MAAd,EAAsB,MAAtB,EAA8B,aAA9B,EAA6C,UAA7C,EAAyD,SAAzD,EAAoE,UAApE,EAAgF,SAAhF,EAA2F,kBAA3F,EAA+G,cAA/G,CAAd,CAX1C;;AAaA,UAAIR,OAAO,GAAGiB,WAAW,CAACjB,OAA1B;AAAA,UACIkB,mBAAmB,GAAG3E,wBAAwB,CAAC0E,WAAD,EAAc,CAAC,SAAD,CAAd,CADlD;;AAGA,UAAIE,cAAc,GAAGV,SAAS,GAAG,GAAGlB,MAAH,CAAUkB,SAAV,EAAqB,GAArB,EAA0BlB,MAA1B,CAAiC,KAAKkB,SAAtC,CAAH,GAAsD,KAAKA,SAAzF;AACA,UAAIW,QAAQ,GAAGT,IAAf;AACA,UAAIU,YAAY,GAAG,EAAnB;;AAEA,UAAI,KAAK5B,KAAL,CAAWN,cAAf,EAA+B;AAC7BiC,QAAAA,QAAQ,GAAGR,WAAW,IAAID,IAA1B;AACAU,QAAAA,YAAY,GAAG,IAAI9B,MAAJ,CAAW,KAAK8B,YAAhB,EAA8B,GAA9B,CAAf;AACD;;AAED,aAAOrG,MAAM,CAAC,SAAD,CAAN,CAAkBsG,aAAlB,CAAgCzG,QAAQ,CAAC,SAAD,CAAxC,EAAqDe,QAAQ,CAAC;AACnE2F,QAAAA,KAAK,EAAET,OAD4D;AAEnEU,QAAAA,SAAS,EAAET;AAFwD,OAAD,EAGjEC,YAHiE,CAA7D,EAGWhG,MAAM,CAAC,SAAD,CAAN,CAAkBsG,aAAlB,CAAgCvG,OAAO,CAAC,SAAD,CAAvC,EAAoDa,QAAQ,CAAC;AAC7E6E,QAAAA,SAAS,EAAE,GAAGlB,MAAH,CAAU4B,cAAV,EAA0B5B,MAA1B,CAAiC8B,YAAjC,CADkE;AAE7ErB,QAAAA,OAAO,EAAE,KAAKA,OAAL,CAAayB,IAAb,CAAkB,IAAlB;AAFoE,OAAD,EAG3EP,mBAH2E,CAA5D,EAGOlG,MAAM,CAAC,SAAD,CAAN,CAAkBsG,aAAlB,CAAgCpG,QAAQ,CAACwG,IAAzC,EAA+C;AACtEhB,QAAAA,IAAI,EAAEU,QADgE;AAEtEX,QAAAA,SAAS,EAAEI;AAF2D,OAA/C,CAHP,EAMdI,WAAW,CAACU,QANE,CAHX,CAAP;AAUD;AAtCA,GA/FwB,CAAf,CAAZ;;AAwIA,SAAO9C,YAAP;AACD,CA5ND,CA4NE7D,MAAM,CAAC,SAAD,CAAN,CAAkB4G,SA5NpB,CAFA;;AAgOAhD,eAAe,CAACC,YAAD,EAAe,WAAf,EAA4B;AACzC6B,EAAAA,IAAI,EAAEzF,UAAU,CAAC,SAAD,CAAV,CAAsB4G,MADa;AAEzClB,EAAAA,IAAI,EAAE1F,UAAU,CAAC,SAAD,CAAV,CAAsB4G,MAFa;AAGzCjB,EAAAA,WAAW,EAAE3F,UAAU,CAAC,SAAD,CAAV,CAAsB4G,MAHM;AAIzChB,EAAAA,QAAQ,EAAE5F,UAAU,CAAC,SAAD,CAAV,CAAsB4G,MAJS;AAKzC3C,EAAAA,OAAO,EAAEjE,UAAU,CAAC,SAAD,CAAV,CAAsB6G,IALU;AAMzCnC,EAAAA,QAAQ,EAAE1E,UAAU,CAAC,SAAD,CAAV,CAAsB8G,IANS;AAOzCjB,EAAAA,OAAO,EAAE7F,UAAU,CAAC,SAAD,CAAV,CAAsB4G,MAPU;AAQzCd,EAAAA,gBAAgB,EAAE9F,UAAU,CAAC,SAAD,CAAV,CAAsB4G,MARC;;AAUzC;;;;;;;AAOAb,EAAAA,YAAY,EAAE/F,UAAU,CAAC,SAAD,CAAV,CAAsB+G,MAjBK;AAkBzCvB,EAAAA,SAAS,EAAExF,UAAU,CAAC,SAAD,CAAV,CAAsB4G;AAlBQ,CAA5B,CAAf;;AAqBAjD,eAAe,CAACC,YAAD,EAAe,cAAf,EAA+B;AAC5CoD,EAAAA,IAAI,EAAE,SADsC;AAE5CtB,EAAAA,IAAI,EAAE,EAFsC;AAG5CzB,EAAAA,OAAO,EAAE,KAHmC;AAI5C8B,EAAAA,YAAY,EAAE;AACZkB,IAAAA,eAAe,EAAE;AADL;AAGd;;;;;AAP4C,CAA/B,CAAf;;AAcAtD,eAAe,CAACC,YAAD,EAAe,cAAf,EAA+B;AAC5CwB,EAAAA,WAAW,EAAEpF,UAAU,CAAC,SAAD,CAAV,CAAsB+G;AADS,CAA/B,CAAf;;AAIA,IAAIG,QAAQ,GAAGtD,YAAf;AACAnE,OAAO,CAAC,SAAD,CAAP,GAAqByH,QAArB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nrequire(\"antd/es/tooltip/style\");\n\nvar _tooltip = _interopRequireDefault(require(\"antd/es/tooltip\"));\n\nrequire(\"antd/es/button/style\");\n\nvar _button = _interopRequireDefault(require(\"antd/es/button\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactFa = require(\"react-fa\");\n\nvar _isFunction = _interopRequireDefault(require(\"lodash/isFunction\"));\n\nrequire(\"./ToggleButton.less\");\n\nvar _constants = require(\"../../constants\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * The ToggleButton.\n *\n * @class The ToggleButton\n * @extends React.Component\n */\nvar ToggleButton =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ToggleButton, _React$Component);\n\n  _createClass(ToggleButton, null, [{\n    key: \"getDerivedStateFromProps\",\n\n    /**\n     * The className added to this component.\n     * @type {String}\n     * @private\n     */\n\n    /**\n     * The class to apply for a toggled/pressed button.\n     * @type {String}\n     */\n\n    /**\n     * The properties.\n     * @type {Object}\n     */\n\n    /**\n     * The default properties.\n     * @type {Object}\n     */\n\n    /**\n     * Invoked right before calling the render method, both on the initial mount\n     * and on subsequent updates. It should return an object to update the state,\n     * or null to update nothing.\n     * @param {Object} nextProps The next properties.\n     * @param {Object} prevState The previous state.\n     */\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      // Checks to see if the pressed property has changed\n      if (prevState.pressed !== nextProps.pressed) {\n        return {\n          pressed: nextProps.pressed,\n          overallPressed: nextProps.pressed,\n          isClicked: false,\n          lastClickEvt: null\n        };\n      }\n\n      return null;\n    }\n    /**\n     * Creates the ToggleButton.\n     *\n     * @constructs ToggleButton\n     */\n\n  }]);\n\n  function ToggleButton(props) {\n    var _this;\n\n    _classCallCheck(this, ToggleButton);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ToggleButton).call(this, props)); // Instantiate the state.\n    // components state\n\n    _defineProperty(_assertThisInitialized(_this), \"className\", \"\".concat(_constants.CSS_PREFIX, \"togglebutton\"));\n\n    _defineProperty(_assertThisInitialized(_this), \"pressedClass\", 'btn-pressed');\n\n    _this.state = {\n      pressed: props.pressed,\n      lastClickEvt: null,\n      overallPressed: props.pressed,\n      isClicked: false\n    };\n    return _this;\n  }\n  /**\n   * We will handle the initial state of the button here.\n   * If it is pressed, we will have to call its `onToggle`\n   * method, if it exists, in order to reflect the initial\n   * state correctly (e.g. activating ol.Controls)\n   */\n\n\n  _createClass(ToggleButton, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.onToggle && this.props.pressed === true) {\n        this.props.onToggle(true, null);\n      }\n    }\n    /**\n     * Invoked immediately after updating occurs. This method is not called\n     * for the initial render.\n     * @method\n     */\n\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var onToggle = this.props.onToggle;\n      var _this$state = this.state,\n          pressed = _this$state.pressed,\n          lastClickEvt = _this$state.lastClickEvt,\n          overallPressed = _this$state.overallPressed,\n          isClicked = _this$state.isClicked;\n      /**\n       * the following is performed here as a hack to keep track of the pressed changes.\n       *\n       * check if the button has been clicked\n       * |__ YES: ==> toggle the button\n       * |\n       * |__ NO: check if the prop has changed\n       *        |__ YES: ==> Toggle the button\n       *        |__ NO: check if previous update action was a click\n       *                |__ YES: ==> run the Toggle function fo the prop value\n       */\n\n      var shouldToggle;\n\n      if (isClicked || prevState.pressed !== pressed || prevState.isClicked) {\n        if (isClicked) {\n          // button is clicked\n          shouldToggle = true;\n        } else {\n          // check for prop change\n          if (pressed !== prevState.overallPressed) {\n            // pressed prop has changed\n            shouldToggle = true;\n          } else {\n            if (prevState.isClicked) {\n              // prop has not changed but the previous was click event\n              if (prevState.overallPressed !== overallPressed) {\n                shouldToggle = true;\n              }\n            }\n          }\n        }\n\n        if (shouldToggle && onToggle) {\n          onToggle(overallPressed, lastClickEvt);\n        }\n      }\n    }\n    /**\n     * Called on click.\n     *\n     * @param {ClickEvent} evt The ClickEvent.\n     * @method\n     */\n\n  }, {\n    key: \"onClick\",\n    value: function onClick(evt) {\n      var _this2 = this;\n\n      this.setState({\n        overallPressed: !this.state.overallPressed,\n        lastClickEvt: evt,\n        isClicked: true\n      }, function () {\n        // This part can be removed in future if the ToggleGroup button is removed.\n        if (_this2.context.toggleGroup && (0, _isFunction[\"default\"])(_this2.context.toggleGroup.onChange)) {\n          _this2.context.toggleGroup.onChange(_this2.props); // this allows for the allowDeselect property to be taken into account\n          // when used with ToggleGroup. Since the ToggleGroup changes the\n          // pressed prop for its child components the click event dose not need to\n          // change the pressed property.\n\n\n          _this2.setState({\n            overallPressed: !_this2.state.overallPressed\n          });\n        }\n      });\n    }\n    /**\n     * The render function.\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          name = _this$props.name,\n          icon = _this$props.icon,\n          pressedIcon = _this$props.pressedIcon,\n          fontIcon = _this$props.fontIcon,\n          pressed = _this$props.pressed,\n          onToggle = _this$props.onToggle,\n          tooltip = _this$props.tooltip,\n          tooltipPlacement = _this$props.tooltipPlacement,\n          tooltipProps = _this$props.tooltipProps,\n          antBtnProps = _objectWithoutProperties(_this$props, [\"className\", \"name\", \"icon\", \"pressedIcon\", \"fontIcon\", \"pressed\", \"onToggle\", \"tooltip\", \"tooltipPlacement\", \"tooltipProps\"]);\n\n      var onClick = antBtnProps.onClick,\n          filteredAntBtnProps = _objectWithoutProperties(antBtnProps, [\"onClick\"]);\n\n      var finalClassName = className ? \"\".concat(className, \" \").concat(this.className) : this.className;\n      var iconName = icon;\n      var pressedClass = '';\n\n      if (this.state.overallPressed) {\n        iconName = pressedIcon || icon;\n        pressedClass = \" \".concat(this.pressedClass, \" \");\n      }\n\n      return _react[\"default\"].createElement(_tooltip[\"default\"], _extends({\n        title: tooltip,\n        placement: tooltipPlacement\n      }, tooltipProps), _react[\"default\"].createElement(_button[\"default\"], _extends({\n        className: \"\".concat(finalClassName).concat(pressedClass),\n        onClick: this.onClick.bind(this)\n      }, filteredAntBtnProps), _react[\"default\"].createElement(_reactFa.Icon, {\n        name: iconName,\n        className: fontIcon\n      }), antBtnProps.children));\n    }\n  }]);\n\n  return ToggleButton;\n}(_react[\"default\"].Component);\n\n_defineProperty(ToggleButton, \"propTypes\", {\n  name: _propTypes[\"default\"].string,\n  icon: _propTypes[\"default\"].string,\n  pressedIcon: _propTypes[\"default\"].string,\n  fontIcon: _propTypes[\"default\"].string,\n  pressed: _propTypes[\"default\"].bool,\n  onToggle: _propTypes[\"default\"].func,\n  tooltip: _propTypes[\"default\"].string,\n  tooltipPlacement: _propTypes[\"default\"].string,\n\n  /**\n   * Additional [antd tooltip](https://ant.design/components/tooltip/)\n   * properties to pass to the tooltip component. Note: The props `title`\n   * and `placement` will override the props `tooltip` and `tooltipPlacement`\n   * of this component!\n   * @type {Object}\n   */\n  tooltipProps: _propTypes[\"default\"].object,\n  className: _propTypes[\"default\"].string\n});\n\n_defineProperty(ToggleButton, \"defaultProps\", {\n  type: 'primary',\n  icon: '',\n  pressed: false,\n  tooltipProps: {\n    mouseEnterDelay: 1.5\n  }\n  /**\n   * The context types.\n   * @type {Object}\n   */\n\n});\n\n_defineProperty(ToggleButton, \"contextTypes\", {\n  toggleGroup: _propTypes[\"default\"].object\n});\n\nvar _default = ToggleButton;\nexports[\"default\"] = _default;"]},"metadata":{},"sourceType":"script"}