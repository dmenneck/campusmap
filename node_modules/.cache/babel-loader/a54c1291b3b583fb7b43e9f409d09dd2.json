{"ast":null,"code":"/**\n * @module ol/interaction/Translate\n */\nimport Collection from '../Collection.js';\nimport { getChangeEventType } from '../Object.js';\nimport { listen } from '../events.js';\nimport Event from '../events/Event.js';\nimport { TRUE } from '../functions.js';\nimport { includes } from '../array.js';\nimport PointerInteraction from './Pointer.js';\nimport InteractionProperty from './Property.js';\n/**\n * @enum {string}\n */\n\nvar TranslateEventType = {\n  /**\n   * Triggered upon feature translation start.\n   * @event TranslateEvent#translatestart\n   * @api\n   */\n  TRANSLATESTART: 'translatestart',\n\n  /**\n   * Triggered upon feature translation.\n   * @event TranslateEvent#translating\n   * @api\n   */\n  TRANSLATING: 'translating',\n\n  /**\n   * Triggered upon feature translation end.\n   * @event TranslateEvent#translateend\n   * @api\n   */\n  TRANSLATEEND: 'translateend'\n};\n/**\n * @typedef {Object} Options\n * @property {Collection<import(\"../Feature.js\").default>} [features] Only features contained in this collection will be able to be translated. If\n * not specified, all features on the map will be able to be translated.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default): boolean} [layers] A list of layers from which features should be\n * translated. Alternatively, a filter function can be provided. The\n * function will be called for each layer in the map and should return\n * `true` for layers that you want to be translatable. If the option is\n * absent, all visible layers will be considered translatable.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside the radius around the given position\n * will be checked for features. This only works for the canvas renderer and\n * not for WebGL.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Translate~Translate} instances\n * are instances of this type.\n */\n\nexport var TranslateEvent =\n/*@__PURE__*/\nfunction (Event) {\n  function TranslateEvent(type, features, coordinate) {\n    Event.call(this, type);\n    /**\n     * The features being translated.\n     * @type {Collection<import(\"../Feature.js\").default>}\n     * @api\n     */\n\n    this.features = features;\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n\n    this.coordinate = coordinate;\n  }\n\n  if (Event) TranslateEvent.__proto__ = Event;\n  TranslateEvent.prototype = Object.create(Event && Event.prototype);\n  TranslateEvent.prototype.constructor = TranslateEvent;\n  return TranslateEvent;\n}(Event);\n/**\n * @classdesc\n * Interaction for translating (moving) features.\n *\n * @fires TranslateEvent\n * @api\n */\n\nvar Translate =\n/*@__PURE__*/\nfunction (PointerInteraction) {\n  function Translate(opt_options) {\n    var options = opt_options ? opt_options : {};\n    PointerInteraction.call(\n    /** @type {import(\"./Pointer.js\").Options} */\n    this, options);\n    /**\n     * The last position we translated to.\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n\n    this.lastCoordinate_ = null;\n    /**\n     * @type {Collection<import(\"../Feature.js\").default>}\n     * @private\n     */\n\n    this.features_ = options.features !== undefined ? options.features : null;\n    /** @type {function(import(\"../layer/Layer.js\").default): boolean} */\n\n    var layerFilter;\n\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        var layers = options.layers;\n\n        layerFilter = function (layer) {\n          return includes(layers, layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n    /**\n     * @private\n     * @type {function(import(\"../layer/Layer.js\").default): boolean}\n     */\n\n\n    this.layerFilter_ = layerFilter;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n    /**\n     * @type {import(\"../Feature.js\").default}\n     * @private\n     */\n\n    this.lastFeature_ = null;\n    listen(this, getChangeEventType(InteractionProperty.ACTIVE), this.handleActiveChanged_, this);\n  }\n\n  if (PointerInteraction) Translate.__proto__ = PointerInteraction;\n  Translate.prototype = Object.create(PointerInteraction && PointerInteraction.prototype);\n  Translate.prototype.constructor = Translate;\n  /**\n   * @inheritDoc\n   */\n\n  Translate.prototype.handleDownEvent = function handleDownEvent(event) {\n    this.lastFeature_ = this.featuresAtPixel_(event.pixel, event.map);\n\n    if (!this.lastCoordinate_ && this.lastFeature_) {\n      this.lastCoordinate_ = event.coordinate;\n      this.handleMoveEvent(event);\n      var features = this.features_ || new Collection([this.lastFeature_]);\n      this.dispatchEvent(new TranslateEvent(TranslateEventType.TRANSLATESTART, features, event.coordinate));\n      return true;\n    }\n\n    return false;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Translate.prototype.handleUpEvent = function handleUpEvent(event) {\n    if (this.lastCoordinate_) {\n      this.lastCoordinate_ = null;\n      this.handleMoveEvent(event);\n      var features = this.features_ || new Collection([this.lastFeature_]);\n      this.dispatchEvent(new TranslateEvent(TranslateEventType.TRANSLATEEND, features, event.coordinate));\n      return true;\n    }\n\n    return false;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Translate.prototype.handleDragEvent = function handleDragEvent(event) {\n    if (this.lastCoordinate_) {\n      var newCoordinate = event.coordinate;\n      var deltaX = newCoordinate[0] - this.lastCoordinate_[0];\n      var deltaY = newCoordinate[1] - this.lastCoordinate_[1];\n      var features = this.features_ || new Collection([this.lastFeature_]);\n      features.forEach(function (feature) {\n        var geom = feature.getGeometry();\n        geom.translate(deltaX, deltaY);\n        feature.setGeometry(geom);\n      });\n      this.lastCoordinate_ = newCoordinate;\n      this.dispatchEvent(new TranslateEvent(TranslateEventType.TRANSLATING, features, newCoordinate));\n    }\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Translate.prototype.handleMoveEvent = function handleMoveEvent(event) {\n    var elem = event.map.getViewport(); // Change the cursor to grab/grabbing if hovering any of the features managed\n    // by the interaction\n\n    if (this.featuresAtPixel_(event.pixel, event.map)) {\n      elem.classList.remove(this.lastCoordinate_ ? 'ol-grab' : 'ol-grabbing');\n      elem.classList.add(this.lastCoordinate_ ? 'ol-grabbing' : 'ol-grab');\n    } else {\n      elem.classList.remove('ol-grab', 'ol-grabbing');\n    }\n  };\n  /**\n   * Tests to see if the given coordinates intersects any of our selected\n   * features.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel coordinate to test for intersection.\n   * @param {import(\"../PluggableMap.js\").default} map Map to test the intersection on.\n   * @return {import(\"../Feature.js\").default} Returns the feature found at the specified pixel\n   * coordinates.\n   * @private\n   */\n\n\n  Translate.prototype.featuresAtPixel_ = function featuresAtPixel_(pixel, map) {\n    return map.forEachFeatureAtPixel(pixel, function (feature) {\n      if (!this.features_ || includes(this.features_.getArray(), feature)) {\n        return feature;\n      }\n    }.bind(this), {\n      layerFilter: this.layerFilter_,\n      hitTolerance: this.hitTolerance_\n    });\n  };\n  /**\n   * Returns the Hit-detection tolerance.\n   * @returns {number} Hit tolerance in pixels.\n   * @api\n   */\n\n\n  Translate.prototype.getHitTolerance = function getHitTolerance() {\n    return this.hitTolerance_;\n  };\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features. This only works for the canvas renderer and\n   * not for WebGL.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n\n\n  Translate.prototype.setHitTolerance = function setHitTolerance(hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Translate.prototype.setMap = function setMap(map) {\n    var oldMap = this.getMap();\n    PointerInteraction.prototype.setMap.call(this, map);\n    this.updateState_(oldMap);\n  };\n  /**\n   * @private\n   */\n\n\n  Translate.prototype.handleActiveChanged_ = function handleActiveChanged_() {\n    this.updateState_(null);\n  };\n  /**\n   * @param {import(\"../PluggableMap.js\").default} oldMap Old map.\n   * @private\n   */\n\n\n  Translate.prototype.updateState_ = function updateState_(oldMap) {\n    var map = this.getMap();\n    var active = this.getActive();\n\n    if (!map || !active) {\n      map = map || oldMap;\n\n      if (map) {\n        var elem = map.getViewport();\n        elem.classList.remove('ol-grab', 'ol-grabbing');\n      }\n    }\n  };\n\n  return Translate;\n}(PointerInteraction);\n\nexport default Translate;","map":{"version":3,"sources":["../../../src/ol/interaction/Translate.js"],"names":["const","super","let"],"mappings":"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","sourcesContent":["/**\n * @module ol/interaction/Translate\n */\nimport Collection from '../Collection.js';\nimport {getChangeEventType} from '../Object.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport {TRUE} from '../functions.js';\nimport {includes} from '../array.js';\nimport PointerInteraction from './Pointer.js';\nimport InteractionProperty from './Property.js';\n\n\n/**\n * @enum {string}\n */\nconst TranslateEventType = {\n  /**\n   * Triggered upon feature translation start.\n   * @event TranslateEvent#translatestart\n   * @api\n   */\n  TRANSLATESTART: 'translatestart',\n  /**\n   * Triggered upon feature translation.\n   * @event TranslateEvent#translating\n   * @api\n   */\n  TRANSLATING: 'translating',\n  /**\n   * Triggered upon feature translation end.\n   * @event TranslateEvent#translateend\n   * @api\n   */\n  TRANSLATEEND: 'translateend'\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {Collection<import(\"../Feature.js\").default>} [features] Only features contained in this collection will be able to be translated. If\n * not specified, all features on the map will be able to be translated.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default): boolean} [layers] A list of layers from which features should be\n * translated. Alternatively, a filter function can be provided. The\n * function will be called for each layer in the map and should return\n * `true` for layers that you want to be translatable. If the option is\n * absent, all visible layers will be considered translatable.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside the radius around the given position\n * will be checked for features. This only works for the canvas renderer and\n * not for WebGL.\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Translate~Translate} instances\n * are instances of this type.\n */\nexport class TranslateEvent extends Event {\n  /**\n   * @param {TranslateEventType} type Type.\n   * @param {Collection<import(\"../Feature.js\").default>} features The features translated.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   */\n  constructor(type, features, coordinate) {\n\n    super(type);\n\n    /**\n     * The features being translated.\n     * @type {Collection<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n  }\n\n}\n\n\n/**\n * @classdesc\n * Interaction for translating (moving) features.\n *\n * @fires TranslateEvent\n * @api\n */\nclass Translate extends PointerInteraction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /**\n     * The last position we translated to.\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.lastCoordinate_ = null;\n\n\n    /**\n     * @type {Collection<import(\"../Feature.js\").default>}\n     * @private\n     */\n    this.features_ = options.features !== undefined ? options.features : null;\n\n    /** @type {function(import(\"../layer/Layer.js\").default): boolean} */\n    let layerFilter;\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        const layers = options.layers;\n        layerFilter = function(layer) {\n          return includes(layers, layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(import(\"../layer/Layer.js\").default): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    /**\n     * @type {import(\"../Feature.js\").default}\n     * @private\n     */\n    this.lastFeature_ = null;\n\n    listen(this,\n      getChangeEventType(InteractionProperty.ACTIVE),\n      this.handleActiveChanged_, this);\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleDownEvent(event) {\n    this.lastFeature_ = this.featuresAtPixel_(event.pixel, event.map);\n    if (!this.lastCoordinate_ && this.lastFeature_) {\n      this.lastCoordinate_ = event.coordinate;\n      this.handleMoveEvent(event);\n\n      const features = this.features_ || new Collection([this.lastFeature_]);\n\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATESTART, features,\n          event.coordinate));\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleUpEvent(event) {\n    if (this.lastCoordinate_) {\n      this.lastCoordinate_ = null;\n      this.handleMoveEvent(event);\n\n      const features = this.features_ || new Collection([this.lastFeature_]);\n\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATEEND, features,\n          event.coordinate));\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleDragEvent(event) {\n    if (this.lastCoordinate_) {\n      const newCoordinate = event.coordinate;\n      const deltaX = newCoordinate[0] - this.lastCoordinate_[0];\n      const deltaY = newCoordinate[1] - this.lastCoordinate_[1];\n\n      const features = this.features_ || new Collection([this.lastFeature_]);\n\n      features.forEach(function(feature) {\n        const geom = feature.getGeometry();\n        geom.translate(deltaX, deltaY);\n        feature.setGeometry(geom);\n      });\n\n      this.lastCoordinate_ = newCoordinate;\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATING, features,\n          newCoordinate));\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleMoveEvent(event) {\n    const elem = event.map.getViewport();\n\n    // Change the cursor to grab/grabbing if hovering any of the features managed\n    // by the interaction\n    if (this.featuresAtPixel_(event.pixel, event.map)) {\n      elem.classList.remove(this.lastCoordinate_ ? 'ol-grab' : 'ol-grabbing');\n      elem.classList.add(this.lastCoordinate_ ? 'ol-grabbing' : 'ol-grab');\n    } else {\n      elem.classList.remove('ol-grab', 'ol-grabbing');\n    }\n  }\n\n  /**\n   * Tests to see if the given coordinates intersects any of our selected\n   * features.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel coordinate to test for intersection.\n   * @param {import(\"../PluggableMap.js\").default} map Map to test the intersection on.\n   * @return {import(\"../Feature.js\").default} Returns the feature found at the specified pixel\n   * coordinates.\n   * @private\n   */\n  featuresAtPixel_(pixel, map) {\n    return map.forEachFeatureAtPixel(pixel,\n      function(feature) {\n        if (!this.features_ || includes(this.features_.getArray(), feature)) {\n          return feature;\n        }\n      }.bind(this), {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n  }\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @returns {number} Hit tolerance in pixels.\n   * @api\n   */\n  getHitTolerance() {\n    return this.hitTolerance_;\n  }\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features. This only works for the canvas renderer and\n   * not for WebGL.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  setHitTolerance(hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    super.setMap(map);\n    this.updateState_(oldMap);\n  }\n\n  /**\n   * @private\n   */\n  handleActiveChanged_() {\n    this.updateState_(null);\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} oldMap Old map.\n   * @private\n   */\n  updateState_(oldMap) {\n    let map = this.getMap();\n    const active = this.getActive();\n    if (!map || !active) {\n      map = map || oldMap;\n      if (map) {\n        const elem = map.getViewport();\n        elem.classList.remove('ol-grab', 'ol-grabbing');\n      }\n    }\n  }\n}\n\nexport default Translate;\n"]},"metadata":{},"sourceType":"module"}