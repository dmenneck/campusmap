{"ast":null,"code":"// ag-grid-react v21.2.2\n\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = require(\"react\");\n\nvar ReactDOM = require(\"react-dom\");\n\nvar PropTypes = require(\"prop-types\");\n\nvar AgGrid = require(\"ag-grid-community\");\n\nvar ag_grid_community_1 = require(\"ag-grid-community\");\n\nvar agGridColumn_1 = require(\"./agGridColumn\");\n\nvar reactComponent_1 = require(\"./reactComponent\");\n\nvar changeDetectionService_1 = require(\"./changeDetectionService\");\n\nvar legacyReactComponent_1 = require(\"./legacyReactComponent\");\n\nvar AgGridReact =\n/** @class */\nfunction (_super) {\n  __extends(AgGridReact, _super);\n\n  function AgGridReact(props, state) {\n    var _this = _super.call(this, props, state) || this;\n\n    _this.props = props;\n    _this.state = state;\n    _this.changeDetectionService = new changeDetectionService_1.ChangeDetectionService();\n    _this.api = null;\n    _this.portals = [];\n    _this.hasPendingPortalUpdate = false;\n    return _this;\n  }\n\n  AgGridReact.prototype.render = function () {\n    var _this = this;\n\n    return React.createElement(\"div\", {\n      style: this.createStyleForDiv(),\n      ref: function (e) {\n        _this.eGridDiv = e;\n      }\n    }, this.portals);\n  };\n\n  AgGridReact.prototype.createStyleForDiv = function () {\n    var style = {\n      height: \"100%\"\n    }; // allow user to override styles\n\n    var containerStyle = this.props.containerStyle;\n\n    if (containerStyle) {\n      Object.keys(containerStyle).forEach(function (key) {\n        style[key] = containerStyle[key];\n      });\n    }\n\n    return style;\n  };\n\n  AgGridReact.prototype.componentDidMount = function () {\n    var gridParams = {\n      seedBeanInstances: {\n        agGridReact: this\n      }\n    };\n    var gridOptions = this.props.gridOptions || {};\n\n    if (agGridColumn_1.AgGridColumn.hasChildColumns(this.props)) {\n      gridOptions.columnDefs = agGridColumn_1.AgGridColumn.mapChildColumnDefs(this.props);\n    }\n\n    this.gridOptions = AgGrid.ComponentUtil.copyAttributesToGridOptions(gridOptions, this.props); // don't need the return value\n\n    new AgGrid.Grid(this.eGridDiv, this.gridOptions, gridParams);\n    this.api = this.gridOptions.api;\n    this.columnApi = this.gridOptions.columnApi;\n  };\n\n  AgGridReact.prototype.shouldComponentUpdate = function () {\n    // we want full control of the dom, as ag-Grid doesn't use React internally,\n    // so for performance reasons we tell React we don't need render called after\n    // property changes.\n    return false;\n  };\n\n  AgGridReact.prototype.waitForInstance = function (reactComponent, resolve, runningTime) {\n    var _this = this;\n\n    if (runningTime === void 0) {\n      runningTime = 0;\n    } // if the grid has been destroyed in the meantime just resolve\n\n\n    if (!this.api) {\n      resolve(null);\n      return;\n    }\n\n    if (reactComponent.isStatelessComponent() && reactComponent.statelessComponentRendered()) {\n      resolve(null);\n    } else if (!reactComponent.isStatelessComponent() && reactComponent.getFrameworkComponentInstance()) {\n      resolve(null);\n    } else {\n      if (runningTime >= AgGridReact.MAX_COMPONENT_CREATION_TIME) {\n        console.error(\"ag-Grid: React Component '\" + reactComponent.getReactComponentName() + \"' not created within \" + AgGridReact.MAX_COMPONENT_CREATION_TIME + \"ms\");\n        return;\n      }\n\n      window.setTimeout(function () {\n        return _this.waitForInstance(reactComponent, resolve, runningTime + 5);\n      }, 5);\n    }\n  };\n  /**\n   * Mounts a react portal for components registered under the componentFramework.\n   * We do this because we want all portals to be in the same tree - in order to get\n   * Context to work properly.\n   */\n\n\n  AgGridReact.prototype.mountReactPortal = function (portal, reactComponent, resolve) {\n    this.portals = this.portals.concat([portal]);\n    this.batchUpdate(this.waitForInstance(reactComponent, resolve));\n  };\n\n  AgGridReact.prototype.batchUpdate = function (callback) {\n    var _this = this;\n\n    if (this.hasPendingPortalUpdate) {\n      return callback && callback();\n    }\n\n    setTimeout(function () {\n      if (_this.api) {\n        // destroyed?\n        _this.forceUpdate(function () {\n          callback && callback();\n          _this.hasPendingPortalUpdate = false;\n        });\n      }\n    });\n    this.hasPendingPortalUpdate = true;\n  };\n\n  AgGridReact.prototype.destroyPortal = function (portal) {\n    this.portals = this.portals.filter(function (curPortal) {\n      return curPortal !== portal;\n    });\n    this.batchUpdate();\n  };\n\n  AgGridReact.prototype.getStrategyTypeForProp = function (propKey) {\n    if (propKey === 'rowData') {\n      // for row data we either return the supplied strategy, or:\n      // if deltaRowDataMode we default to IdentityChecks,\n      // if not we default to DeepValueChecks (with the rest of the properties)\n      if (!!this.props.rowDataChangeDetectionStrategy) {\n        return this.props.rowDataChangeDetectionStrategy;\n      } else if (this.props['deltaRowDataMode']) {\n        return changeDetectionService_1.ChangeDetectionStrategyType.IdentityCheck;\n      }\n    } // all non row data properties will default to DeepValueCheck\n\n\n    return changeDetectionService_1.ChangeDetectionStrategyType.DeepValueCheck;\n  };\n\n  AgGridReact.prototype.componentWillReceiveProps = function (nextProps) {\n    var changes = {};\n    this.extractGridPropertyChanges(nextProps, changes);\n    this.extractDeclarativeColDefChanges(nextProps, changes);\n    AgGrid.ComponentUtil.processOnChange(changes, this.gridOptions, this.api, this.columnApi);\n  };\n\n  AgGridReact.prototype.extractDeclarativeColDefChanges = function (nextProps, changes) {\n    var debugLogging = !!nextProps.debug;\n\n    if (agGridColumn_1.AgGridColumn.hasChildColumns(nextProps)) {\n      var detectionStrategy = this.changeDetectionService.getStrategy(changeDetectionService_1.ChangeDetectionStrategyType.DeepValueCheck);\n      var currentColDefs = this.gridOptions.columnDefs;\n      var newColDefs = agGridColumn_1.AgGridColumn.mapChildColumnDefs(nextProps);\n\n      if (!detectionStrategy.areEqual(currentColDefs, newColDefs)) {\n        if (debugLogging) {\n          console.log(\"agGridReact: colDefs definitions changed\");\n        }\n\n        changes['columnDefs'] = {\n          previousValue: this.gridOptions.columnDefs,\n          currentValue: agGridColumn_1.AgGridColumn.mapChildColumnDefs(nextProps)\n        };\n      }\n    }\n  };\n\n  AgGridReact.prototype.extractGridPropertyChanges = function (nextProps, changes) {\n    var _this = this;\n\n    var debugLogging = !!nextProps.debug;\n    var changedKeys = Object.keys(nextProps);\n    changedKeys.forEach(function (propKey) {\n      if (AgGrid.ComponentUtil.ALL_PROPERTIES.indexOf(propKey) !== -1) {\n        var changeDetectionStrategy = _this.changeDetectionService.getStrategy(_this.getStrategyTypeForProp(propKey));\n\n        if (!changeDetectionStrategy.areEqual(_this.props[propKey], nextProps[propKey])) {\n          if (debugLogging) {\n            console.log(\"agGridReact: [\" + propKey + \"] property changed\");\n          }\n\n          changes[propKey] = {\n            previousValue: _this.props[propKey],\n            currentValue: nextProps[propKey]\n          };\n        }\n      }\n    });\n    AgGrid.ComponentUtil.getEventCallbacks().forEach(function (funcName) {\n      if (_this.props[funcName] !== nextProps[funcName]) {\n        if (debugLogging) {\n          console.log(\"agGridReact: [\" + funcName + \"] event callback changed\");\n        }\n\n        changes[funcName] = {\n          previousValue: _this.props[funcName],\n          currentValue: nextProps[funcName]\n        };\n      }\n    });\n  };\n\n  AgGridReact.prototype.componentWillUnmount = function () {\n    if (this.api) {\n      this.api.destroy();\n      this.api = null;\n    }\n  };\n\n  AgGridReact.MAX_COMPONENT_CREATION_TIME = 1000; // a second should be more than enough to instantiate a component\n\n  return AgGridReact;\n}(React.Component);\n\nexports.AgGridReact = AgGridReact;\nAgGridReact.propTypes = {\n  gridOptions: PropTypes.object\n};\naddProperties(AgGrid.ComponentUtil.getEventCallbacks(), PropTypes.func);\naddProperties(AgGrid.ComponentUtil.BOOLEAN_PROPERTIES, PropTypes.bool);\naddProperties(AgGrid.ComponentUtil.STRING_PROPERTIES, PropTypes.string);\naddProperties(AgGrid.ComponentUtil.OBJECT_PROPERTIES, PropTypes.object);\naddProperties(AgGrid.ComponentUtil.ARRAY_PROPERTIES, PropTypes.array);\naddProperties(AgGrid.ComponentUtil.NUMBER_PROPERTIES, PropTypes.number);\naddProperties(AgGrid.ComponentUtil.FUNCTION_PROPERTIES, PropTypes.func);\n\nfunction addProperties(listOfProps, propType) {\n  listOfProps.forEach(function (propKey) {\n    AgGridReact[propKey] = propType;\n  });\n}\n\nvar ReactFrameworkComponentWrapper =\n/** @class */\nfunction (_super) {\n  __extends(ReactFrameworkComponentWrapper, _super);\n\n  function ReactFrameworkComponentWrapper() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ReactFrameworkComponentWrapper.prototype.createWrapper = function (UserReactComponent) {\n    // at some point soon unstable_renderSubtreeIntoContainer is going to be dropped (and in a minor release at that)\n    // this uses the existing mechanism as long as possible, but switches over to using Portals when\n    // unstable_renderSubtreeIntoContainer is no longer an option\n    return this.useLegacyReact() ? new legacyReactComponent_1.LegacyReactComponent(UserReactComponent, this.agGridReact) : new reactComponent_1.ReactComponent(UserReactComponent, this.agGridReact);\n  };\n\n  ReactFrameworkComponentWrapper.prototype.useLegacyReact = function () {\n    // force use of react next (ie portals) if unstable_renderSubtreeIntoContainer is no longer present\n    // or if the user elects to try it\n    return typeof ReactDOM.unstable_renderSubtreeIntoContainer !== \"function\" || this.agGridReact && this.agGridReact.gridOptions && !this.agGridReact.gridOptions.reactNext;\n  };\n\n  __decorate([ag_grid_community_1.Autowired(\"agGridReact\"), __metadata(\"design:type\", AgGridReact)], ReactFrameworkComponentWrapper.prototype, \"agGridReact\", void 0);\n\n  ReactFrameworkComponentWrapper = __decorate([ag_grid_community_1.Bean(\"frameworkComponentWrapper\")], ReactFrameworkComponentWrapper);\n  return ReactFrameworkComponentWrapper;\n}(ag_grid_community_1.BaseComponentWrapper);\n\nAgGrid.Grid.setFrameworkBeans([ReactFrameworkComponentWrapper]);","map":{"version":3,"sources":["/Users/dirkmennecke77/Desktop/Lageplan/node_modules/ag-grid-react/lib/agGridReact.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","k","v","metadata","exports","value","React","require","ReactDOM","PropTypes","AgGrid","ag_grid_community_1","agGridColumn_1","reactComponent_1","changeDetectionService_1","legacyReactComponent_1","AgGridReact","_super","props","state","_this","call","changeDetectionService","ChangeDetectionService","api","portals","hasPendingPortalUpdate","render","createElement","style","createStyleForDiv","ref","e","eGridDiv","height","containerStyle","keys","forEach","componentDidMount","gridParams","seedBeanInstances","agGridReact","gridOptions","AgGridColumn","hasChildColumns","columnDefs","mapChildColumnDefs","ComponentUtil","copyAttributesToGridOptions","Grid","columnApi","shouldComponentUpdate","waitForInstance","reactComponent","resolve","runningTime","isStatelessComponent","statelessComponentRendered","getFrameworkComponentInstance","MAX_COMPONENT_CREATION_TIME","console","error","getReactComponentName","window","setTimeout","mountReactPortal","portal","concat","batchUpdate","callback","forceUpdate","destroyPortal","filter","curPortal","getStrategyTypeForProp","propKey","rowDataChangeDetectionStrategy","ChangeDetectionStrategyType","IdentityCheck","DeepValueCheck","componentWillReceiveProps","nextProps","changes","extractGridPropertyChanges","extractDeclarativeColDefChanges","processOnChange","debugLogging","debug","detectionStrategy","getStrategy","currentColDefs","newColDefs","areEqual","log","previousValue","currentValue","changedKeys","ALL_PROPERTIES","indexOf","changeDetectionStrategy","getEventCallbacks","funcName","componentWillUnmount","destroy","Component","propTypes","object","addProperties","func","BOOLEAN_PROPERTIES","bool","STRING_PROPERTIES","string","OBJECT_PROPERTIES","ARRAY_PROPERTIES","array","NUMBER_PROPERTIES","number","FUNCTION_PROPERTIES","listOfProps","propType","ReactFrameworkComponentWrapper","apply","createWrapper","UserReactComponent","useLegacyReact","LegacyReactComponent","ReactComponent","unstable_renderSubtreeIntoContainer","reactNext","Autowired","Bean","BaseComponentWrapper","setFrameworkBeans"],"mappings":"AAAA;AACA;;AACA,IAAIA,SAAS,GAAI,QAAQ,KAAKA,SAAd,IAA6B,YAAY;AACrD,MAAIC,aAAa,GAAG,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAChCF,IAAAA,aAAa,GAAGG,MAAM,CAACC,cAAP,IACX;AAAEC,MAAAA,SAAS,EAAE;AAAb,iBAA6BC,KAA7B,IAAsC,UAAUL,CAAV,EAAaC,CAAb,EAAgB;AAAED,MAAAA,CAAC,CAACI,SAAF,GAAcH,CAAd;AAAkB,KAD/D,IAEZ,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AAAE,WAAK,IAAIK,CAAT,IAAcL,CAAd,EAAiB,IAAIA,CAAC,CAACM,cAAF,CAAiBD,CAAjB,CAAJ,EAAyBN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;AAAc,KAF9E;;AAGA,WAAOP,aAAa,CAACC,CAAD,EAAIC,CAAJ,CAApB;AACH,GALD;;AAMA,SAAO,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AACnBF,IAAAA,aAAa,CAACC,CAAD,EAAIC,CAAJ,CAAb;;AACA,aAASO,EAAT,GAAc;AAAE,WAAKC,WAAL,GAAmBT,CAAnB;AAAuB;;AACvCA,IAAAA,CAAC,CAACU,SAAF,GAAcT,CAAC,KAAK,IAAN,GAAaC,MAAM,CAACS,MAAP,CAAcV,CAAd,CAAb,IAAiCO,EAAE,CAACE,SAAH,GAAeT,CAAC,CAACS,SAAjB,EAA4B,IAAIF,EAAJ,EAA7D,CAAd;AACH,GAJD;AAKH,CAZ2C,EAA5C;;AAaA,IAAII,UAAU,GAAI,QAAQ,KAAKA,UAAd,IAA6B,UAAUC,UAAV,EAAsBC,MAAtB,EAA8BC,GAA9B,EAAmCC,IAAnC,EAAyC;AACnF,MAAIC,CAAC,GAAGC,SAAS,CAACC,MAAlB;AAAA,MAA0BC,CAAC,GAAGH,CAAC,GAAG,CAAJ,GAAQH,MAAR,GAAiBE,IAAI,KAAK,IAAT,GAAgBA,IAAI,GAAGd,MAAM,CAACmB,wBAAP,CAAgCP,MAAhC,EAAwCC,GAAxC,CAAvB,GAAsEC,IAArH;AAAA,MAA2HhB,CAA3H;AACA,MAAI,OAAOsB,OAAP,KAAmB,QAAnB,IAA+B,OAAOA,OAAO,CAACC,QAAf,KAA4B,UAA/D,EAA2EH,CAAC,GAAGE,OAAO,CAACC,QAAR,CAAiBV,UAAjB,EAA6BC,MAA7B,EAAqCC,GAArC,EAA0CC,IAA1C,CAAJ,CAA3E,KACK,KAAK,IAAIQ,CAAC,GAAGX,UAAU,CAACM,MAAX,GAAoB,CAAjC,EAAoCK,CAAC,IAAI,CAAzC,EAA4CA,CAAC,EAA7C,EAAiD,IAAIxB,CAAC,GAAGa,UAAU,CAACW,CAAD,CAAlB,EAAuBJ,CAAC,GAAG,CAACH,CAAC,GAAG,CAAJ,GAAQjB,CAAC,CAACoB,CAAD,CAAT,GAAeH,CAAC,GAAG,CAAJ,GAAQjB,CAAC,CAACc,MAAD,EAASC,GAAT,EAAcK,CAAd,CAAT,GAA4BpB,CAAC,CAACc,MAAD,EAASC,GAAT,CAA7C,KAA+DK,CAAnE;AAC7E,SAAOH,CAAC,GAAG,CAAJ,IAASG,CAAT,IAAclB,MAAM,CAACuB,cAAP,CAAsBX,MAAtB,EAA8BC,GAA9B,EAAmCK,CAAnC,CAAd,EAAqDA,CAA5D;AACH,CALD;;AAMA,IAAIM,UAAU,GAAI,QAAQ,KAAKA,UAAd,IAA6B,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAC1D,MAAI,OAAON,OAAP,KAAmB,QAAnB,IAA+B,OAAOA,OAAO,CAACO,QAAf,KAA4B,UAA/D,EAA2E,OAAOP,OAAO,CAACO,QAAR,CAAiBF,CAAjB,EAAoBC,CAApB,CAAP;AAC9E,CAFD;;AAGA1B,MAAM,CAACuB,cAAP,CAAsBK,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAnB;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,WAAD,CAAtB;;AACA,IAAIE,SAAS,GAAGF,OAAO,CAAC,YAAD,CAAvB;;AACA,IAAIG,MAAM,GAAGH,OAAO,CAAC,mBAAD,CAApB;;AACA,IAAII,mBAAmB,GAAGJ,OAAO,CAAC,mBAAD,CAAjC;;AACA,IAAIK,cAAc,GAAGL,OAAO,CAAC,gBAAD,CAA5B;;AACA,IAAIM,gBAAgB,GAAGN,OAAO,CAAC,kBAAD,CAA9B;;AACA,IAAIO,wBAAwB,GAAGP,OAAO,CAAC,0BAAD,CAAtC;;AACA,IAAIQ,sBAAsB,GAAGR,OAAO,CAAC,wBAAD,CAApC;;AACA,IAAIS,WAAW;AAAG;AAAe,UAAUC,MAAV,EAAkB;AAC/C7C,EAAAA,SAAS,CAAC4C,WAAD,EAAcC,MAAd,CAAT;;AACA,WAASD,WAAT,CAAqBE,KAArB,EAA4BC,KAA5B,EAAmC;AAC/B,QAAIC,KAAK,GAAGH,MAAM,CAACI,IAAP,CAAY,IAAZ,EAAkBH,KAAlB,EAAyBC,KAAzB,KAAmC,IAA/C;;AACAC,IAAAA,KAAK,CAACF,KAAN,GAAcA,KAAd;AACAE,IAAAA,KAAK,CAACD,KAAN,GAAcA,KAAd;AACAC,IAAAA,KAAK,CAACE,sBAAN,GAA+B,IAAIR,wBAAwB,CAACS,sBAA7B,EAA/B;AACAH,IAAAA,KAAK,CAACI,GAAN,GAAY,IAAZ;AACAJ,IAAAA,KAAK,CAACK,OAAN,GAAgB,EAAhB;AACAL,IAAAA,KAAK,CAACM,sBAAN,GAA+B,KAA/B;AACA,WAAON,KAAP;AACH;;AACDJ,EAAAA,WAAW,CAAChC,SAAZ,CAAsB2C,MAAtB,GAA+B,YAAY;AACvC,QAAIP,KAAK,GAAG,IAAZ;;AACA,WAAOd,KAAK,CAACsB,aAAN,CAAoB,KAApB,EAA2B;AAC9BC,MAAAA,KAAK,EAAE,KAAKC,iBAAL,EADuB;AAE9BC,MAAAA,GAAG,EAAE,UAAUC,CAAV,EAAa;AACdZ,QAAAA,KAAK,CAACa,QAAN,GAAiBD,CAAjB;AACH;AAJ6B,KAA3B,EAKJ,KAAKP,OALD,CAAP;AAMH,GARD;;AASAT,EAAAA,WAAW,CAAChC,SAAZ,CAAsB8C,iBAAtB,GAA0C,YAAY;AAClD,QAAID,KAAK,GAAG;AAAEK,MAAAA,MAAM,EAAE;AAAV,KAAZ,CADkD,CAElD;;AACA,QAAIC,cAAc,GAAG,KAAKjB,KAAL,CAAWiB,cAAhC;;AACA,QAAIA,cAAJ,EAAoB;AAChB3D,MAAAA,MAAM,CAAC4D,IAAP,CAAYD,cAAZ,EAA4BE,OAA5B,CAAoC,UAAUhD,GAAV,EAAe;AAC/CwC,QAAAA,KAAK,CAACxC,GAAD,CAAL,GAAa8C,cAAc,CAAC9C,GAAD,CAA3B;AACH,OAFD;AAGH;;AACD,WAAOwC,KAAP;AACH,GAVD;;AAWAb,EAAAA,WAAW,CAAChC,SAAZ,CAAsBsD,iBAAtB,GAA0C,YAAY;AAClD,QAAIC,UAAU,GAAG;AACbC,MAAAA,iBAAiB,EAAE;AACfC,QAAAA,WAAW,EAAE;AADE;AADN,KAAjB;AAKA,QAAIC,WAAW,GAAG,KAAKxB,KAAL,CAAWwB,WAAX,IAA0B,EAA5C;;AACA,QAAI9B,cAAc,CAAC+B,YAAf,CAA4BC,eAA5B,CAA4C,KAAK1B,KAAjD,CAAJ,EAA6D;AACzDwB,MAAAA,WAAW,CAACG,UAAZ,GAAyBjC,cAAc,CAAC+B,YAAf,CAA4BG,kBAA5B,CAA+C,KAAK5B,KAApD,CAAzB;AACH;;AACD,SAAKwB,WAAL,GAAmBhC,MAAM,CAACqC,aAAP,CAAqBC,2BAArB,CAAiDN,WAAjD,EAA8D,KAAKxB,KAAnE,CAAnB,CAVkD,CAWlD;;AACA,QAAIR,MAAM,CAACuC,IAAX,CAAgB,KAAKhB,QAArB,EAA+B,KAAKS,WAApC,EAAiDH,UAAjD;AACA,SAAKf,GAAL,GAAW,KAAKkB,WAAL,CAAiBlB,GAA5B;AACA,SAAK0B,SAAL,GAAiB,KAAKR,WAAL,CAAiBQ,SAAlC;AACH,GAfD;;AAgBAlC,EAAAA,WAAW,CAAChC,SAAZ,CAAsBmE,qBAAtB,GAA8C,YAAY;AACtD;AACA;AACA;AACA,WAAO,KAAP;AACH,GALD;;AAMAnC,EAAAA,WAAW,CAAChC,SAAZ,CAAsBoE,eAAtB,GAAwC,UAAUC,cAAV,EAA0BC,OAA1B,EAAmCC,WAAnC,EAAgD;AACpF,QAAInC,KAAK,GAAG,IAAZ;;AACA,QAAImC,WAAW,KAAK,KAAK,CAAzB,EAA4B;AAAEA,MAAAA,WAAW,GAAG,CAAd;AAAkB,KAFoC,CAGpF;;;AACA,QAAI,CAAC,KAAK/B,GAAV,EAAe;AACX8B,MAAAA,OAAO,CAAC,IAAD,CAAP;AACA;AACH;;AACD,QAAID,cAAc,CAACG,oBAAf,MAAyCH,cAAc,CAACI,0BAAf,EAA7C,EAA0F;AACtFH,MAAAA,OAAO,CAAC,IAAD,CAAP;AACH,KAFD,MAGK,IAAI,CAACD,cAAc,CAACG,oBAAf,EAAD,IAA0CH,cAAc,CAACK,6BAAf,EAA9C,EAA8F;AAC/FJ,MAAAA,OAAO,CAAC,IAAD,CAAP;AACH,KAFI,MAGA;AACD,UAAIC,WAAW,IAAIvC,WAAW,CAAC2C,2BAA/B,EAA4D;AACxDC,QAAAA,OAAO,CAACC,KAAR,CAAc,+BAA+BR,cAAc,CAACS,qBAAf,EAA/B,GAAwE,uBAAxE,GAAkG9C,WAAW,CAAC2C,2BAA9G,GAA4I,IAA1J;AACA;AACH;;AACDI,MAAAA,MAAM,CAACC,UAAP,CAAkB,YAAY;AAAE,eAAO5C,KAAK,CAACgC,eAAN,CAAsBC,cAAtB,EAAsCC,OAAtC,EAA+CC,WAAW,GAAG,CAA7D,CAAP;AAAyE,OAAzG,EAA2G,CAA3G;AACH;AACJ,GArBD;AAsBA;;;;;;;AAKAvC,EAAAA,WAAW,CAAChC,SAAZ,CAAsBiF,gBAAtB,GAAyC,UAAUC,MAAV,EAAkBb,cAAlB,EAAkCC,OAAlC,EAA2C;AAChF,SAAK7B,OAAL,GAAe,KAAKA,OAAL,CAAa0C,MAAb,CAAoB,CAACD,MAAD,CAApB,CAAf;AACA,SAAKE,WAAL,CAAiB,KAAKhB,eAAL,CAAqBC,cAArB,EAAqCC,OAArC,CAAjB;AACH,GAHD;;AAIAtC,EAAAA,WAAW,CAAChC,SAAZ,CAAsBoF,WAAtB,GAAoC,UAAUC,QAAV,EAAoB;AACpD,QAAIjD,KAAK,GAAG,IAAZ;;AACA,QAAI,KAAKM,sBAAT,EAAiC;AAC7B,aAAO2C,QAAQ,IAAIA,QAAQ,EAA3B;AACH;;AACDL,IAAAA,UAAU,CAAC,YAAY;AACnB,UAAI5C,KAAK,CAACI,GAAV,EAAe;AAAE;AACbJ,QAAAA,KAAK,CAACkD,WAAN,CAAkB,YAAY;AAC1BD,UAAAA,QAAQ,IAAIA,QAAQ,EAApB;AACAjD,UAAAA,KAAK,CAACM,sBAAN,GAA+B,KAA/B;AACH,SAHD;AAIH;AACJ,KAPS,CAAV;AAQA,SAAKA,sBAAL,GAA8B,IAA9B;AACH,GAdD;;AAeAV,EAAAA,WAAW,CAAChC,SAAZ,CAAsBuF,aAAtB,GAAsC,UAAUL,MAAV,EAAkB;AACpD,SAAKzC,OAAL,GAAe,KAAKA,OAAL,CAAa+C,MAAb,CAAoB,UAAUC,SAAV,EAAqB;AAAE,aAAOA,SAAS,KAAKP,MAArB;AAA8B,KAAzE,CAAf;AACA,SAAKE,WAAL;AACH,GAHD;;AAIApD,EAAAA,WAAW,CAAChC,SAAZ,CAAsB0F,sBAAtB,GAA+C,UAAUC,OAAV,EAAmB;AAC9D,QAAIA,OAAO,KAAK,SAAhB,EAA2B;AACvB;AACA;AACA;AACA,UAAI,CAAC,CAAC,KAAKzD,KAAL,CAAW0D,8BAAjB,EAAiD;AAC7C,eAAO,KAAK1D,KAAL,CAAW0D,8BAAlB;AACH,OAFD,MAGK,IAAI,KAAK1D,KAAL,CAAW,kBAAX,CAAJ,EAAoC;AACrC,eAAOJ,wBAAwB,CAAC+D,2BAAzB,CAAqDC,aAA5D;AACH;AACJ,KAX6D,CAY9D;;;AACA,WAAOhE,wBAAwB,CAAC+D,2BAAzB,CAAqDE,cAA5D;AACH,GAdD;;AAeA/D,EAAAA,WAAW,CAAChC,SAAZ,CAAsBgG,yBAAtB,GAAkD,UAAUC,SAAV,EAAqB;AACnE,QAAIC,OAAO,GAAG,EAAd;AACA,SAAKC,0BAAL,CAAgCF,SAAhC,EAA2CC,OAA3C;AACA,SAAKE,+BAAL,CAAqCH,SAArC,EAAgDC,OAAhD;AACAxE,IAAAA,MAAM,CAACqC,aAAP,CAAqBsC,eAArB,CAAqCH,OAArC,EAA8C,KAAKxC,WAAnD,EAAgE,KAAKlB,GAArE,EAA0E,KAAK0B,SAA/E;AACH,GALD;;AAMAlC,EAAAA,WAAW,CAAChC,SAAZ,CAAsBoG,+BAAtB,GAAwD,UAAUH,SAAV,EAAqBC,OAArB,EAA8B;AAClF,QAAII,YAAY,GAAG,CAAC,CAACL,SAAS,CAACM,KAA/B;;AACA,QAAI3E,cAAc,CAAC+B,YAAf,CAA4BC,eAA5B,CAA4CqC,SAA5C,CAAJ,EAA4D;AACxD,UAAIO,iBAAiB,GAAG,KAAKlE,sBAAL,CAA4BmE,WAA5B,CAAwC3E,wBAAwB,CAAC+D,2BAAzB,CAAqDE,cAA7F,CAAxB;AACA,UAAIW,cAAc,GAAG,KAAKhD,WAAL,CAAiBG,UAAtC;AACA,UAAI8C,UAAU,GAAG/E,cAAc,CAAC+B,YAAf,CAA4BG,kBAA5B,CAA+CmC,SAA/C,CAAjB;;AACA,UAAI,CAACO,iBAAiB,CAACI,QAAlB,CAA2BF,cAA3B,EAA2CC,UAA3C,CAAL,EAA6D;AACzD,YAAIL,YAAJ,EAAkB;AACd1B,UAAAA,OAAO,CAACiC,GAAR,CAAY,0CAAZ;AACH;;AACDX,QAAAA,OAAO,CAAC,YAAD,CAAP,GACI;AACIY,UAAAA,aAAa,EAAE,KAAKpD,WAAL,CAAiBG,UADpC;AAEIkD,UAAAA,YAAY,EAAEnF,cAAc,CAAC+B,YAAf,CAA4BG,kBAA5B,CAA+CmC,SAA/C;AAFlB,SADJ;AAKH;AACJ;AACJ,GAjBD;;AAkBAjE,EAAAA,WAAW,CAAChC,SAAZ,CAAsBmG,0BAAtB,GAAmD,UAAUF,SAAV,EAAqBC,OAArB,EAA8B;AAC7E,QAAI9D,KAAK,GAAG,IAAZ;;AACA,QAAIkE,YAAY,GAAG,CAAC,CAACL,SAAS,CAACM,KAA/B;AACA,QAAIS,WAAW,GAAGxH,MAAM,CAAC4D,IAAP,CAAY6C,SAAZ,CAAlB;AACAe,IAAAA,WAAW,CAAC3D,OAAZ,CAAoB,UAAUsC,OAAV,EAAmB;AACnC,UAAIjE,MAAM,CAACqC,aAAP,CAAqBkD,cAArB,CAAoCC,OAApC,CAA4CvB,OAA5C,MAAyD,CAAC,CAA9D,EAAiE;AAC7D,YAAIwB,uBAAuB,GAAG/E,KAAK,CAACE,sBAAN,CAA6BmE,WAA7B,CAAyCrE,KAAK,CAACsD,sBAAN,CAA6BC,OAA7B,CAAzC,CAA9B;;AACA,YAAI,CAACwB,uBAAuB,CAACP,QAAxB,CAAiCxE,KAAK,CAACF,KAAN,CAAYyD,OAAZ,CAAjC,EAAuDM,SAAS,CAACN,OAAD,CAAhE,CAAL,EAAiF;AAC7E,cAAIW,YAAJ,EAAkB;AACd1B,YAAAA,OAAO,CAACiC,GAAR,CAAY,mBAAmBlB,OAAnB,GAA6B,oBAAzC;AACH;;AACDO,UAAAA,OAAO,CAACP,OAAD,CAAP,GAAmB;AACfmB,YAAAA,aAAa,EAAE1E,KAAK,CAACF,KAAN,CAAYyD,OAAZ,CADA;AAEfoB,YAAAA,YAAY,EAAEd,SAAS,CAACN,OAAD;AAFR,WAAnB;AAIH;AACJ;AACJ,KAbD;AAcAjE,IAAAA,MAAM,CAACqC,aAAP,CAAqBqD,iBAArB,GAAyC/D,OAAzC,CAAiD,UAAUgE,QAAV,EAAoB;AACjE,UAAIjF,KAAK,CAACF,KAAN,CAAYmF,QAAZ,MAA0BpB,SAAS,CAACoB,QAAD,CAAvC,EAAmD;AAC/C,YAAIf,YAAJ,EAAkB;AACd1B,UAAAA,OAAO,CAACiC,GAAR,CAAY,mBAAmBQ,QAAnB,GAA8B,0BAA1C;AACH;;AACDnB,QAAAA,OAAO,CAACmB,QAAD,CAAP,GAAoB;AAChBP,UAAAA,aAAa,EAAE1E,KAAK,CAACF,KAAN,CAAYmF,QAAZ,CADC;AAEhBN,UAAAA,YAAY,EAAEd,SAAS,CAACoB,QAAD;AAFP,SAApB;AAIH;AACJ,KAVD;AAWH,GA7BD;;AA8BArF,EAAAA,WAAW,CAAChC,SAAZ,CAAsBsH,oBAAtB,GAA6C,YAAY;AACrD,QAAI,KAAK9E,GAAT,EAAc;AACV,WAAKA,GAAL,CAAS+E,OAAT;AACA,WAAK/E,GAAL,GAAW,IAAX;AACH;AACJ,GALD;;AAMAR,EAAAA,WAAW,CAAC2C,2BAAZ,GAA0C,IAA1C,CAnL+C,CAmLC;;AAChD,SAAO3C,WAAP;AACH,CArLgC,CAqL/BV,KAAK,CAACkG,SArLyB,CAAjC;;AAsLApG,OAAO,CAACY,WAAR,GAAsBA,WAAtB;AACAA,WAAW,CAACyF,SAAZ,GAAwB;AACpB/D,EAAAA,WAAW,EAAEjC,SAAS,CAACiG;AADH,CAAxB;AAGAC,aAAa,CAACjG,MAAM,CAACqC,aAAP,CAAqBqD,iBAArB,EAAD,EAA2C3F,SAAS,CAACmG,IAArD,CAAb;AACAD,aAAa,CAACjG,MAAM,CAACqC,aAAP,CAAqB8D,kBAAtB,EAA0CpG,SAAS,CAACqG,IAApD,CAAb;AACAH,aAAa,CAACjG,MAAM,CAACqC,aAAP,CAAqBgE,iBAAtB,EAAyCtG,SAAS,CAACuG,MAAnD,CAAb;AACAL,aAAa,CAACjG,MAAM,CAACqC,aAAP,CAAqBkE,iBAAtB,EAAyCxG,SAAS,CAACiG,MAAnD,CAAb;AACAC,aAAa,CAACjG,MAAM,CAACqC,aAAP,CAAqBmE,gBAAtB,EAAwCzG,SAAS,CAAC0G,KAAlD,CAAb;AACAR,aAAa,CAACjG,MAAM,CAACqC,aAAP,CAAqBqE,iBAAtB,EAAyC3G,SAAS,CAAC4G,MAAnD,CAAb;AACAV,aAAa,CAACjG,MAAM,CAACqC,aAAP,CAAqBuE,mBAAtB,EAA2C7G,SAAS,CAACmG,IAArD,CAAb;;AACA,SAASD,aAAT,CAAuBY,WAAvB,EAAoCC,QAApC,EAA8C;AAC1CD,EAAAA,WAAW,CAAClF,OAAZ,CAAoB,UAAUsC,OAAV,EAAmB;AACnC3D,IAAAA,WAAW,CAAC2D,OAAD,CAAX,GAAuB6C,QAAvB;AACH,GAFD;AAGH;;AACD,IAAIC,8BAA8B;AAAG;AAAe,UAAUxG,MAAV,EAAkB;AAClE7C,EAAAA,SAAS,CAACqJ,8BAAD,EAAiCxG,MAAjC,CAAT;;AACA,WAASwG,8BAAT,GAA0C;AACtC,WAAOxG,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACyG,KAAP,CAAa,IAAb,EAAmBlI,SAAnB,CAAnB,IAAoD,IAA3D;AACH;;AACDiI,EAAAA,8BAA8B,CAACzI,SAA/B,CAAyC2I,aAAzC,GAAyD,UAAUC,kBAAV,EAA8B;AACnF;AACA;AACA;AACA,WAAO,KAAKC,cAAL,KACH,IAAI9G,sBAAsB,CAAC+G,oBAA3B,CAAgDF,kBAAhD,EAAoE,KAAKnF,WAAzE,CADG,GAEH,IAAI5B,gBAAgB,CAACkH,cAArB,CAAoCH,kBAApC,EAAwD,KAAKnF,WAA7D,CAFJ;AAGH,GAPD;;AAQAgF,EAAAA,8BAA8B,CAACzI,SAA/B,CAAyC6I,cAAzC,GAA0D,YAAY;AAClE;AACA;AACA,WAAQ,OAAOrH,QAAQ,CAACwH,mCAAhB,KAAwD,UAAzD,IACC,KAAKvF,WAAL,IAAoB,KAAKA,WAAL,CAAiBC,WAArC,IAAoD,CAAC,KAAKD,WAAL,CAAiBC,WAAjB,CAA6BuF,SAD1F;AAEH,GALD;;AAMA/I,EAAAA,UAAU,CAAC,CACPyB,mBAAmB,CAACuH,SAApB,CAA8B,aAA9B,CADO,EAEPlI,UAAU,CAAC,aAAD,EAAgBgB,WAAhB,CAFH,CAAD,EAGPyG,8BAA8B,CAACzI,SAHxB,EAGmC,aAHnC,EAGkD,KAAK,CAHvD,CAAV;;AAIAyI,EAAAA,8BAA8B,GAAGvI,UAAU,CAAC,CACxCyB,mBAAmB,CAACwH,IAApB,CAAyB,2BAAzB,CADwC,CAAD,EAExCV,8BAFwC,CAA3C;AAGA,SAAOA,8BAAP;AACH,CA3BmD,CA2BlD9G,mBAAmB,CAACyH,oBA3B8B,CAApD;;AA4BA1H,MAAM,CAACuC,IAAP,CAAYoF,iBAAZ,CAA8B,CAACZ,8BAAD,CAA9B","sourcesContent":["// ag-grid-react v21.2.2\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar React = require(\"react\");\nvar ReactDOM = require(\"react-dom\");\nvar PropTypes = require(\"prop-types\");\nvar AgGrid = require(\"ag-grid-community\");\nvar ag_grid_community_1 = require(\"ag-grid-community\");\nvar agGridColumn_1 = require(\"./agGridColumn\");\nvar reactComponent_1 = require(\"./reactComponent\");\nvar changeDetectionService_1 = require(\"./changeDetectionService\");\nvar legacyReactComponent_1 = require(\"./legacyReactComponent\");\nvar AgGridReact = /** @class */ (function (_super) {\n    __extends(AgGridReact, _super);\n    function AgGridReact(props, state) {\n        var _this = _super.call(this, props, state) || this;\n        _this.props = props;\n        _this.state = state;\n        _this.changeDetectionService = new changeDetectionService_1.ChangeDetectionService();\n        _this.api = null;\n        _this.portals = [];\n        _this.hasPendingPortalUpdate = false;\n        return _this;\n    }\n    AgGridReact.prototype.render = function () {\n        var _this = this;\n        return React.createElement(\"div\", {\n            style: this.createStyleForDiv(),\n            ref: function (e) {\n                _this.eGridDiv = e;\n            }\n        }, this.portals);\n    };\n    AgGridReact.prototype.createStyleForDiv = function () {\n        var style = { height: \"100%\" };\n        // allow user to override styles\n        var containerStyle = this.props.containerStyle;\n        if (containerStyle) {\n            Object.keys(containerStyle).forEach(function (key) {\n                style[key] = containerStyle[key];\n            });\n        }\n        return style;\n    };\n    AgGridReact.prototype.componentDidMount = function () {\n        var gridParams = {\n            seedBeanInstances: {\n                agGridReact: this\n            }\n        };\n        var gridOptions = this.props.gridOptions || {};\n        if (agGridColumn_1.AgGridColumn.hasChildColumns(this.props)) {\n            gridOptions.columnDefs = agGridColumn_1.AgGridColumn.mapChildColumnDefs(this.props);\n        }\n        this.gridOptions = AgGrid.ComponentUtil.copyAttributesToGridOptions(gridOptions, this.props);\n        // don't need the return value\n        new AgGrid.Grid(this.eGridDiv, this.gridOptions, gridParams);\n        this.api = this.gridOptions.api;\n        this.columnApi = this.gridOptions.columnApi;\n    };\n    AgGridReact.prototype.shouldComponentUpdate = function () {\n        // we want full control of the dom, as ag-Grid doesn't use React internally,\n        // so for performance reasons we tell React we don't need render called after\n        // property changes.\n        return false;\n    };\n    AgGridReact.prototype.waitForInstance = function (reactComponent, resolve, runningTime) {\n        var _this = this;\n        if (runningTime === void 0) { runningTime = 0; }\n        // if the grid has been destroyed in the meantime just resolve\n        if (!this.api) {\n            resolve(null);\n            return;\n        }\n        if (reactComponent.isStatelessComponent() && reactComponent.statelessComponentRendered()) {\n            resolve(null);\n        }\n        else if (!reactComponent.isStatelessComponent() && reactComponent.getFrameworkComponentInstance()) {\n            resolve(null);\n        }\n        else {\n            if (runningTime >= AgGridReact.MAX_COMPONENT_CREATION_TIME) {\n                console.error(\"ag-Grid: React Component '\" + reactComponent.getReactComponentName() + \"' not created within \" + AgGridReact.MAX_COMPONENT_CREATION_TIME + \"ms\");\n                return;\n            }\n            window.setTimeout(function () { return _this.waitForInstance(reactComponent, resolve, runningTime + 5); }, 5);\n        }\n    };\n    /**\n     * Mounts a react portal for components registered under the componentFramework.\n     * We do this because we want all portals to be in the same tree - in order to get\n     * Context to work properly.\n     */\n    AgGridReact.prototype.mountReactPortal = function (portal, reactComponent, resolve) {\n        this.portals = this.portals.concat([portal]);\n        this.batchUpdate(this.waitForInstance(reactComponent, resolve));\n    };\n    AgGridReact.prototype.batchUpdate = function (callback) {\n        var _this = this;\n        if (this.hasPendingPortalUpdate) {\n            return callback && callback();\n        }\n        setTimeout(function () {\n            if (_this.api) { // destroyed?\n                _this.forceUpdate(function () {\n                    callback && callback();\n                    _this.hasPendingPortalUpdate = false;\n                });\n            }\n        });\n        this.hasPendingPortalUpdate = true;\n    };\n    AgGridReact.prototype.destroyPortal = function (portal) {\n        this.portals = this.portals.filter(function (curPortal) { return curPortal !== portal; });\n        this.batchUpdate();\n    };\n    AgGridReact.prototype.getStrategyTypeForProp = function (propKey) {\n        if (propKey === 'rowData') {\n            // for row data we either return the supplied strategy, or:\n            // if deltaRowDataMode we default to IdentityChecks,\n            // if not we default to DeepValueChecks (with the rest of the properties)\n            if (!!this.props.rowDataChangeDetectionStrategy) {\n                return this.props.rowDataChangeDetectionStrategy;\n            }\n            else if (this.props['deltaRowDataMode']) {\n                return changeDetectionService_1.ChangeDetectionStrategyType.IdentityCheck;\n            }\n        }\n        // all non row data properties will default to DeepValueCheck\n        return changeDetectionService_1.ChangeDetectionStrategyType.DeepValueCheck;\n    };\n    AgGridReact.prototype.componentWillReceiveProps = function (nextProps) {\n        var changes = {};\n        this.extractGridPropertyChanges(nextProps, changes);\n        this.extractDeclarativeColDefChanges(nextProps, changes);\n        AgGrid.ComponentUtil.processOnChange(changes, this.gridOptions, this.api, this.columnApi);\n    };\n    AgGridReact.prototype.extractDeclarativeColDefChanges = function (nextProps, changes) {\n        var debugLogging = !!nextProps.debug;\n        if (agGridColumn_1.AgGridColumn.hasChildColumns(nextProps)) {\n            var detectionStrategy = this.changeDetectionService.getStrategy(changeDetectionService_1.ChangeDetectionStrategyType.DeepValueCheck);\n            var currentColDefs = this.gridOptions.columnDefs;\n            var newColDefs = agGridColumn_1.AgGridColumn.mapChildColumnDefs(nextProps);\n            if (!detectionStrategy.areEqual(currentColDefs, newColDefs)) {\n                if (debugLogging) {\n                    console.log(\"agGridReact: colDefs definitions changed\");\n                }\n                changes['columnDefs'] =\n                    {\n                        previousValue: this.gridOptions.columnDefs,\n                        currentValue: agGridColumn_1.AgGridColumn.mapChildColumnDefs(nextProps)\n                    };\n            }\n        }\n    };\n    AgGridReact.prototype.extractGridPropertyChanges = function (nextProps, changes) {\n        var _this = this;\n        var debugLogging = !!nextProps.debug;\n        var changedKeys = Object.keys(nextProps);\n        changedKeys.forEach(function (propKey) {\n            if (AgGrid.ComponentUtil.ALL_PROPERTIES.indexOf(propKey) !== -1) {\n                var changeDetectionStrategy = _this.changeDetectionService.getStrategy(_this.getStrategyTypeForProp(propKey));\n                if (!changeDetectionStrategy.areEqual(_this.props[propKey], nextProps[propKey])) {\n                    if (debugLogging) {\n                        console.log(\"agGridReact: [\" + propKey + \"] property changed\");\n                    }\n                    changes[propKey] = {\n                        previousValue: _this.props[propKey],\n                        currentValue: nextProps[propKey]\n                    };\n                }\n            }\n        });\n        AgGrid.ComponentUtil.getEventCallbacks().forEach(function (funcName) {\n            if (_this.props[funcName] !== nextProps[funcName]) {\n                if (debugLogging) {\n                    console.log(\"agGridReact: [\" + funcName + \"] event callback changed\");\n                }\n                changes[funcName] = {\n                    previousValue: _this.props[funcName],\n                    currentValue: nextProps[funcName]\n                };\n            }\n        });\n    };\n    AgGridReact.prototype.componentWillUnmount = function () {\n        if (this.api) {\n            this.api.destroy();\n            this.api = null;\n        }\n    };\n    AgGridReact.MAX_COMPONENT_CREATION_TIME = 1000; // a second should be more than enough to instantiate a component\n    return AgGridReact;\n}(React.Component));\nexports.AgGridReact = AgGridReact;\nAgGridReact.propTypes = {\n    gridOptions: PropTypes.object\n};\naddProperties(AgGrid.ComponentUtil.getEventCallbacks(), PropTypes.func);\naddProperties(AgGrid.ComponentUtil.BOOLEAN_PROPERTIES, PropTypes.bool);\naddProperties(AgGrid.ComponentUtil.STRING_PROPERTIES, PropTypes.string);\naddProperties(AgGrid.ComponentUtil.OBJECT_PROPERTIES, PropTypes.object);\naddProperties(AgGrid.ComponentUtil.ARRAY_PROPERTIES, PropTypes.array);\naddProperties(AgGrid.ComponentUtil.NUMBER_PROPERTIES, PropTypes.number);\naddProperties(AgGrid.ComponentUtil.FUNCTION_PROPERTIES, PropTypes.func);\nfunction addProperties(listOfProps, propType) {\n    listOfProps.forEach(function (propKey) {\n        AgGridReact[propKey] = propType;\n    });\n}\nvar ReactFrameworkComponentWrapper = /** @class */ (function (_super) {\n    __extends(ReactFrameworkComponentWrapper, _super);\n    function ReactFrameworkComponentWrapper() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ReactFrameworkComponentWrapper.prototype.createWrapper = function (UserReactComponent) {\n        // at some point soon unstable_renderSubtreeIntoContainer is going to be dropped (and in a minor release at that)\n        // this uses the existing mechanism as long as possible, but switches over to using Portals when\n        // unstable_renderSubtreeIntoContainer is no longer an option\n        return this.useLegacyReact() ?\n            new legacyReactComponent_1.LegacyReactComponent(UserReactComponent, this.agGridReact) :\n            new reactComponent_1.ReactComponent(UserReactComponent, this.agGridReact);\n    };\n    ReactFrameworkComponentWrapper.prototype.useLegacyReact = function () {\n        // force use of react next (ie portals) if unstable_renderSubtreeIntoContainer is no longer present\n        // or if the user elects to try it\n        return (typeof ReactDOM.unstable_renderSubtreeIntoContainer !== \"function\")\n            || (this.agGridReact && this.agGridReact.gridOptions && !this.agGridReact.gridOptions.reactNext);\n    };\n    __decorate([\n        ag_grid_community_1.Autowired(\"agGridReact\"),\n        __metadata(\"design:type\", AgGridReact)\n    ], ReactFrameworkComponentWrapper.prototype, \"agGridReact\", void 0);\n    ReactFrameworkComponentWrapper = __decorate([\n        ag_grid_community_1.Bean(\"frameworkComponentWrapper\")\n    ], ReactFrameworkComponentWrapper);\n    return ReactFrameworkComponentWrapper;\n}(ag_grid_community_1.BaseComponentWrapper));\nAgGrid.Grid.setFrameworkBeans([ReactFrameworkComponentWrapper]);\n"]},"metadata":{},"sourceType":"script"}