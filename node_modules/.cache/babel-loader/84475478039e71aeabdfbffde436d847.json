{"ast":null,"code":"/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.2.2\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar context_1 = require(\"./context/context\");\n\nvar eventService_1 = require(\"./eventService\");\n\nvar events_1 = require(\"./events\");\n\nvar gridOptionsWrapper_1 = require(\"./gridOptionsWrapper\");\n\nvar columnApi_1 = require(\"./columnController/columnApi\");\n\nvar columnController_1 = require(\"./columnController/columnController\");\n\nvar gridApi_1 = require(\"./gridApi\");\n\nvar cellComp_1 = require(\"./rendering/cellComp\");\n\nvar utils_1 = require(\"./utils\");\n\nvar FocusedCellController =\n/** @class */\nfunction () {\n  function FocusedCellController() {}\n\n  FocusedCellController.prototype.init = function () {\n    this.eventService.addEventListener(events_1.Events.EVENT_COLUMN_PIVOT_MODE_CHANGED, this.clearFocusedCell.bind(this));\n    this.eventService.addEventListener(events_1.Events.EVENT_COLUMN_EVERYTHING_CHANGED, this.clearFocusedCell.bind(this));\n    this.eventService.addEventListener(events_1.Events.EVENT_COLUMN_GROUP_OPENED, this.clearFocusedCell.bind(this));\n    this.eventService.addEventListener(events_1.Events.EVENT_COLUMN_ROW_GROUP_CHANGED, this.clearFocusedCell.bind(this)); // we used to remove focus when moving column, am not sure why. so taking this out and see who complains.\n    // we can delete these three lines of code soon.\n    // this.eventService.addEventListener(Events.EVENT_COLUMN_MOVED, this.clearFocusedCell.bind(this));\n    // this.eventService.addEventListener(Events.EVENT_COLUMN_PINNED, this.clearFocusedCell.bind(this));\n    // this.eventService.addEventListener(Events.EVENT_COLUMN_VISIBLE, this.clearFocusedCell.bind(this));\n  };\n\n  FocusedCellController.prototype.clearFocusedCell = function () {\n    this.focusedCellPosition = null;\n    this.onCellFocused(false);\n  };\n\n  FocusedCellController.prototype.getFocusedCell = function () {\n    return this.focusedCellPosition;\n  }; // we check if the browser is focusing something, and if it is, and\n  // it's the cell we think is focused, then return the cell. so this\n  // methods returns the cell if a) we think it has focus and b) the\n  // browser thinks it has focus. this then returns nothing if we\n  // first focus a cell, then second click outside the grid, as then the\n  // grid cell will still be focused as far as the grid is concerned,\n  // however the browser focus will have moved somewhere else.\n\n\n  FocusedCellController.prototype.getFocusCellToUseAfterRefresh = function () {\n    if (this.gridOptionsWrapper.isSuppressFocusAfterRefresh()) {\n      return null;\n    }\n\n    if (!this.focusedCellPosition) {\n      return null;\n    } // we check that the browser is actually focusing on the grid, if it is not, then\n    // we have nothing to worry about\n\n\n    var browserFocusedCell = this.getGridCellForDomElement(document.activeElement);\n\n    if (!browserFocusedCell) {\n      return null;\n    }\n\n    return this.focusedCellPosition;\n  };\n\n  FocusedCellController.prototype.getGridCellForDomElement = function (eBrowserCell) {\n    var ePointer = eBrowserCell;\n\n    while (ePointer) {\n      var cellComp = this.gridOptionsWrapper.getDomData(ePointer, cellComp_1.CellComp.DOM_DATA_KEY_CELL_COMP);\n\n      if (cellComp) {\n        return cellComp.getCellPosition();\n      }\n\n      ePointer = ePointer.parentNode;\n    }\n\n    return null;\n  };\n\n  FocusedCellController.prototype.setFocusedCell = function (rowIndex, colKey, floating, forceBrowserFocus) {\n    if (forceBrowserFocus === void 0) {\n      forceBrowserFocus = false;\n    }\n\n    var column = utils_1._.makeNull(this.columnController.getGridColumn(colKey));\n\n    this.focusedCellPosition = {\n      rowIndex: rowIndex,\n      rowPinned: utils_1._.makeNull(floating),\n      column: column\n    };\n    this.onCellFocused(forceBrowserFocus);\n  };\n\n  FocusedCellController.prototype.isCellFocused = function (cellPosition) {\n    if (utils_1._.missing(this.focusedCellPosition)) {\n      return false;\n    }\n\n    return this.focusedCellPosition.column === cellPosition.column && this.isRowFocused(cellPosition.rowIndex, cellPosition.rowPinned);\n  };\n\n  FocusedCellController.prototype.isRowNodeFocused = function (rowNode) {\n    return this.isRowFocused(rowNode.rowIndex, rowNode.rowPinned);\n  };\n\n  FocusedCellController.prototype.isAnyCellFocused = function () {\n    return !!this.focusedCellPosition;\n  };\n\n  FocusedCellController.prototype.isRowFocused = function (rowIndex, floating) {\n    if (utils_1._.missing(this.focusedCellPosition)) {\n      return false;\n    }\n\n    var floatingOrNull = utils_1._.makeNull(floating);\n\n    return this.focusedCellPosition.rowIndex === rowIndex && this.focusedCellPosition.rowPinned === floatingOrNull;\n  };\n\n  FocusedCellController.prototype.onCellFocused = function (forceBrowserFocus) {\n    var event = {\n      type: events_1.Events.EVENT_CELL_FOCUSED,\n      forceBrowserFocus: forceBrowserFocus,\n      rowIndex: null,\n      column: null,\n      floating: null,\n      api: this.gridApi,\n      columnApi: this.columnApi,\n      rowPinned: null\n    };\n\n    if (this.focusedCellPosition) {\n      event.rowIndex = this.focusedCellPosition.rowIndex;\n      event.column = this.focusedCellPosition.column;\n      event.rowPinned = this.focusedCellPosition.rowPinned;\n    }\n\n    this.eventService.dispatchEvent(event);\n  };\n\n  __decorate([context_1.Autowired('eventService'), __metadata(\"design:type\", eventService_1.EventService)], FocusedCellController.prototype, \"eventService\", void 0);\n\n  __decorate([context_1.Autowired('gridOptionsWrapper'), __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)], FocusedCellController.prototype, \"gridOptionsWrapper\", void 0);\n\n  __decorate([context_1.Autowired('columnController'), __metadata(\"design:type\", columnController_1.ColumnController)], FocusedCellController.prototype, \"columnController\", void 0);\n\n  __decorate([context_1.Autowired('columnApi'), __metadata(\"design:type\", columnApi_1.ColumnApi)], FocusedCellController.prototype, \"columnApi\", void 0);\n\n  __decorate([context_1.Autowired('gridApi'), __metadata(\"design:type\", gridApi_1.GridApi)], FocusedCellController.prototype, \"gridApi\", void 0);\n\n  __decorate([context_1.PostConstruct, __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", []), __metadata(\"design:returntype\", void 0)], FocusedCellController.prototype, \"init\", null);\n\n  FocusedCellController = __decorate([context_1.Bean('focusedCellController')], FocusedCellController);\n  return FocusedCellController;\n}();\n\nexports.FocusedCellController = FocusedCellController;","map":{"version":3,"sources":["/Users/dirkmennecke77/Desktop/Lageplan/node_modules/ag-grid-community/dist/lib/focusedCellController.js"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__metadata","k","v","metadata","exports","value","context_1","require","eventService_1","events_1","gridOptionsWrapper_1","columnApi_1","columnController_1","gridApi_1","cellComp_1","utils_1","FocusedCellController","prototype","init","eventService","addEventListener","Events","EVENT_COLUMN_PIVOT_MODE_CHANGED","clearFocusedCell","bind","EVENT_COLUMN_EVERYTHING_CHANGED","EVENT_COLUMN_GROUP_OPENED","EVENT_COLUMN_ROW_GROUP_CHANGED","focusedCellPosition","onCellFocused","getFocusedCell","getFocusCellToUseAfterRefresh","gridOptionsWrapper","isSuppressFocusAfterRefresh","browserFocusedCell","getGridCellForDomElement","document","activeElement","eBrowserCell","ePointer","cellComp","getDomData","CellComp","DOM_DATA_KEY_CELL_COMP","getCellPosition","parentNode","setFocusedCell","rowIndex","colKey","floating","forceBrowserFocus","column","_","makeNull","columnController","getGridColumn","rowPinned","isCellFocused","cellPosition","missing","isRowFocused","isRowNodeFocused","rowNode","isAnyCellFocused","floatingOrNull","event","type","EVENT_CELL_FOCUSED","api","gridApi","columnApi","dispatchEvent","Autowired","EventService","GridOptionsWrapper","ColumnController","ColumnApi","GridApi","PostConstruct","Function","Bean"],"mappings":"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","sourcesContent":["/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.2.2\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar context_1 = require(\"./context/context\");\nvar eventService_1 = require(\"./eventService\");\nvar events_1 = require(\"./events\");\nvar gridOptionsWrapper_1 = require(\"./gridOptionsWrapper\");\nvar columnApi_1 = require(\"./columnController/columnApi\");\nvar columnController_1 = require(\"./columnController/columnController\");\nvar gridApi_1 = require(\"./gridApi\");\nvar cellComp_1 = require(\"./rendering/cellComp\");\nvar utils_1 = require(\"./utils\");\nvar FocusedCellController = /** @class */ (function () {\n    function FocusedCellController() {\n    }\n    FocusedCellController.prototype.init = function () {\n        this.eventService.addEventListener(events_1.Events.EVENT_COLUMN_PIVOT_MODE_CHANGED, this.clearFocusedCell.bind(this));\n        this.eventService.addEventListener(events_1.Events.EVENT_COLUMN_EVERYTHING_CHANGED, this.clearFocusedCell.bind(this));\n        this.eventService.addEventListener(events_1.Events.EVENT_COLUMN_GROUP_OPENED, this.clearFocusedCell.bind(this));\n        this.eventService.addEventListener(events_1.Events.EVENT_COLUMN_ROW_GROUP_CHANGED, this.clearFocusedCell.bind(this));\n        // we used to remove focus when moving column, am not sure why. so taking this out and see who complains.\n        // we can delete these three lines of code soon.\n        // this.eventService.addEventListener(Events.EVENT_COLUMN_MOVED, this.clearFocusedCell.bind(this));\n        // this.eventService.addEventListener(Events.EVENT_COLUMN_PINNED, this.clearFocusedCell.bind(this));\n        // this.eventService.addEventListener(Events.EVENT_COLUMN_VISIBLE, this.clearFocusedCell.bind(this));\n    };\n    FocusedCellController.prototype.clearFocusedCell = function () {\n        this.focusedCellPosition = null;\n        this.onCellFocused(false);\n    };\n    FocusedCellController.prototype.getFocusedCell = function () {\n        return this.focusedCellPosition;\n    };\n    // we check if the browser is focusing something, and if it is, and\n    // it's the cell we think is focused, then return the cell. so this\n    // methods returns the cell if a) we think it has focus and b) the\n    // browser thinks it has focus. this then returns nothing if we\n    // first focus a cell, then second click outside the grid, as then the\n    // grid cell will still be focused as far as the grid is concerned,\n    // however the browser focus will have moved somewhere else.\n    FocusedCellController.prototype.getFocusCellToUseAfterRefresh = function () {\n        if (this.gridOptionsWrapper.isSuppressFocusAfterRefresh()) {\n            return null;\n        }\n        if (!this.focusedCellPosition) {\n            return null;\n        }\n        // we check that the browser is actually focusing on the grid, if it is not, then\n        // we have nothing to worry about\n        var browserFocusedCell = this.getGridCellForDomElement(document.activeElement);\n        if (!browserFocusedCell) {\n            return null;\n        }\n        return this.focusedCellPosition;\n    };\n    FocusedCellController.prototype.getGridCellForDomElement = function (eBrowserCell) {\n        var ePointer = eBrowserCell;\n        while (ePointer) {\n            var cellComp = this.gridOptionsWrapper.getDomData(ePointer, cellComp_1.CellComp.DOM_DATA_KEY_CELL_COMP);\n            if (cellComp) {\n                return cellComp.getCellPosition();\n            }\n            ePointer = ePointer.parentNode;\n        }\n        return null;\n    };\n    FocusedCellController.prototype.setFocusedCell = function (rowIndex, colKey, floating, forceBrowserFocus) {\n        if (forceBrowserFocus === void 0) { forceBrowserFocus = false; }\n        var column = utils_1._.makeNull(this.columnController.getGridColumn(colKey));\n        this.focusedCellPosition = { rowIndex: rowIndex, rowPinned: utils_1._.makeNull(floating), column: column };\n        this.onCellFocused(forceBrowserFocus);\n    };\n    FocusedCellController.prototype.isCellFocused = function (cellPosition) {\n        if (utils_1._.missing(this.focusedCellPosition)) {\n            return false;\n        }\n        return this.focusedCellPosition.column === cellPosition.column && this.isRowFocused(cellPosition.rowIndex, cellPosition.rowPinned);\n    };\n    FocusedCellController.prototype.isRowNodeFocused = function (rowNode) {\n        return this.isRowFocused(rowNode.rowIndex, rowNode.rowPinned);\n    };\n    FocusedCellController.prototype.isAnyCellFocused = function () {\n        return !!this.focusedCellPosition;\n    };\n    FocusedCellController.prototype.isRowFocused = function (rowIndex, floating) {\n        if (utils_1._.missing(this.focusedCellPosition)) {\n            return false;\n        }\n        var floatingOrNull = utils_1._.makeNull(floating);\n        return this.focusedCellPosition.rowIndex === rowIndex && this.focusedCellPosition.rowPinned === floatingOrNull;\n    };\n    FocusedCellController.prototype.onCellFocused = function (forceBrowserFocus) {\n        var event = {\n            type: events_1.Events.EVENT_CELL_FOCUSED,\n            forceBrowserFocus: forceBrowserFocus,\n            rowIndex: null,\n            column: null,\n            floating: null,\n            api: this.gridApi,\n            columnApi: this.columnApi,\n            rowPinned: null\n        };\n        if (this.focusedCellPosition) {\n            event.rowIndex = this.focusedCellPosition.rowIndex;\n            event.column = this.focusedCellPosition.column;\n            event.rowPinned = this.focusedCellPosition.rowPinned;\n        }\n        this.eventService.dispatchEvent(event);\n    };\n    __decorate([\n        context_1.Autowired('eventService'),\n        __metadata(\"design:type\", eventService_1.EventService)\n    ], FocusedCellController.prototype, \"eventService\", void 0);\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], FocusedCellController.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_1.Autowired('columnController'),\n        __metadata(\"design:type\", columnController_1.ColumnController)\n    ], FocusedCellController.prototype, \"columnController\", void 0);\n    __decorate([\n        context_1.Autowired('columnApi'),\n        __metadata(\"design:type\", columnApi_1.ColumnApi)\n    ], FocusedCellController.prototype, \"columnApi\", void 0);\n    __decorate([\n        context_1.Autowired('gridApi'),\n        __metadata(\"design:type\", gridApi_1.GridApi)\n    ], FocusedCellController.prototype, \"gridApi\", void 0);\n    __decorate([\n        context_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], FocusedCellController.prototype, \"init\", null);\n    FocusedCellController = __decorate([\n        context_1.Bean('focusedCellController')\n    ], FocusedCellController);\n    return FocusedCellController;\n}());\nexports.FocusedCellController = FocusedCellController;\n"]},"metadata":{},"sourceType":"script"}