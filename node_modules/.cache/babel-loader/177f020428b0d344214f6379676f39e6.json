{"ast":null,"code":"import _objectWithoutProperties from \"/Users/dirkmennecke77/Desktop/kartensammlung/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/dirkmennecke77/Desktop/kartensammlung/src/components/Carousel.js\";\nimport classNames from \"classnames\";\nimport styles from \"dom-helpers/style\";\nimport transition from \"dom-helpers/transition\";\nimport React, { cloneElement } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { uncontrollable } from \"uncontrollable\";\nimport CarouselCaption from \"./CarouselCaption\";\nimport CarouselItem from \"./CarouselItem\";\nimport SafeAnchor from \"./SafeAnchor\";\nimport { map, forEach } from \"./utils/ElementChildren\";\nimport triggerBrowserReflow from \"./utils/triggerBrowserReflow\";\nimport { createBootstrapComponent } from \"./ThemeProvider\";\n\nconst countChildren = c => React.Children.toArray(c).filter(React.isValidElement).length;\n\nconst SWIPE_THRESHOLD = 40; // TODO: `slide` should be `animate`.\n\nconst propTypes = {\n  /**\n   * @default 'carousel'\n   */\n  bsPrefix: PropTypes.string,\n  as: PropTypes.elementType,\n\n  /**\n   * Enables animation on the Carousel as it transitions between slides.\n   */\n  slide: PropTypes.bool,\n\n  /** Cross fade slides instead of the default slide animation */\n  fade: PropTypes.bool,\n\n  /** Slides will loop to the start when the last one transitions */\n  wrap: PropTypes.bool,\n\n  /**\n   * Show a set of slide position indicators\n   */\n  indicators: PropTypes.bool,\n\n  /**\n   * The amount of time to delay between automatically cycling an item.\n   * If `null`, carousel will not automatically cycle.\n   */\n  interval: PropTypes.number,\n\n  /**\n   * Show the Carousel previous and next arrows for changing the current slide\n   */\n  controls: PropTypes.bool,\n\n  /**\n   * Temporarily pause the slide interval when the mouse hovers over a slide.\n   */\n  pauseOnHover: PropTypes.bool,\n\n  /** Enable keyboard navigation via the Arrow keys for changing slides */\n  keyboard: PropTypes.bool,\n\n  /**\n   * Callback fired when the active item changes.\n   *\n   * ```js\n   * (eventKey: any, direction: 'prev' | 'next', ?event: Object) => any\n   * ```\n   *\n   * @controllable activeIndex\n   */\n  onSelect: PropTypes.func,\n\n  /** A callback fired after a slide transitions in */\n  onSlideEnd: PropTypes.func,\n\n  /**\n   * Controls the current visible slide\n   *\n   * @controllable onSelect\n   */\n  activeIndex: PropTypes.number,\n\n  /** Override the default button icon for the \"previous\" control */\n  prevIcon: PropTypes.node,\n\n  /**\n   * Label shown to screen readers only, can be used to show the previous element\n   * in the carousel.\n   * Set to null to deactivate.\n   */\n  prevLabel: PropTypes.string,\n\n  /** Override the default button icon for the \"next\" control */\n  nextIcon: PropTypes.node,\n\n  /**\n   * Label shown to screen readers only, can be used to show the next element\n   * in the carousel.\n   * Set to null to deactivate.\n   */\n  nextLabel: PropTypes.string,\n\n  /**\n   * Whether the carousel should support left/right swipe interactions on touchscreen devices.\n   */\n  touch: PropTypes.bool\n};\nconst defaultProps = {\n  slide: true,\n  fade: false,\n  interval: 5000,\n  keyboard: true,\n  pauseOnHover: true,\n  wrap: true,\n  indicators: true,\n  controls: true,\n  activeIndex: 0,\n  prevIcon: React.createElement(\"span\", {\n    \"aria-hidden\": \"true\",\n    className: \"carousel-control-prev-icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }),\n  prevLabel: \"Previous\",\n  nextIcon: React.createElement(\"span\", {\n    \"aria-hidden\": \"true\",\n    className: \"carousel-control-next-icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }),\n  nextLabel: \"Next\",\n  touch: true\n};\n\nclass Carousel extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      prevClasses: \"\",\n      currentClasses: \"active\",\n      touchStartX: 0\n    };\n    this.isUnmounted = false;\n    this.carousel = React.createRef();\n\n    this.handleTouchStart = e => {\n      this.setState({\n        touchStartX: e.changedTouches[0].screenX\n      });\n    };\n\n    this.handleTouchEnd = e => {\n      // If the swipe is under the threshold, don't do anything.\n      if (Math.abs(e.changedTouches[0].screenX - this.state.touchStartX) < SWIPE_THRESHOLD) return;\n\n      if (e.changedTouches[0].screenX < this.state.touchStartX) {\n        // Swiping left to navigate to next item.\n        this.handleNext(e);\n      } else {\n        // Swiping right to navigate to previous item.\n        this.handlePrev(e);\n      }\n    };\n\n    this.handleSlideEnd = () => {\n      const pendingIndex = this._pendingIndex;\n      this._isSliding = false;\n      this._pendingIndex = null;\n      if (pendingIndex != null) this.to(pendingIndex);else this.cycle();\n    };\n\n    this.handleMouseOut = () => {\n      this.cycle();\n    };\n\n    this.handleMouseOver = () => {\n      if (this.props.pauseOnHover) this.pause();\n    };\n\n    this.handleKeyDown = event => {\n      if (/input|textarea/i.test(event.target.tagName)) return;\n\n      switch (event.key) {\n        case \"ArrowLeft\":\n          event.preventDefault();\n          this.handlePrev(event);\n          break;\n\n        case \"ArrowRight\":\n          event.preventDefault();\n          this.handleNext(event);\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.handleNextWhenVisible = () => {\n      if (!this.isUnmounted && !document.hidden && styles(this.carousel.current, \"visibility\") !== \"hidden\") {\n        this.handleNext();\n      }\n    };\n\n    this.handleNext = e => {\n      if (this._isSliding) return;\n      const _this$props = this.props,\n            wrap = _this$props.wrap,\n            activeIndex = _this$props.activeIndex;\n      let index = activeIndex + 1;\n      const count = countChildren(this.props.children);\n\n      if (index > count - 1) {\n        if (!wrap) return;\n        index = 0;\n      }\n\n      this.select(index, e, \"next\");\n    };\n\n    this.handlePrev = e => {\n      if (this._isSliding) return;\n      const _this$props2 = this.props,\n            wrap = _this$props2.wrap,\n            activeIndex = _this$props2.activeIndex;\n      let index = activeIndex - 1;\n\n      if (index < 0) {\n        if (!wrap) return;\n        index = countChildren(this.props.children) - 1;\n      }\n\n      this.select(index, e, \"prev\");\n    };\n  }\n\n  componentDidMount() {\n    this.cycle();\n  }\n\n  static getDerivedStateFromProps(nextProps, {\n    activeIndex: previousActiveIndex\n  }) {\n    if (nextProps.activeIndex !== previousActiveIndex) {\n      const lastPossibleIndex = countChildren(nextProps.children) - 1;\n      const nextIndex = Math.max(0, Math.min(nextProps.activeIndex, lastPossibleIndex));\n      let direction;\n\n      if (nextIndex === 0 && previousActiveIndex >= lastPossibleIndex || previousActiveIndex <= nextIndex) {\n        direction = \"next\";\n      } else {\n        direction = \"prev\";\n      }\n\n      return {\n        direction,\n        previousActiveIndex,\n        activeIndex: nextIndex\n      };\n    }\n\n    return null;\n  }\n\n  componentDidUpdate(_, prevState) {\n    const _this$props3 = this.props,\n          bsPrefix = _this$props3.bsPrefix,\n          slide = _this$props3.slide,\n          onSlideEnd = _this$props3.onSlideEnd;\n    if (!slide || this.state.activeIndex === prevState.activeIndex || this._isSliding) return;\n    const _this$state = this.state,\n          activeIndex = _this$state.activeIndex,\n          direction = _this$state.direction;\n    let orderClassName, directionalClassName;\n\n    if (direction === \"next\") {\n      orderClassName = \"\".concat(bsPrefix, \"-item-next\");\n      directionalClassName = \"\".concat(bsPrefix, \"-item-left\");\n    } else if (direction === \"prev\") {\n      orderClassName = \"\".concat(bsPrefix, \"-item-prev\");\n      directionalClassName = \"\".concat(bsPrefix, \"-item-right\");\n    }\n\n    this._isSliding = true;\n    this.pause(); // eslint-disable-next-line react/no-did-update-set-state\n\n    this.safeSetState({\n      prevClasses: \"active\",\n      currentClasses: orderClassName\n    }, () => {\n      const items = this.carousel.current.children;\n      const nextElement = items[activeIndex];\n      triggerBrowserReflow(nextElement);\n      this.safeSetState({\n        prevClasses: classNames(\"active\", directionalClassName),\n        currentClasses: classNames(orderClassName, directionalClassName)\n      }, () => transition.end(nextElement, () => {\n        this.safeSetState({\n          prevClasses: \"\",\n          currentClasses: \"active\"\n        }, this.handleSlideEnd);\n\n        if (onSlideEnd) {\n          onSlideEnd();\n        }\n      }));\n    });\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.timeout);\n    this.isUnmounted = true;\n  }\n\n  safeSetState(state, cb) {\n    if (this.isUnmounted) return;\n    this.setState(state, () => !this.isUnmounted && cb());\n  } // This might be a public API.\n\n\n  pause() {\n    this._isPaused = true;\n    clearInterval(this._interval);\n    this._interval = null;\n  }\n\n  cycle() {\n    this._isPaused = false;\n    clearInterval(this._interval);\n    this._interval = null;\n\n    if (this.props.interval && !this._isPaused) {\n      this._interval = setInterval(document.visibilityState ? this.handleNextWhenVisible : this.handleNext, this.props.interval);\n    }\n  }\n\n  to(index, event) {\n    const children = this.props.children;\n\n    if (index < 0 || index > countChildren(children) - 1) {\n      return;\n    }\n\n    if (this._isSliding) {\n      this._pendingIndex = index;\n      return;\n    }\n\n    this.select(index, event);\n  }\n\n  select(index, event, direction) {\n    clearTimeout(this.selectThrottle);\n    if (event && event.persist) event.persist(); // The timeout throttles fast clicks, in order to give any pending state\n    // a chance to update and propagate back through props\n\n    this.selectThrottle = setTimeout(() => {\n      clearTimeout(this.timeout);\n      const _this$props4 = this.props,\n            activeIndex = _this$props4.activeIndex,\n            onSelect = _this$props4.onSelect;\n      if (index === activeIndex || this._isSliding || this.isUnmounted) return;\n      onSelect(index, direction || (index < activeIndex ? \"prev\" : \"next\"), event);\n    }, 50);\n  }\n\n  renderControls(properties) {\n    const bsPrefix = this.props.bsPrefix;\n    const wrap = properties.wrap,\n          children = properties.children,\n          activeIndex = properties.activeIndex,\n          prevIcon = properties.prevIcon,\n          nextIcon = properties.nextIcon,\n          prevLabel = properties.prevLabel,\n          nextLabel = properties.nextLabel;\n    const count = countChildren(children);\n    return [(wrap || activeIndex !== 0) && React.createElement(SafeAnchor, {\n      key: \"prev\",\n      className: \"\".concat(bsPrefix, \"-control-prev\"),\n      onClick: this.handlePrev,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406\n      },\n      __self: this\n    }, prevIcon, prevLabel && React.createElement(\"span\", {\n      className: \"sr-only\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412\n      },\n      __self: this\n    }, prevLabel)), (wrap || activeIndex !== count - 1) && React.createElement(SafeAnchor, {\n      key: \"next\",\n      className: \"\".concat(bsPrefix, \"-control-next\"),\n      onClick: this.handleNext,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417\n      },\n      __self: this\n    }, nextIcon, nextLabel && React.createElement(\"span\", {\n      className: \"sr-only\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423\n      },\n      __self: this\n    }, nextLabel))];\n  }\n\n  renderIndicators(children, activeIndex) {\n    const bsPrefix = this.props.bsPrefix;\n    let indicators = [];\n    forEach(children, (child, index) => {\n      indicators.push(React.createElement(\"li\", {\n        key: index,\n        className: index === activeIndex ? \"active\" : null,\n        onClick: e => this.to(index, e),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435\n        },\n        __self: this\n      }), // Force whitespace between indicator elements. Bootstrap requires\n      // this for correct spacing of elements.\n      \" \");\n    });\n    return React.createElement(\"ol\", {\n      className: \"\".concat(bsPrefix, \"-indicators\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447\n      },\n      __self: this\n    }, indicators);\n  }\n\n  render() {\n    const _this$props5 = this.props,\n          _this$props5$as = _this$props5.as,\n          Component = _this$props5$as === void 0 ? \"div\" : _this$props5$as,\n          bsPrefix = _this$props5.bsPrefix,\n          slide = _this$props5.slide,\n          fade = _this$props5.fade,\n          indicators = _this$props5.indicators,\n          controls = _this$props5.controls,\n          wrap = _this$props5.wrap,\n          touch = _this$props5.touch,\n          prevIcon = _this$props5.prevIcon,\n          prevLabel = _this$props5.prevLabel,\n          nextIcon = _this$props5.nextIcon,\n          nextLabel = _this$props5.nextLabel,\n          className = _this$props5.className,\n          children = _this$props5.children,\n          keyboard = _this$props5.keyboard,\n          _5 = _this$props5.activeIndex,\n          _4 = _this$props5.pauseOnHover,\n          _3 = _this$props5.interval,\n          _2 = _this$props5.onSelect,\n          _1 = _this$props5.onSlideEnd,\n          props = _objectWithoutProperties(_this$props5, [\"as\", \"bsPrefix\", \"slide\", \"fade\", \"indicators\", \"controls\", \"wrap\", \"touch\", \"prevIcon\", \"prevLabel\", \"nextIcon\", \"nextLabel\", \"className\", \"children\", \"keyboard\", \"activeIndex\", \"pauseOnHover\", \"interval\", \"onSelect\", \"onSlideEnd\"]);\n\n    const _this$state2 = this.state,\n          activeIndex = _this$state2.activeIndex,\n          previousActiveIndex = _this$state2.previousActiveIndex,\n          prevClasses = _this$state2.prevClasses,\n          currentClasses = _this$state2.currentClasses;\n    return (// eslint-disable-next-line jsx-a11y/no-static-element-interactions\n      React.createElement(Component, Object.assign({\n        onTouchStart: touch ? this.handleTouchStart : undefined,\n        onTouchEnd: touch ? this.handleTouchEnd : undefined\n      }, props, {\n        className: classNames(className, bsPrefix, slide && \"slide\", fade && \"\".concat(bsPrefix, \"-fade\")),\n        onKeyDown: keyboard ? this.handleKeyDown : undefined,\n        onMouseOver: this.handleMouseOver,\n        onMouseOut: this.handleMouseOut,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 485\n        },\n        __self: this\n      }), indicators && this.renderIndicators(children, activeIndex), React.createElement(\"div\", {\n        className: \"\".concat(bsPrefix, \"-inner\"),\n        ref: this.carousel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 501\n        },\n        __self: this\n      }, map(children, (child, index) => {\n        const current = index === activeIndex;\n        const previous = index === previousActiveIndex;\n        return cloneElement(child, {\n          className: classNames(child.props.className, \"\".concat(bsPrefix, \"-item\"), current && currentClasses, previous && prevClasses)\n        });\n      })), controls && this.renderControls({\n        wrap,\n        children,\n        activeIndex,\n        prevIcon,\n        prevLabel,\n        nextIcon,\n        nextLabel\n      }))\n    );\n  }\n\n}\n\nCarousel.defaultProps = defaultProps;\nCarousel.propTypes = propTypes;\nconst DecoratedCarousel = createBootstrapComponent(uncontrollable(Carousel, {\n  activeIndex: \"onSelect\"\n}), \"carousel\");\nDecoratedCarousel.Caption = CarouselCaption;\nDecoratedCarousel.Item = CarouselItem;\nexport default DecoratedCarousel;","map":{"version":3,"sources":["/Users/dirkmennecke77/Desktop/kartensammlung/src/components/Carousel.js"],"names":["classNames","styles","transition","React","cloneElement","PropTypes","uncontrollable","CarouselCaption","CarouselItem","SafeAnchor","map","forEach","triggerBrowserReflow","createBootstrapComponent","countChildren","c","Children","toArray","filter","isValidElement","length","SWIPE_THRESHOLD","propTypes","bsPrefix","string","as","elementType","slide","bool","fade","wrap","indicators","interval","number","controls","pauseOnHover","keyboard","onSelect","func","onSlideEnd","activeIndex","prevIcon","node","prevLabel","nextIcon","nextLabel","touch","defaultProps","Carousel","Component","state","prevClasses","currentClasses","touchStartX","isUnmounted","carousel","createRef","handleTouchStart","e","setState","changedTouches","screenX","handleTouchEnd","Math","abs","handleNext","handlePrev","handleSlideEnd","pendingIndex","_pendingIndex","_isSliding","to","cycle","handleMouseOut","handleMouseOver","props","pause","handleKeyDown","event","test","target","tagName","key","preventDefault","handleNextWhenVisible","document","hidden","current","index","count","children","select","componentDidMount","getDerivedStateFromProps","nextProps","previousActiveIndex","lastPossibleIndex","nextIndex","max","min","direction","componentDidUpdate","_","prevState","orderClassName","directionalClassName","safeSetState","items","nextElement","end","componentWillUnmount","clearTimeout","timeout","cb","_isPaused","clearInterval","_interval","setInterval","visibilityState","selectThrottle","persist","setTimeout","renderControls","properties","renderIndicators","child","push","render","className","_5","_4","_3","_2","_1","undefined","previous","DecoratedCarousel","Caption","Item"],"mappings":"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","sourcesContent":["import classNames from \"classnames\";\nimport styles from \"dom-helpers/style\";\nimport transition from \"dom-helpers/transition\";\nimport React, { cloneElement } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { uncontrollable } from \"uncontrollable\";\n\nimport CarouselCaption from \"./CarouselCaption\";\nimport CarouselItem from \"./CarouselItem\";\nimport SafeAnchor from \"./SafeAnchor\";\nimport { map, forEach } from \"./utils/ElementChildren\";\nimport triggerBrowserReflow from \"./utils/triggerBrowserReflow\";\nimport { createBootstrapComponent } from \"./ThemeProvider\";\n\nconst countChildren = c =>\n  React.Children.toArray(c).filter(React.isValidElement).length;\n\nconst SWIPE_THRESHOLD = 40;\n\n// TODO: `slide` should be `animate`.\n\nconst propTypes = {\n  /**\n   * @default 'carousel'\n   */\n  bsPrefix: PropTypes.string,\n  as: PropTypes.elementType,\n\n  /**\n   * Enables animation on the Carousel as it transitions between slides.\n   */\n  slide: PropTypes.bool,\n\n  /** Cross fade slides instead of the default slide animation */\n  fade: PropTypes.bool,\n\n  /** Slides will loop to the start when the last one transitions */\n  wrap: PropTypes.bool,\n\n  /**\n   * Show a set of slide position indicators\n   */\n  indicators: PropTypes.bool,\n\n  /**\n   * The amount of time to delay between automatically cycling an item.\n   * If `null`, carousel will not automatically cycle.\n   */\n  interval: PropTypes.number,\n\n  /**\n   * Show the Carousel previous and next arrows for changing the current slide\n   */\n  controls: PropTypes.bool,\n\n  /**\n   * Temporarily pause the slide interval when the mouse hovers over a slide.\n   */\n  pauseOnHover: PropTypes.bool,\n\n  /** Enable keyboard navigation via the Arrow keys for changing slides */\n  keyboard: PropTypes.bool,\n\n  /**\n   * Callback fired when the active item changes.\n   *\n   * ```js\n   * (eventKey: any, direction: 'prev' | 'next', ?event: Object) => any\n   * ```\n   *\n   * @controllable activeIndex\n   */\n  onSelect: PropTypes.func,\n\n  /** A callback fired after a slide transitions in */\n  onSlideEnd: PropTypes.func,\n\n  /**\n   * Controls the current visible slide\n   *\n   * @controllable onSelect\n   */\n  activeIndex: PropTypes.number,\n\n  /** Override the default button icon for the \"previous\" control */\n  prevIcon: PropTypes.node,\n\n  /**\n   * Label shown to screen readers only, can be used to show the previous element\n   * in the carousel.\n   * Set to null to deactivate.\n   */\n  prevLabel: PropTypes.string,\n\n  /** Override the default button icon for the \"next\" control */\n  nextIcon: PropTypes.node,\n\n  /**\n   * Label shown to screen readers only, can be used to show the next element\n   * in the carousel.\n   * Set to null to deactivate.\n   */\n  nextLabel: PropTypes.string,\n\n  /**\n   * Whether the carousel should support left/right swipe interactions on touchscreen devices.\n   */\n  touch: PropTypes.bool\n};\n\nconst defaultProps = {\n  slide: true,\n  fade: false,\n  interval: 5000,\n  keyboard: true,\n  pauseOnHover: true,\n  wrap: true,\n  indicators: true,\n  controls: true,\n  activeIndex: 0,\n\n  prevIcon: <span aria-hidden='true' className='carousel-control-prev-icon' />,\n  prevLabel: \"Previous\",\n\n  nextIcon: <span aria-hidden='true' className='carousel-control-next-icon' />,\n  nextLabel: \"Next\",\n  touch: true\n};\n\nclass Carousel extends React.Component {\n  state = {\n    prevClasses: \"\",\n    currentClasses: \"active\",\n    touchStartX: 0\n  };\n\n  isUnmounted = false;\n\n  carousel = React.createRef();\n\n  componentDidMount() {\n    this.cycle();\n  }\n\n  static getDerivedStateFromProps(\n    nextProps,\n    { activeIndex: previousActiveIndex }\n  ) {\n    if (nextProps.activeIndex !== previousActiveIndex) {\n      const lastPossibleIndex = countChildren(nextProps.children) - 1;\n\n      const nextIndex = Math.max(\n        0,\n        Math.min(nextProps.activeIndex, lastPossibleIndex)\n      );\n\n      let direction;\n      if (\n        (nextIndex === 0 && previousActiveIndex >= lastPossibleIndex) ||\n        previousActiveIndex <= nextIndex\n      ) {\n        direction = \"next\";\n      } else {\n        direction = \"prev\";\n      }\n\n      return {\n        direction,\n        previousActiveIndex,\n        activeIndex: nextIndex\n      };\n    }\n    return null;\n  }\n\n  componentDidUpdate(_, prevState) {\n    const { bsPrefix, slide, onSlideEnd } = this.props;\n    if (\n      !slide ||\n      this.state.activeIndex === prevState.activeIndex ||\n      this._isSliding\n    )\n      return;\n\n    const { activeIndex, direction } = this.state;\n    let orderClassName, directionalClassName;\n\n    if (direction === \"next\") {\n      orderClassName = `${bsPrefix}-item-next`;\n      directionalClassName = `${bsPrefix}-item-left`;\n    } else if (direction === \"prev\") {\n      orderClassName = `${bsPrefix}-item-prev`;\n      directionalClassName = `${bsPrefix}-item-right`;\n    }\n\n    this._isSliding = true;\n\n    this.pause();\n\n    // eslint-disable-next-line react/no-did-update-set-state\n    this.safeSetState(\n      { prevClasses: \"active\", currentClasses: orderClassName },\n      () => {\n        const items = this.carousel.current.children;\n        const nextElement = items[activeIndex];\n        triggerBrowserReflow(nextElement);\n\n        this.safeSetState(\n          {\n            prevClasses: classNames(\"active\", directionalClassName),\n            currentClasses: classNames(orderClassName, directionalClassName)\n          },\n          () =>\n            transition.end(nextElement, () => {\n              this.safeSetState(\n                { prevClasses: \"\", currentClasses: \"active\" },\n                this.handleSlideEnd\n              );\n              if (onSlideEnd) {\n                onSlideEnd();\n              }\n            })\n        );\n      }\n    );\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.timeout);\n    this.isUnmounted = true;\n  }\n\n  handleTouchStart = e => {\n    this.setState({ touchStartX: e.changedTouches[0].screenX });\n  };\n\n  handleTouchEnd = e => {\n    // If the swipe is under the threshold, don't do anything.\n    if (\n      Math.abs(e.changedTouches[0].screenX - this.state.touchStartX) <\n      SWIPE_THRESHOLD\n    )\n      return;\n\n    if (e.changedTouches[0].screenX < this.state.touchStartX) {\n      // Swiping left to navigate to next item.\n      this.handleNext(e);\n    } else {\n      // Swiping right to navigate to previous item.\n      this.handlePrev(e);\n    }\n  };\n\n  handleSlideEnd = () => {\n    const pendingIndex = this._pendingIndex;\n    this._isSliding = false;\n    this._pendingIndex = null;\n\n    if (pendingIndex != null) this.to(pendingIndex);\n    else this.cycle();\n  };\n\n  handleMouseOut = () => {\n    this.cycle();\n  };\n\n  handleMouseOver = () => {\n    if (this.props.pauseOnHover) this.pause();\n  };\n\n  handleKeyDown = event => {\n    if (/input|textarea/i.test(event.target.tagName)) return;\n\n    switch (event.key) {\n      case \"ArrowLeft\":\n        event.preventDefault();\n        this.handlePrev(event);\n        break;\n      case \"ArrowRight\":\n        event.preventDefault();\n        this.handleNext(event);\n        break;\n      default:\n        break;\n    }\n  };\n\n  handleNextWhenVisible = () => {\n    if (\n      !this.isUnmounted &&\n      !document.hidden &&\n      styles(this.carousel.current, \"visibility\") !== \"hidden\"\n    ) {\n      this.handleNext();\n    }\n  };\n\n  handleNext = e => {\n    if (this._isSliding) return;\n\n    const { wrap, activeIndex } = this.props;\n\n    let index = activeIndex + 1;\n    const count = countChildren(this.props.children);\n\n    if (index > count - 1) {\n      if (!wrap) return;\n\n      index = 0;\n    }\n\n    this.select(index, e, \"next\");\n  };\n\n  handlePrev = e => {\n    if (this._isSliding) return;\n\n    const { wrap, activeIndex } = this.props;\n\n    let index = activeIndex - 1;\n\n    if (index < 0) {\n      if (!wrap) return;\n      index = countChildren(this.props.children) - 1;\n    }\n\n    this.select(index, e, \"prev\");\n  };\n\n  safeSetState(state, cb) {\n    if (this.isUnmounted) return;\n    this.setState(state, () => !this.isUnmounted && cb());\n  }\n\n  // This might be a public API.\n  pause() {\n    this._isPaused = true;\n    clearInterval(this._interval);\n    this._interval = null;\n  }\n\n  cycle() {\n    this._isPaused = false;\n\n    clearInterval(this._interval);\n    this._interval = null;\n\n    if (this.props.interval && !this._isPaused) {\n      this._interval = setInterval(\n        document.visibilityState ? this.handleNextWhenVisible : this.handleNext,\n        this.props.interval\n      );\n    }\n  }\n\n  to(index, event) {\n    const { children } = this.props;\n    if (index < 0 || index > countChildren(children) - 1) {\n      return;\n    }\n\n    if (this._isSliding) {\n      this._pendingIndex = index;\n      return;\n    }\n\n    this.select(index, event);\n  }\n\n  select(index, event, direction) {\n    clearTimeout(this.selectThrottle);\n    if (event && event.persist) event.persist();\n\n    // The timeout throttles fast clicks, in order to give any pending state\n    // a chance to update and propagate back through props\n    this.selectThrottle = setTimeout(() => {\n      clearTimeout(this.timeout);\n\n      const { activeIndex, onSelect } = this.props;\n      if (index === activeIndex || this._isSliding || this.isUnmounted) return;\n\n      onSelect(\n        index,\n        direction || (index < activeIndex ? \"prev\" : \"next\"),\n        event\n      );\n    }, 50);\n  }\n\n  renderControls(properties) {\n    const { bsPrefix } = this.props;\n    const {\n      wrap,\n      children,\n      activeIndex,\n      prevIcon,\n      nextIcon,\n      prevLabel,\n      nextLabel\n    } = properties;\n\n    const count = countChildren(children);\n\n    return [\n      (wrap || activeIndex !== 0) && (\n        <SafeAnchor\n          key='prev'\n          className={`${bsPrefix}-control-prev`}\n          onClick={this.handlePrev}\n        >\n          {prevIcon}\n          {prevLabel && <span className='sr-only'>{prevLabel}</span>}\n        </SafeAnchor>\n      ),\n\n      (wrap || activeIndex !== count - 1) && (\n        <SafeAnchor\n          key='next'\n          className={`${bsPrefix}-control-next`}\n          onClick={this.handleNext}\n        >\n          {nextIcon}\n          {nextLabel && <span className='sr-only'>{nextLabel}</span>}\n        </SafeAnchor>\n      )\n    ];\n  }\n\n  renderIndicators(children, activeIndex) {\n    const { bsPrefix } = this.props;\n    let indicators = [];\n\n    forEach(children, (child, index) => {\n      indicators.push(\n        <li\n          key={index}\n          className={index === activeIndex ? \"active\" : null}\n          onClick={e => this.to(index, e)}\n        />,\n\n        // Force whitespace between indicator elements. Bootstrap requires\n        // this for correct spacing of elements.\n        \" \"\n      );\n    });\n\n    return <ol className={`${bsPrefix}-indicators`}>{indicators}</ol>;\n  }\n\n  render() {\n    const {\n      // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n      as: Component = \"div\",\n      bsPrefix,\n      slide,\n      fade,\n      indicators,\n      controls,\n      wrap,\n      touch,\n      prevIcon,\n      prevLabel,\n      nextIcon,\n      nextLabel,\n      className,\n      children,\n      keyboard,\n      activeIndex: _5,\n      pauseOnHover: _4,\n      interval: _3,\n      onSelect: _2,\n      onSlideEnd: _1,\n      ...props\n    } = this.props;\n\n    const {\n      activeIndex,\n      previousActiveIndex,\n      prevClasses,\n      currentClasses\n    } = this.state;\n\n    return (\n      // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n      <Component\n        onTouchStart={touch ? this.handleTouchStart : undefined}\n        onTouchEnd={touch ? this.handleTouchEnd : undefined}\n        {...props}\n        className={classNames(\n          className,\n          bsPrefix,\n          slide && \"slide\",\n          fade && `${bsPrefix}-fade`\n        )}\n        onKeyDown={keyboard ? this.handleKeyDown : undefined}\n        onMouseOver={this.handleMouseOver}\n        onMouseOut={this.handleMouseOut}\n      >\n        {indicators && this.renderIndicators(children, activeIndex)}\n\n        <div className={`${bsPrefix}-inner`} ref={this.carousel}>\n          {map(children, (child, index) => {\n            const current = index === activeIndex;\n            const previous = index === previousActiveIndex;\n\n            return cloneElement(child, {\n              className: classNames(\n                child.props.className,\n                `${bsPrefix}-item`,\n                current && currentClasses,\n                previous && prevClasses\n              )\n            });\n          })}\n        </div>\n\n        {controls &&\n          this.renderControls({\n            wrap,\n            children,\n            activeIndex,\n            prevIcon,\n            prevLabel,\n            nextIcon,\n            nextLabel\n          })}\n      </Component>\n    );\n  }\n}\nCarousel.defaultProps = defaultProps;\nCarousel.propTypes = propTypes;\n\nconst DecoratedCarousel = createBootstrapComponent(\n  uncontrollable(Carousel, { activeIndex: \"onSelect\" }),\n  \"carousel\"\n);\n\nDecoratedCarousel.Caption = CarouselCaption;\nDecoratedCarousel.Item = CarouselItem;\n\nexport default DecoratedCarousel;\n"]},"metadata":{},"sourceType":"module"}