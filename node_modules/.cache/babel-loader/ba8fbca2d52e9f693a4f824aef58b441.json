{"ast":null,"code":"/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.2.2\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar context_1 = require(\"../context/context\");\n\nvar constants_1 = require(\"../constants\");\n\nvar mouseEventService_1 = require(\"./mouseEventService\");\n\nvar paginationProxy_1 = require(\"../rowModels/paginationProxy\");\n\nvar focusedCellController_1 = require(\"../focusedCellController\");\n\nvar animationFrameService_1 = require(\"../misc/animationFrameService\");\n\nvar columnController_1 = require(\"../columnController/columnController\");\n\nvar gridOptionsWrapper_1 = require(\"../gridOptionsWrapper\");\n\nvar utils_1 = require(\"../utils\");\n\nvar NavigationService =\n/** @class */\nfunction () {\n  function NavigationService() {\n    this.timeLastPageEventProcessed = 0;\n  }\n\n  NavigationService.prototype.init = function () {\n    this.scrollWidth = this.gridOptionsWrapper.getScrollbarWidth();\n  };\n\n  NavigationService.prototype.registerGridComp = function (gridPanel) {\n    this.gridPanel = gridPanel;\n  };\n\n  NavigationService.prototype.handlePageScrollingKey = function (event) {\n    var key = event.which || event.keyCode;\n    var alt = event.altKey;\n    var ctrl = event.ctrlKey;\n    var currentCell = this.mouseEventService.getCellPositionForEvent(event);\n\n    if (!currentCell) {\n      return false;\n    }\n\n    var processed = false;\n\n    switch (key) {\n      case constants_1.Constants.KEY_PAGE_HOME:\n      case constants_1.Constants.KEY_PAGE_END:\n        // handle home and end when ctrl & alt are NOT pressed\n        if (!ctrl && !alt) {\n          this.onHomeOrEndKey(key);\n          processed = true;\n        }\n\n        break;\n\n      case constants_1.Constants.KEY_LEFT:\n      case constants_1.Constants.KEY_RIGHT:\n        // handle left and right when ctrl is pressed only\n        if (ctrl && !alt) {\n          this.onCtrlLeftOrRight(key, currentCell);\n          processed = true;\n        }\n\n        break;\n\n      case constants_1.Constants.KEY_UP:\n      case constants_1.Constants.KEY_DOWN:\n        // handle up and down when ctrl is pressed only\n        if (ctrl && !alt) {\n          this.onCtrlUpOrDown(key, currentCell);\n          processed = true;\n        }\n\n        break;\n\n      case constants_1.Constants.KEY_PAGE_DOWN:\n        // handle page up and page down when ctrl & alt are NOT pressed\n        if (!ctrl && !alt) {\n          this.onPageDown(currentCell);\n          processed = true;\n        }\n\n        break;\n\n      case constants_1.Constants.KEY_PAGE_UP:\n        // handle page up and page down when ctrl & alt are NOT pressed\n        if (!ctrl && !alt) {\n          this.onPageUp(currentCell);\n          processed = true;\n        }\n\n        break;\n    }\n\n    if (processed) {\n      event.preventDefault();\n    }\n\n    return processed;\n  }; // the page up/down keys caused a problem, in that if the user\n  // held the page up/down key down, lots of events got generated,\n  // which clogged up the event queue (as they take time to process)\n  // which in turn froze the grid. Logic below makes sure we wait 100ms\n  // between processing the page up/down events, so when user has finger\n  // held down on key, we ignore page up/down events until 100ms has passed,\n  // which effectively empties the queue of page up/down events.\n\n\n  NavigationService.prototype.isTimeSinceLastPageEventToRecent = function () {\n    var now = new Date().getTime();\n    var diff = now - this.timeLastPageEventProcessed;\n    return diff < 100;\n  };\n\n  NavigationService.prototype.setTimeLastPageEventProcessed = function () {\n    this.timeLastPageEventProcessed = new Date().getTime();\n  };\n\n  NavigationService.prototype.onPageDown = function (gridCell) {\n    if (this.isTimeSinceLastPageEventToRecent()) {\n      return;\n    }\n\n    var scrollPosition = this.gridPanel.getVScrollPosition();\n    var pixelsInOnePage = scrollPosition.bottom - scrollPosition.top;\n\n    if (this.gridPanel.isHorizontalScrollShowing()) {\n      pixelsInOnePage -= this.scrollWidth;\n    }\n\n    var pagingPixelOffset = this.paginationProxy.getPixelOffset();\n    var currentPageBottomPixel = scrollPosition.top + pixelsInOnePage;\n    var currentPageBottomRow = this.paginationProxy.getRowIndexAtPixel(currentPageBottomPixel + pagingPixelOffset);\n    var scrollIndex = currentPageBottomRow;\n    var currentCellPixel = this.paginationProxy.getRow(gridCell.rowIndex).rowTop;\n    var nextCellPixel = currentCellPixel + pixelsInOnePage - pagingPixelOffset;\n    var focusIndex = this.paginationProxy.getRowIndexAtPixel(nextCellPixel + pagingPixelOffset);\n    var pageLastRow = this.paginationProxy.getPageLastRow();\n\n    if (focusIndex > pageLastRow) {\n      focusIndex = pageLastRow;\n    }\n\n    if (scrollIndex > pageLastRow) {\n      scrollIndex = pageLastRow;\n    }\n\n    this.navigateTo(scrollIndex, 'top', null, focusIndex, gridCell.column);\n    this.setTimeLastPageEventProcessed();\n  };\n\n  NavigationService.prototype.onPageUp = function (gridCell) {\n    if (this.isTimeSinceLastPageEventToRecent()) {\n      return;\n    }\n\n    var scrollPosition = this.gridPanel.getVScrollPosition();\n    var pixelsInOnePage = scrollPosition.bottom - scrollPosition.top;\n\n    if (this.gridPanel.isHorizontalScrollShowing()) {\n      pixelsInOnePage -= this.scrollWidth;\n    }\n\n    var pagingPixelOffset = this.paginationProxy.getPixelOffset();\n    var currentPageTopPixel = scrollPosition.top;\n    var currentPageTopRow = this.paginationProxy.getRowIndexAtPixel(currentPageTopPixel + pagingPixelOffset);\n    var scrollIndex = currentPageTopRow;\n    var currentRowNode = this.paginationProxy.getRow(gridCell.rowIndex);\n    var nextCellPixel = currentRowNode.rowTop + currentRowNode.rowHeight - pixelsInOnePage - pagingPixelOffset;\n    var focusIndex = this.paginationProxy.getRowIndexAtPixel(nextCellPixel + pagingPixelOffset);\n    var firstRow = this.paginationProxy.getPageFirstRow();\n\n    if (focusIndex < firstRow) {\n      focusIndex = firstRow;\n    }\n\n    if (scrollIndex < firstRow) {\n      scrollIndex = firstRow;\n    }\n\n    this.navigateTo(scrollIndex, 'bottom', null, focusIndex, gridCell.column);\n    this.setTimeLastPageEventProcessed();\n  }; // common logic to navigate. takes parameters:\n  // scrollIndex - what row to vertically scroll to\n  // scrollType - what position to put scroll index ie top/bottom\n  // scrollColumn - what column to horizontally scroll to\n  // focusIndex / focusColumn - for page up / down, we want to scroll to one row/column, but focus another\n\n\n  NavigationService.prototype.navigateTo = function (scrollIndex, scrollType, scrollColumn, focusIndex, focusColumn) {\n    if (utils_1._.exists(scrollColumn)) {\n      this.gridPanel.ensureColumnVisible(scrollColumn);\n    }\n\n    if (utils_1._.exists(scrollIndex)) {\n      this.gridPanel.ensureIndexVisible(scrollIndex, scrollType);\n    } // make sure the cell is rendered, needed if we are to focus\n\n\n    this.animationFrameService.flushAllFrames(); // if we don't do this, the range will be left on the last cell, which will leave the last focused cell\n    // highlighted.\n\n    this.focusedCellController.setFocusedCell(focusIndex, focusColumn, null, true);\n\n    if (this.rangeController) {\n      var cellPosition = {\n        rowIndex: focusIndex,\n        rowPinned: null,\n        column: focusColumn\n      };\n      this.rangeController.setRangeToCell(cellPosition);\n    }\n  }; // ctrl + up/down will bring focus to same column, first/last row. no horizontal scrolling.\n\n\n  NavigationService.prototype.onCtrlUpOrDown = function (key, gridCell) {\n    var upKey = key === constants_1.Constants.KEY_UP;\n    var rowIndexToScrollTo = upKey ? 0 : this.paginationProxy.getPageLastRow();\n    this.navigateTo(rowIndexToScrollTo, null, gridCell.column, rowIndexToScrollTo, gridCell.column);\n  }; // ctrl + left/right will bring focus to same row, first/last cell. no vertical scrolling.\n\n\n  NavigationService.prototype.onCtrlLeftOrRight = function (key, gridCell) {\n    var leftKey = key === constants_1.Constants.KEY_LEFT;\n    var allColumns = this.columnController.getAllDisplayedColumns();\n    var columnToSelect = leftKey ? allColumns[0] : utils_1._.last(allColumns);\n    this.navigateTo(gridCell.rowIndex, null, columnToSelect, gridCell.rowIndex, columnToSelect);\n  }; // home brings focus to top left cell, end brings focus to bottom right, grid scrolled to bring\n  // same cell into view (which means either scroll all the way up, or all the way down).\n\n\n  NavigationService.prototype.onHomeOrEndKey = function (key) {\n    var homeKey = key === constants_1.Constants.KEY_PAGE_HOME;\n    var allColumns = this.columnController.getAllDisplayedColumns();\n    var columnToSelect = homeKey ? allColumns[0] : utils_1._.last(allColumns);\n    var rowIndexToScrollTo = homeKey ? 0 : this.paginationProxy.getPageLastRow();\n    this.navigateTo(rowIndexToScrollTo, null, columnToSelect, rowIndexToScrollTo, columnToSelect);\n  };\n\n  __decorate([context_1.Autowired('mouseEventService'), __metadata(\"design:type\", mouseEventService_1.MouseEventService)], NavigationService.prototype, \"mouseEventService\", void 0);\n\n  __decorate([context_1.Autowired('paginationProxy'), __metadata(\"design:type\", paginationProxy_1.PaginationProxy)], NavigationService.prototype, \"paginationProxy\", void 0);\n\n  __decorate([context_1.Autowired('focusedCellController'), __metadata(\"design:type\", focusedCellController_1.FocusedCellController)], NavigationService.prototype, \"focusedCellController\", void 0);\n\n  __decorate([context_1.Autowired('animationFrameService'), __metadata(\"design:type\", animationFrameService_1.AnimationFrameService)], NavigationService.prototype, \"animationFrameService\", void 0);\n\n  __decorate([context_1.Optional('rangeController'), __metadata(\"design:type\", Object)], NavigationService.prototype, \"rangeController\", void 0);\n\n  __decorate([context_1.Autowired('columnController'), __metadata(\"design:type\", columnController_1.ColumnController)], NavigationService.prototype, \"columnController\", void 0);\n\n  __decorate([context_1.Autowired('gridOptionsWrapper'), __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)], NavigationService.prototype, \"gridOptionsWrapper\", void 0);\n\n  __decorate([context_1.PostConstruct, __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", []), __metadata(\"design:returntype\", void 0)], NavigationService.prototype, \"init\", null);\n\n  NavigationService = __decorate([context_1.Bean('navigationService')], NavigationService);\n  return NavigationService;\n}();\n\nexports.NavigationService = NavigationService;","map":{"version":3,"sources":["/Users/dirkmennecke77/Desktop/Lageplan/node_modules/ag-grid-community/dist/lib/gridPanel/navigationService.js"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__metadata","k","v","metadata","exports","value","context_1","require","constants_1","mouseEventService_1","paginationProxy_1","focusedCellController_1","animationFrameService_1","columnController_1","gridOptionsWrapper_1","utils_1","NavigationService","timeLastPageEventProcessed","prototype","init","scrollWidth","gridOptionsWrapper","getScrollbarWidth","registerGridComp","gridPanel","handlePageScrollingKey","event","which","keyCode","alt","altKey","ctrl","ctrlKey","currentCell","mouseEventService","getCellPositionForEvent","processed","Constants","KEY_PAGE_HOME","KEY_PAGE_END","onHomeOrEndKey","KEY_LEFT","KEY_RIGHT","onCtrlLeftOrRight","KEY_UP","KEY_DOWN","onCtrlUpOrDown","KEY_PAGE_DOWN","onPageDown","KEY_PAGE_UP","onPageUp","preventDefault","isTimeSinceLastPageEventToRecent","now","Date","getTime","diff","setTimeLastPageEventProcessed","gridCell","scrollPosition","getVScrollPosition","pixelsInOnePage","bottom","top","isHorizontalScrollShowing","pagingPixelOffset","paginationProxy","getPixelOffset","currentPageBottomPixel","currentPageBottomRow","getRowIndexAtPixel","scrollIndex","currentCellPixel","getRow","rowIndex","rowTop","nextCellPixel","focusIndex","pageLastRow","getPageLastRow","navigateTo","column","currentPageTopPixel","currentPageTopRow","currentRowNode","rowHeight","firstRow","getPageFirstRow","scrollType","scrollColumn","focusColumn","_","exists","ensureColumnVisible","ensureIndexVisible","animationFrameService","flushAllFrames","focusedCellController","setFocusedCell","rangeController","cellPosition","rowPinned","setRangeToCell","upKey","rowIndexToScrollTo","leftKey","allColumns","columnController","getAllDisplayedColumns","columnToSelect","last","homeKey","Autowired","MouseEventService","PaginationProxy","FocusedCellController","AnimationFrameService","Optional","ColumnController","GridOptionsWrapper","PostConstruct","Function","Bean"],"mappings":"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","sourcesContent":["/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.2.2\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar context_1 = require(\"../context/context\");\nvar constants_1 = require(\"../constants\");\nvar mouseEventService_1 = require(\"./mouseEventService\");\nvar paginationProxy_1 = require(\"../rowModels/paginationProxy\");\nvar focusedCellController_1 = require(\"../focusedCellController\");\nvar animationFrameService_1 = require(\"../misc/animationFrameService\");\nvar columnController_1 = require(\"../columnController/columnController\");\nvar gridOptionsWrapper_1 = require(\"../gridOptionsWrapper\");\nvar utils_1 = require(\"../utils\");\nvar NavigationService = /** @class */ (function () {\n    function NavigationService() {\n        this.timeLastPageEventProcessed = 0;\n    }\n    NavigationService.prototype.init = function () {\n        this.scrollWidth = this.gridOptionsWrapper.getScrollbarWidth();\n    };\n    NavigationService.prototype.registerGridComp = function (gridPanel) {\n        this.gridPanel = gridPanel;\n    };\n    NavigationService.prototype.handlePageScrollingKey = function (event) {\n        var key = event.which || event.keyCode;\n        var alt = event.altKey;\n        var ctrl = event.ctrlKey;\n        var currentCell = this.mouseEventService.getCellPositionForEvent(event);\n        if (!currentCell) {\n            return false;\n        }\n        var processed = false;\n        switch (key) {\n            case constants_1.Constants.KEY_PAGE_HOME:\n            case constants_1.Constants.KEY_PAGE_END:\n                // handle home and end when ctrl & alt are NOT pressed\n                if (!ctrl && !alt) {\n                    this.onHomeOrEndKey(key);\n                    processed = true;\n                }\n                break;\n            case constants_1.Constants.KEY_LEFT:\n            case constants_1.Constants.KEY_RIGHT:\n                // handle left and right when ctrl is pressed only\n                if (ctrl && !alt) {\n                    this.onCtrlLeftOrRight(key, currentCell);\n                    processed = true;\n                }\n                break;\n            case constants_1.Constants.KEY_UP:\n            case constants_1.Constants.KEY_DOWN:\n                // handle up and down when ctrl is pressed only\n                if (ctrl && !alt) {\n                    this.onCtrlUpOrDown(key, currentCell);\n                    processed = true;\n                }\n                break;\n            case constants_1.Constants.KEY_PAGE_DOWN:\n                // handle page up and page down when ctrl & alt are NOT pressed\n                if (!ctrl && !alt) {\n                    this.onPageDown(currentCell);\n                    processed = true;\n                }\n                break;\n            case constants_1.Constants.KEY_PAGE_UP:\n                // handle page up and page down when ctrl & alt are NOT pressed\n                if (!ctrl && !alt) {\n                    this.onPageUp(currentCell);\n                    processed = true;\n                }\n                break;\n        }\n        if (processed) {\n            event.preventDefault();\n        }\n        return processed;\n    };\n    // the page up/down keys caused a problem, in that if the user\n    // held the page up/down key down, lots of events got generated,\n    // which clogged up the event queue (as they take time to process)\n    // which in turn froze the grid. Logic below makes sure we wait 100ms\n    // between processing the page up/down events, so when user has finger\n    // held down on key, we ignore page up/down events until 100ms has passed,\n    // which effectively empties the queue of page up/down events.\n    NavigationService.prototype.isTimeSinceLastPageEventToRecent = function () {\n        var now = new Date().getTime();\n        var diff = now - this.timeLastPageEventProcessed;\n        return (diff < 100);\n    };\n    NavigationService.prototype.setTimeLastPageEventProcessed = function () {\n        this.timeLastPageEventProcessed = new Date().getTime();\n    };\n    NavigationService.prototype.onPageDown = function (gridCell) {\n        if (this.isTimeSinceLastPageEventToRecent()) {\n            return;\n        }\n        var scrollPosition = this.gridPanel.getVScrollPosition();\n        var pixelsInOnePage = scrollPosition.bottom - scrollPosition.top;\n        if (this.gridPanel.isHorizontalScrollShowing()) {\n            pixelsInOnePage -= this.scrollWidth;\n        }\n        var pagingPixelOffset = this.paginationProxy.getPixelOffset();\n        var currentPageBottomPixel = scrollPosition.top + pixelsInOnePage;\n        var currentPageBottomRow = this.paginationProxy.getRowIndexAtPixel(currentPageBottomPixel + pagingPixelOffset);\n        var scrollIndex = currentPageBottomRow;\n        var currentCellPixel = this.paginationProxy.getRow(gridCell.rowIndex).rowTop;\n        var nextCellPixel = currentCellPixel + pixelsInOnePage - pagingPixelOffset;\n        var focusIndex = this.paginationProxy.getRowIndexAtPixel(nextCellPixel + pagingPixelOffset);\n        var pageLastRow = this.paginationProxy.getPageLastRow();\n        if (focusIndex > pageLastRow) {\n            focusIndex = pageLastRow;\n        }\n        if (scrollIndex > pageLastRow) {\n            scrollIndex = pageLastRow;\n        }\n        this.navigateTo(scrollIndex, 'top', null, focusIndex, gridCell.column);\n        this.setTimeLastPageEventProcessed();\n    };\n    NavigationService.prototype.onPageUp = function (gridCell) {\n        if (this.isTimeSinceLastPageEventToRecent()) {\n            return;\n        }\n        var scrollPosition = this.gridPanel.getVScrollPosition();\n        var pixelsInOnePage = scrollPosition.bottom - scrollPosition.top;\n        if (this.gridPanel.isHorizontalScrollShowing()) {\n            pixelsInOnePage -= this.scrollWidth;\n        }\n        var pagingPixelOffset = this.paginationProxy.getPixelOffset();\n        var currentPageTopPixel = scrollPosition.top;\n        var currentPageTopRow = this.paginationProxy.getRowIndexAtPixel(currentPageTopPixel + pagingPixelOffset);\n        var scrollIndex = currentPageTopRow;\n        var currentRowNode = this.paginationProxy.getRow(gridCell.rowIndex);\n        var nextCellPixel = currentRowNode.rowTop + currentRowNode.rowHeight - pixelsInOnePage - pagingPixelOffset;\n        var focusIndex = this.paginationProxy.getRowIndexAtPixel(nextCellPixel + pagingPixelOffset);\n        var firstRow = this.paginationProxy.getPageFirstRow();\n        if (focusIndex < firstRow) {\n            focusIndex = firstRow;\n        }\n        if (scrollIndex < firstRow) {\n            scrollIndex = firstRow;\n        }\n        this.navigateTo(scrollIndex, 'bottom', null, focusIndex, gridCell.column);\n        this.setTimeLastPageEventProcessed();\n    };\n    // common logic to navigate. takes parameters:\n    // scrollIndex - what row to vertically scroll to\n    // scrollType - what position to put scroll index ie top/bottom\n    // scrollColumn - what column to horizontally scroll to\n    // focusIndex / focusColumn - for page up / down, we want to scroll to one row/column, but focus another\n    NavigationService.prototype.navigateTo = function (scrollIndex, scrollType, scrollColumn, focusIndex, focusColumn) {\n        if (utils_1._.exists(scrollColumn)) {\n            this.gridPanel.ensureColumnVisible(scrollColumn);\n        }\n        if (utils_1._.exists(scrollIndex)) {\n            this.gridPanel.ensureIndexVisible(scrollIndex, scrollType);\n        }\n        // make sure the cell is rendered, needed if we are to focus\n        this.animationFrameService.flushAllFrames();\n        // if we don't do this, the range will be left on the last cell, which will leave the last focused cell\n        // highlighted.\n        this.focusedCellController.setFocusedCell(focusIndex, focusColumn, null, true);\n        if (this.rangeController) {\n            var cellPosition = { rowIndex: focusIndex, rowPinned: null, column: focusColumn };\n            this.rangeController.setRangeToCell(cellPosition);\n        }\n    };\n    // ctrl + up/down will bring focus to same column, first/last row. no horizontal scrolling.\n    NavigationService.prototype.onCtrlUpOrDown = function (key, gridCell) {\n        var upKey = key === constants_1.Constants.KEY_UP;\n        var rowIndexToScrollTo = upKey ? 0 : this.paginationProxy.getPageLastRow();\n        this.navigateTo(rowIndexToScrollTo, null, gridCell.column, rowIndexToScrollTo, gridCell.column);\n    };\n    // ctrl + left/right will bring focus to same row, first/last cell. no vertical scrolling.\n    NavigationService.prototype.onCtrlLeftOrRight = function (key, gridCell) {\n        var leftKey = key === constants_1.Constants.KEY_LEFT;\n        var allColumns = this.columnController.getAllDisplayedColumns();\n        var columnToSelect = leftKey ? allColumns[0] : utils_1._.last(allColumns);\n        this.navigateTo(gridCell.rowIndex, null, columnToSelect, gridCell.rowIndex, columnToSelect);\n    };\n    // home brings focus to top left cell, end brings focus to bottom right, grid scrolled to bring\n    // same cell into view (which means either scroll all the way up, or all the way down).\n    NavigationService.prototype.onHomeOrEndKey = function (key) {\n        var homeKey = key === constants_1.Constants.KEY_PAGE_HOME;\n        var allColumns = this.columnController.getAllDisplayedColumns();\n        var columnToSelect = homeKey ? allColumns[0] : utils_1._.last(allColumns);\n        var rowIndexToScrollTo = homeKey ? 0 : this.paginationProxy.getPageLastRow();\n        this.navigateTo(rowIndexToScrollTo, null, columnToSelect, rowIndexToScrollTo, columnToSelect);\n    };\n    __decorate([\n        context_1.Autowired('mouseEventService'),\n        __metadata(\"design:type\", mouseEventService_1.MouseEventService)\n    ], NavigationService.prototype, \"mouseEventService\", void 0);\n    __decorate([\n        context_1.Autowired('paginationProxy'),\n        __metadata(\"design:type\", paginationProxy_1.PaginationProxy)\n    ], NavigationService.prototype, \"paginationProxy\", void 0);\n    __decorate([\n        context_1.Autowired('focusedCellController'),\n        __metadata(\"design:type\", focusedCellController_1.FocusedCellController)\n    ], NavigationService.prototype, \"focusedCellController\", void 0);\n    __decorate([\n        context_1.Autowired('animationFrameService'),\n        __metadata(\"design:type\", animationFrameService_1.AnimationFrameService)\n    ], NavigationService.prototype, \"animationFrameService\", void 0);\n    __decorate([\n        context_1.Optional('rangeController'),\n        __metadata(\"design:type\", Object)\n    ], NavigationService.prototype, \"rangeController\", void 0);\n    __decorate([\n        context_1.Autowired('columnController'),\n        __metadata(\"design:type\", columnController_1.ColumnController)\n    ], NavigationService.prototype, \"columnController\", void 0);\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], NavigationService.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], NavigationService.prototype, \"init\", null);\n    NavigationService = __decorate([\n        context_1.Bean('navigationService')\n    ], NavigationService);\n    return NavigationService;\n}());\nexports.NavigationService = NavigationService;\n"]},"metadata":{},"sourceType":"script"}