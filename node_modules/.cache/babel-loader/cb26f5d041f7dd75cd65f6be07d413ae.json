{"ast":null,"code":"var _jsxFileName = \"/Users/dirkmennecke77/Desktop/Lageplan/src/components/AgFeatureGrid.js\";\nimport * as React from \"react\";\nimport * as PropTypes from \"prop-types\";\nimport OlMap from \"ol/Map\";\nimport OlView from \"ol/View\";\nimport OlLayerTile from \"ol/layer/Tile\";\nimport OlSourceOSM from \"ol/source/OSM\";\nimport OlFormatGeoJSON from \"ol/format/GeoJSON\";\nimport { fromLonLat } from \"ol/proj\";\nimport AgFeatureGrid from \"@terrestris/react-geo/Grid/AgFeatureGrid/AgFeatureGrid\";\nimport federalStates from \"../../../assets/federal-states-ger.json\";\nconst format = new OlFormatGeoJSON();\nconst features = format.readFeatures(federalStates);\n\nclass NameColumnRenderer extends React.Component {\n  render() {\n    const value = this.props.value;\n    return React.createElement(\"a\", {\n      href: \"https://en.wikipedia.org/wiki/\".concat(value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, value);\n  }\n\n}\n\nNameColumnRenderer.propTypes = {\n  value: PropTypes.any\n};\n\nclass MathRoundRenderer extends React.Component {\n  render() {\n    const value = this.props.value;\n    return Math.round(value);\n  }\n\n}\n\nMathRoundRenderer.propTypes = {\n  value: PropTypes.any\n};\n\nclass AgFeatureGridExample extends React.Component {\n  constructor(props) {\n    super(props);\n    this.mapDivId = \"map-\".concat(Math.random());\n    this.map = new OlMap({\n      layers: [new OlLayerTile({\n        name: \"OSM\",\n        source: new OlSourceOSM()\n      })],\n      view: new OlView({\n        center: fromLonLat([37.4057, 8.81566]),\n        zoom: 4\n      })\n    });\n  }\n\n  componentDidMount() {\n    this.map.setTarget(this.mapDivId);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(AgFeatureGrid, {\n      features: features,\n      map: this.map,\n      attributeBlacklist: [\"gml_id\", \"USE\", \"RS\", \"RS_ALT\"],\n      columnDefs: {\n        GEN: {\n          headerName: \"Name\",\n          cellRenderer: \"nameColumnRenderer\",\n          sortable: true,\n          filter: true,\n          resizable: true\n        },\n        SHAPE_LENG: {\n          headerName: \"Length\",\n          cellRenderer: \"mathRoundRenderer\",\n          sortable: true,\n          filter: true,\n          resizable: true\n        },\n        SHAPE_AREA: {\n          headerName: \"Area\",\n          cellRenderer: \"mathRoundRenderer\",\n          sortable: true,\n          filter: true,\n          resizable: true\n        }\n      },\n      zoomToExtent: true,\n      selectable: true,\n      frameworkComponents: {\n        nameColumnRenderer: NameColumnRenderer,\n        mathRoundRenderer: MathRoundRenderer\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: this.mapDivId,\n      style: {\n        height: \"400px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }));\n  }\n\n}\n\nReact.createElement(AgFeatureGridExample, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 112\n  },\n  __self: this\n});","map":{"version":3,"sources":["/Users/dirkmennecke77/Desktop/Lageplan/src/components/AgFeatureGrid.js"],"names":["React","PropTypes","OlMap","OlView","OlLayerTile","OlSourceOSM","OlFormatGeoJSON","fromLonLat","AgFeatureGrid","federalStates","format","features","readFeatures","NameColumnRenderer","Component","render","value","props","propTypes","any","MathRoundRenderer","Math","round","AgFeatureGridExample","constructor","mapDivId","random","map","layers","name","source","view","center","zoom","componentDidMount","setTarget","GEN","headerName","cellRenderer","sortable","filter","resizable","SHAPE_LENG","SHAPE_AREA","nameColumnRenderer","mathRoundRenderer","height"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport * as PropTypes from \"prop-types\";\n\nimport OlMap from \"ol/Map\";\nimport OlView from \"ol/View\";\nimport OlLayerTile from \"ol/layer/Tile\";\nimport OlSourceOSM from \"ol/source/OSM\";\nimport OlFormatGeoJSON from \"ol/format/GeoJSON\";\nimport { fromLonLat } from \"ol/proj\";\n\nimport AgFeatureGrid from \"@terrestris/react-geo/Grid/AgFeatureGrid/AgFeatureGrid\";\n\nimport federalStates from \"../../../assets/federal-states-ger.json\";\n\nconst format = new OlFormatGeoJSON();\nconst features = format.readFeatures(federalStates);\n\nclass NameColumnRenderer extends React.Component {\n  render() {\n    const { value } = this.props;\n    return <a href={`https://en.wikipedia.org/wiki/${value}`}>{value}</a>;\n  }\n}\n\nNameColumnRenderer.propTypes = {\n  value: PropTypes.any\n};\n\nclass MathRoundRenderer extends React.Component {\n  render() {\n    const { value } = this.props;\n    return Math.round(value);\n  }\n}\n\nMathRoundRenderer.propTypes = {\n  value: PropTypes.any\n};\n\nclass AgFeatureGridExample extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.mapDivId = `map-${Math.random()}`;\n\n    this.map = new OlMap({\n      layers: [\n        new OlLayerTile({\n          name: \"OSM\",\n          source: new OlSourceOSM()\n        })\n      ],\n      view: new OlView({\n        center: fromLonLat([37.4057, 8.81566]),\n        zoom: 4\n      })\n    });\n  }\n\n  componentDidMount() {\n    this.map.setTarget(this.mapDivId);\n  }\n\n  render() {\n    return (\n      <div>\n        <AgFeatureGrid\n          features={features}\n          map={this.map}\n          attributeBlacklist={[\"gml_id\", \"USE\", \"RS\", \"RS_ALT\"]}\n          columnDefs={{\n            GEN: {\n              headerName: \"Name\",\n              cellRenderer: \"nameColumnRenderer\",\n              sortable: true,\n              filter: true,\n              resizable: true\n            },\n            SHAPE_LENG: {\n              headerName: \"Length\",\n              cellRenderer: \"mathRoundRenderer\",\n              sortable: true,\n              filter: true,\n              resizable: true\n            },\n            SHAPE_AREA: {\n              headerName: \"Area\",\n              cellRenderer: \"mathRoundRenderer\",\n              sortable: true,\n              filter: true,\n              resizable: true\n            }\n          }}\n          zoomToExtent={true}\n          selectable={true}\n          frameworkComponents={{\n            nameColumnRenderer: NameColumnRenderer,\n            mathRoundRenderer: MathRoundRenderer\n          }}\n        />\n        <div\n          id={this.mapDivId}\n          style={{\n            height: \"400px\"\n          }}\n        />\n      </div>\n    );\n  }\n}\n\n<AgFeatureGridExample />;\n"]},"metadata":{},"sourceType":"module"}