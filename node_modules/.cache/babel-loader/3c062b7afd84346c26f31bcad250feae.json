{"ast":null,"code":"/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.2.2\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar context_1 = require(\"../../context/context\");\n\nvar gridOptionsWrapper_1 = require(\"../../gridOptionsWrapper\");\n\nvar sortService_1 = require(\"../../rowNodes/sortService\");\n\nvar sortController_1 = require(\"../../sortController\");\n\nvar columnController_1 = require(\"../../columnController/columnController\");\n\nvar utils_1 = require(\"../../utils\");\n\nvar SortStage =\n/** @class */\nfunction () {\n  function SortStage() {}\n\n  SortStage.prototype.execute = function (params) {\n    var sortOptions = this.sortController.getSortForRowController();\n    var sortActive = utils_1._.exists(sortOptions) && sortOptions.length > 0;\n    var deltaSort = sortActive && utils_1._.exists(params.rowNodeTransactions) // in time we can remove this check, so that delta sort is always\n    // on if transactions are present. it's off for now so that we can\n    // selectively turn it on and test it with some select users before\n    // rolling out to everyone.\n    && this.gridOptionsWrapper.isDeltaSort(); // we only need dirty nodes if doing delta sort\n\n    var dirtyLeafNodes = deltaSort ? this.calculateDirtyNodes(params.rowNodeTransactions) : null;\n    var valueColumns = this.columnController.getValueColumns();\n\n    var noAggregations = utils_1._.missingOrEmpty(valueColumns);\n\n    this.sortService.sort(sortOptions, sortActive, deltaSort, dirtyLeafNodes, params.changedPath, noAggregations);\n  };\n\n  SortStage.prototype.calculateDirtyNodes = function (rowNodeTransactions) {\n    var dirtyNodes = {};\n\n    var addNodesFunc = function (rowNodes) {\n      if (rowNodes) {\n        rowNodes.forEach(function (rowNode) {\n          return dirtyNodes[rowNode.id] = true;\n        });\n      }\n    }; // all leaf level nodes in the transaction were impacted\n\n\n    rowNodeTransactions.forEach(function (tran) {\n      addNodesFunc(tran.add);\n      addNodesFunc(tran.update);\n      addNodesFunc(tran.remove);\n    });\n    return dirtyNodes;\n  };\n\n  __decorate([context_1.Autowired('gridOptionsWrapper'), __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)], SortStage.prototype, \"gridOptionsWrapper\", void 0);\n\n  __decorate([context_1.Autowired('sortService'), __metadata(\"design:type\", sortService_1.SortService)], SortStage.prototype, \"sortService\", void 0);\n\n  __decorate([context_1.Autowired('sortController'), __metadata(\"design:type\", sortController_1.SortController)], SortStage.prototype, \"sortController\", void 0);\n\n  __decorate([context_1.Autowired('columnController'), __metadata(\"design:type\", columnController_1.ColumnController)], SortStage.prototype, \"columnController\", void 0);\n\n  SortStage = __decorate([context_1.Bean('sortStage')], SortStage);\n  return SortStage;\n}();\n\nexports.SortStage = SortStage;","map":{"version":3,"sources":["/Users/dirkmennecke77/Desktop/Lageplan/node_modules/ag-grid-community/dist/lib/rowModels/clientSide/sortStage.js"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__metadata","k","v","metadata","exports","value","context_1","require","gridOptionsWrapper_1","sortService_1","sortController_1","columnController_1","utils_1","SortStage","prototype","execute","params","sortOptions","sortController","getSortForRowController","sortActive","_","exists","deltaSort","rowNodeTransactions","gridOptionsWrapper","isDeltaSort","dirtyLeafNodes","calculateDirtyNodes","valueColumns","columnController","getValueColumns","noAggregations","missingOrEmpty","sortService","sort","changedPath","dirtyNodes","addNodesFunc","rowNodes","forEach","rowNode","id","tran","add","update","remove","Autowired","GridOptionsWrapper","SortService","SortController","ColumnController","Bean"],"mappings":"AAAA;;;;;;AAMA;;AACA,IAAIA,UAAU,GAAI,QAAQ,KAAKA,UAAd,IAA6B,UAAUC,UAAV,EAAsBC,MAAtB,EAA8BC,GAA9B,EAAmCC,IAAnC,EAAyC;AACnF,MAAIC,CAAC,GAAGC,SAAS,CAACC,MAAlB;AAAA,MAA0BC,CAAC,GAAGH,CAAC,GAAG,CAAJ,GAAQH,MAAR,GAAiBE,IAAI,KAAK,IAAT,GAAgBA,IAAI,GAAGK,MAAM,CAACC,wBAAP,CAAgCR,MAAhC,EAAwCC,GAAxC,CAAvB,GAAsEC,IAArH;AAAA,MAA2HO,CAA3H;AACA,MAAI,OAAOC,OAAP,KAAmB,QAAnB,IAA+B,OAAOA,OAAO,CAACC,QAAf,KAA4B,UAA/D,EAA2EL,CAAC,GAAGI,OAAO,CAACC,QAAR,CAAiBZ,UAAjB,EAA6BC,MAA7B,EAAqCC,GAArC,EAA0CC,IAA1C,CAAJ,CAA3E,KACK,KAAK,IAAIU,CAAC,GAAGb,UAAU,CAACM,MAAX,GAAoB,CAAjC,EAAoCO,CAAC,IAAI,CAAzC,EAA4CA,CAAC,EAA7C,EAAiD,IAAIH,CAAC,GAAGV,UAAU,CAACa,CAAD,CAAlB,EAAuBN,CAAC,GAAG,CAACH,CAAC,GAAG,CAAJ,GAAQM,CAAC,CAACH,CAAD,CAAT,GAAeH,CAAC,GAAG,CAAJ,GAAQM,CAAC,CAACT,MAAD,EAASC,GAAT,EAAcK,CAAd,CAAT,GAA4BG,CAAC,CAACT,MAAD,EAASC,GAAT,CAA7C,KAA+DK,CAAnE;AAC7E,SAAOH,CAAC,GAAG,CAAJ,IAASG,CAAT,IAAcC,MAAM,CAACM,cAAP,CAAsBb,MAAtB,EAA8BC,GAA9B,EAAmCK,CAAnC,CAAd,EAAqDA,CAA5D;AACH,CALD;;AAMA,IAAIQ,UAAU,GAAI,QAAQ,KAAKA,UAAd,IAA6B,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAC1D,MAAI,OAAON,OAAP,KAAmB,QAAnB,IAA+B,OAAOA,OAAO,CAACO,QAAf,KAA4B,UAA/D,EAA2E,OAAOP,OAAO,CAACO,QAAR,CAAiBF,CAAjB,EAAoBC,CAApB,CAAP;AAC9E,CAFD;;AAGAT,MAAM,CAACM,cAAP,CAAsBK,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,SAAS,GAAGC,OAAO,CAAC,uBAAD,CAAvB;;AACA,IAAIC,oBAAoB,GAAGD,OAAO,CAAC,0BAAD,CAAlC;;AACA,IAAIE,aAAa,GAAGF,OAAO,CAAC,4BAAD,CAA3B;;AACA,IAAIG,gBAAgB,GAAGH,OAAO,CAAC,sBAAD,CAA9B;;AACA,IAAII,kBAAkB,GAAGJ,OAAO,CAAC,yCAAD,CAAhC;;AACA,IAAIK,OAAO,GAAGL,OAAO,CAAC,aAAD,CAArB;;AACA,IAAIM,SAAS;AAAG;AAAe,YAAY;AACvC,WAASA,SAAT,GAAqB,CACpB;;AACDA,EAAAA,SAAS,CAACC,SAAV,CAAoBC,OAApB,GAA8B,UAAUC,MAAV,EAAkB;AAC5C,QAAIC,WAAW,GAAG,KAAKC,cAAL,CAAoBC,uBAApB,EAAlB;AACA,QAAIC,UAAU,GAAGR,OAAO,CAACS,CAAR,CAAUC,MAAV,CAAiBL,WAAjB,KAAiCA,WAAW,CAAC1B,MAAZ,GAAqB,CAAvE;AACA,QAAIgC,SAAS,GAAGH,UAAU,IACnBR,OAAO,CAACS,CAAR,CAAUC,MAAV,CAAiBN,MAAM,CAACQ,mBAAxB,CADS,CAEZ;AACA;AACA;AACA;AALY,OAMT,KAAKC,kBAAL,CAAwBC,WAAxB,EANP,CAH4C,CAU5C;;AACA,QAAIC,cAAc,GAAGJ,SAAS,GAAG,KAAKK,mBAAL,CAAyBZ,MAAM,CAACQ,mBAAhC,CAAH,GAA0D,IAAxF;AACA,QAAIK,YAAY,GAAG,KAAKC,gBAAL,CAAsBC,eAAtB,EAAnB;;AACA,QAAIC,cAAc,GAAGpB,OAAO,CAACS,CAAR,CAAUY,cAAV,CAAyBJ,YAAzB,CAArB;;AACA,SAAKK,WAAL,CAAiBC,IAAjB,CAAsBlB,WAAtB,EAAmCG,UAAnC,EAA+CG,SAA/C,EAA0DI,cAA1D,EAA0EX,MAAM,CAACoB,WAAjF,EAA8FJ,cAA9F;AACH,GAfD;;AAgBAnB,EAAAA,SAAS,CAACC,SAAV,CAAoBc,mBAApB,GAA0C,UAAUJ,mBAAV,EAA+B;AACrE,QAAIa,UAAU,GAAG,EAAjB;;AACA,QAAIC,YAAY,GAAG,UAAUC,QAAV,EAAoB;AACnC,UAAIA,QAAJ,EAAc;AACVA,QAAAA,QAAQ,CAACC,OAAT,CAAiB,UAAUC,OAAV,EAAmB;AAAE,iBAAOJ,UAAU,CAACI,OAAO,CAACC,EAAT,CAAV,GAAyB,IAAhC;AAAuC,SAA7E;AACH;AACJ,KAJD,CAFqE,CAOrE;;;AACAlB,IAAAA,mBAAmB,CAACgB,OAApB,CAA4B,UAAUG,IAAV,EAAgB;AACxCL,MAAAA,YAAY,CAACK,IAAI,CAACC,GAAN,CAAZ;AACAN,MAAAA,YAAY,CAACK,IAAI,CAACE,MAAN,CAAZ;AACAP,MAAAA,YAAY,CAACK,IAAI,CAACG,MAAN,CAAZ;AACH,KAJD;AAKA,WAAOT,UAAP;AACH,GAdD;;AAeArD,EAAAA,UAAU,CAAC,CACPsB,SAAS,CAACyC,SAAV,CAAoB,oBAApB,CADO,EAEP/C,UAAU,CAAC,aAAD,EAAgBQ,oBAAoB,CAACwC,kBAArC,CAFH,CAAD,EAGPnC,SAAS,CAACC,SAHH,EAGc,oBAHd,EAGoC,KAAK,CAHzC,CAAV;;AAIA9B,EAAAA,UAAU,CAAC,CACPsB,SAAS,CAACyC,SAAV,CAAoB,aAApB,CADO,EAEP/C,UAAU,CAAC,aAAD,EAAgBS,aAAa,CAACwC,WAA9B,CAFH,CAAD,EAGPpC,SAAS,CAACC,SAHH,EAGc,aAHd,EAG6B,KAAK,CAHlC,CAAV;;AAIA9B,EAAAA,UAAU,CAAC,CACPsB,SAAS,CAACyC,SAAV,CAAoB,gBAApB,CADO,EAEP/C,UAAU,CAAC,aAAD,EAAgBU,gBAAgB,CAACwC,cAAjC,CAFH,CAAD,EAGPrC,SAAS,CAACC,SAHH,EAGc,gBAHd,EAGgC,KAAK,CAHrC,CAAV;;AAIA9B,EAAAA,UAAU,CAAC,CACPsB,SAAS,CAACyC,SAAV,CAAoB,kBAApB,CADO,EAEP/C,UAAU,CAAC,aAAD,EAAgBW,kBAAkB,CAACwC,gBAAnC,CAFH,CAAD,EAGPtC,SAAS,CAACC,SAHH,EAGc,kBAHd,EAGkC,KAAK,CAHvC,CAAV;;AAIAD,EAAAA,SAAS,GAAG7B,UAAU,CAAC,CACnBsB,SAAS,CAAC8C,IAAV,CAAe,WAAf,CADmB,CAAD,EAEnBvC,SAFmB,CAAtB;AAGA,SAAOA,SAAP;AACH,CAtD8B,EAA/B;;AAuDAT,OAAO,CAACS,SAAR,GAAoBA,SAApB","sourcesContent":["/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.2.2\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar context_1 = require(\"../../context/context\");\nvar gridOptionsWrapper_1 = require(\"../../gridOptionsWrapper\");\nvar sortService_1 = require(\"../../rowNodes/sortService\");\nvar sortController_1 = require(\"../../sortController\");\nvar columnController_1 = require(\"../../columnController/columnController\");\nvar utils_1 = require(\"../../utils\");\nvar SortStage = /** @class */ (function () {\n    function SortStage() {\n    }\n    SortStage.prototype.execute = function (params) {\n        var sortOptions = this.sortController.getSortForRowController();\n        var sortActive = utils_1._.exists(sortOptions) && sortOptions.length > 0;\n        var deltaSort = sortActive\n            && utils_1._.exists(params.rowNodeTransactions)\n            // in time we can remove this check, so that delta sort is always\n            // on if transactions are present. it's off for now so that we can\n            // selectively turn it on and test it with some select users before\n            // rolling out to everyone.\n            && this.gridOptionsWrapper.isDeltaSort();\n        // we only need dirty nodes if doing delta sort\n        var dirtyLeafNodes = deltaSort ? this.calculateDirtyNodes(params.rowNodeTransactions) : null;\n        var valueColumns = this.columnController.getValueColumns();\n        var noAggregations = utils_1._.missingOrEmpty(valueColumns);\n        this.sortService.sort(sortOptions, sortActive, deltaSort, dirtyLeafNodes, params.changedPath, noAggregations);\n    };\n    SortStage.prototype.calculateDirtyNodes = function (rowNodeTransactions) {\n        var dirtyNodes = {};\n        var addNodesFunc = function (rowNodes) {\n            if (rowNodes) {\n                rowNodes.forEach(function (rowNode) { return dirtyNodes[rowNode.id] = true; });\n            }\n        };\n        // all leaf level nodes in the transaction were impacted\n        rowNodeTransactions.forEach(function (tran) {\n            addNodesFunc(tran.add);\n            addNodesFunc(tran.update);\n            addNodesFunc(tran.remove);\n        });\n        return dirtyNodes;\n    };\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], SortStage.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_1.Autowired('sortService'),\n        __metadata(\"design:type\", sortService_1.SortService)\n    ], SortStage.prototype, \"sortService\", void 0);\n    __decorate([\n        context_1.Autowired('sortController'),\n        __metadata(\"design:type\", sortController_1.SortController)\n    ], SortStage.prototype, \"sortController\", void 0);\n    __decorate([\n        context_1.Autowired('columnController'),\n        __metadata(\"design:type\", columnController_1.ColumnController)\n    ], SortStage.prototype, \"columnController\", void 0);\n    SortStage = __decorate([\n        context_1.Bean('sortStage')\n    ], SortStage);\n    return SortStage;\n}());\nexports.SortStage = SortStage;\n"]},"metadata":{},"sourceType":"script"}