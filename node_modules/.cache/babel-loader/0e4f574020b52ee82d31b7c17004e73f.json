{"ast":null,"code":"/**\n * @module ol/pointer/NativeSource\n */\n// Based on https://github.com/Polymer/PointerEvents\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport { inherits } from '../util.js';\nimport EventSource from '../pointer/EventSource.js';\n/**\n * @param {module:ol/pointer/PointerEventHandler} dispatcher Event handler.\n * @constructor\n * @extends {module:ol/pointer/EventSource}\n */\n\nconst NativeSource = function (dispatcher) {\n  const mapping = {\n    'pointerdown': this.pointerDown,\n    'pointermove': this.pointerMove,\n    'pointerup': this.pointerUp,\n    'pointerout': this.pointerOut,\n    'pointerover': this.pointerOver,\n    'pointercancel': this.pointerCancel,\n    'gotpointercapture': this.gotPointerCapture,\n    'lostpointercapture': this.lostPointerCapture\n  };\n  EventSource.call(this, dispatcher, mapping);\n};\n\ninherits(NativeSource, EventSource);\n/**\n * Handler for `pointerdown`.\n *\n * @param {Event} inEvent The in event.\n */\n\nNativeSource.prototype.pointerDown = function (inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n/**\n * Handler for `pointermove`.\n *\n * @param {Event} inEvent The in event.\n */\n\n\nNativeSource.prototype.pointerMove = function (inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n/**\n * Handler for `pointerup`.\n *\n * @param {Event} inEvent The in event.\n */\n\n\nNativeSource.prototype.pointerUp = function (inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n/**\n * Handler for `pointerout`.\n *\n * @param {Event} inEvent The in event.\n */\n\n\nNativeSource.prototype.pointerOut = function (inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n/**\n * Handler for `pointerover`.\n *\n * @param {Event} inEvent The in event.\n */\n\n\nNativeSource.prototype.pointerOver = function (inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n/**\n * Handler for `pointercancel`.\n *\n * @param {Event} inEvent The in event.\n */\n\n\nNativeSource.prototype.pointerCancel = function (inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n/**\n * Handler for `lostpointercapture`.\n *\n * @param {Event} inEvent The in event.\n */\n\n\nNativeSource.prototype.lostPointerCapture = function (inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n/**\n * Handler for `gotpointercapture`.\n *\n * @param {Event} inEvent The in event.\n */\n\n\nNativeSource.prototype.gotPointerCapture = function (inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n\nexport default NativeSource;","map":null,"metadata":{},"sourceType":"module"}