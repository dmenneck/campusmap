{"ast":null,"code":"/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.2.2\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar context_1 = require(\"./context/context\");\n\nvar context_2 = require(\"./context/context\");\n\nvar TemplateService =\n/** @class */\nfunction () {\n  function TemplateService() {\n    this.templateCache = {};\n    this.waitingCallbacks = {};\n  } // returns the template if it is loaded, or null if it is not loaded\n  // but will call the callback when it is loaded\n\n\n  TemplateService.prototype.getTemplate = function (url, callback) {\n    var templateFromCache = this.templateCache[url];\n\n    if (templateFromCache) {\n      return templateFromCache;\n    }\n\n    var callbackList = this.waitingCallbacks[url];\n    var that = this;\n\n    if (!callbackList) {\n      // first time this was called, so need a new list for callbacks\n      callbackList = [];\n      this.waitingCallbacks[url] = callbackList; // and also need to do the http request\n\n      var client = new XMLHttpRequest();\n\n      client.onload = function () {\n        that.handleHttpResult(this, url);\n      };\n\n      client.open(\"GET\", url);\n      client.send();\n    } // add this callback\n\n\n    if (callback) {\n      callbackList.push(callback);\n    } // caller needs to wait for template to load, so return null\n\n\n    return null;\n  };\n\n  TemplateService.prototype.handleHttpResult = function (httpResult, url) {\n    if (httpResult.status !== 200 || httpResult.response === null) {\n      console.warn(\"Unable to get template error \" + httpResult.status + \" - \" + url);\n      return;\n    } // response success, so process it\n    // in IE9 the response is in - responseText\n\n\n    this.templateCache[url] = httpResult.response || httpResult.responseText; // inform all listeners that this is now in the cache\n\n    var callbacks = this.waitingCallbacks[url];\n\n    for (var i = 0; i < callbacks.length; i++) {\n      var callback = callbacks[i]; // we could pass the callback the response, however we know the client of this code\n      // is the cell renderer, and it passes the 'cellRefresh' method in as the callback\n      // which doesn't take any parameters.\n\n      callback();\n    }\n\n    if (this.$scope) {\n      var that_1 = this;\n      window.setTimeout(function () {\n        that_1.$scope.$apply();\n      }, 0);\n    }\n  };\n\n  __decorate([context_2.Autowired('$scope'), __metadata(\"design:type\", Object)], TemplateService.prototype, \"$scope\", void 0);\n\n  TemplateService = __decorate([context_1.Bean('templateService')], TemplateService);\n  return TemplateService;\n}();\n\nexports.TemplateService = TemplateService;","map":{"version":3,"sources":["/Users/dirkmennecke77/Desktop/Lageplan/node_modules/ag-grid-community/dist/lib/templateService.js"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__metadata","k","v","metadata","exports","value","context_1","require","context_2","TemplateService","templateCache","waitingCallbacks","prototype","getTemplate","url","callback","templateFromCache","callbackList","that","client","XMLHttpRequest","onload","handleHttpResult","open","send","push","httpResult","status","response","console","warn","responseText","callbacks","$scope","that_1","window","setTimeout","$apply","Autowired","Bean"],"mappings":"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","sourcesContent":["/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.2.2\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar context_1 = require(\"./context/context\");\nvar context_2 = require(\"./context/context\");\nvar TemplateService = /** @class */ (function () {\n    function TemplateService() {\n        this.templateCache = {};\n        this.waitingCallbacks = {};\n    }\n    // returns the template if it is loaded, or null if it is not loaded\n    // but will call the callback when it is loaded\n    TemplateService.prototype.getTemplate = function (url, callback) {\n        var templateFromCache = this.templateCache[url];\n        if (templateFromCache) {\n            return templateFromCache;\n        }\n        var callbackList = this.waitingCallbacks[url];\n        var that = this;\n        if (!callbackList) {\n            // first time this was called, so need a new list for callbacks\n            callbackList = [];\n            this.waitingCallbacks[url] = callbackList;\n            // and also need to do the http request\n            var client = new XMLHttpRequest();\n            client.onload = function () {\n                that.handleHttpResult(this, url);\n            };\n            client.open(\"GET\", url);\n            client.send();\n        }\n        // add this callback\n        if (callback) {\n            callbackList.push(callback);\n        }\n        // caller needs to wait for template to load, so return null\n        return null;\n    };\n    TemplateService.prototype.handleHttpResult = function (httpResult, url) {\n        if (httpResult.status !== 200 || httpResult.response === null) {\n            console.warn(\"Unable to get template error \" + httpResult.status + \" - \" + url);\n            return;\n        }\n        // response success, so process it\n        // in IE9 the response is in - responseText\n        this.templateCache[url] = httpResult.response || httpResult.responseText;\n        // inform all listeners that this is now in the cache\n        var callbacks = this.waitingCallbacks[url];\n        for (var i = 0; i < callbacks.length; i++) {\n            var callback = callbacks[i];\n            // we could pass the callback the response, however we know the client of this code\n            // is the cell renderer, and it passes the 'cellRefresh' method in as the callback\n            // which doesn't take any parameters.\n            callback();\n        }\n        if (this.$scope) {\n            var that_1 = this;\n            window.setTimeout(function () {\n                that_1.$scope.$apply();\n            }, 0);\n        }\n    };\n    __decorate([\n        context_2.Autowired('$scope'),\n        __metadata(\"design:type\", Object)\n    ], TemplateService.prototype, \"$scope\", void 0);\n    TemplateService = __decorate([\n        context_1.Bean('templateService')\n    ], TemplateService);\n    return TemplateService;\n}());\nexports.TemplateService = TemplateService;\n"]},"metadata":{},"sourceType":"script"}