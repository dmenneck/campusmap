{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _Map = _interopRequireDefault(require(\"ol/Map\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/**\n * The MapProvider.\n *\n * @type {Object}\n */\n\n\nvar MapProvider =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MapProvider, _React$Component);\n  /**\n   * The properties.\n   * @type {Object}\n   */\n\n\n  function MapProvider(props) {\n    var _this;\n\n    _classCallCheck(this, MapProvider);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MapProvider).call(this, props));\n    _this.state = {\n      map: null,\n      ready: false\n    };\n    Promise.resolve(props.map).then(function (map) {\n      _this.setState({\n        map: map,\n        ready: true\n      });\n    });\n    return _this;\n  }\n  /**\n   * Returns the context for the children.\n   *\n   * @return {Object} The child context.\n   */\n\n\n  _createClass(MapProvider, [{\n    key: \"getChildContext\",\n    value: function getChildContext() {\n      var map = this.state.map;\n      return {\n        map: map\n      };\n    }\n    /**\n     * The render function.\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.state.ready) {\n        return null;\n      } else {\n        return this.props.children;\n      }\n    }\n  }]);\n\n  return MapProvider;\n}(_react[\"default\"].Component);\n\n_defineProperty(MapProvider, \"propTypes\", {\n  /**\n   * The children of the MapProvider.\n   * @type {Object}\n   */\n  children: _propTypes[\"default\"].node,\n\n  /**\n   * The map can be either an OlMap or a Promise that resolves with an OlMap\n   * if your map is created asynchronously.\n   *\n   * @type {ol.Map|Promise}\n   */\n  map: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].instanceOf(_Map[\"default\"]), _propTypes[\"default\"].instanceOf(Promise)]).isRequired\n  /**\n   * The child context types.\n   * @type {Object}\n   */\n\n});\n\n_defineProperty(MapProvider, \"childContextTypes\", {\n  map: _propTypes[\"default\"].instanceOf(_Map[\"default\"])\n  /**\n   * The constructor of the MapProvider sets the\n   *\n   * @constructs MapProvider\n   * @param {Object} props The initial props.\n   */\n\n});\n\nvar _default = MapProvider;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}