{"ast":null,"code":"/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.2.2\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar component_1 = require(\"../../widgets/component\");\n\nvar column_1 = require(\"../../entities/column\");\n\nvar columnGroup_1 = require(\"../../entities/columnGroup\");\n\nvar columnApi_1 = require(\"../../columnController/columnApi\");\n\nvar columnController_1 = require(\"../../columnController/columnController\");\n\nvar gridOptionsWrapper_1 = require(\"../../gridOptionsWrapper\");\n\nvar horizontalResizeService_1 = require(\"../horizontalResizeService\");\n\nvar context_1 = require(\"../../context/context\");\n\nvar cssClassApplier_1 = require(\"../cssClassApplier\");\n\nvar dragAndDropService_1 = require(\"../../dragAndDrop/dragAndDropService\");\n\nvar setLeftFeature_1 = require(\"../../rendering/features/setLeftFeature\");\n\nvar gridApi_1 = require(\"../../gridApi\");\n\nvar userComponentFactory_1 = require(\"../../components/framework/userComponentFactory\");\n\nvar beans_1 = require(\"../../rendering/beans\");\n\nvar hoverFeature_1 = require(\"../hoverFeature\");\n\nvar utils_1 = require(\"../../utils\");\n\nvar HeaderGroupWrapperComp =\n/** @class */\nfunction (_super) {\n  __extends(HeaderGroupWrapperComp, _super);\n\n  function HeaderGroupWrapperComp(columnGroup, dragSourceDropTarget, pinned) {\n    var _this = _super.call(this, HeaderGroupWrapperComp.TEMPLATE) || this; // the children can change, we keep destroy functions related to listening to the children here\n\n\n    _this.childColumnsDestroyFuncs = [];\n    _this.columnGroup = columnGroup;\n    _this.dragSourceDropTarget = dragSourceDropTarget;\n    _this.pinned = pinned;\n    return _this;\n  }\n\n  HeaderGroupWrapperComp.prototype.postConstruct = function () {\n    cssClassApplier_1.CssClassApplier.addHeaderClassesFromColDef(this.getComponentHolder(), this.getGui(), this.gridOptionsWrapper, null, this.columnGroup);\n    var displayName = this.columnController.getDisplayNameForColumnGroup(this.columnGroup, 'header');\n    this.appendHeaderGroupComp(displayName);\n    this.setupResize();\n    this.addClasses();\n    this.setupWidth();\n    this.addAttributes();\n    this.setupMovingCss();\n    this.setupTooltip();\n    this.addFeature(this.getContext(), new hoverFeature_1.HoverFeature(this.columnGroup.getOriginalColumnGroup().getLeafColumns(), this.getGui()));\n    var setLeftFeature = new setLeftFeature_1.SetLeftFeature(this.columnGroup, this.getGui(), this.beans);\n    setLeftFeature.init();\n    this.addDestroyFunc(setLeftFeature.destroy.bind(setLeftFeature));\n  };\n\n  HeaderGroupWrapperComp.prototype.setupMovingCss = function () {\n    var _this = this;\n\n    var originalColumnGroup = this.columnGroup.getOriginalColumnGroup();\n    var leafColumns = originalColumnGroup.getLeafColumns();\n    leafColumns.forEach(function (col) {\n      _this.addDestroyableEventListener(col, column_1.Column.EVENT_MOVING_CHANGED, _this.onColumnMovingChanged.bind(_this));\n    });\n    this.onColumnMovingChanged();\n  };\n\n  HeaderGroupWrapperComp.prototype.getColumn = function () {\n    return this.columnGroup;\n  };\n\n  HeaderGroupWrapperComp.prototype.getComponentHolder = function () {\n    return this.columnGroup.getColGroupDef();\n  };\n\n  HeaderGroupWrapperComp.prototype.getTooltipText = function () {\n    var colGroupDef = this.getComponentHolder();\n    return colGroupDef && colGroupDef.headerTooltip;\n  };\n\n  HeaderGroupWrapperComp.prototype.setupTooltip = function () {\n    var tooltipText = this.getTooltipText();\n\n    if (tooltipText == null) {\n      return;\n    }\n\n    if (this.gridOptionsWrapper.isEnableBrowserTooltips()) {\n      this.getGui().setAttribute('title', tooltipText);\n    } else {\n      this.beans.tooltipManager.registerTooltip(this);\n    }\n  };\n\n  HeaderGroupWrapperComp.prototype.onColumnMovingChanged = function () {\n    // this function adds or removes the moving css, based on if the col is moving.\n    // this is what makes the header go dark when it is been moved (gives impression to\n    // user that the column was picked up).\n    utils_1._.addOrRemoveCssClass(this.getGui(), 'ag-header-cell-moving', this.columnGroup.isMoving());\n  };\n\n  HeaderGroupWrapperComp.prototype.addAttributes = function () {\n    this.getGui().setAttribute(\"col-id\", this.columnGroup.getUniqueId());\n  };\n\n  HeaderGroupWrapperComp.prototype.appendHeaderGroupComp = function (displayName) {\n    var _this = this;\n\n    var params = {\n      displayName: displayName,\n      columnGroup: this.columnGroup,\n      setExpanded: function (expanded) {\n        _this.columnController.setColumnGroupOpened(_this.columnGroup.getOriginalColumnGroup(), expanded, \"gridInitializing\");\n      },\n      api: this.gridApi,\n      columnApi: this.columnApi,\n      context: this.gridOptionsWrapper.getContext()\n    };\n\n    if (!displayName) {\n      var columnGroup = this.columnGroup;\n      var leafCols = columnGroup.getLeafColumns(); // find the top most column group that represents the same columns. so if we are dragging a group, we also\n      // want to visually show the parent groups dragging for the same column set. for example imaging 5 levels\n      // of grouping, with each group only containing the next group, and the last group containing three columns,\n      // then when you move any group (even the lowest level group) you are in-fact moving all the groups, as all\n      // the groups represent the same column set.\n\n      while (columnGroup.getParent() && columnGroup.getParent().getLeafColumns().length === leafCols.length) {\n        columnGroup = columnGroup.getParent();\n      }\n\n      var colGroupDef = columnGroup.getColGroupDef();\n\n      if (colGroupDef) {\n        displayName = colGroupDef.headerName;\n      }\n\n      if (!displayName) {\n        displayName = leafCols ? this.columnController.getDisplayNameForColumn(leafCols[0], 'header', true) : '';\n      }\n    }\n\n    var callback = this.afterHeaderCompCreated.bind(this, displayName);\n    this.userComponentFactory.newHeaderGroupComponent(params).then(callback);\n  };\n\n  HeaderGroupWrapperComp.prototype.afterHeaderCompCreated = function (displayName, headerGroupComp) {\n    this.appendChild(headerGroupComp);\n    this.setupMove(headerGroupComp.getGui(), displayName);\n  };\n\n  HeaderGroupWrapperComp.prototype.addClasses = function () {\n    // having different classes below allows the style to not have a bottom border\n    // on the group header, if no group is specified\n    // columnGroup.getColGroupDef\n    if (this.columnGroup.isPadding()) {\n      this.addCssClass('ag-header-group-cell-no-group');\n    } else {\n      this.addCssClass('ag-header-group-cell-with-group');\n    }\n  };\n\n  HeaderGroupWrapperComp.prototype.setupMove = function (eHeaderGroup, displayName) {\n    var _this = this;\n\n    if (!eHeaderGroup) {\n      return;\n    }\n\n    if (this.isSuppressMoving()) {\n      return;\n    }\n\n    var allLeafColumns = this.columnGroup.getOriginalColumnGroup().getLeafColumns();\n\n    if (eHeaderGroup) {\n      var dragSource_1 = {\n        type: dragAndDropService_1.DragSourceType.HeaderCell,\n        eElement: eHeaderGroup,\n        dragItemName: displayName,\n        // we add in the original group leaf columns, so we move both visible and non-visible items\n        dragItemCallback: this.getDragItemForGroup.bind(this),\n        dragSourceDropTarget: this.dragSourceDropTarget,\n        dragStarted: function () {\n          return allLeafColumns.forEach(function (col) {\n            return col.setMoving(true, \"uiColumnDragged\");\n          });\n        },\n        dragStopped: function () {\n          return allLeafColumns.forEach(function (col) {\n            return col.setMoving(false, \"uiColumnDragged\");\n          });\n        }\n      };\n      this.dragAndDropService.addDragSource(dragSource_1, true);\n      this.addDestroyFunc(function () {\n        return _this.dragAndDropService.removeDragSource(dragSource_1);\n      });\n    }\n  }; // when moving the columns, we want to move all the columns (contained within the DragItem) in this group in one go,\n  // and in the order they are currently in the screen.\n\n\n  HeaderGroupWrapperComp.prototype.getDragItemForGroup = function () {\n    var allColumnsOriginalOrder = this.columnGroup.getOriginalColumnGroup().getLeafColumns(); // capture visible state, used when re-entering grid to dictate which columns should be visible\n\n    var visibleState = {};\n    allColumnsOriginalOrder.forEach(function (column) {\n      return visibleState[column.getId()] = column.isVisible();\n    });\n    var allColumnsCurrentOrder = [];\n    this.columnController.getAllDisplayedColumns().forEach(function (column) {\n      if (allColumnsOriginalOrder.indexOf(column) >= 0) {\n        allColumnsCurrentOrder.push(column);\n\n        utils_1._.removeFromArray(allColumnsOriginalOrder, column);\n      }\n    }); // we are left with non-visible columns, stick these in at the end\n\n    allColumnsOriginalOrder.forEach(function (column) {\n      return allColumnsCurrentOrder.push(column);\n    }); // create and return dragItem\n\n    return {\n      columns: allColumnsCurrentOrder,\n      visibleState: visibleState\n    };\n  };\n\n  HeaderGroupWrapperComp.prototype.isSuppressMoving = function () {\n    // if any child is fixed, then don't allow moving\n    var childSuppressesMoving = false;\n    this.columnGroup.getLeafColumns().forEach(function (column) {\n      if (column.getColDef().suppressMovable || column.getColDef().lockPosition) {\n        childSuppressesMoving = true;\n      }\n    });\n    var result = childSuppressesMoving || this.gridOptionsWrapper.isSuppressMovableColumns();\n    return result;\n  };\n\n  HeaderGroupWrapperComp.prototype.setupWidth = function () {\n    // we need to listen to changes in child columns, as they impact our width\n    this.addListenersToChildrenColumns(); // the children belonging to this group can change, so we need to add and remove listeners as they change\n\n    this.addDestroyableEventListener(this.columnGroup, columnGroup_1.ColumnGroup.EVENT_DISPLAYED_CHILDREN_CHANGED, this.onDisplayedChildrenChanged.bind(this));\n    this.onWidthChanged(); // the child listeners are not tied to this components life-cycle, as children can get added and removed\n    // to the group - hence they are on a different life-cycle. so we must make sure the existing children\n    // listeners are removed when we finally get destroyed\n\n    this.addDestroyFunc(this.destroyListenersOnChildrenColumns.bind(this));\n  };\n\n  HeaderGroupWrapperComp.prototype.onDisplayedChildrenChanged = function () {\n    this.addListenersToChildrenColumns();\n    this.onWidthChanged();\n  };\n\n  HeaderGroupWrapperComp.prototype.addListenersToChildrenColumns = function () {\n    var _this = this; // first destroy any old listeners\n\n\n    this.destroyListenersOnChildrenColumns(); // now add new listeners to the new set of children\n\n    var widthChangedListener = this.onWidthChanged.bind(this);\n    this.columnGroup.getLeafColumns().forEach(function (column) {\n      column.addEventListener(column_1.Column.EVENT_WIDTH_CHANGED, widthChangedListener);\n      column.addEventListener(column_1.Column.EVENT_VISIBLE_CHANGED, widthChangedListener);\n\n      _this.childColumnsDestroyFuncs.push(function () {\n        column.removeEventListener(column_1.Column.EVENT_WIDTH_CHANGED, widthChangedListener);\n        column.removeEventListener(column_1.Column.EVENT_VISIBLE_CHANGED, widthChangedListener);\n      });\n    });\n  };\n\n  HeaderGroupWrapperComp.prototype.destroyListenersOnChildrenColumns = function () {\n    this.childColumnsDestroyFuncs.forEach(function (func) {\n      return func();\n    });\n    this.childColumnsDestroyFuncs = [];\n  };\n\n  HeaderGroupWrapperComp.prototype.onWidthChanged = function () {\n    this.getGui().style.width = this.columnGroup.getActualWidth() + 'px';\n  };\n\n  HeaderGroupWrapperComp.prototype.setupResize = function () {\n    var _this = this;\n\n    this.eHeaderCellResize = this.getRefElement('agResize');\n\n    if (!this.columnGroup.isResizable()) {\n      utils_1._.removeFromParent(this.eHeaderCellResize);\n\n      return;\n    }\n\n    var finishedWithResizeFunc = this.horizontalResizeService.addResizeBar({\n      eResizeBar: this.eHeaderCellResize,\n      onResizeStart: this.onResizeStart.bind(this),\n      onResizing: this.onResizing.bind(this, false),\n      onResizeEnd: this.onResizing.bind(this, true)\n    });\n    this.addDestroyFunc(finishedWithResizeFunc);\n\n    if (!this.gridOptionsWrapper.isSuppressAutoSize()) {\n      this.eHeaderCellResize.addEventListener('dblclick', function (event) {\n        // get list of all the column keys we are responsible for\n        var keys = [];\n\n        _this.columnGroup.getDisplayedLeafColumns().forEach(function (column) {\n          // not all cols in the group may be participating with auto-resize\n          if (!column.getColDef().suppressAutoSize) {\n            keys.push(column.getColId());\n          }\n        });\n\n        if (keys.length > 0) {\n          _this.columnController.autoSizeColumns(keys, \"uiColumnResized\");\n        }\n      });\n    }\n  };\n\n  HeaderGroupWrapperComp.prototype.onResizeStart = function (shiftKey) {\n    var _this = this;\n\n    var leafCols = this.columnGroup.getDisplayedLeafColumns();\n    this.resizeCols = utils_1._.filter(leafCols, function (col) {\n      return col.isResizable();\n    });\n    this.resizeStartWidth = 0;\n    this.resizeCols.forEach(function (col) {\n      return _this.resizeStartWidth += col.getActualWidth();\n    });\n    this.resizeRatios = [];\n    this.resizeCols.forEach(function (col) {\n      return _this.resizeRatios.push(col.getActualWidth() / _this.resizeStartWidth);\n    });\n    var takeFromGroup = null;\n\n    if (shiftKey) {\n      takeFromGroup = this.columnController.getDisplayedGroupAfter(this.columnGroup);\n    }\n\n    if (takeFromGroup) {\n      var takeFromLeafCols = takeFromGroup.getDisplayedLeafColumns();\n      this.resizeTakeFromCols = utils_1._.filter(takeFromLeafCols, function (col) {\n        return col.isResizable();\n      });\n      this.resizeTakeFromStartWidth = 0;\n      this.resizeTakeFromCols.forEach(function (col) {\n        return _this.resizeTakeFromStartWidth += col.getActualWidth();\n      });\n      this.resizeTakeFromRatios = [];\n      this.resizeTakeFromCols.forEach(function (col) {\n        return _this.resizeTakeFromRatios.push(col.getActualWidth() / _this.resizeTakeFromStartWidth);\n      });\n    } else {\n      this.resizeTakeFromCols = null;\n      this.resizeTakeFromStartWidth = null;\n      this.resizeTakeFromRatios = null;\n    }\n\n    utils_1._.addCssClass(this.getGui(), 'ag-column-resizing');\n  };\n\n  HeaderGroupWrapperComp.prototype.onResizing = function (finished, resizeAmount) {\n    var resizeSets = [];\n    var resizeAmountNormalised = this.normaliseDragChange(resizeAmount);\n    resizeSets.push({\n      columns: this.resizeCols,\n      ratios: this.resizeRatios,\n      width: this.resizeStartWidth + resizeAmountNormalised\n    });\n\n    if (this.resizeTakeFromCols) {\n      resizeSets.push({\n        columns: this.resizeTakeFromCols,\n        ratios: this.resizeTakeFromRatios,\n        width: this.resizeTakeFromStartWidth - resizeAmountNormalised\n      });\n    }\n\n    this.columnController.resizeColumnSets(resizeSets, finished, 'uiColumnDragged');\n\n    if (finished) {\n      utils_1._.removeCssClass(this.getGui(), 'ag-column-resizing');\n    }\n  }; // optionally inverts the drag, depending on pinned and RTL\n  // note - this method is duplicated in RenderedHeaderCell - should refactor out?\n\n\n  HeaderGroupWrapperComp.prototype.normaliseDragChange = function (dragChange) {\n    var result = dragChange;\n\n    if (this.gridOptionsWrapper.isEnableRtl()) {\n      // for RTL, dragging left makes the col bigger, except when pinning left\n      if (this.pinned !== column_1.Column.PINNED_LEFT) {\n        result *= -1;\n      }\n    } else {\n      // for LTR (ie normal), dragging left makes the col smaller, except when pinning right\n      if (this.pinned === column_1.Column.PINNED_RIGHT) {\n        result *= -1;\n      }\n    }\n\n    return result;\n  };\n\n  HeaderGroupWrapperComp.TEMPLATE = '<div class=\"ag-header-group-cell\" role=\"presentation\">' + '<div ref=\"agResize\" class=\"ag-header-cell-resize\" role=\"presentation\"></div>' + '</div>';\n\n  __decorate([context_1.Autowired('gridOptionsWrapper'), __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)], HeaderGroupWrapperComp.prototype, \"gridOptionsWrapper\", void 0);\n\n  __decorate([context_1.Autowired('columnController'), __metadata(\"design:type\", columnController_1.ColumnController)], HeaderGroupWrapperComp.prototype, \"columnController\", void 0);\n\n  __decorate([context_1.Autowired('horizontalResizeService'), __metadata(\"design:type\", horizontalResizeService_1.HorizontalResizeService)], HeaderGroupWrapperComp.prototype, \"horizontalResizeService\", void 0);\n\n  __decorate([context_1.Autowired('dragAndDropService'), __metadata(\"design:type\", dragAndDropService_1.DragAndDropService)], HeaderGroupWrapperComp.prototype, \"dragAndDropService\", void 0);\n\n  __decorate([context_1.Autowired('userComponentFactory'), __metadata(\"design:type\", userComponentFactory_1.UserComponentFactory)], HeaderGroupWrapperComp.prototype, \"userComponentFactory\", void 0);\n\n  __decorate([context_1.Autowired('gridApi'), __metadata(\"design:type\", gridApi_1.GridApi)], HeaderGroupWrapperComp.prototype, \"gridApi\", void 0);\n\n  __decorate([context_1.Autowired('columnApi'), __metadata(\"design:type\", columnApi_1.ColumnApi)], HeaderGroupWrapperComp.prototype, \"columnApi\", void 0);\n\n  __decorate([context_1.Autowired('beans'), __metadata(\"design:type\", beans_1.Beans)], HeaderGroupWrapperComp.prototype, \"beans\", void 0);\n\n  __decorate([context_1.PostConstruct, __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", []), __metadata(\"design:returntype\", void 0)], HeaderGroupWrapperComp.prototype, \"postConstruct\", null);\n\n  return HeaderGroupWrapperComp;\n}(component_1.Component);\n\nexports.HeaderGroupWrapperComp = HeaderGroupWrapperComp;","map":{"version":3,"sources":["/Users/dirkmennecke77/Desktop/Lageplan/node_modules/ag-grid-community/dist/lib/headerRendering/headerGroup/headerGroupWrapperComp.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","k","v","metadata","exports","value","component_1","require","column_1","columnGroup_1","columnApi_1","columnController_1","gridOptionsWrapper_1","horizontalResizeService_1","context_1","cssClassApplier_1","dragAndDropService_1","setLeftFeature_1","gridApi_1","userComponentFactory_1","beans_1","hoverFeature_1","utils_1","HeaderGroupWrapperComp","_super","columnGroup","dragSourceDropTarget","pinned","_this","call","TEMPLATE","childColumnsDestroyFuncs","postConstruct","CssClassApplier","addHeaderClassesFromColDef","getComponentHolder","getGui","gridOptionsWrapper","displayName","columnController","getDisplayNameForColumnGroup","appendHeaderGroupComp","setupResize","addClasses","setupWidth","addAttributes","setupMovingCss","setupTooltip","addFeature","getContext","HoverFeature","getOriginalColumnGroup","getLeafColumns","setLeftFeature","SetLeftFeature","beans","init","addDestroyFunc","destroy","bind","originalColumnGroup","leafColumns","forEach","col","addDestroyableEventListener","Column","EVENT_MOVING_CHANGED","onColumnMovingChanged","getColumn","getColGroupDef","getTooltipText","colGroupDef","headerTooltip","tooltipText","isEnableBrowserTooltips","setAttribute","tooltipManager","registerTooltip","_","addOrRemoveCssClass","isMoving","getUniqueId","params","setExpanded","expanded","setColumnGroupOpened","api","gridApi","columnApi","context","leafCols","getParent","headerName","getDisplayNameForColumn","callback","afterHeaderCompCreated","userComponentFactory","newHeaderGroupComponent","then","headerGroupComp","appendChild","setupMove","isPadding","addCssClass","eHeaderGroup","isSuppressMoving","allLeafColumns","dragSource_1","type","DragSourceType","HeaderCell","eElement","dragItemName","dragItemCallback","getDragItemForGroup","dragStarted","setMoving","dragStopped","dragAndDropService","addDragSource","removeDragSource","allColumnsOriginalOrder","visibleState","column","getId","isVisible","allColumnsCurrentOrder","getAllDisplayedColumns","indexOf","push","removeFromArray","columns","childSuppressesMoving","getColDef","suppressMovable","lockPosition","result","isSuppressMovableColumns","addListenersToChildrenColumns","ColumnGroup","EVENT_DISPLAYED_CHILDREN_CHANGED","onDisplayedChildrenChanged","onWidthChanged","destroyListenersOnChildrenColumns","widthChangedListener","addEventListener","EVENT_WIDTH_CHANGED","EVENT_VISIBLE_CHANGED","removeEventListener","func","style","width","getActualWidth","eHeaderCellResize","getRefElement","isResizable","removeFromParent","finishedWithResizeFunc","horizontalResizeService","addResizeBar","eResizeBar","onResizeStart","onResizing","onResizeEnd","isSuppressAutoSize","event","keys","getDisplayedLeafColumns","suppressAutoSize","getColId","autoSizeColumns","shiftKey","resizeCols","filter","resizeStartWidth","resizeRatios","takeFromGroup","getDisplayedGroupAfter","takeFromLeafCols","resizeTakeFromCols","resizeTakeFromStartWidth","resizeTakeFromRatios","finished","resizeAmount","resizeSets","resizeAmountNormalised","normaliseDragChange","ratios","resizeColumnSets","removeCssClass","dragChange","isEnableRtl","PINNED_LEFT","PINNED_RIGHT","Autowired","GridOptionsWrapper","ColumnController","HorizontalResizeService","DragAndDropService","UserComponentFactory","GridApi","ColumnApi","Beans","PostConstruct","Function","Component"],"mappings":"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","sourcesContent":["/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.2.2\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar component_1 = require(\"../../widgets/component\");\nvar column_1 = require(\"../../entities/column\");\nvar columnGroup_1 = require(\"../../entities/columnGroup\");\nvar columnApi_1 = require(\"../../columnController/columnApi\");\nvar columnController_1 = require(\"../../columnController/columnController\");\nvar gridOptionsWrapper_1 = require(\"../../gridOptionsWrapper\");\nvar horizontalResizeService_1 = require(\"../horizontalResizeService\");\nvar context_1 = require(\"../../context/context\");\nvar cssClassApplier_1 = require(\"../cssClassApplier\");\nvar dragAndDropService_1 = require(\"../../dragAndDrop/dragAndDropService\");\nvar setLeftFeature_1 = require(\"../../rendering/features/setLeftFeature\");\nvar gridApi_1 = require(\"../../gridApi\");\nvar userComponentFactory_1 = require(\"../../components/framework/userComponentFactory\");\nvar beans_1 = require(\"../../rendering/beans\");\nvar hoverFeature_1 = require(\"../hoverFeature\");\nvar utils_1 = require(\"../../utils\");\nvar HeaderGroupWrapperComp = /** @class */ (function (_super) {\n    __extends(HeaderGroupWrapperComp, _super);\n    function HeaderGroupWrapperComp(columnGroup, dragSourceDropTarget, pinned) {\n        var _this = _super.call(this, HeaderGroupWrapperComp.TEMPLATE) || this;\n        // the children can change, we keep destroy functions related to listening to the children here\n        _this.childColumnsDestroyFuncs = [];\n        _this.columnGroup = columnGroup;\n        _this.dragSourceDropTarget = dragSourceDropTarget;\n        _this.pinned = pinned;\n        return _this;\n    }\n    HeaderGroupWrapperComp.prototype.postConstruct = function () {\n        cssClassApplier_1.CssClassApplier.addHeaderClassesFromColDef(this.getComponentHolder(), this.getGui(), this.gridOptionsWrapper, null, this.columnGroup);\n        var displayName = this.columnController.getDisplayNameForColumnGroup(this.columnGroup, 'header');\n        this.appendHeaderGroupComp(displayName);\n        this.setupResize();\n        this.addClasses();\n        this.setupWidth();\n        this.addAttributes();\n        this.setupMovingCss();\n        this.setupTooltip();\n        this.addFeature(this.getContext(), new hoverFeature_1.HoverFeature(this.columnGroup.getOriginalColumnGroup().getLeafColumns(), this.getGui()));\n        var setLeftFeature = new setLeftFeature_1.SetLeftFeature(this.columnGroup, this.getGui(), this.beans);\n        setLeftFeature.init();\n        this.addDestroyFunc(setLeftFeature.destroy.bind(setLeftFeature));\n    };\n    HeaderGroupWrapperComp.prototype.setupMovingCss = function () {\n        var _this = this;\n        var originalColumnGroup = this.columnGroup.getOriginalColumnGroup();\n        var leafColumns = originalColumnGroup.getLeafColumns();\n        leafColumns.forEach(function (col) {\n            _this.addDestroyableEventListener(col, column_1.Column.EVENT_MOVING_CHANGED, _this.onColumnMovingChanged.bind(_this));\n        });\n        this.onColumnMovingChanged();\n    };\n    HeaderGroupWrapperComp.prototype.getColumn = function () {\n        return this.columnGroup;\n    };\n    HeaderGroupWrapperComp.prototype.getComponentHolder = function () {\n        return this.columnGroup.getColGroupDef();\n    };\n    HeaderGroupWrapperComp.prototype.getTooltipText = function () {\n        var colGroupDef = this.getComponentHolder();\n        return colGroupDef && colGroupDef.headerTooltip;\n    };\n    HeaderGroupWrapperComp.prototype.setupTooltip = function () {\n        var tooltipText = this.getTooltipText();\n        if (tooltipText == null) {\n            return;\n        }\n        if (this.gridOptionsWrapper.isEnableBrowserTooltips()) {\n            this.getGui().setAttribute('title', tooltipText);\n        }\n        else {\n            this.beans.tooltipManager.registerTooltip(this);\n        }\n    };\n    HeaderGroupWrapperComp.prototype.onColumnMovingChanged = function () {\n        // this function adds or removes the moving css, based on if the col is moving.\n        // this is what makes the header go dark when it is been moved (gives impression to\n        // user that the column was picked up).\n        utils_1._.addOrRemoveCssClass(this.getGui(), 'ag-header-cell-moving', this.columnGroup.isMoving());\n    };\n    HeaderGroupWrapperComp.prototype.addAttributes = function () {\n        this.getGui().setAttribute(\"col-id\", this.columnGroup.getUniqueId());\n    };\n    HeaderGroupWrapperComp.prototype.appendHeaderGroupComp = function (displayName) {\n        var _this = this;\n        var params = {\n            displayName: displayName,\n            columnGroup: this.columnGroup,\n            setExpanded: function (expanded) {\n                _this.columnController.setColumnGroupOpened(_this.columnGroup.getOriginalColumnGroup(), expanded, \"gridInitializing\");\n            },\n            api: this.gridApi,\n            columnApi: this.columnApi,\n            context: this.gridOptionsWrapper.getContext()\n        };\n        if (!displayName) {\n            var columnGroup = this.columnGroup;\n            var leafCols = columnGroup.getLeafColumns();\n            // find the top most column group that represents the same columns. so if we are dragging a group, we also\n            // want to visually show the parent groups dragging for the same column set. for example imaging 5 levels\n            // of grouping, with each group only containing the next group, and the last group containing three columns,\n            // then when you move any group (even the lowest level group) you are in-fact moving all the groups, as all\n            // the groups represent the same column set.\n            while (columnGroup.getParent() && columnGroup.getParent().getLeafColumns().length === leafCols.length) {\n                columnGroup = columnGroup.getParent();\n            }\n            var colGroupDef = columnGroup.getColGroupDef();\n            if (colGroupDef) {\n                displayName = colGroupDef.headerName;\n            }\n            if (!displayName) {\n                displayName = leafCols ? this.columnController.getDisplayNameForColumn(leafCols[0], 'header', true) : '';\n            }\n        }\n        var callback = this.afterHeaderCompCreated.bind(this, displayName);\n        this.userComponentFactory.newHeaderGroupComponent(params).then(callback);\n    };\n    HeaderGroupWrapperComp.prototype.afterHeaderCompCreated = function (displayName, headerGroupComp) {\n        this.appendChild(headerGroupComp);\n        this.setupMove(headerGroupComp.getGui(), displayName);\n    };\n    HeaderGroupWrapperComp.prototype.addClasses = function () {\n        // having different classes below allows the style to not have a bottom border\n        // on the group header, if no group is specified\n        // columnGroup.getColGroupDef\n        if (this.columnGroup.isPadding()) {\n            this.addCssClass('ag-header-group-cell-no-group');\n        }\n        else {\n            this.addCssClass('ag-header-group-cell-with-group');\n        }\n    };\n    HeaderGroupWrapperComp.prototype.setupMove = function (eHeaderGroup, displayName) {\n        var _this = this;\n        if (!eHeaderGroup) {\n            return;\n        }\n        if (this.isSuppressMoving()) {\n            return;\n        }\n        var allLeafColumns = this.columnGroup.getOriginalColumnGroup().getLeafColumns();\n        if (eHeaderGroup) {\n            var dragSource_1 = {\n                type: dragAndDropService_1.DragSourceType.HeaderCell,\n                eElement: eHeaderGroup,\n                dragItemName: displayName,\n                // we add in the original group leaf columns, so we move both visible and non-visible items\n                dragItemCallback: this.getDragItemForGroup.bind(this),\n                dragSourceDropTarget: this.dragSourceDropTarget,\n                dragStarted: function () { return allLeafColumns.forEach(function (col) { return col.setMoving(true, \"uiColumnDragged\"); }); },\n                dragStopped: function () { return allLeafColumns.forEach(function (col) { return col.setMoving(false, \"uiColumnDragged\"); }); }\n            };\n            this.dragAndDropService.addDragSource(dragSource_1, true);\n            this.addDestroyFunc(function () { return _this.dragAndDropService.removeDragSource(dragSource_1); });\n        }\n    };\n    // when moving the columns, we want to move all the columns (contained within the DragItem) in this group in one go,\n    // and in the order they are currently in the screen.\n    HeaderGroupWrapperComp.prototype.getDragItemForGroup = function () {\n        var allColumnsOriginalOrder = this.columnGroup.getOriginalColumnGroup().getLeafColumns();\n        // capture visible state, used when re-entering grid to dictate which columns should be visible\n        var visibleState = {};\n        allColumnsOriginalOrder.forEach(function (column) { return visibleState[column.getId()] = column.isVisible(); });\n        var allColumnsCurrentOrder = [];\n        this.columnController.getAllDisplayedColumns().forEach(function (column) {\n            if (allColumnsOriginalOrder.indexOf(column) >= 0) {\n                allColumnsCurrentOrder.push(column);\n                utils_1._.removeFromArray(allColumnsOriginalOrder, column);\n            }\n        });\n        // we are left with non-visible columns, stick these in at the end\n        allColumnsOriginalOrder.forEach(function (column) { return allColumnsCurrentOrder.push(column); });\n        // create and return dragItem\n        return {\n            columns: allColumnsCurrentOrder,\n            visibleState: visibleState\n        };\n    };\n    HeaderGroupWrapperComp.prototype.isSuppressMoving = function () {\n        // if any child is fixed, then don't allow moving\n        var childSuppressesMoving = false;\n        this.columnGroup.getLeafColumns().forEach(function (column) {\n            if (column.getColDef().suppressMovable || column.getColDef().lockPosition) {\n                childSuppressesMoving = true;\n            }\n        });\n        var result = childSuppressesMoving || this.gridOptionsWrapper.isSuppressMovableColumns();\n        return result;\n    };\n    HeaderGroupWrapperComp.prototype.setupWidth = function () {\n        // we need to listen to changes in child columns, as they impact our width\n        this.addListenersToChildrenColumns();\n        // the children belonging to this group can change, so we need to add and remove listeners as they change\n        this.addDestroyableEventListener(this.columnGroup, columnGroup_1.ColumnGroup.EVENT_DISPLAYED_CHILDREN_CHANGED, this.onDisplayedChildrenChanged.bind(this));\n        this.onWidthChanged();\n        // the child listeners are not tied to this components life-cycle, as children can get added and removed\n        // to the group - hence they are on a different life-cycle. so we must make sure the existing children\n        // listeners are removed when we finally get destroyed\n        this.addDestroyFunc(this.destroyListenersOnChildrenColumns.bind(this));\n    };\n    HeaderGroupWrapperComp.prototype.onDisplayedChildrenChanged = function () {\n        this.addListenersToChildrenColumns();\n        this.onWidthChanged();\n    };\n    HeaderGroupWrapperComp.prototype.addListenersToChildrenColumns = function () {\n        var _this = this;\n        // first destroy any old listeners\n        this.destroyListenersOnChildrenColumns();\n        // now add new listeners to the new set of children\n        var widthChangedListener = this.onWidthChanged.bind(this);\n        this.columnGroup.getLeafColumns().forEach(function (column) {\n            column.addEventListener(column_1.Column.EVENT_WIDTH_CHANGED, widthChangedListener);\n            column.addEventListener(column_1.Column.EVENT_VISIBLE_CHANGED, widthChangedListener);\n            _this.childColumnsDestroyFuncs.push(function () {\n                column.removeEventListener(column_1.Column.EVENT_WIDTH_CHANGED, widthChangedListener);\n                column.removeEventListener(column_1.Column.EVENT_VISIBLE_CHANGED, widthChangedListener);\n            });\n        });\n    };\n    HeaderGroupWrapperComp.prototype.destroyListenersOnChildrenColumns = function () {\n        this.childColumnsDestroyFuncs.forEach(function (func) { return func(); });\n        this.childColumnsDestroyFuncs = [];\n    };\n    HeaderGroupWrapperComp.prototype.onWidthChanged = function () {\n        this.getGui().style.width = this.columnGroup.getActualWidth() + 'px';\n    };\n    HeaderGroupWrapperComp.prototype.setupResize = function () {\n        var _this = this;\n        this.eHeaderCellResize = this.getRefElement('agResize');\n        if (!this.columnGroup.isResizable()) {\n            utils_1._.removeFromParent(this.eHeaderCellResize);\n            return;\n        }\n        var finishedWithResizeFunc = this.horizontalResizeService.addResizeBar({\n            eResizeBar: this.eHeaderCellResize,\n            onResizeStart: this.onResizeStart.bind(this),\n            onResizing: this.onResizing.bind(this, false),\n            onResizeEnd: this.onResizing.bind(this, true)\n        });\n        this.addDestroyFunc(finishedWithResizeFunc);\n        if (!this.gridOptionsWrapper.isSuppressAutoSize()) {\n            this.eHeaderCellResize.addEventListener('dblclick', function (event) {\n                // get list of all the column keys we are responsible for\n                var keys = [];\n                _this.columnGroup.getDisplayedLeafColumns().forEach(function (column) {\n                    // not all cols in the group may be participating with auto-resize\n                    if (!column.getColDef().suppressAutoSize) {\n                        keys.push(column.getColId());\n                    }\n                });\n                if (keys.length > 0) {\n                    _this.columnController.autoSizeColumns(keys, \"uiColumnResized\");\n                }\n            });\n        }\n    };\n    HeaderGroupWrapperComp.prototype.onResizeStart = function (shiftKey) {\n        var _this = this;\n        var leafCols = this.columnGroup.getDisplayedLeafColumns();\n        this.resizeCols = utils_1._.filter(leafCols, function (col) { return col.isResizable(); });\n        this.resizeStartWidth = 0;\n        this.resizeCols.forEach(function (col) { return _this.resizeStartWidth += col.getActualWidth(); });\n        this.resizeRatios = [];\n        this.resizeCols.forEach(function (col) { return _this.resizeRatios.push(col.getActualWidth() / _this.resizeStartWidth); });\n        var takeFromGroup = null;\n        if (shiftKey) {\n            takeFromGroup = this.columnController.getDisplayedGroupAfter(this.columnGroup);\n        }\n        if (takeFromGroup) {\n            var takeFromLeafCols = takeFromGroup.getDisplayedLeafColumns();\n            this.resizeTakeFromCols = utils_1._.filter(takeFromLeafCols, function (col) { return col.isResizable(); });\n            this.resizeTakeFromStartWidth = 0;\n            this.resizeTakeFromCols.forEach(function (col) { return _this.resizeTakeFromStartWidth += col.getActualWidth(); });\n            this.resizeTakeFromRatios = [];\n            this.resizeTakeFromCols.forEach(function (col) { return _this.resizeTakeFromRatios.push(col.getActualWidth() / _this.resizeTakeFromStartWidth); });\n        }\n        else {\n            this.resizeTakeFromCols = null;\n            this.resizeTakeFromStartWidth = null;\n            this.resizeTakeFromRatios = null;\n        }\n        utils_1._.addCssClass(this.getGui(), 'ag-column-resizing');\n    };\n    HeaderGroupWrapperComp.prototype.onResizing = function (finished, resizeAmount) {\n        var resizeSets = [];\n        var resizeAmountNormalised = this.normaliseDragChange(resizeAmount);\n        resizeSets.push({\n            columns: this.resizeCols,\n            ratios: this.resizeRatios,\n            width: this.resizeStartWidth + resizeAmountNormalised\n        });\n        if (this.resizeTakeFromCols) {\n            resizeSets.push({\n                columns: this.resizeTakeFromCols,\n                ratios: this.resizeTakeFromRatios,\n                width: this.resizeTakeFromStartWidth - resizeAmountNormalised\n            });\n        }\n        this.columnController.resizeColumnSets(resizeSets, finished, 'uiColumnDragged');\n        if (finished) {\n            utils_1._.removeCssClass(this.getGui(), 'ag-column-resizing');\n        }\n    };\n    // optionally inverts the drag, depending on pinned and RTL\n    // note - this method is duplicated in RenderedHeaderCell - should refactor out?\n    HeaderGroupWrapperComp.prototype.normaliseDragChange = function (dragChange) {\n        var result = dragChange;\n        if (this.gridOptionsWrapper.isEnableRtl()) {\n            // for RTL, dragging left makes the col bigger, except when pinning left\n            if (this.pinned !== column_1.Column.PINNED_LEFT) {\n                result *= -1;\n            }\n        }\n        else {\n            // for LTR (ie normal), dragging left makes the col smaller, except when pinning right\n            if (this.pinned === column_1.Column.PINNED_RIGHT) {\n                result *= -1;\n            }\n        }\n        return result;\n    };\n    HeaderGroupWrapperComp.TEMPLATE = '<div class=\"ag-header-group-cell\" role=\"presentation\">' +\n        '<div ref=\"agResize\" class=\"ag-header-cell-resize\" role=\"presentation\"></div>' +\n        '</div>';\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], HeaderGroupWrapperComp.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_1.Autowired('columnController'),\n        __metadata(\"design:type\", columnController_1.ColumnController)\n    ], HeaderGroupWrapperComp.prototype, \"columnController\", void 0);\n    __decorate([\n        context_1.Autowired('horizontalResizeService'),\n        __metadata(\"design:type\", horizontalResizeService_1.HorizontalResizeService)\n    ], HeaderGroupWrapperComp.prototype, \"horizontalResizeService\", void 0);\n    __decorate([\n        context_1.Autowired('dragAndDropService'),\n        __metadata(\"design:type\", dragAndDropService_1.DragAndDropService)\n    ], HeaderGroupWrapperComp.prototype, \"dragAndDropService\", void 0);\n    __decorate([\n        context_1.Autowired('userComponentFactory'),\n        __metadata(\"design:type\", userComponentFactory_1.UserComponentFactory)\n    ], HeaderGroupWrapperComp.prototype, \"userComponentFactory\", void 0);\n    __decorate([\n        context_1.Autowired('gridApi'),\n        __metadata(\"design:type\", gridApi_1.GridApi)\n    ], HeaderGroupWrapperComp.prototype, \"gridApi\", void 0);\n    __decorate([\n        context_1.Autowired('columnApi'),\n        __metadata(\"design:type\", columnApi_1.ColumnApi)\n    ], HeaderGroupWrapperComp.prototype, \"columnApi\", void 0);\n    __decorate([\n        context_1.Autowired('beans'),\n        __metadata(\"design:type\", beans_1.Beans)\n    ], HeaderGroupWrapperComp.prototype, \"beans\", void 0);\n    __decorate([\n        context_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], HeaderGroupWrapperComp.prototype, \"postConstruct\", null);\n    return HeaderGroupWrapperComp;\n}(component_1.Component));\nexports.HeaderGroupWrapperComp = HeaderGroupWrapperComp;\n"]},"metadata":{},"sourceType":"script"}