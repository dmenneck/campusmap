{"ast":null,"code":"/**\n * @module ol/format/filter/NotEqualTo\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n/**\n * @classdesc\n * Represents a `<PropertyIsNotEqualTo>` comparison operator.\n * @api\n */\n\nvar NotEqualTo =\n/*@__PURE__*/\nfunction (ComparisonBinary) {\n  function NotEqualTo(propertyName, expression, opt_matchCase) {\n    ComparisonBinary.call(this, 'PropertyIsNotEqualTo', propertyName, expression, opt_matchCase);\n  }\n\n  if (ComparisonBinary) NotEqualTo.__proto__ = ComparisonBinary;\n  NotEqualTo.prototype = Object.create(ComparisonBinary && ComparisonBinary.prototype);\n  NotEqualTo.prototype.constructor = NotEqualTo;\n  return NotEqualTo;\n}(ComparisonBinary);\n\nexport default NotEqualTo;","map":{"version":3,"sources":["../../../../src/ol/format/filter/NotEqualTo.js"],"names":["super"],"mappings":"AAAA;;;AAGA,OAAO,gBAAP,MAA6B,uBAA7B;;;;;;;AAOA,IAAM,UAAU;AAAyB;AAAA,UAAA,gBAAA,EAAA;AAOvC,WAAA,UAAA,CAAY,YAAZ,EAA0B,UAA1B,EAAsC,aAAtC,EAAqD;AACnDA,IAAAA,gBAAAA,CAAAA,IAAAA,CAAK,IAALA,EAAM,sBAANA,EAA8B,YAA9BA,EAA4C,UAA5CA,EAAwD,aAAxDA;;;;;AACD,EAAA,UAAA,CAAA,SAAA,CAAA,WAAA,GAAA,UAAA;;CATsC,CAAhB,gBAAgB,CAAzC;;AAaA,eAAe,UAAf","sourcesContent":["/**\n * @module ol/format/filter/NotEqualTo\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNotEqualTo>` comparison operator.\n * @api\n */\nclass NotEqualTo extends ComparisonBinary {\n\n  /**\n   * @param {!string} propertyName Name of the context property to compare.\n   * @param {!(string|number)} expression The value to compare.\n   * @param {boolean=} opt_matchCase Case-sensitive?\n   */\n  constructor(propertyName, expression, opt_matchCase) {\n    super('PropertyIsNotEqualTo', propertyName, expression, opt_matchCase);\n  }\n\n}\n\nexport default NotEqualTo;\n"]},"metadata":{},"sourceType":"module"}