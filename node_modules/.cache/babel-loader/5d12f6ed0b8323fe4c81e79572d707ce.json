{"ast":null,"code":"/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.2.2\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar gridOptionsWrapper_1 = require(\"../gridOptionsWrapper\");\n\nvar context_1 = require(\"../context/context\");\n\nvar dragAndDropService_1 = require(\"../dragAndDrop/dragAndDropService\");\n\nvar columnController_1 = require(\"../columnController/columnController\");\n\nvar eventService_1 = require(\"../eventService\");\n\nvar events_1 = require(\"../events\");\n\nvar headerRowComp_1 = require(\"./headerRowComp\");\n\nvar bodyDropTarget_1 = require(\"./bodyDropTarget\");\n\nvar column_1 = require(\"../entities/column\");\n\nvar scrollVisibleService_1 = require(\"../gridPanel/scrollVisibleService\");\n\nvar utils_1 = require(\"../utils\");\n\nvar HeaderContainer =\n/** @class */\nfunction () {\n  function HeaderContainer(eContainer, eViewport, pinned) {\n    this.headerRowComps = [];\n    this.eContainer = eContainer;\n    this.pinned = pinned;\n    this.eViewport = eViewport;\n  }\n\n  HeaderContainer.prototype.registerGridComp = function (gridPanel) {\n    this.setupDragAndDrop(gridPanel);\n  };\n\n  HeaderContainer.prototype.forEachHeaderElement = function (callback) {\n    this.headerRowComps.forEach(function (headerRowComp) {\n      return headerRowComp.forEachHeaderElement(callback);\n    });\n  };\n\n  HeaderContainer.prototype.init = function () {\n    this.scrollWidth = this.gridOptionsWrapper.getScrollbarWidth(); // if value changes, then if not pivoting, we at least need to change the label eg from sum() to avg(),\n    // if pivoting, then the columns have changed\n\n    this.eventService.addEventListener(events_1.Events.EVENT_COLUMN_VALUE_CHANGED, this.onColumnValueChanged.bind(this));\n    this.eventService.addEventListener(events_1.Events.EVENT_COLUMN_ROW_GROUP_CHANGED, this.onColumnRowGroupChanged.bind(this));\n    this.eventService.addEventListener(events_1.Events.EVENT_GRID_COLUMNS_CHANGED, this.onGridColumnsChanged.bind(this));\n    this.eventService.addEventListener(events_1.Events.EVENT_SCROLL_VISIBILITY_CHANGED, this.onScrollVisibilityChanged.bind(this));\n    this.eventService.addEventListener(events_1.Events.EVENT_COLUMN_RESIZED, this.onColumnResized.bind(this));\n    this.eventService.addEventListener(events_1.Events.EVENT_DISPLAYED_COLUMNS_CHANGED, this.onDisplayedColumnsChanged.bind(this));\n  }; // if row group changes, that means we may need to add aggFuncs to the column headers,\n  // if the grid goes from no aggregation (ie no grouping) to grouping\n\n\n  HeaderContainer.prototype.onColumnRowGroupChanged = function () {\n    this.onGridColumnsChanged();\n  }; // if the agg func of a column changes, then we may need to update the agg func in columns header\n\n\n  HeaderContainer.prototype.onColumnValueChanged = function () {\n    this.onGridColumnsChanged();\n  };\n\n  HeaderContainer.prototype.onColumnResized = function () {\n    this.setWidthOfPinnedContainer();\n  };\n\n  HeaderContainer.prototype.onDisplayedColumnsChanged = function () {\n    this.setWidthOfPinnedContainer();\n  };\n\n  HeaderContainer.prototype.onScrollVisibilityChanged = function () {\n    this.setWidthOfPinnedContainer();\n  };\n\n  HeaderContainer.prototype.setWidthOfPinnedContainer = function () {\n    var pinningLeft = this.pinned === column_1.Column.PINNED_LEFT;\n    var pinningRight = this.pinned === column_1.Column.PINNED_RIGHT;\n    var controller = this.columnController;\n    var isRtl = this.gridOptionsWrapper.isEnableRtl();\n\n    if (pinningLeft || pinningRight) {\n      // size to fit all columns\n      var width = controller[pinningLeft ? 'getPinnedLeftContainerWidth' : 'getPinnedRightContainerWidth'](); // if there is a scroll showing (and taking up space, so Windows, and not iOS)\n      // in the body, then we add extra space to keep header aligned with the body,\n      // as body width fits the cols and the scrollbar\n\n      var addPaddingForScrollbar = this.scrollVisibleService.isVerticalScrollShowing() && (isRtl && pinningLeft || !isRtl && pinningRight);\n\n      if (addPaddingForScrollbar) {\n        width += this.scrollWidth;\n      }\n\n      utils_1._.setFixedWidth(this.eContainer, width);\n    }\n  };\n\n  HeaderContainer.prototype.destroy = function () {\n    this.removeHeaderRowComps();\n  };\n\n  HeaderContainer.prototype.getRowComps = function () {\n    return this.headerRowComps;\n  }; // grid cols have changed - this also means the number of rows in the header can have\n  // changed. so we remove all the old rows and insert new ones for a complete refresh\n\n\n  HeaderContainer.prototype.onGridColumnsChanged = function () {\n    this.removeAndCreateAllRowComps();\n  };\n\n  HeaderContainer.prototype.removeAndCreateAllRowComps = function () {\n    this.removeHeaderRowComps();\n    this.createHeaderRowComps();\n  }; // we expose this for gridOptions.api.refreshHeader() to call\n\n\n  HeaderContainer.prototype.refresh = function () {\n    this.removeAndCreateAllRowComps();\n  };\n\n  HeaderContainer.prototype.setupDragAndDrop = function (gridComp) {\n    var dropContainer = this.eViewport ? this.eViewport : this.eContainer;\n    var bodyDropTarget = new bodyDropTarget_1.BodyDropTarget(this.pinned, dropContainer);\n    this.context.wireBean(bodyDropTarget);\n    bodyDropTarget.registerGridComp(gridComp);\n  };\n\n  HeaderContainer.prototype.removeHeaderRowComps = function () {\n    this.headerRowComps.forEach(function (headerRowComp) {\n      headerRowComp.destroy();\n    });\n    this.headerRowComps.length = 0;\n\n    utils_1._.clearElement(this.eContainer);\n  };\n\n  HeaderContainer.prototype.createHeaderRowComps = function () {\n    // if we are displaying header groups, then we have many rows here.\n    // go through each row of the header, one by one.\n    var rowCount = this.columnController.getHeaderRowCount();\n\n    for (var dept = 0; dept < rowCount; dept++) {\n      var groupRow = dept !== rowCount - 1;\n      var type = groupRow ? headerRowComp_1.HeaderRowType.COLUMN_GROUP : headerRowComp_1.HeaderRowType.COLUMN;\n      var headerRowComp = new headerRowComp_1.HeaderRowComp(dept, type, this.pinned, this.dropTarget);\n      this.context.wireBean(headerRowComp);\n      this.headerRowComps.push(headerRowComp);\n      headerRowComp.getGui().setAttribute('aria-rowindex', this.headerRowComps.length.toString());\n      this.eContainer.appendChild(headerRowComp.getGui());\n    }\n\n    var includeFloatingFilterRow = this.gridOptionsWrapper.isFloatingFilter() && !this.columnController.isPivotMode();\n\n    if (includeFloatingFilterRow) {\n      var headerRowComp = new headerRowComp_1.HeaderRowComp(rowCount, headerRowComp_1.HeaderRowType.FLOATING_FILTER, this.pinned, this.dropTarget);\n      this.context.wireBean(headerRowComp);\n      this.headerRowComps.push(headerRowComp);\n      headerRowComp.getGui().setAttribute('aria-rowindex', this.headerRowComps.length.toString());\n      this.eContainer.appendChild(headerRowComp.getGui());\n    }\n  };\n\n  __decorate([context_1.Autowired('gridOptionsWrapper'), __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)], HeaderContainer.prototype, \"gridOptionsWrapper\", void 0);\n\n  __decorate([context_1.Autowired('context'), __metadata(\"design:type\", context_1.Context)], HeaderContainer.prototype, \"context\", void 0);\n\n  __decorate([context_1.Autowired('$scope'), __metadata(\"design:type\", Object)], HeaderContainer.prototype, \"$scope\", void 0);\n\n  __decorate([context_1.Autowired('dragAndDropService'), __metadata(\"design:type\", dragAndDropService_1.DragAndDropService)], HeaderContainer.prototype, \"dragAndDropService\", void 0);\n\n  __decorate([context_1.Autowired('columnController'), __metadata(\"design:type\", columnController_1.ColumnController)], HeaderContainer.prototype, \"columnController\", void 0);\n\n  __decorate([context_1.Autowired('eventService'), __metadata(\"design:type\", eventService_1.EventService)], HeaderContainer.prototype, \"eventService\", void 0);\n\n  __decorate([context_1.Autowired('scrollVisibleService'), __metadata(\"design:type\", scrollVisibleService_1.ScrollVisibleService)], HeaderContainer.prototype, \"scrollVisibleService\", void 0);\n\n  __decorate([context_1.PostConstruct, __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", []), __metadata(\"design:returntype\", void 0)], HeaderContainer.prototype, \"init\", null);\n\n  return HeaderContainer;\n}();\n\nexports.HeaderContainer = HeaderContainer;","map":{"version":3,"sources":["/Users/dirkmennecke77/Desktop/Lageplan/node_modules/ag-grid-community/dist/lib/headerRendering/headerContainer.js"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__metadata","k","v","metadata","exports","value","gridOptionsWrapper_1","require","context_1","dragAndDropService_1","columnController_1","eventService_1","events_1","headerRowComp_1","bodyDropTarget_1","column_1","scrollVisibleService_1","utils_1","HeaderContainer","eContainer","eViewport","pinned","headerRowComps","prototype","registerGridComp","gridPanel","setupDragAndDrop","forEachHeaderElement","callback","forEach","headerRowComp","init","scrollWidth","gridOptionsWrapper","getScrollbarWidth","eventService","addEventListener","Events","EVENT_COLUMN_VALUE_CHANGED","onColumnValueChanged","bind","EVENT_COLUMN_ROW_GROUP_CHANGED","onColumnRowGroupChanged","EVENT_GRID_COLUMNS_CHANGED","onGridColumnsChanged","EVENT_SCROLL_VISIBILITY_CHANGED","onScrollVisibilityChanged","EVENT_COLUMN_RESIZED","onColumnResized","EVENT_DISPLAYED_COLUMNS_CHANGED","onDisplayedColumnsChanged","setWidthOfPinnedContainer","pinningLeft","Column","PINNED_LEFT","pinningRight","PINNED_RIGHT","controller","columnController","isRtl","isEnableRtl","width","addPaddingForScrollbar","scrollVisibleService","isVerticalScrollShowing","_","setFixedWidth","destroy","removeHeaderRowComps","getRowComps","removeAndCreateAllRowComps","createHeaderRowComps","refresh","gridComp","dropContainer","bodyDropTarget","BodyDropTarget","context","wireBean","clearElement","rowCount","getHeaderRowCount","dept","groupRow","type","HeaderRowType","COLUMN_GROUP","COLUMN","HeaderRowComp","dropTarget","push","getGui","setAttribute","toString","appendChild","includeFloatingFilterRow","isFloatingFilter","isPivotMode","FLOATING_FILTER","Autowired","GridOptionsWrapper","Context","DragAndDropService","ColumnController","EventService","ScrollVisibleService","PostConstruct","Function"],"mappings":"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","sourcesContent":["/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.2.2\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar gridOptionsWrapper_1 = require(\"../gridOptionsWrapper\");\nvar context_1 = require(\"../context/context\");\nvar dragAndDropService_1 = require(\"../dragAndDrop/dragAndDropService\");\nvar columnController_1 = require(\"../columnController/columnController\");\nvar eventService_1 = require(\"../eventService\");\nvar events_1 = require(\"../events\");\nvar headerRowComp_1 = require(\"./headerRowComp\");\nvar bodyDropTarget_1 = require(\"./bodyDropTarget\");\nvar column_1 = require(\"../entities/column\");\nvar scrollVisibleService_1 = require(\"../gridPanel/scrollVisibleService\");\nvar utils_1 = require(\"../utils\");\nvar HeaderContainer = /** @class */ (function () {\n    function HeaderContainer(eContainer, eViewport, pinned) {\n        this.headerRowComps = [];\n        this.eContainer = eContainer;\n        this.pinned = pinned;\n        this.eViewport = eViewport;\n    }\n    HeaderContainer.prototype.registerGridComp = function (gridPanel) {\n        this.setupDragAndDrop(gridPanel);\n    };\n    HeaderContainer.prototype.forEachHeaderElement = function (callback) {\n        this.headerRowComps.forEach(function (headerRowComp) { return headerRowComp.forEachHeaderElement(callback); });\n    };\n    HeaderContainer.prototype.init = function () {\n        this.scrollWidth = this.gridOptionsWrapper.getScrollbarWidth();\n        // if value changes, then if not pivoting, we at least need to change the label eg from sum() to avg(),\n        // if pivoting, then the columns have changed\n        this.eventService.addEventListener(events_1.Events.EVENT_COLUMN_VALUE_CHANGED, this.onColumnValueChanged.bind(this));\n        this.eventService.addEventListener(events_1.Events.EVENT_COLUMN_ROW_GROUP_CHANGED, this.onColumnRowGroupChanged.bind(this));\n        this.eventService.addEventListener(events_1.Events.EVENT_GRID_COLUMNS_CHANGED, this.onGridColumnsChanged.bind(this));\n        this.eventService.addEventListener(events_1.Events.EVENT_SCROLL_VISIBILITY_CHANGED, this.onScrollVisibilityChanged.bind(this));\n        this.eventService.addEventListener(events_1.Events.EVENT_COLUMN_RESIZED, this.onColumnResized.bind(this));\n        this.eventService.addEventListener(events_1.Events.EVENT_DISPLAYED_COLUMNS_CHANGED, this.onDisplayedColumnsChanged.bind(this));\n    };\n    // if row group changes, that means we may need to add aggFuncs to the column headers,\n    // if the grid goes from no aggregation (ie no grouping) to grouping\n    HeaderContainer.prototype.onColumnRowGroupChanged = function () {\n        this.onGridColumnsChanged();\n    };\n    // if the agg func of a column changes, then we may need to update the agg func in columns header\n    HeaderContainer.prototype.onColumnValueChanged = function () {\n        this.onGridColumnsChanged();\n    };\n    HeaderContainer.prototype.onColumnResized = function () {\n        this.setWidthOfPinnedContainer();\n    };\n    HeaderContainer.prototype.onDisplayedColumnsChanged = function () {\n        this.setWidthOfPinnedContainer();\n    };\n    HeaderContainer.prototype.onScrollVisibilityChanged = function () {\n        this.setWidthOfPinnedContainer();\n    };\n    HeaderContainer.prototype.setWidthOfPinnedContainer = function () {\n        var pinningLeft = this.pinned === column_1.Column.PINNED_LEFT;\n        var pinningRight = this.pinned === column_1.Column.PINNED_RIGHT;\n        var controller = this.columnController;\n        var isRtl = this.gridOptionsWrapper.isEnableRtl();\n        if (pinningLeft || pinningRight) {\n            // size to fit all columns\n            var width = controller[pinningLeft ? 'getPinnedLeftContainerWidth' : 'getPinnedRightContainerWidth']();\n            // if there is a scroll showing (and taking up space, so Windows, and not iOS)\n            // in the body, then we add extra space to keep header aligned with the body,\n            // as body width fits the cols and the scrollbar\n            var addPaddingForScrollbar = this.scrollVisibleService.isVerticalScrollShowing() && ((isRtl && pinningLeft) || (!isRtl && pinningRight));\n            if (addPaddingForScrollbar) {\n                width += this.scrollWidth;\n            }\n            utils_1._.setFixedWidth(this.eContainer, width);\n        }\n    };\n    HeaderContainer.prototype.destroy = function () {\n        this.removeHeaderRowComps();\n    };\n    HeaderContainer.prototype.getRowComps = function () {\n        return this.headerRowComps;\n    };\n    // grid cols have changed - this also means the number of rows in the header can have\n    // changed. so we remove all the old rows and insert new ones for a complete refresh\n    HeaderContainer.prototype.onGridColumnsChanged = function () {\n        this.removeAndCreateAllRowComps();\n    };\n    HeaderContainer.prototype.removeAndCreateAllRowComps = function () {\n        this.removeHeaderRowComps();\n        this.createHeaderRowComps();\n    };\n    // we expose this for gridOptions.api.refreshHeader() to call\n    HeaderContainer.prototype.refresh = function () {\n        this.removeAndCreateAllRowComps();\n    };\n    HeaderContainer.prototype.setupDragAndDrop = function (gridComp) {\n        var dropContainer = this.eViewport ? this.eViewport : this.eContainer;\n        var bodyDropTarget = new bodyDropTarget_1.BodyDropTarget(this.pinned, dropContainer);\n        this.context.wireBean(bodyDropTarget);\n        bodyDropTarget.registerGridComp(gridComp);\n    };\n    HeaderContainer.prototype.removeHeaderRowComps = function () {\n        this.headerRowComps.forEach(function (headerRowComp) {\n            headerRowComp.destroy();\n        });\n        this.headerRowComps.length = 0;\n        utils_1._.clearElement(this.eContainer);\n    };\n    HeaderContainer.prototype.createHeaderRowComps = function () {\n        // if we are displaying header groups, then we have many rows here.\n        // go through each row of the header, one by one.\n        var rowCount = this.columnController.getHeaderRowCount();\n        for (var dept = 0; dept < rowCount; dept++) {\n            var groupRow = dept !== (rowCount - 1);\n            var type = groupRow ? headerRowComp_1.HeaderRowType.COLUMN_GROUP : headerRowComp_1.HeaderRowType.COLUMN;\n            var headerRowComp = new headerRowComp_1.HeaderRowComp(dept, type, this.pinned, this.dropTarget);\n            this.context.wireBean(headerRowComp);\n            this.headerRowComps.push(headerRowComp);\n            headerRowComp.getGui().setAttribute('aria-rowindex', this.headerRowComps.length.toString());\n            this.eContainer.appendChild(headerRowComp.getGui());\n        }\n        var includeFloatingFilterRow = this.gridOptionsWrapper.isFloatingFilter() && !this.columnController.isPivotMode();\n        if (includeFloatingFilterRow) {\n            var headerRowComp = new headerRowComp_1.HeaderRowComp(rowCount, headerRowComp_1.HeaderRowType.FLOATING_FILTER, this.pinned, this.dropTarget);\n            this.context.wireBean(headerRowComp);\n            this.headerRowComps.push(headerRowComp);\n            headerRowComp.getGui().setAttribute('aria-rowindex', this.headerRowComps.length.toString());\n            this.eContainer.appendChild(headerRowComp.getGui());\n        }\n    };\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], HeaderContainer.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_1.Autowired('context'),\n        __metadata(\"design:type\", context_1.Context)\n    ], HeaderContainer.prototype, \"context\", void 0);\n    __decorate([\n        context_1.Autowired('$scope'),\n        __metadata(\"design:type\", Object)\n    ], HeaderContainer.prototype, \"$scope\", void 0);\n    __decorate([\n        context_1.Autowired('dragAndDropService'),\n        __metadata(\"design:type\", dragAndDropService_1.DragAndDropService)\n    ], HeaderContainer.prototype, \"dragAndDropService\", void 0);\n    __decorate([\n        context_1.Autowired('columnController'),\n        __metadata(\"design:type\", columnController_1.ColumnController)\n    ], HeaderContainer.prototype, \"columnController\", void 0);\n    __decorate([\n        context_1.Autowired('eventService'),\n        __metadata(\"design:type\", eventService_1.EventService)\n    ], HeaderContainer.prototype, \"eventService\", void 0);\n    __decorate([\n        context_1.Autowired('scrollVisibleService'),\n        __metadata(\"design:type\", scrollVisibleService_1.ScrollVisibleService)\n    ], HeaderContainer.prototype, \"scrollVisibleService\", void 0);\n    __decorate([\n        context_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], HeaderContainer.prototype, \"init\", null);\n    return HeaderContainer;\n}());\nexports.HeaderContainer = HeaderContainer;\n"]},"metadata":{},"sourceType":"script"}