{"ast":null,"code":"/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.2.2\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar utils_1 = require(\"../utils\");\n\nvar gridOptionsWrapper_1 = require(\"../gridOptionsWrapper\");\n\nvar popupService_1 = require(\"../widgets/popupService\");\n\nvar valueService_1 = require(\"../valueService/valueService\");\n\nvar columnController_1 = require(\"../columnController/columnController\");\n\nvar columnApi_1 = require(\"../columnController/columnApi\");\n\nvar context_1 = require(\"../context/context\");\n\nvar eventService_1 = require(\"../eventService\");\n\nvar events_1 = require(\"../events\");\n\nvar gridApi_1 = require(\"../gridApi\");\n\nvar userComponentFactory_1 = require(\"../components/framework/userComponentFactory\");\n\nvar FilterManager =\n/** @class */\nfunction () {\n  function FilterManager() {\n    this.allFilters = {};\n    this.quickFilter = null;\n    this.quickFilterParts = null; // this is true when the grid is processing the filter change. this is used by the cell comps, so that they\n    // don't flash when data changes due to filter changes. there is no need to flash when filter changes as the\n    // user is in control, so doesn't make sense to show flashing changes. for example, go to main demo where\n    // this feature is turned off (hack code to always return false for isSuppressFlashingCellsBecauseFiltering(), put in)\n    // 100,000 rows and group by country. then do some filtering. all the cells flash, which is silly.\n\n    this.processingFilterChange = false;\n  }\n\n  FilterManager_1 = FilterManager;\n\n  FilterManager.prototype.registerGridCore = function (gridCore) {\n    this.gridCore = gridCore;\n  };\n\n  FilterManager.prototype.init = function () {\n    this.eventService.addEventListener(events_1.Events.EVENT_ROW_DATA_CHANGED, this.onNewRowsLoaded.bind(this));\n    this.eventService.addEventListener(events_1.Events.EVENT_NEW_COLUMNS_LOADED, this.onNewColumnsLoaded.bind(this));\n    this.quickFilter = this.parseQuickFilter(this.gridOptionsWrapper.getQuickFilterText());\n    this.setQuickFilterParts();\n    this.allowShowChangeAfterFilter = this.gridOptionsWrapper.isAllowShowChangeAfterFilter(); // check this here, in case there is a filter from the start\n\n    this.checkExternalFilter();\n  };\n\n  FilterManager.prototype.setQuickFilterParts = function () {\n    if (this.quickFilter) {\n      this.quickFilterParts = this.quickFilter.split(' ');\n    } else {\n      this.quickFilterParts = null;\n    }\n  };\n\n  FilterManager.prototype.setFilterModel = function (model) {\n    var _this = this;\n\n    var allPromises = [];\n\n    if (model) {\n      // mark the filters as we set them, so any active filters left over we stop\n      var modelKeys_1 = Object.keys(model);\n\n      utils_1._.iterateObject(this.allFilters, function (colId, filterWrapper) {\n        utils_1._.removeFromArray(modelKeys_1, colId);\n\n        var newModel = model[colId];\n\n        _this.setModelOnFilterWrapper(filterWrapper.filterPromise, newModel);\n\n        allPromises.push(filterWrapper.filterPromise);\n      }); // at this point, processedFields contains data for which we don't have a filter working yet\n\n\n      utils_1._.iterateArray(modelKeys_1, function (colId) {\n        var column = _this.columnController.getPrimaryColumn(colId);\n\n        if (!column) {\n          console.warn('Warning ag-grid setFilterModel - no column found for colId ' + colId);\n          return;\n        }\n\n        var filterWrapper = _this.getOrCreateFilterWrapper(column, 'NO_UI');\n\n        _this.setModelOnFilterWrapper(filterWrapper.filterPromise, model[colId]);\n\n        allPromises.push(filterWrapper.filterPromise);\n      });\n    } else {\n      utils_1._.iterateObject(this.allFilters, function (key, filterWrapper) {\n        _this.setModelOnFilterWrapper(filterWrapper.filterPromise, null);\n\n        allPromises.push(filterWrapper.filterPromise);\n      });\n    }\n\n    utils_1.Promise.all(allPromises).then(function (whatever) {\n      _this.onFilterChanged();\n    });\n  };\n\n  FilterManager.prototype.setModelOnFilterWrapper = function (filterPromise, newModel) {\n    filterPromise.then(function (filter) {\n      if (typeof filter.setModel !== 'function') {\n        console.warn('Warning ag-grid - filter missing setModel method, which is needed for setFilterModel');\n        return;\n      }\n\n      filter.setModel(newModel);\n    });\n  };\n\n  FilterManager.prototype.getFilterModel = function () {\n    var result = {};\n\n    utils_1._.iterateObject(this.allFilters, function (key, filterWrapper) {\n      // because user can provide filters, we provide useful error checking and messages\n      var filterPromise = filterWrapper.filterPromise;\n      var filter = filterPromise.resolveNow(null, function (filter) {\n        return filter;\n      });\n\n      if (filter == null) {\n        return null;\n      }\n\n      if (typeof filter.getModel !== 'function') {\n        console.warn('Warning ag-grid - filter API missing getModel method, which is needed for getFilterModel');\n        return;\n      }\n\n      var model = filter.getModel();\n\n      if (utils_1._.exists(model)) {\n        result[key] = model;\n      }\n    });\n\n    return result;\n  }; // returns true if any advanced filter (ie not quick filter) active\n\n\n  FilterManager.prototype.isAdvancedFilterPresent = function () {\n    return this.advancedFilterPresent;\n  }; // called by:\n  // 1) onFilterChanged()\n  // 2) onNewRowsLoaded()\n\n\n  FilterManager.prototype.setAdvancedFilterPresent = function () {\n    var atLeastOneActive = false;\n\n    utils_1._.iterateObject(this.allFilters, function (key, filterWrapper) {\n      if (filterWrapper.filterPromise.resolveNow(false, function (filter) {\n        return filter.isFilterActive();\n      })) {\n        atLeastOneActive = true;\n      }\n    });\n\n    this.advancedFilterPresent = atLeastOneActive;\n  };\n\n  FilterManager.prototype.updateFilterFlagInColumns = function (source, additionalEventAttributes) {\n    utils_1._.iterateObject(this.allFilters, function (key, filterWrapper) {\n      var filterActive = filterWrapper.filterPromise.resolveNow(false, function (filter) {\n        return filter.isFilterActive();\n      });\n      filterWrapper.column.setFilterActive(filterActive, source, additionalEventAttributes);\n    });\n  }; // returns true if quickFilter or advancedFilter\n\n\n  FilterManager.prototype.isAnyFilterPresent = function () {\n    return this.isQuickFilterPresent() || this.advancedFilterPresent || this.externalFilterPresent;\n  };\n\n  FilterManager.prototype.doesFilterPass = function (node, filterToSkip) {\n    var data = node.data;\n    var colKeys = Object.keys(this.allFilters);\n\n    for (var i = 0, l = colKeys.length; i < l; i++) {\n      // critical code, don't use functional programming\n      var colId = colKeys[i];\n      var filterWrapper = this.allFilters[colId]; // if no filter, always pass\n\n      if (filterWrapper === undefined) {\n        continue;\n      }\n\n      var filter = filterWrapper.filterPromise.resolveNow(undefined, function (filter) {\n        return filter;\n      }); // if filter not yet there, continue\n\n      if (filter === undefined) {\n        continue;\n      }\n\n      if (filter === filterToSkip) {\n        continue;\n      } // don't bother with filters that are not active\n\n\n      if (!filter.isFilterActive()) {\n        continue;\n      }\n\n      if (!filter.doesFilterPass) {\n        // because users can do custom filters, give nice error message\n        console.error('Filter is missing method doesFilterPass');\n      }\n\n      var params = {\n        node: node,\n        data: data\n      };\n\n      if (!filter.doesFilterPass(params)) {\n        return false;\n      }\n    } // all filters passed\n\n\n    return true;\n  };\n\n  FilterManager.prototype.parseQuickFilter = function (newFilter) {\n    if (utils_1._.missing(newFilter) || newFilter === \"\") {\n      return null;\n    }\n\n    if (!this.gridOptionsWrapper.isRowModelDefault()) {\n      console.warn('ag-grid: quick filtering only works with the Client-side Row Model');\n      return null;\n    }\n\n    return newFilter.toUpperCase();\n  }; // returns true if it has changed (not just same value again)\n\n\n  FilterManager.prototype.setQuickFilter = function (newFilter) {\n    var parsedFilter = this.parseQuickFilter(newFilter);\n\n    if (this.quickFilter !== parsedFilter) {\n      this.quickFilter = parsedFilter;\n      this.setQuickFilterParts();\n      this.onFilterChanged();\n    }\n  };\n\n  FilterManager.prototype.checkExternalFilter = function () {\n    this.externalFilterPresent = this.gridOptionsWrapper.isExternalFilterPresent();\n  };\n\n  FilterManager.prototype.onFilterChanged = function (additionalEventAttributes) {\n    this.setAdvancedFilterPresent();\n    this.updateFilterFlagInColumns(\"filterChanged\", additionalEventAttributes);\n    this.checkExternalFilter();\n\n    utils_1._.iterateObject(this.allFilters, function (key, filterWrapper) {\n      filterWrapper.filterPromise.then(function (filter) {\n        if (filter.onAnyFilterChanged) {\n          filter.onAnyFilterChanged();\n        }\n      });\n    });\n\n    var filterChangedEvent = {\n      type: events_1.Events.EVENT_FILTER_CHANGED,\n      api: this.gridApi,\n      columnApi: this.columnApi\n    };\n\n    if (additionalEventAttributes) {\n      utils_1._.mergeDeep(filterChangedEvent, additionalEventAttributes);\n    } // because internal events are not async in ag-grid, when the dispatchEvent\n    // method comes back, we know all listeners have finished executing.\n\n\n    this.processingFilterChange = true;\n    this.eventService.dispatchEvent(filterChangedEvent);\n    this.processingFilterChange = false;\n  };\n\n  FilterManager.prototype.isSuppressFlashingCellsBecauseFiltering = function () {\n    if (this.allowShowChangeAfterFilter) {\n      // if user has elected to always flash cell changes, then return false always\n      return false;\n    } else {\n      // otherwise we suppress flashing changes when filtering\n      return this.processingFilterChange;\n    }\n  };\n\n  FilterManager.prototype.isQuickFilterPresent = function () {\n    return this.quickFilter !== null;\n  };\n\n  FilterManager.prototype.doesRowPassOtherFilters = function (filterToSkip, node) {\n    return this.doesRowPassFilter(node, filterToSkip);\n  };\n\n  FilterManager.prototype.doesRowPassQuickFilterNoCache = function (node, filterPart) {\n    var _this = this;\n\n    var columns = this.columnController.getAllColumnsForQuickFilter();\n    var filterPasses = false;\n    columns.forEach(function (column) {\n      if (filterPasses) {\n        return;\n      }\n\n      var part = _this.getQuickFilterTextForColumn(column, node);\n\n      if (utils_1._.exists(part)) {\n        if (part.indexOf(filterPart) >= 0) {\n          filterPasses = true;\n        }\n      }\n    });\n    return filterPasses;\n  };\n\n  FilterManager.prototype.doesRowPassQuickFilterCache = function (node, filterPart) {\n    if (!node.quickFilterAggregateText) {\n      this.aggregateRowForQuickFilter(node);\n    }\n\n    var filterPasses = node.quickFilterAggregateText.indexOf(filterPart) >= 0;\n    return filterPasses;\n  };\n\n  FilterManager.prototype.doesRowPassQuickFilter = function (node) {\n    var _this = this;\n\n    var filterPasses = true;\n    var usingCache = this.gridOptionsWrapper.isCacheQuickFilter();\n    this.quickFilterParts.forEach(function (filterPart) {\n      var partPasses = usingCache ? _this.doesRowPassQuickFilterCache(node, filterPart) : _this.doesRowPassQuickFilterNoCache(node, filterPart); // each part must pass, if any fails, then the whole filter fails\n\n      if (!partPasses) {\n        filterPasses = false;\n      }\n    });\n    return filterPasses;\n  };\n\n  FilterManager.prototype.doesRowPassFilter = function (node, filterToSkip) {\n    // the row must pass ALL of the filters, so if any of them fail,\n    // we return true. that means if a row passes the quick filter,\n    // but fails the column filter, it fails overall\n    // first up, check quick filter\n    if (this.isQuickFilterPresent()) {\n      if (!this.doesRowPassQuickFilter(node)) {\n        return false;\n      }\n    } // secondly, give the client a chance to reject this row\n\n\n    if (this.externalFilterPresent) {\n      if (!this.gridOptionsWrapper.doesExternalFilterPass(node)) {\n        return false;\n      }\n    } // lastly, check our internal advanced filter\n\n\n    if (this.advancedFilterPresent) {\n      if (!this.doesFilterPass(node, filterToSkip)) {\n        return false;\n      }\n    } // got this far, all filters pass\n\n\n    return true;\n  };\n\n  FilterManager.prototype.getQuickFilterTextForColumn = function (column, rowNode) {\n    var value = this.valueService.getValue(column, rowNode, true);\n    var valueAfterCallback;\n    var colDef = column.getColDef();\n\n    if (column.getColDef().getQuickFilterText) {\n      var params = {\n        value: value,\n        node: rowNode,\n        data: rowNode.data,\n        column: column,\n        colDef: colDef,\n        context: this.gridOptionsWrapper.getContext()\n      };\n      valueAfterCallback = column.getColDef().getQuickFilterText(params);\n    } else {\n      valueAfterCallback = value;\n    }\n\n    if (utils_1._.exists(valueAfterCallback)) {\n      return valueAfterCallback.toString().toUpperCase();\n    } else {\n      return null;\n    }\n  };\n\n  FilterManager.prototype.aggregateRowForQuickFilter = function (node) {\n    var _this = this;\n\n    var stringParts = [];\n    var columns = this.columnController.getAllColumnsForQuickFilter();\n    columns.forEach(function (column) {\n      var part = _this.getQuickFilterTextForColumn(column, node);\n\n      if (utils_1._.exists(part)) {\n        stringParts.push(part);\n      }\n    });\n    node.quickFilterAggregateText = stringParts.join(FilterManager_1.QUICK_FILTER_SEPARATOR);\n  };\n\n  FilterManager.prototype.onNewRowsLoaded = function (source) {\n    utils_1._.iterateObject(this.allFilters, function (key, filterWrapper) {\n      filterWrapper.filterPromise.then(function (filter) {\n        if (filter.onNewRowsLoaded) {\n          filter.onNewRowsLoaded();\n        }\n      });\n    });\n\n    this.updateFilterFlagInColumns(source);\n    this.setAdvancedFilterPresent();\n  };\n\n  FilterManager.prototype.createValueGetter = function (column) {\n    var _this = this;\n\n    return function (node) {\n      return _this.valueService.getValue(column, node, true);\n    };\n  };\n\n  FilterManager.prototype.getFilterComponent = function (column, source) {\n    var filterWrapper = this.getOrCreateFilterWrapper(column, source);\n    return filterWrapper.filterPromise;\n  };\n\n  FilterManager.prototype.isFilterActive = function (column) {\n    var filterWrapper = this.cachedFilter(column);\n\n    if (filterWrapper) {\n      return filterWrapper.filterPromise.resolveNow(false, function (filter) {\n        return filter.isFilterActive();\n      });\n    } else {\n      return false;\n    }\n  };\n\n  FilterManager.prototype.getOrCreateFilterWrapper = function (column, source) {\n    var filterWrapper = this.cachedFilter(column);\n\n    if (!filterWrapper) {\n      filterWrapper = this.createFilterWrapper(column, source);\n      this.allFilters[column.getColId()] = filterWrapper;\n    } else {\n      if (source !== 'NO_UI') {\n        this.putIntoGui(filterWrapper, source);\n      }\n    }\n\n    return filterWrapper;\n  };\n\n  FilterManager.prototype.cachedFilter = function (column) {\n    return this.allFilters[column.getColId()];\n  };\n\n  FilterManager.prototype.createFilterInstance = function (column, $scope) {\n    var _this = this;\n\n    var defaultFilter = 'agTextColumnFilter';\n\n    if (this.gridOptionsWrapper.isEnterprise()) {\n      defaultFilter = 'agSetColumnFilter';\n    }\n\n    var sanitisedColDef = utils_1._.cloneObject(column.getColDef());\n\n    var filterInstance;\n    var params = this.createFilterParams(column, sanitisedColDef, $scope);\n    params.filterChangedCallback = this.onFilterChanged.bind(this);\n\n    params.filterModifiedCallback = function () {\n      var event = {\n        type: events_1.Events.EVENT_FILTER_MODIFIED,\n        api: _this.gridApi,\n        columnApi: _this.columnApi,\n        column: column,\n        filterInstance: filterInstance\n      };\n\n      _this.eventService.dispatchEvent(event);\n    }; // we modify params in a callback as we need the filter instance, and this isn't available\n    // when creating the params above\n\n\n    var modifyParamsCallback = function (params, filter) {\n      return utils_1._.assign(params, {\n        doesRowPassOtherFilter: _this.doesRowPassOtherFilters.bind(_this, filter)\n      });\n    };\n\n    var res = this.userComponentFactory.newFilterComponent(sanitisedColDef, params, defaultFilter, modifyParamsCallback);\n    res.then(function (r) {\n      return filterInstance = r;\n    });\n    return res;\n  };\n\n  FilterManager.prototype.createFilterParams = function (column, colDef, $scope) {\n    if ($scope === void 0) {\n      $scope = null;\n    }\n\n    var params = {\n      api: this.gridOptionsWrapper.getApi(),\n      column: column,\n      colDef: colDef,\n      rowModel: this.rowModel,\n      filterChangedCallback: null,\n      filterModifiedCallback: null,\n      valueGetter: this.createValueGetter(column),\n      context: this.gridOptionsWrapper.getContext(),\n      doesRowPassOtherFilter: null\n    }; // hack in scope if using AngularJS\n\n    if ($scope) {\n      params.$scope = $scope;\n    }\n\n    return params;\n  };\n\n  FilterManager.prototype.createFilterWrapper = function (column, source) {\n    var filterWrapper = {\n      column: column,\n      filterPromise: null,\n      scope: null,\n      compiledElement: null,\n      guiPromise: utils_1.Promise.external()\n    };\n    filterWrapper.scope = this.gridOptionsWrapper.isAngularCompileFilters() ? this.$scope.$new() : null;\n    filterWrapper.filterPromise = this.createFilterInstance(column, filterWrapper.scope);\n    this.putIntoGui(filterWrapper, source);\n    return filterWrapper;\n  };\n\n  FilterManager.prototype.putIntoGui = function (filterWrapper, source) {\n    var _this = this;\n\n    var eFilterGui = document.createElement('div');\n    eFilterGui.className = 'ag-filter';\n    filterWrapper.filterPromise.then(function (filter) {\n      var guiFromFilter = filter.getGui();\n\n      if (utils_1._.missing(guiFromFilter)) {\n        console.warn(\"getGui method from filter returned \" + guiFromFilter + \", it should be a DOM element or an HTML template string.\");\n      } // for backwards compatibility with Angular 1 - we\n      // used to allow providing back HTML from getGui().\n      // once we move away from supporting Angular 1\n      // directly, we can change this.\n\n\n      if (typeof guiFromFilter === 'string') {\n        guiFromFilter = utils_1._.loadTemplate(guiFromFilter);\n      }\n\n      eFilterGui.appendChild(guiFromFilter);\n\n      if (filterWrapper.scope) {\n        var compiledElement = _this.$compile(eFilterGui)(filterWrapper.scope);\n\n        filterWrapper.compiledElement = compiledElement;\n        window.setTimeout(function () {\n          return filterWrapper.scope.$apply();\n        }, 0);\n      }\n\n      filterWrapper.guiPromise.resolve(eFilterGui);\n\n      _this.eventService.dispatchEvent({\n        type: events_1.Events.EVENT_FILTER_OPENED,\n        column: filterWrapper.column,\n        source: source,\n        eGui: eFilterGui,\n        api: _this.gridApi,\n        columnApi: _this.columnApi\n      });\n    });\n  };\n\n  FilterManager.prototype.onNewColumnsLoaded = function () {\n    var _this = this;\n\n    var atLeastOneFilterGone = false;\n\n    utils_1._.iterateObject(this.allFilters, function (key, filterWrapper) {\n      var oldColumn = !_this.columnController.getPrimaryColumn(filterWrapper.column);\n\n      if (oldColumn) {\n        atLeastOneFilterGone = true;\n\n        _this.disposeFilterWrapper(filterWrapper, \"filterDestroyed\");\n      }\n    });\n\n    if (atLeastOneFilterGone) {\n      this.onFilterChanged();\n    }\n  }; // destroys the filter, so it not longer takes part\n\n\n  FilterManager.prototype.destroyFilter = function (column, source) {\n    if (source === void 0) {\n      source = \"api\";\n    }\n\n    var filterWrapper = this.allFilters[column.getColId()];\n\n    if (filterWrapper) {\n      this.disposeFilterWrapper(filterWrapper, source);\n      this.onFilterChanged();\n    }\n  };\n\n  FilterManager.prototype.disposeFilterWrapper = function (filterWrapper, source) {\n    var _this = this;\n\n    filterWrapper.filterPromise.then(function (filter) {\n      filter.setModel(null);\n\n      if (filter.destroy) {\n        filter.destroy();\n      }\n\n      filterWrapper.column.setFilterActive(false, source);\n\n      if (filterWrapper.scope) {\n        if (filterWrapper.compiledElement) {\n          filterWrapper.compiledElement.remove();\n        }\n\n        filterWrapper.scope.$destroy();\n      }\n\n      delete _this.allFilters[filterWrapper.column.getColId()];\n    });\n  };\n\n  FilterManager.prototype.destroy = function () {\n    var _this = this;\n\n    utils_1._.iterateObject(this.allFilters, function (key, filterWrapper) {\n      _this.disposeFilterWrapper(filterWrapper, \"filterDestroyed\");\n    });\n  };\n\n  var FilterManager_1;\n  FilterManager.QUICK_FILTER_SEPARATOR = '\\n';\n\n  __decorate([context_1.Autowired('$compile'), __metadata(\"design:type\", Object)], FilterManager.prototype, \"$compile\", void 0);\n\n  __decorate([context_1.Autowired('$scope'), __metadata(\"design:type\", Object)], FilterManager.prototype, \"$scope\", void 0);\n\n  __decorate([context_1.Autowired('gridOptionsWrapper'), __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)], FilterManager.prototype, \"gridOptionsWrapper\", void 0);\n\n  __decorate([context_1.Autowired('popupService'), __metadata(\"design:type\", popupService_1.PopupService)], FilterManager.prototype, \"popupService\", void 0);\n\n  __decorate([context_1.Autowired('valueService'), __metadata(\"design:type\", valueService_1.ValueService)], FilterManager.prototype, \"valueService\", void 0);\n\n  __decorate([context_1.Autowired('columnController'), __metadata(\"design:type\", columnController_1.ColumnController)], FilterManager.prototype, \"columnController\", void 0);\n\n  __decorate([context_1.Autowired('rowModel'), __metadata(\"design:type\", Object)], FilterManager.prototype, \"rowModel\", void 0);\n\n  __decorate([context_1.Autowired('eventService'), __metadata(\"design:type\", eventService_1.EventService)], FilterManager.prototype, \"eventService\", void 0);\n\n  __decorate([context_1.Autowired('enterprise'), __metadata(\"design:type\", Boolean)], FilterManager.prototype, \"enterprise\", void 0);\n\n  __decorate([context_1.Autowired('context'), __metadata(\"design:type\", context_1.Context)], FilterManager.prototype, \"context\", void 0);\n\n  __decorate([context_1.Autowired('columnApi'), __metadata(\"design:type\", columnApi_1.ColumnApi)], FilterManager.prototype, \"columnApi\", void 0);\n\n  __decorate([context_1.Autowired('gridApi'), __metadata(\"design:type\", gridApi_1.GridApi)], FilterManager.prototype, \"gridApi\", void 0);\n\n  __decorate([context_1.Autowired('userComponentFactory'), __metadata(\"design:type\", userComponentFactory_1.UserComponentFactory)], FilterManager.prototype, \"userComponentFactory\", void 0);\n\n  __decorate([context_1.PostConstruct, __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", []), __metadata(\"design:returntype\", void 0)], FilterManager.prototype, \"init\", null);\n\n  __decorate([context_1.PreDestroy, __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", []), __metadata(\"design:returntype\", void 0)], FilterManager.prototype, \"destroy\", null);\n\n  FilterManager = FilterManager_1 = __decorate([context_1.Bean('filterManager')], FilterManager);\n  return FilterManager;\n}();\n\nexports.FilterManager = FilterManager;","map":{"version":3,"sources":["/Users/dirkmennecke77/Desktop/Lageplan/node_modules/ag-grid-community/dist/lib/filter/filterManager.js"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__metadata","k","v","metadata","exports","value","utils_1","require","gridOptionsWrapper_1","popupService_1","valueService_1","columnController_1","columnApi_1","context_1","eventService_1","events_1","gridApi_1","userComponentFactory_1","FilterManager","allFilters","quickFilter","quickFilterParts","processingFilterChange","FilterManager_1","prototype","registerGridCore","gridCore","init","eventService","addEventListener","Events","EVENT_ROW_DATA_CHANGED","onNewRowsLoaded","bind","EVENT_NEW_COLUMNS_LOADED","onNewColumnsLoaded","parseQuickFilter","gridOptionsWrapper","getQuickFilterText","setQuickFilterParts","allowShowChangeAfterFilter","isAllowShowChangeAfterFilter","checkExternalFilter","split","setFilterModel","model","_this","allPromises","modelKeys_1","keys","_","iterateObject","colId","filterWrapper","removeFromArray","newModel","setModelOnFilterWrapper","filterPromise","push","iterateArray","column","columnController","getPrimaryColumn","console","warn","getOrCreateFilterWrapper","Promise","all","then","whatever","onFilterChanged","filter","setModel","getFilterModel","result","resolveNow","getModel","exists","isAdvancedFilterPresent","advancedFilterPresent","setAdvancedFilterPresent","atLeastOneActive","isFilterActive","updateFilterFlagInColumns","source","additionalEventAttributes","filterActive","setFilterActive","isAnyFilterPresent","isQuickFilterPresent","externalFilterPresent","doesFilterPass","node","filterToSkip","data","colKeys","l","undefined","error","params","newFilter","missing","isRowModelDefault","toUpperCase","setQuickFilter","parsedFilter","isExternalFilterPresent","onAnyFilterChanged","filterChangedEvent","type","EVENT_FILTER_CHANGED","api","gridApi","columnApi","mergeDeep","dispatchEvent","isSuppressFlashingCellsBecauseFiltering","doesRowPassOtherFilters","doesRowPassFilter","doesRowPassQuickFilterNoCache","filterPart","columns","getAllColumnsForQuickFilter","filterPasses","forEach","part","getQuickFilterTextForColumn","indexOf","doesRowPassQuickFilterCache","quickFilterAggregateText","aggregateRowForQuickFilter","doesRowPassQuickFilter","usingCache","isCacheQuickFilter","partPasses","doesExternalFilterPass","rowNode","valueService","getValue","valueAfterCallback","colDef","getColDef","context","getContext","toString","stringParts","join","QUICK_FILTER_SEPARATOR","createValueGetter","getFilterComponent","cachedFilter","createFilterWrapper","getColId","putIntoGui","createFilterInstance","$scope","defaultFilter","isEnterprise","sanitisedColDef","cloneObject","filterInstance","createFilterParams","filterChangedCallback","filterModifiedCallback","event","EVENT_FILTER_MODIFIED","modifyParamsCallback","assign","doesRowPassOtherFilter","res","userComponentFactory","newFilterComponent","getApi","rowModel","valueGetter","scope","compiledElement","guiPromise","external","isAngularCompileFilters","$new","eFilterGui","document","createElement","className","guiFromFilter","getGui","loadTemplate","appendChild","$compile","window","setTimeout","$apply","resolve","EVENT_FILTER_OPENED","eGui","atLeastOneFilterGone","oldColumn","disposeFilterWrapper","destroyFilter","destroy","remove","$destroy","Autowired","GridOptionsWrapper","PopupService","ValueService","ColumnController","EventService","Boolean","Context","ColumnApi","GridApi","UserComponentFactory","PostConstruct","Function","PreDestroy","Bean"],"mappings":"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","sourcesContent":["/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.2.2\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"../utils\");\nvar gridOptionsWrapper_1 = require(\"../gridOptionsWrapper\");\nvar popupService_1 = require(\"../widgets/popupService\");\nvar valueService_1 = require(\"../valueService/valueService\");\nvar columnController_1 = require(\"../columnController/columnController\");\nvar columnApi_1 = require(\"../columnController/columnApi\");\nvar context_1 = require(\"../context/context\");\nvar eventService_1 = require(\"../eventService\");\nvar events_1 = require(\"../events\");\nvar gridApi_1 = require(\"../gridApi\");\nvar userComponentFactory_1 = require(\"../components/framework/userComponentFactory\");\nvar FilterManager = /** @class */ (function () {\n    function FilterManager() {\n        this.allFilters = {};\n        this.quickFilter = null;\n        this.quickFilterParts = null;\n        // this is true when the grid is processing the filter change. this is used by the cell comps, so that they\n        // don't flash when data changes due to filter changes. there is no need to flash when filter changes as the\n        // user is in control, so doesn't make sense to show flashing changes. for example, go to main demo where\n        // this feature is turned off (hack code to always return false for isSuppressFlashingCellsBecauseFiltering(), put in)\n        // 100,000 rows and group by country. then do some filtering. all the cells flash, which is silly.\n        this.processingFilterChange = false;\n    }\n    FilterManager_1 = FilterManager;\n    FilterManager.prototype.registerGridCore = function (gridCore) {\n        this.gridCore = gridCore;\n    };\n    FilterManager.prototype.init = function () {\n        this.eventService.addEventListener(events_1.Events.EVENT_ROW_DATA_CHANGED, this.onNewRowsLoaded.bind(this));\n        this.eventService.addEventListener(events_1.Events.EVENT_NEW_COLUMNS_LOADED, this.onNewColumnsLoaded.bind(this));\n        this.quickFilter = this.parseQuickFilter(this.gridOptionsWrapper.getQuickFilterText());\n        this.setQuickFilterParts();\n        this.allowShowChangeAfterFilter = this.gridOptionsWrapper.isAllowShowChangeAfterFilter();\n        // check this here, in case there is a filter from the start\n        this.checkExternalFilter();\n    };\n    FilterManager.prototype.setQuickFilterParts = function () {\n        if (this.quickFilter) {\n            this.quickFilterParts = this.quickFilter.split(' ');\n        }\n        else {\n            this.quickFilterParts = null;\n        }\n    };\n    FilterManager.prototype.setFilterModel = function (model) {\n        var _this = this;\n        var allPromises = [];\n        if (model) {\n            // mark the filters as we set them, so any active filters left over we stop\n            var modelKeys_1 = Object.keys(model);\n            utils_1._.iterateObject(this.allFilters, function (colId, filterWrapper) {\n                utils_1._.removeFromArray(modelKeys_1, colId);\n                var newModel = model[colId];\n                _this.setModelOnFilterWrapper(filterWrapper.filterPromise, newModel);\n                allPromises.push(filterWrapper.filterPromise);\n            });\n            // at this point, processedFields contains data for which we don't have a filter working yet\n            utils_1._.iterateArray(modelKeys_1, function (colId) {\n                var column = _this.columnController.getPrimaryColumn(colId);\n                if (!column) {\n                    console.warn('Warning ag-grid setFilterModel - no column found for colId ' + colId);\n                    return;\n                }\n                var filterWrapper = _this.getOrCreateFilterWrapper(column, 'NO_UI');\n                _this.setModelOnFilterWrapper(filterWrapper.filterPromise, model[colId]);\n                allPromises.push(filterWrapper.filterPromise);\n            });\n        }\n        else {\n            utils_1._.iterateObject(this.allFilters, function (key, filterWrapper) {\n                _this.setModelOnFilterWrapper(filterWrapper.filterPromise, null);\n                allPromises.push(filterWrapper.filterPromise);\n            });\n        }\n        utils_1.Promise.all(allPromises).then(function (whatever) {\n            _this.onFilterChanged();\n        });\n    };\n    FilterManager.prototype.setModelOnFilterWrapper = function (filterPromise, newModel) {\n        filterPromise.then(function (filter) {\n            if (typeof filter.setModel !== 'function') {\n                console.warn('Warning ag-grid - filter missing setModel method, which is needed for setFilterModel');\n                return;\n            }\n            filter.setModel(newModel);\n        });\n    };\n    FilterManager.prototype.getFilterModel = function () {\n        var result = {};\n        utils_1._.iterateObject(this.allFilters, function (key, filterWrapper) {\n            // because user can provide filters, we provide useful error checking and messages\n            var filterPromise = filterWrapper.filterPromise;\n            var filter = filterPromise.resolveNow(null, function (filter) { return filter; });\n            if (filter == null) {\n                return null;\n            }\n            if (typeof filter.getModel !== 'function') {\n                console.warn('Warning ag-grid - filter API missing getModel method, which is needed for getFilterModel');\n                return;\n            }\n            var model = filter.getModel();\n            if (utils_1._.exists(model)) {\n                result[key] = model;\n            }\n        });\n        return result;\n    };\n    // returns true if any advanced filter (ie not quick filter) active\n    FilterManager.prototype.isAdvancedFilterPresent = function () {\n        return this.advancedFilterPresent;\n    };\n    // called by:\n    // 1) onFilterChanged()\n    // 2) onNewRowsLoaded()\n    FilterManager.prototype.setAdvancedFilterPresent = function () {\n        var atLeastOneActive = false;\n        utils_1._.iterateObject(this.allFilters, function (key, filterWrapper) {\n            if (filterWrapper.filterPromise.resolveNow(false, function (filter) { return filter.isFilterActive(); })) {\n                atLeastOneActive = true;\n            }\n        });\n        this.advancedFilterPresent = atLeastOneActive;\n    };\n    FilterManager.prototype.updateFilterFlagInColumns = function (source, additionalEventAttributes) {\n        utils_1._.iterateObject(this.allFilters, function (key, filterWrapper) {\n            var filterActive = filterWrapper.filterPromise.resolveNow(false, function (filter) { return filter.isFilterActive(); });\n            filterWrapper.column.setFilterActive(filterActive, source, additionalEventAttributes);\n        });\n    };\n    // returns true if quickFilter or advancedFilter\n    FilterManager.prototype.isAnyFilterPresent = function () {\n        return this.isQuickFilterPresent() || this.advancedFilterPresent || this.externalFilterPresent;\n    };\n    FilterManager.prototype.doesFilterPass = function (node, filterToSkip) {\n        var data = node.data;\n        var colKeys = Object.keys(this.allFilters);\n        for (var i = 0, l = colKeys.length; i < l; i++) { // critical code, don't use functional programming\n            var colId = colKeys[i];\n            var filterWrapper = this.allFilters[colId];\n            // if no filter, always pass\n            if (filterWrapper === undefined) {\n                continue;\n            }\n            var filter = filterWrapper.filterPromise.resolveNow(undefined, function (filter) { return filter; });\n            // if filter not yet there, continue\n            if (filter === undefined) {\n                continue;\n            }\n            if (filter === filterToSkip) {\n                continue;\n            }\n            // don't bother with filters that are not active\n            if (!filter.isFilterActive()) {\n                continue;\n            }\n            if (!filter.doesFilterPass) { // because users can do custom filters, give nice error message\n                console.error('Filter is missing method doesFilterPass');\n            }\n            var params = {\n                node: node,\n                data: data\n            };\n            if (!filter.doesFilterPass(params)) {\n                return false;\n            }\n        }\n        // all filters passed\n        return true;\n    };\n    FilterManager.prototype.parseQuickFilter = function (newFilter) {\n        if (utils_1._.missing(newFilter) || newFilter === \"\") {\n            return null;\n        }\n        if (!this.gridOptionsWrapper.isRowModelDefault()) {\n            console.warn('ag-grid: quick filtering only works with the Client-side Row Model');\n            return null;\n        }\n        return newFilter.toUpperCase();\n    };\n    // returns true if it has changed (not just same value again)\n    FilterManager.prototype.setQuickFilter = function (newFilter) {\n        var parsedFilter = this.parseQuickFilter(newFilter);\n        if (this.quickFilter !== parsedFilter) {\n            this.quickFilter = parsedFilter;\n            this.setQuickFilterParts();\n            this.onFilterChanged();\n        }\n    };\n    FilterManager.prototype.checkExternalFilter = function () {\n        this.externalFilterPresent = this.gridOptionsWrapper.isExternalFilterPresent();\n    };\n    FilterManager.prototype.onFilterChanged = function (additionalEventAttributes) {\n        this.setAdvancedFilterPresent();\n        this.updateFilterFlagInColumns(\"filterChanged\", additionalEventAttributes);\n        this.checkExternalFilter();\n        utils_1._.iterateObject(this.allFilters, function (key, filterWrapper) {\n            filterWrapper.filterPromise.then(function (filter) {\n                if (filter.onAnyFilterChanged) {\n                    filter.onAnyFilterChanged();\n                }\n            });\n        });\n        var filterChangedEvent = {\n            type: events_1.Events.EVENT_FILTER_CHANGED,\n            api: this.gridApi,\n            columnApi: this.columnApi\n        };\n        if (additionalEventAttributes) {\n            utils_1._.mergeDeep(filterChangedEvent, additionalEventAttributes);\n        }\n        // because internal events are not async in ag-grid, when the dispatchEvent\n        // method comes back, we know all listeners have finished executing.\n        this.processingFilterChange = true;\n        this.eventService.dispatchEvent(filterChangedEvent);\n        this.processingFilterChange = false;\n    };\n    FilterManager.prototype.isSuppressFlashingCellsBecauseFiltering = function () {\n        if (this.allowShowChangeAfterFilter) {\n            // if user has elected to always flash cell changes, then return false always\n            return false;\n        }\n        else {\n            // otherwise we suppress flashing changes when filtering\n            return this.processingFilterChange;\n        }\n    };\n    FilterManager.prototype.isQuickFilterPresent = function () {\n        return this.quickFilter !== null;\n    };\n    FilterManager.prototype.doesRowPassOtherFilters = function (filterToSkip, node) {\n        return this.doesRowPassFilter(node, filterToSkip);\n    };\n    FilterManager.prototype.doesRowPassQuickFilterNoCache = function (node, filterPart) {\n        var _this = this;\n        var columns = this.columnController.getAllColumnsForQuickFilter();\n        var filterPasses = false;\n        columns.forEach(function (column) {\n            if (filterPasses) {\n                return;\n            }\n            var part = _this.getQuickFilterTextForColumn(column, node);\n            if (utils_1._.exists(part)) {\n                if (part.indexOf(filterPart) >= 0) {\n                    filterPasses = true;\n                }\n            }\n        });\n        return filterPasses;\n    };\n    FilterManager.prototype.doesRowPassQuickFilterCache = function (node, filterPart) {\n        if (!node.quickFilterAggregateText) {\n            this.aggregateRowForQuickFilter(node);\n        }\n        var filterPasses = node.quickFilterAggregateText.indexOf(filterPart) >= 0;\n        return filterPasses;\n    };\n    FilterManager.prototype.doesRowPassQuickFilter = function (node) {\n        var _this = this;\n        var filterPasses = true;\n        var usingCache = this.gridOptionsWrapper.isCacheQuickFilter();\n        this.quickFilterParts.forEach(function (filterPart) {\n            var partPasses = usingCache ?\n                _this.doesRowPassQuickFilterCache(node, filterPart) : _this.doesRowPassQuickFilterNoCache(node, filterPart);\n            // each part must pass, if any fails, then the whole filter fails\n            if (!partPasses) {\n                filterPasses = false;\n            }\n        });\n        return filterPasses;\n    };\n    FilterManager.prototype.doesRowPassFilter = function (node, filterToSkip) {\n        // the row must pass ALL of the filters, so if any of them fail,\n        // we return true. that means if a row passes the quick filter,\n        // but fails the column filter, it fails overall\n        // first up, check quick filter\n        if (this.isQuickFilterPresent()) {\n            if (!this.doesRowPassQuickFilter(node)) {\n                return false;\n            }\n        }\n        // secondly, give the client a chance to reject this row\n        if (this.externalFilterPresent) {\n            if (!this.gridOptionsWrapper.doesExternalFilterPass(node)) {\n                return false;\n            }\n        }\n        // lastly, check our internal advanced filter\n        if (this.advancedFilterPresent) {\n            if (!this.doesFilterPass(node, filterToSkip)) {\n                return false;\n            }\n        }\n        // got this far, all filters pass\n        return true;\n    };\n    FilterManager.prototype.getQuickFilterTextForColumn = function (column, rowNode) {\n        var value = this.valueService.getValue(column, rowNode, true);\n        var valueAfterCallback;\n        var colDef = column.getColDef();\n        if (column.getColDef().getQuickFilterText) {\n            var params = {\n                value: value,\n                node: rowNode,\n                data: rowNode.data,\n                column: column,\n                colDef: colDef,\n                context: this.gridOptionsWrapper.getContext()\n            };\n            valueAfterCallback = column.getColDef().getQuickFilterText(params);\n        }\n        else {\n            valueAfterCallback = value;\n        }\n        if (utils_1._.exists(valueAfterCallback)) {\n            return valueAfterCallback.toString().toUpperCase();\n        }\n        else {\n            return null;\n        }\n    };\n    FilterManager.prototype.aggregateRowForQuickFilter = function (node) {\n        var _this = this;\n        var stringParts = [];\n        var columns = this.columnController.getAllColumnsForQuickFilter();\n        columns.forEach(function (column) {\n            var part = _this.getQuickFilterTextForColumn(column, node);\n            if (utils_1._.exists(part)) {\n                stringParts.push(part);\n            }\n        });\n        node.quickFilterAggregateText = stringParts.join(FilterManager_1.QUICK_FILTER_SEPARATOR);\n    };\n    FilterManager.prototype.onNewRowsLoaded = function (source) {\n        utils_1._.iterateObject(this.allFilters, function (key, filterWrapper) {\n            filterWrapper.filterPromise.then(function (filter) {\n                if (filter.onNewRowsLoaded) {\n                    filter.onNewRowsLoaded();\n                }\n            });\n        });\n        this.updateFilterFlagInColumns(source);\n        this.setAdvancedFilterPresent();\n    };\n    FilterManager.prototype.createValueGetter = function (column) {\n        var _this = this;\n        return function (node) {\n            return _this.valueService.getValue(column, node, true);\n        };\n    };\n    FilterManager.prototype.getFilterComponent = function (column, source) {\n        var filterWrapper = this.getOrCreateFilterWrapper(column, source);\n        return filterWrapper.filterPromise;\n    };\n    FilterManager.prototype.isFilterActive = function (column) {\n        var filterWrapper = this.cachedFilter(column);\n        if (filterWrapper) {\n            return filterWrapper.filterPromise.resolveNow(false, function (filter) { return filter.isFilterActive(); });\n        }\n        else {\n            return false;\n        }\n    };\n    FilterManager.prototype.getOrCreateFilterWrapper = function (column, source) {\n        var filterWrapper = this.cachedFilter(column);\n        if (!filterWrapper) {\n            filterWrapper = this.createFilterWrapper(column, source);\n            this.allFilters[column.getColId()] = filterWrapper;\n        }\n        else {\n            if (source !== 'NO_UI') {\n                this.putIntoGui(filterWrapper, source);\n            }\n        }\n        return filterWrapper;\n    };\n    FilterManager.prototype.cachedFilter = function (column) {\n        return this.allFilters[column.getColId()];\n    };\n    FilterManager.prototype.createFilterInstance = function (column, $scope) {\n        var _this = this;\n        var defaultFilter = 'agTextColumnFilter';\n        if (this.gridOptionsWrapper.isEnterprise()) {\n            defaultFilter = 'agSetColumnFilter';\n        }\n        var sanitisedColDef = utils_1._.cloneObject(column.getColDef());\n        var filterInstance;\n        var params = this.createFilterParams(column, sanitisedColDef, $scope);\n        params.filterChangedCallback = this.onFilterChanged.bind(this);\n        params.filterModifiedCallback = function () {\n            var event = {\n                type: events_1.Events.EVENT_FILTER_MODIFIED,\n                api: _this.gridApi,\n                columnApi: _this.columnApi,\n                column: column,\n                filterInstance: filterInstance\n            };\n            _this.eventService.dispatchEvent(event);\n        };\n        // we modify params in a callback as we need the filter instance, and this isn't available\n        // when creating the params above\n        var modifyParamsCallback = function (params, filter) { return utils_1._.assign(params, {\n            doesRowPassOtherFilter: _this.doesRowPassOtherFilters.bind(_this, filter),\n        }); };\n        var res = this.userComponentFactory.newFilterComponent(sanitisedColDef, params, defaultFilter, modifyParamsCallback);\n        res.then(function (r) { return filterInstance = r; });\n        return res;\n    };\n    FilterManager.prototype.createFilterParams = function (column, colDef, $scope) {\n        if ($scope === void 0) { $scope = null; }\n        var params = {\n            api: this.gridOptionsWrapper.getApi(),\n            column: column,\n            colDef: colDef,\n            rowModel: this.rowModel,\n            filterChangedCallback: null,\n            filterModifiedCallback: null,\n            valueGetter: this.createValueGetter(column),\n            context: this.gridOptionsWrapper.getContext(),\n            doesRowPassOtherFilter: null\n        };\n        // hack in scope if using AngularJS\n        if ($scope) {\n            params.$scope = $scope;\n        }\n        return params;\n    };\n    FilterManager.prototype.createFilterWrapper = function (column, source) {\n        var filterWrapper = {\n            column: column,\n            filterPromise: null,\n            scope: null,\n            compiledElement: null,\n            guiPromise: utils_1.Promise.external()\n        };\n        filterWrapper.scope = this.gridOptionsWrapper.isAngularCompileFilters() ? this.$scope.$new() : null;\n        filterWrapper.filterPromise = this.createFilterInstance(column, filterWrapper.scope);\n        this.putIntoGui(filterWrapper, source);\n        return filterWrapper;\n    };\n    FilterManager.prototype.putIntoGui = function (filterWrapper, source) {\n        var _this = this;\n        var eFilterGui = document.createElement('div');\n        eFilterGui.className = 'ag-filter';\n        filterWrapper.filterPromise.then(function (filter) {\n            var guiFromFilter = filter.getGui();\n            if (utils_1._.missing(guiFromFilter)) {\n                console.warn(\"getGui method from filter returned \" + guiFromFilter + \", it should be a DOM element or an HTML template string.\");\n            }\n            // for backwards compatibility with Angular 1 - we\n            // used to allow providing back HTML from getGui().\n            // once we move away from supporting Angular 1\n            // directly, we can change this.\n            if (typeof guiFromFilter === 'string') {\n                guiFromFilter = utils_1._.loadTemplate(guiFromFilter);\n            }\n            eFilterGui.appendChild(guiFromFilter);\n            if (filterWrapper.scope) {\n                var compiledElement = _this.$compile(eFilterGui)(filterWrapper.scope);\n                filterWrapper.compiledElement = compiledElement;\n                window.setTimeout(function () { return filterWrapper.scope.$apply(); }, 0);\n            }\n            filterWrapper.guiPromise.resolve(eFilterGui);\n            _this.eventService.dispatchEvent({\n                type: events_1.Events.EVENT_FILTER_OPENED,\n                column: filterWrapper.column,\n                source: source,\n                eGui: eFilterGui,\n                api: _this.gridApi,\n                columnApi: _this.columnApi\n            });\n        });\n    };\n    FilterManager.prototype.onNewColumnsLoaded = function () {\n        var _this = this;\n        var atLeastOneFilterGone = false;\n        utils_1._.iterateObject(this.allFilters, function (key, filterWrapper) {\n            var oldColumn = !_this.columnController.getPrimaryColumn(filterWrapper.column);\n            if (oldColumn) {\n                atLeastOneFilterGone = true;\n                _this.disposeFilterWrapper(filterWrapper, \"filterDestroyed\");\n            }\n        });\n        if (atLeastOneFilterGone) {\n            this.onFilterChanged();\n        }\n    };\n    // destroys the filter, so it not longer takes part\n    FilterManager.prototype.destroyFilter = function (column, source) {\n        if (source === void 0) { source = \"api\"; }\n        var filterWrapper = this.allFilters[column.getColId()];\n        if (filterWrapper) {\n            this.disposeFilterWrapper(filterWrapper, source);\n            this.onFilterChanged();\n        }\n    };\n    FilterManager.prototype.disposeFilterWrapper = function (filterWrapper, source) {\n        var _this = this;\n        filterWrapper.filterPromise.then(function (filter) {\n            filter.setModel(null);\n            if (filter.destroy) {\n                filter.destroy();\n            }\n            filterWrapper.column.setFilterActive(false, source);\n            if (filterWrapper.scope) {\n                if (filterWrapper.compiledElement) {\n                    filterWrapper.compiledElement.remove();\n                }\n                filterWrapper.scope.$destroy();\n            }\n            delete _this.allFilters[filterWrapper.column.getColId()];\n        });\n    };\n    FilterManager.prototype.destroy = function () {\n        var _this = this;\n        utils_1._.iterateObject(this.allFilters, function (key, filterWrapper) {\n            _this.disposeFilterWrapper(filterWrapper, \"filterDestroyed\");\n        });\n    };\n    var FilterManager_1;\n    FilterManager.QUICK_FILTER_SEPARATOR = '\\n';\n    __decorate([\n        context_1.Autowired('$compile'),\n        __metadata(\"design:type\", Object)\n    ], FilterManager.prototype, \"$compile\", void 0);\n    __decorate([\n        context_1.Autowired('$scope'),\n        __metadata(\"design:type\", Object)\n    ], FilterManager.prototype, \"$scope\", void 0);\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], FilterManager.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_1.Autowired('popupService'),\n        __metadata(\"design:type\", popupService_1.PopupService)\n    ], FilterManager.prototype, \"popupService\", void 0);\n    __decorate([\n        context_1.Autowired('valueService'),\n        __metadata(\"design:type\", valueService_1.ValueService)\n    ], FilterManager.prototype, \"valueService\", void 0);\n    __decorate([\n        context_1.Autowired('columnController'),\n        __metadata(\"design:type\", columnController_1.ColumnController)\n    ], FilterManager.prototype, \"columnController\", void 0);\n    __decorate([\n        context_1.Autowired('rowModel'),\n        __metadata(\"design:type\", Object)\n    ], FilterManager.prototype, \"rowModel\", void 0);\n    __decorate([\n        context_1.Autowired('eventService'),\n        __metadata(\"design:type\", eventService_1.EventService)\n    ], FilterManager.prototype, \"eventService\", void 0);\n    __decorate([\n        context_1.Autowired('enterprise'),\n        __metadata(\"design:type\", Boolean)\n    ], FilterManager.prototype, \"enterprise\", void 0);\n    __decorate([\n        context_1.Autowired('context'),\n        __metadata(\"design:type\", context_1.Context)\n    ], FilterManager.prototype, \"context\", void 0);\n    __decorate([\n        context_1.Autowired('columnApi'),\n        __metadata(\"design:type\", columnApi_1.ColumnApi)\n    ], FilterManager.prototype, \"columnApi\", void 0);\n    __decorate([\n        context_1.Autowired('gridApi'),\n        __metadata(\"design:type\", gridApi_1.GridApi)\n    ], FilterManager.prototype, \"gridApi\", void 0);\n    __decorate([\n        context_1.Autowired('userComponentFactory'),\n        __metadata(\"design:type\", userComponentFactory_1.UserComponentFactory)\n    ], FilterManager.prototype, \"userComponentFactory\", void 0);\n    __decorate([\n        context_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], FilterManager.prototype, \"init\", null);\n    __decorate([\n        context_1.PreDestroy,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], FilterManager.prototype, \"destroy\", null);\n    FilterManager = FilterManager_1 = __decorate([\n        context_1.Bean('filterManager')\n    ], FilterManager);\n    return FilterManager;\n}());\nexports.FilterManager = FilterManager;\n"]},"metadata":{},"sourceType":"script"}