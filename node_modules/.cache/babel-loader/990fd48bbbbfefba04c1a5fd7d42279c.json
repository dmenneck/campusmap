{"ast":null,"code":"/**\n * @module ol/render/VectorContext\n */\n\n/**\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @constructor\n * @abstract\n * @struct\n * @api\n */\nconst VectorContext = function () {};\n/**\n * Render a geometry with a custom renderer.\n *\n * @param {module:ol/geom/SimpleGeometry} geometry Geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @param {Function} renderer Renderer.\n */\n\n\nVectorContext.prototype.drawCustom = function (geometry, feature, renderer) {};\n/**\n * Render a geometry.\n *\n * @param {module:ol/geom/Geometry} geometry The geometry to render.\n */\n\n\nVectorContext.prototype.drawGeometry = function (geometry) {};\n/**\n * Set the rendering style.\n *\n * @param {module:ol/style/Style} style The rendering style.\n */\n\n\nVectorContext.prototype.setStyle = function (style) {};\n/**\n * @param {module:ol/geom/Circle} circleGeometry Circle geometry.\n * @param {module:ol/Feature} feature Feature.\n */\n\n\nVectorContext.prototype.drawCircle = function (circleGeometry, feature) {};\n/**\n * @param {module:ol/Feature} feature Feature.\n * @param {module:ol/style/Style} style Style.\n */\n\n\nVectorContext.prototype.drawFeature = function (feature, style) {};\n/**\n * @param {module:ol/geom/GeometryCollection} geometryCollectionGeometry Geometry\n *     collection.\n * @param {module:ol/Feature} feature Feature.\n */\n\n\nVectorContext.prototype.drawGeometryCollection = function (geometryCollectionGeometry, feature) {};\n/**\n * @param {module:ol/geom/LineString|module:ol/render/Feature} lineStringGeometry Line string geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\n\n\nVectorContext.prototype.drawLineString = function (lineStringGeometry, feature) {};\n/**\n * @param {module:ol/geom/MultiLineString|module:ol/render/Feature} multiLineStringGeometry MultiLineString geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\n\n\nVectorContext.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) {};\n/**\n * @param {module:ol/geom/MultiPoint|module:ol/render/Feature} multiPointGeometry MultiPoint geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\n\n\nVectorContext.prototype.drawMultiPoint = function (multiPointGeometry, feature) {};\n/**\n * @param {module:ol/geom/MultiPolygon} multiPolygonGeometry MultiPolygon geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\n\n\nVectorContext.prototype.drawMultiPolygon = function (multiPolygonGeometry, feature) {};\n/**\n * @param {module:ol/geom/Point|module:ol/render/Feature} pointGeometry Point geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\n\n\nVectorContext.prototype.drawPoint = function (pointGeometry, feature) {};\n/**\n * @param {module:ol/geom/Polygon|module:ol/render/Feature} polygonGeometry Polygon geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\n\n\nVectorContext.prototype.drawPolygon = function (polygonGeometry, feature) {};\n/**\n * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\n\n\nVectorContext.prototype.drawText = function (geometry, feature) {};\n/**\n * @param {module:ol/style/Fill} fillStyle Fill style.\n * @param {module:ol/style/Stroke} strokeStyle Stroke style.\n */\n\n\nVectorContext.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) {};\n/**\n * @param {module:ol/style/Image} imageStyle Image style.\n * @param {module:ol/render/canvas~DeclutterGroup=} opt_declutterGroup Declutter.\n */\n\n\nVectorContext.prototype.setImageStyle = function (imageStyle, opt_declutterGroup) {};\n/**\n * @param {module:ol/style/Text} textStyle Text style.\n * @param {module:ol/render/canvas~DeclutterGroup=} opt_declutterGroup Declutter.\n */\n\n\nVectorContext.prototype.setTextStyle = function (textStyle, opt_declutterGroup) {};\n\nexport default VectorContext;","map":null,"metadata":{},"sourceType":"module"}