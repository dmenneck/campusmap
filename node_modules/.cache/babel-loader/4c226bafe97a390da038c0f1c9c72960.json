{"ast":null,"code":"var _jsxFileName = \"/Users/dirkmennecke77/Desktop/Lageplan/src/components/Map.js\";\nimport React, { Component } from \"react\";\nimport \"ol/ol.css\";\nimport \"antd/dist/antd.css\"; //import \"../react-geo.css\";\n\nimport OlMap from \"ol/Map\";\nimport OlView from \"ol/View\";\nimport OlVector from \"ol/layer/Vector\";\nimport OlVectorSource from \"ol/source/Vector\";\nimport GeoJSON from \"ol/format/GeoJSON\";\nimport OlLayerTile from \"ol/layer/Tile\";\nimport OlSourceOsm from \"ol/source/OSM\"; //import Projection from \"ol/proj/Projection\";\n\nimport OlStamen from \"ol/source/Stamen\";\nimport { Drawer } from \"antd\";\nimport { SimpleButton, MapComponent, NominatimSearch } from \"@terrestris/react-geo\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Card, Accordion, Button } from \"react-bootstrap\";\nimport { NavLink } from \"react-router-dom\";\nimport uniSchriftzug from \"../img/uniSchriftzug.jpg\";\nimport buildingsData from \"../campusGisBuildings.geojson\";\nimport klinikumBuildings from \"../UniklinikBuildings.geojson\";\nimport roomData from \"../Raumplan.geojson\";\nimport { Style, Fill, Stroke } from \"ol/style\";\nimport Legende from \"../components/Legende.js\";\nimport Geolocation from \"../components/Geolocation.js\";\nconst layer = new OlLayerTile({\n  source: new OlSourceOsm()\n});\nconst stamenLayer = new OlLayerTile({\n  source: new OlStamen({\n    layer: \"terrain\"\n  })\n});\nconst center = [772305.02, 6608382.01]; //Cologne\n// create a new instance of ol.map in ES6 syntax\n\nconst map = new OlMap({\n  view: new OlView({\n    center: center,\n    zoom: 0.9,\n    maxResolution: 14\n  }),\n  layers: [stamenLayer]\n}); // adding GeoJSON to the map (buildings)\n\nconst vector = new OlVector({\n  source: new OlVectorSource({\n    url: buildingsData,\n    format: new GeoJSON()\n  }),\n  style: new Style({\n    fill: new Fill({\n      color: \"#354d60\"\n    })\n  }),\n  minResolution: 0.4\n});\nmap.addLayer(vector); // adding GeoJSON to the map (rooms)\n\nconst vectorTwo = new OlVector({\n  source: new OlVectorSource({\n    url: roomData,\n    format: new GeoJSON()\n  }),\n  style: new Style({\n    fill: new Fill({\n      color: \"grey\"\n    })\n  }),\n  maxResolution: 0.39999999\n});\nmap.addLayer(vectorTwo); // adding GeoJSON to the map (rooms)\n\nconst vectorThree = new OlVector({\n  source: new OlVectorSource({\n    url: klinikumBuildings,\n    format: new GeoJSON()\n  }),\n  style: new Style({\n    fill: new Fill({\n      color: \"red\"\n    })\n  }),\n  minResolution: 0.4\n});\nmap.addLayer(vectorThree);\nmap.on(\"postcompose\", map.updateSize);\n\nclass Ebenen extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      id: \"ContainerEbenen\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"EbenenBtn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"2\"), React.createElement(\"button\", {\n      className: \"EbenenBtn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"1\"), React.createElement(\"button\", {\n      className: \"EbenenBtn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"EG\"));\n  }\n\n} // displays selected buildings data (not programmed yet)\n\n\nclass Displaydata extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      id: \"displayData\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"rowOne\",\n      className: \"rowDisplayData\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Hausnummer\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Klinikum/Universit\\xE4t\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Stra\\xDFe\")), React.createElement(\"div\", {\n      id: \"rowTwo\",\n      className: \"rowDisplayData\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      id: \"Geb\\xE4udenummer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      id: \"Art\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      id: \"Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      id: \"Stra\\xDFe\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    })));\n  }\n\n} // displays layer\n\n\nclass LegendeLayer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.hideLayer = () => {\n      vector.setVisible(false);\n    };\n\n    this.showLayer = () => {\n      vector.setVisible(true);\n    };\n\n    this.hideLayerThree = () => {\n      vectorThree.setVisible(false);\n    };\n\n    this.showLayerThree = () => {\n      vectorThree.setVisible(true);\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"gridLayerLegende\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"LayerOnOff\",\n      onClick: this.hideLayer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"blue\",\n      onClick: this.showLayer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"LayerLegendeText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"Universit\\xE4t\"), React.createElement(\"button\", {\n      className: \"LayerOnOff\",\n      onClick: this.hideLayerThree,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"red\",\n      onClick: this.showLayerThree,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"LayerLegendeText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"Uniklinik\")));\n  }\n\n} // map class with map component, DisplayData Class, Simple Button and Drawer\n\n\nclass Map extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      visible: false\n    };\n\n    this.toggleDrawer = () => {\n      this.setState({\n        visible: !this.state.visible\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(Ebenen, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }), React.createElement(Legende, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }), React.createElement(MapComponent, {\n      map: map,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Map;","map":{"version":3,"sources":["/Users/dirkmennecke77/Desktop/Lageplan/src/components/Map.js"],"names":["React","Component","OlMap","OlView","OlVector","OlVectorSource","GeoJSON","OlLayerTile","OlSourceOsm","OlStamen","Drawer","SimpleButton","MapComponent","NominatimSearch","Card","Accordion","Button","NavLink","uniSchriftzug","buildingsData","klinikumBuildings","roomData","Style","Fill","Stroke","Legende","Geolocation","layer","source","stamenLayer","center","map","view","zoom","maxResolution","layers","vector","url","format","style","fill","color","minResolution","addLayer","vectorTwo","vectorThree","on","updateSize","Ebenen","render","Displaydata","LegendeLayer","hideLayer","setVisible","showLayer","hideLayerThree","showLayerThree","Map","state","visible","toggleDrawer","setState"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport \"ol/ol.css\";\nimport \"antd/dist/antd.css\";\n//import \"../react-geo.css\";\nimport OlMap from \"ol/Map\";\nimport OlView from \"ol/View\";\nimport OlVector from \"ol/layer/Vector\";\nimport OlVectorSource from \"ol/source/Vector\";\nimport GeoJSON from \"ol/format/GeoJSON\";\nimport OlLayerTile from \"ol/layer/Tile\";\nimport OlSourceOsm from \"ol/source/OSM\";\n//import Projection from \"ol/proj/Projection\";\nimport OlStamen from \"ol/source/Stamen\";\nimport { Drawer } from \"antd\";\nimport {\n  SimpleButton,\n  MapComponent,\n  NominatimSearch\n} from \"@terrestris/react-geo\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Card, Accordion, Button } from \"react-bootstrap\";\n\nimport { NavLink } from \"react-router-dom\";\n\nimport uniSchriftzug from \"../img/uniSchriftzug.jpg\";\n\nimport buildingsData from \"../campusGisBuildings.geojson\";\nimport klinikumBuildings from \"../UniklinikBuildings.geojson\";\nimport roomData from \"../Raumplan.geojson\";\nimport { Style, Fill, Stroke } from \"ol/style\";\nimport Legende from \"../components/Legende.js\";\nimport Geolocation from \"../components/Geolocation.js\";\n\nconst layer = new OlLayerTile({\n  source: new OlSourceOsm()\n});\n\nconst stamenLayer = new OlLayerTile({\n  source: new OlStamen({\n    layer: \"terrain\"\n  })\n});\n\nconst center = [772305.02, 6608382.01]; //Cologne\n\n// create a new instance of ol.map in ES6 syntax\nconst map = new OlMap({\n  view: new OlView({\n    center: center,\n    zoom: 0.9,\n    maxResolution: 14\n  }),\n  layers: [stamenLayer]\n});\n\n// adding GeoJSON to the map (buildings)\nconst vector = new OlVector({\n  source: new OlVectorSource({\n    url: buildingsData,\n    format: new GeoJSON()\n  }),\n  style: new Style({\n    fill: new Fill({\n      color: \"#354d60\"\n    })\n  }),\n  minResolution: 0.4\n});\n\nmap.addLayer(vector);\n\n// adding GeoJSON to the map (rooms)\nconst vectorTwo = new OlVector({\n  source: new OlVectorSource({\n    url: roomData,\n    format: new GeoJSON()\n  }),\n  style: new Style({\n    fill: new Fill({\n      color: \"grey\"\n    })\n  }),\n  maxResolution: 0.39999999\n});\n\nmap.addLayer(vectorTwo);\n\n// adding GeoJSON to the map (rooms)\nconst vectorThree = new OlVector({\n  source: new OlVectorSource({\n    url: klinikumBuildings,\n    format: new GeoJSON()\n  }),\n  style: new Style({\n    fill: new Fill({\n      color: \"red\"\n    })\n  }),\n  minResolution: 0.4\n});\n\nmap.addLayer(vectorThree);\n\nmap.on(\"postcompose\", map.updateSize);\n\nclass Ebenen extends Component {\n  render() {\n    return (\n      <div id='ContainerEbenen'>\n        <button className='EbenenBtn'>2</button>\n        <button className='EbenenBtn'>1</button>\n        <button className='EbenenBtn'>EG</button>\n      </div>\n    );\n  }\n}\n\n// displays selected buildings data (not programmed yet)\nclass Displaydata extends Component {\n  render() {\n    return (\n      <div id='displayData'>\n        <div id='rowOne' className='rowDisplayData'>\n          <p>Hausnummer</p>\n          <p>Klinikum/Universität</p>\n          <p>Name</p>\n          <p>Straße</p>\n        </div>\n\n        {/* the clicked table rows data from Buildings.js should apear here */}\n        <div id='rowTwo' className='rowDisplayData'>\n          <p id='Gebäudenummer'>{}</p>\n          <p id='Art'></p>\n          <p id='Name'></p>\n          <p id='Straße'></p>\n        </div>\n      </div>\n    );\n  }\n}\n\n// displays layer\nclass LegendeLayer extends Component {\n  hideLayer = () => {\n    vector.setVisible(false);\n  };\n\n  showLayer = () => {\n    vector.setVisible(true);\n  };\n\n  hideLayerThree = () => {\n    vectorThree.setVisible(false);\n  };\n\n  showLayerThree = () => {\n    vectorThree.setVisible(true);\n  };\n\n  render() {\n    return (\n      <div>\n        <div id='gridLayerLegende'>\n          <button className='LayerOnOff' onClick={this.hideLayer}></button>\n          <div id='blue' onClick={this.showLayer}></div>\n          <div className='LayerLegendeText'>Universität</div>\n          <button className='LayerOnOff' onClick={this.hideLayerThree}></button>\n          <div id='red' onClick={this.showLayerThree}></div>\n          <div className='LayerLegendeText'>Uniklinik</div>\n        </div>\n      </div>\n    );\n  }\n}\n\n// map class with map component, DisplayData Class, Simple Button and Drawer\nclass Map extends Component {\n  state = { visible: false };\n\n  toggleDrawer = () => {\n    this.setState({ visible: !this.state.visible });\n  };\n\n  render() {\n    return (\n      <div className='App'>\n        <Ebenen />\n        <Legende />\n        {/* DisplayData at the bottom left */}\n        {/*<Displaydata />*/}\n        {/* MAP */}\n        <MapComponent map={map} />\n      </div>\n    );\n  }\n}\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}