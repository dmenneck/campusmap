{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nrequire(\"antd/es/modal/style\");\n\nvar _modal = _interopRequireDefault(require(\"antd/es/modal\"));\n\nrequire(\"antd/es/input/style\");\n\nvar _input = _interopRequireDefault(require(\"antd/es/input\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _Map = _interopRequireDefault(require(\"ol/Map\"));\n\nvar _Vector = _interopRequireDefault(require(\"ol/layer/Vector\"));\n\nvar _Vector2 = _interopRequireDefault(require(\"ol/source/Vector\"));\n\nvar _Collection = _interopRequireDefault(require(\"ol/Collection\"));\n\nvar _Style = _interopRequireDefault(require(\"ol/style/Style\"));\n\nvar _Stroke = _interopRequireDefault(require(\"ol/style/Stroke\"));\n\nvar _Fill = _interopRequireDefault(require(\"ol/style/Fill\"));\n\nvar _Circle = _interopRequireDefault(require(\"ol/style/Circle\"));\n\nvar _Text = _interopRequireDefault(require(\"ol/style/Text\"));\n\nvar _Draw = _interopRequireWildcard(require(\"ol/interaction/Draw\"));\n\nvar _Select = _interopRequireDefault(require(\"ol/interaction/Select\"));\n\nvar _Modify = _interopRequireDefault(require(\"ol/interaction/Modify\"));\n\nvar _Translate = _interopRequireDefault(require(\"ol/interaction/Translate\"));\n\nvar _condition = require(\"ol/events/condition\");\n\nvar _isFunction = _interopRequireDefault(require(\"lodash/isFunction\"));\n\nvar _ToggleButton = _interopRequireDefault(require(\"../ToggleButton/ToggleButton.js\"));\n\nvar _MapUtil = _interopRequireDefault(require(\"@terrestris/ol-util/dist/MapUtil/MapUtil\"));\n\nvar _StringUtil = _interopRequireDefault(require(\"@terrestris/base-util/dist/StringUtil/StringUtil\"));\n\nvar _AnimateUtil = _interopRequireDefault(require(\"@terrestris/ol-util/dist/AnimateUtil/AnimateUtil\"));\n\nvar _Logger = _interopRequireDefault(require(\"@terrestris/base-util/dist/Logger\"));\n\nvar _constants = require(\"../../constants\");\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj[\"default\"] = obj;\n    return newObj;\n  }\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    if (i % 2) {\n      var source = arguments[i] != null ? arguments[i] : {};\n      var ownKeys = Object.keys(source);\n\n      if (typeof Object.getOwnPropertySymbols === 'function') {\n        ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n          return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n        }));\n      }\n\n      ownKeys.forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(arguments[i]));\n    }\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar TextArea = _input[\"default\"].TextArea;\n/**\n * The DigitizeButton.\n *\n * @class The DigitizeButton\n * @extends React.Component\n *\n */\n\nvar DigitizeButton =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DigitizeButton, _React$Component);\n  /**\n   * The className added to this component.\n   *\n   * @type {String}\n   * @private\n   */\n\n  /**\n   * Currently existing digitize features as collection.\n   *\n   * @type {OlCollection}\n   * @private\n   */\n\n  /**\n   * Currently drawn feature which should be represent as label or postit.\n   * @type {OlFeature}\n   * @private\n   */\n\n  /**\n   * Reference to OL select interaction which will be used in edit mode.\n   * @type {OlInteractionSelect}\n   * @private\n   */\n\n  /**\n   * Name of point draw type.\n   * @private\n   */\n\n  /**\n   * Name of line string draw type.\n   * @private\n   */\n\n  /**\n   * Name of polygon draw type.\n   * @private\n   */\n\n  /**\n   * Name of circle draw type.\n   * @private\n   */\n\n  /**\n   * Name of rectangle draw type.\n   * @private\n   */\n\n  /**\n   * Name of text draw type.\n   * @private\n   */\n\n  /**\n   * Name of copy edit type.\n   * @private\n   */\n\n  /**\n   * Name of edit edit type.\n   * @private\n   */\n\n  /**\n   * Name of delete edit type.\n   * @private\n   */\n\n  /**\n   * Default fill color used in style object of drawn features.\n   *\n   * @type {String}\n   */\n\n  /**\n   * Default stroke color used in style object of drawn features.\n   *\n   * @type {String}\n   */\n\n  /**\n   * Hit detection in pixels used for select interaction.\n   *\n   * @type {Number}\n   */\n\n  /**\n   * Default style for digitized points.\n   *\n   * @type {OlStyleStyle}\n   */\n\n  /**\n   * Default style for digitized lines.\n   *\n   * @type {OlStyleStyle}\n   */\n\n  /**\n   * Default style for digitized polygons or circles.\n   *\n   * @type {OlStyleStyle}\n   */\n\n  /**\n   * Default style for digitized labels.\n   *\n   * @type {OlStyleStyle}\n   */\n\n  /**\n   * The properties.\n   * @type {Object}\n   */\n\n  /**\n   * The default properties.\n   * @type {Object}\n   */\n\n\n  function DigitizeButton(props) {\n    var _this;\n\n    _classCallCheck(this, DigitizeButton);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DigitizeButton).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"className\", \"\".concat(_constants.CSS_PREFIX, \"digitizebutton\"));\n\n    _defineProperty(_assertThisInitialized(_this), \"_digitizeFeatures\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_digitizeTextFeature\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_selectInteraction\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"onToggle\", function (pressed) {\n      var _this$props = _this.props,\n          map = _this$props.map,\n          drawType = _this$props.drawType,\n          editType = _this$props.editType,\n          drawStyle = _this$props.drawStyle,\n          onFeatureSelect = _this$props.onFeatureSelect;\n      var _this$state = _this.state,\n          digitizeLayer = _this$state.digitizeLayer,\n          interactions = _this$state.interactions;\n\n      _this.props.onToggle(pressed);\n\n      _this._digitizeFeatures = digitizeLayer.getSource().getFeaturesCollection();\n\n      if (pressed) {\n        if (drawStyle) {\n          digitizeLayer.setStyle(_this.getDigitizeStyleFunction);\n        }\n\n        if (drawType) {\n          _this.createDrawInteraction(pressed);\n        } else if (editType) {\n          _this.createSelectOrModifyInteraction();\n        }\n      } else {\n        interactions.forEach(function (i) {\n          return map.removeInteraction(i);\n        });\n\n        if (drawType === DigitizeButton.TEXT_DRAW_TYPE) {\n          _this._digitizeFeatures.un('add', _this.handleTextAdding);\n        } else {\n          if (_this._selectInteraction) {\n            _this._selectInteraction.getFeatures().clear();\n          }\n\n          if (editType === DigitizeButton.DELETE_EDIT_TYPE) {\n            _this._selectInteraction.un('select', _this.onFeatureRemove);\n          }\n\n          if (editType === DigitizeButton.COPY_EDIT_TYPE) {\n            _this._selectInteraction.un('select', _this.onFeatureCopy);\n          }\n\n          if ((0, _isFunction[\"default\"])(onFeatureSelect) && editType === DigitizeButton.EDIT_EDIT_TYPE) {\n            _this._selectInteraction.un('select', onFeatureSelect);\n          }\n\n          map.un('pointermove', _this.onPointerMove);\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"createDigitizeLayer\", function () {\n      var _this$props2 = _this.props,\n          digitizeLayerName = _this$props2.digitizeLayerName,\n          map = _this$props2.map;\n\n      var digitizeLayer = _MapUtil[\"default\"].getLayerByName(map, digitizeLayerName);\n\n      if (!digitizeLayer) {\n        digitizeLayer = new _Vector[\"default\"]({\n          name: digitizeLayerName,\n          source: new _Vector2[\"default\"]({\n            features: new _Collection[\"default\"]()\n          })\n        });\n        map.addLayer(digitizeLayer);\n      }\n\n      digitizeLayer.setStyle(_this.getDigitizeStyleFunction);\n\n      _this.setState({\n        digitizeLayer: digitizeLayer\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getDigitizeStyleFunction\", function (feature) {\n      var drawStyle = _this.props.drawStyle;\n      var styleObj;\n\n      switch (feature.getGeometry().getType()) {\n        case DigitizeButton.POINT_DRAW_TYPE:\n          {\n            if (!feature.get('isLabel')) {\n              styleObj = drawStyle || new _Style[\"default\"]({\n                image: new _Circle[\"default\"]({\n                  radius: 7,\n                  fill: new _Fill[\"default\"]({\n                    color: DigitizeButton.DEFAULT_FILL_COLOR\n                  }),\n                  stroke: new _Stroke[\"default\"]({\n                    color: DigitizeButton.DEFAULT_STROKE_COLOR\n                  })\n                })\n              });\n            } else {\n              styleObj = drawStyle || new _Style[\"default\"]({\n                text: new _Text[\"default\"]({\n                  text: feature.get('label'),\n                  offsetX: 5,\n                  offsetY: 5,\n                  font: '12px sans-serif',\n                  fill: new _Fill[\"default\"]({\n                    color: DigitizeButton.DEFAULT_FILL_COLOR\n                  }),\n                  stroke: new _Stroke[\"default\"]({\n                    color: DigitizeButton.DEFAULT_STROKE_COLOR\n                  })\n                })\n              });\n            }\n\n            return styleObj;\n          }\n\n        case DigitizeButton.LINESTRING_DRAW_TYPE:\n          {\n            styleObj = drawStyle || new _Style[\"default\"]({\n              stroke: new _Stroke[\"default\"]({\n                color: DigitizeButton.DEFAULT_STROKE_COLOR,\n                width: 2\n              })\n            });\n            return styleObj;\n          }\n\n        case DigitizeButton.POLYGON_DRAW_TYPE:\n        case DigitizeButton.CIRCLE_DRAW_TYPE:\n          {\n            styleObj = drawStyle || new _Style[\"default\"]({\n              fill: new _Fill[\"default\"]({\n                color: DigitizeButton.DEFAULT_FILL_COLOR\n              }),\n              stroke: new _Stroke[\"default\"]({\n                color: DigitizeButton.DEFAULT_STROKE_COLOR,\n                width: 2\n              })\n            });\n            return styleObj;\n          }\n\n        default:\n          {\n            break;\n          }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getSelectedStyleFunction\", function (feature, res, text) {\n      var _this$props3 = _this.props,\n          selectFillColor = _this$props3.selectFillColor,\n          selectStrokeColor = _this$props3.selectStrokeColor;\n\n      if (feature.get('label')) {\n        text = feature.get('label');\n      }\n\n      return new _Style[\"default\"]({\n        image: new _Circle[\"default\"]({\n          radius: 7,\n          fill: new _Fill[\"default\"]({\n            color: selectFillColor\n          }),\n          stroke: new _Stroke[\"default\"]({\n            color: selectStrokeColor\n          })\n        }),\n        text: new _Text[\"default\"]({\n          text: text ? text : '',\n          offsetX: 5,\n          offsetY: 5,\n          font: '12px sans-serif',\n          fill: new _Fill[\"default\"]({\n            color: selectFillColor\n          }),\n          stroke: new _Stroke[\"default\"]({\n            color: selectStrokeColor\n          })\n        }),\n        stroke: new _Stroke[\"default\"]({\n          color: selectStrokeColor,\n          width: 2\n        }),\n        fill: new _Fill[\"default\"]({\n          color: selectFillColor\n        })\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"createDrawInteraction\", function (pressed) {\n      var _this$props4 = _this.props,\n          drawType = _this$props4.drawType,\n          map = _this$props4.map,\n          onDrawEnd = _this$props4.onDrawEnd,\n          onDrawStart = _this$props4.onDrawStart,\n          digitizeLayerName = _this$props4.digitizeLayerName,\n          drawInteractionConfig = _this$props4.drawInteractionConfig;\n      var geometryFunction;\n      var type = drawType; // check whether the digitizeLayer is in map and set it from state if not\n\n      var digitizeLayer = _MapUtil[\"default\"].getLayerByName(map, digitizeLayerName);\n\n      if (!digitizeLayer) {\n        map.addLayer(_this.state.digitizeLayer);\n      }\n\n      if (drawType === DigitizeButton.RECTANGLE_DRAW_TYPE) {\n        geometryFunction = (0, _Draw.createBox)();\n        type = DigitizeButton.CIRCLE_DRAW_TYPE;\n      } else if (drawType === DigitizeButton.TEXT_DRAW_TYPE) {\n        type = DigitizeButton.POINT_DRAW_TYPE;\n\n        _this._digitizeFeatures.on('add', _this.handleTextAdding);\n      }\n\n      var drawInteraction = new _Draw[\"default\"](_objectSpread({\n        source: _this.state.digitizeLayer.getSource(),\n        type: type,\n        geometryFunction: geometryFunction,\n        style: _this.getDigitizeStyleFunction,\n        freehandCondition: _condition.never\n      }, drawInteractionConfig));\n\n      if (onDrawEnd) {\n        drawInteraction.on('drawend', onDrawEnd);\n      }\n\n      if (onDrawStart) {\n        drawInteraction.on('drawstart', onDrawStart);\n      }\n\n      map.addInteraction(drawInteraction);\n\n      _this.setState({\n        interactions: [drawInteraction]\n      }, function () {\n        drawInteraction.setActive(pressed);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"createSelectOrModifyInteraction\", function () {\n      var _this$props5 = _this.props,\n          editType = _this$props5.editType,\n          map = _this$props5.map,\n          selectInteractionConfig = _this$props5.selectInteractionConfig,\n          modifyInteractionConfig = _this$props5.modifyInteractionConfig,\n          translateInteractionConfig = _this$props5.translateInteractionConfig,\n          onFeatureSelect = _this$props5.onFeatureSelect;\n      _this._selectInteraction = new _Select[\"default\"](_objectSpread({\n        condition: _condition.singleClick,\n        hitTolerance: DigitizeButton.HIT_TOLERANCE,\n        style: _this.getSelectedStyleFunction\n      }, selectInteractionConfig));\n\n      if (editType === DigitizeButton.DELETE_EDIT_TYPE) {\n        _this._selectInteraction.on('select', _this.onFeatureRemove);\n      } else if (editType === DigitizeButton.COPY_EDIT_TYPE) {\n        _this._selectInteraction.on('select', _this.onFeatureCopy);\n      }\n\n      if ((0, _isFunction[\"default\"])(onFeatureSelect) && editType === DigitizeButton.EDIT_EDIT_TYPE) {\n        _this._selectInteraction.on('select', onFeatureSelect);\n      }\n\n      var interactions = [_this._selectInteraction];\n\n      if (editType === DigitizeButton.EDIT_EDIT_TYPE) {\n        var edit = new _Modify[\"default\"](_objectSpread({\n          features: _this._selectInteraction.getFeatures(),\n          deleteCondition: _condition.singleClick,\n          style: _this.getSelectedStyleFunction\n        }, modifyInteractionConfig));\n        edit.on('modifystart', _this.onModifyStart);\n        edit.on('modifyend', _this.onModifyEnd);\n        var translate = new _Translate[\"default\"](_objectSpread({\n          features: _this._selectInteraction.getFeatures()\n        }, translateInteractionConfig));\n        translate.on('translatestart', _this.onTranslateStart);\n        translate.on('translateend', _this.onTranslateEnd);\n        translate.on('translating', _this.onTranslating);\n        interactions.push(edit, translate);\n      }\n\n      interactions.forEach(function (i) {\n        return map.addInteraction(i);\n      });\n      map.on('pointermove', _this.onPointerMove);\n\n      _this.setState({\n        interactions: interactions\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onFeatureRemove\", function (evt) {\n      var _this$props6 = _this.props,\n          onFeatureRemove = _this$props6.onFeatureRemove,\n          onFeatureSelect = _this$props6.onFeatureSelect;\n\n      if ((0, _isFunction[\"default\"])(onFeatureRemove)) {\n        onFeatureRemove(evt);\n      }\n\n      if ((0, _isFunction[\"default\"])(onFeatureSelect)) {\n        onFeatureSelect(evt);\n      }\n\n      var feat = evt.selected[0];\n\n      _this._selectInteraction.getFeatures().remove(feat);\n\n      _this.state.digitizeLayer.getSource().removeFeature(feat);\n\n      _this.props.map.renderSync();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onFeatureCopy\", function (evt) {\n      var _this$props7 = _this.props,\n          onFeatureCopy = _this$props7.onFeatureCopy,\n          onFeatureSelect = _this$props7.onFeatureSelect;\n      var feat = evt.selected[0];\n\n      if (!feat) {\n        return;\n      }\n\n      if ((0, _isFunction[\"default\"])(onFeatureCopy)) {\n        onFeatureCopy(evt);\n      }\n\n      if ((0, _isFunction[\"default\"])(onFeatureSelect)) {\n        onFeatureSelect(evt);\n      }\n\n      var copy = feat.clone();\n      copy.setStyle(feat.getStyle());\n\n      _this._digitizeFeatures.push(copy);\n\n      _AnimateUtil[\"default\"].moveFeature(_this.props.map, copy, 500, 50, feat.getStyle());\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onModifyStart\", function (evt) {\n      var onModifyStart = _this.props.onModifyStart;\n\n      if ((0, _isFunction[\"default\"])(onModifyStart)) {\n        onModifyStart(evt);\n      }\n\n      var feature = evt.features.getArray()[0];\n\n      if (feature.get('isLabel')) {\n        _this._digitizeTextFeature = feature;\n        var textLabel = '';\n\n        if (feature.getStyle() && feature.getStyle().getText()) {\n          textLabel = feature.getStyle().getText().getText();\n        } else if (feature.get('label')) {\n          textLabel = feature.get('label');\n        }\n\n        _this.setState({\n          showLabelPrompt: true,\n          textLabel: textLabel\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onModifyEnd\", function (evt) {\n      var onModifyEnd = _this.props.onModifyEnd;\n\n      if ((0, _isFunction[\"default\"])(onModifyEnd)) {\n        onModifyEnd(evt);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onTranslateStart\", function (evt) {\n      var onTranslateStart = _this.props.onTranslateStart;\n\n      if ((0, _isFunction[\"default\"])(onTranslateStart)) {\n        onTranslateStart(evt);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onTranslateEnd\", function (evt) {\n      var onTranslateEnd = _this.props.onTranslateEnd;\n\n      if ((0, _isFunction[\"default\"])(onTranslateEnd)) {\n        onTranslateEnd(evt);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onTranslating\", function (evt) {\n      var onTranslating = _this.props.onTranslating;\n\n      if ((0, _isFunction[\"default\"])(onTranslating)) {\n        onTranslating(evt);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleTextAdding\", function (evt) {\n      _this.setState({\n        showLabelPrompt: true\n      });\n\n      _this._digitizeTextFeature = evt.element;\n\n      _this._digitizeTextFeature.set('isLabel', true);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onModalLabelOk\", function () {\n      var onModalLabelOk = _this.props.onModalLabelOk;\n\n      _this.setState({\n        showLabelPrompt: false\n      }, function () {\n        _this.setTextOnFeature(_this._digitizeTextFeature, onModalLabelOk);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onModalLabelCancel\", function () {\n      var onModalLabelCancel = _this.props.onModalLabelCancel;\n\n      _this.setState({\n        showLabelPrompt: false,\n        textLabel: ''\n      }, function () {\n        if (!(_this.state.interactions.length > 1)) {\n          _this._digitizeFeatures.remove(_this._digitizeTextFeature);\n\n          _this._digitizeTextFeature = null;\n        }\n\n        if ((0, _isFunction[\"default\"])(onModalLabelCancel)) {\n          onModalLabelCancel();\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setTextOnFeature\", function (feat, onModalOkCbk) {\n      var maxLabelLineLength = _this.props.maxLabelLineLength;\n      var textLabel = _this.state.textLabel;\n      var label = textLabel;\n\n      if (maxLabelLineLength) {\n        label = _StringUtil[\"default\"].stringDivider(textLabel, maxLabelLineLength, '\\n');\n      }\n\n      feat.set('label', label);\n\n      _this.setState({\n        textLabel: ''\n      }, function () {\n        if ((0, _isFunction[\"default\"])(onModalOkCbk)) {\n          onModalOkCbk(feat, label);\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onLabelChange\", function (evt) {\n      _this.setState({\n        textLabel: evt.target.value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onPointerMove\", function (evt) {\n      if (evt.dragging) {\n        return;\n      }\n\n      var _this$props8 = _this.props,\n          map = _this$props8.map,\n          digitizeLayerName = _this$props8.digitizeLayerName;\n      var pixel = map.getEventPixel(evt.originalEvent);\n      var hit = map.hasFeatureAtPixel(pixel, {\n        layerFilter: function layerFilter(l) {\n          return l.get('name') === digitizeLayerName;\n        },\n        hitTolerance: DigitizeButton.HIT_TOLERANCE\n      });\n      map.getTargetElement().style.cursor = hit ? 'pointer' : '';\n    });\n\n    if (!_this.props.drawType && !_this.props.editType) {\n      _Logger[\"default\"].warn('Neither \"drawType\" nor \"editType\" was provided. Digitize ' + 'button won\\'t work properly!');\n    }\n\n    _this.state = {\n      digitizeLayer: null,\n      interactions: [],\n      showLabelPrompt: false,\n      textLabel: ''\n    };\n    return _this;\n  }\n  /**\n   * `componentDidMount` method of the DigitizeButton. Just calls\n   * `createDigitizeLayer` method.\n   */\n\n\n  _createClass(DigitizeButton, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.createDigitizeLayer();\n    }\n    /**\n     * Called on componentWillUnmount lifecycle.\n     */\n\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var map = this.props.map;\n      var interactions = this.state.interactions;\n      interactions.forEach(function (i) {\n        return map.removeInteraction(i);\n      });\n    }\n    /**\n     * Called when the digitize button is toggled. If the button state is pressed,\n     * the appropriate draw, modify or select interaction will be created.\n     * Otherwise, by untoggling, the same previously created interaction will be\n     * removed from the map.\n     *\n     * @param {Boolean} pressed Whether the digitize button is pressed or not.\n     */\n\n  }, {\n    key: \"render\",\n\n    /**\n     * The render function.\n     */\n    value: function render() {\n      var _this$props9 = this.props,\n          className = _this$props9.className,\n          map = _this$props9.map,\n          drawType = _this$props9.drawType,\n          editType = _this$props9.editType,\n          digitizeLayerName = _this$props9.digitizeLayerName,\n          drawStyle = _this$props9.drawStyle,\n          selectFillColor = _this$props9.selectFillColor,\n          selectStrokeColor = _this$props9.selectStrokeColor,\n          modalPromptTitle = _this$props9.modalPromptTitle,\n          modalPromptOkButtonText = _this$props9.modalPromptOkButtonText,\n          modalPromptCancelButtonText = _this$props9.modalPromptCancelButtonText,\n          onDrawStart = _this$props9.onDrawStart,\n          onDrawEnd = _this$props9.onDrawEnd,\n          onModifyStart = _this$props9.onModifyStart,\n          onModifyEnd = _this$props9.onModifyEnd,\n          onTranslateStart = _this$props9.onTranslateStart,\n          onTranslateEnd = _this$props9.onTranslateEnd,\n          onTranslating = _this$props9.onTranslating,\n          onFeatureRemove = _this$props9.onFeatureRemove,\n          onFeatureCopy = _this$props9.onFeatureCopy,\n          onFeatureSelect = _this$props9.onFeatureSelect,\n          drawInteractionConfig = _this$props9.drawInteractionConfig,\n          selectInteractionConfig = _this$props9.selectInteractionConfig,\n          modifyInteractionConfig = _this$props9.modifyInteractionConfig,\n          translateInteractionConfig = _this$props9.translateInteractionConfig,\n          onToggle = _this$props9.onToggle,\n          onModalLabelOk = _this$props9.onModalLabelOk,\n          onModalLabelCancel = _this$props9.onModalLabelCancel,\n          maxLabelLineLength = _this$props9.maxLabelLineLength,\n          passThroughProps = _objectWithoutProperties(_this$props9, [\"className\", \"map\", \"drawType\", \"editType\", \"digitizeLayerName\", \"drawStyle\", \"selectFillColor\", \"selectStrokeColor\", \"modalPromptTitle\", \"modalPromptOkButtonText\", \"modalPromptCancelButtonText\", \"onDrawStart\", \"onDrawEnd\", \"onModifyStart\", \"onModifyEnd\", \"onTranslateStart\", \"onTranslateEnd\", \"onTranslating\", \"onFeatureRemove\", \"onFeatureCopy\", \"onFeatureSelect\", \"drawInteractionConfig\", \"selectInteractionConfig\", \"modifyInteractionConfig\", \"translateInteractionConfig\", \"onToggle\", \"onModalLabelOk\", \"onModalLabelCancel\", \"maxLabelLineLength\"]);\n\n      var finalClassName = className ? \"\".concat(className, \" \").concat(this.className) : this.className;\n      var btnWrapperClass = \"\".concat(_constants.CSS_PREFIX, \"digitize-button-wrapper\");\n      return _react[\"default\"].createElement(\"span\", {\n        className: btnWrapperClass\n      }, _react[\"default\"].createElement(_ToggleButton[\"default\"], _extends({\n        onToggle: this.onToggle,\n        className: finalClassName\n      }, passThroughProps)), this.state.showLabelPrompt ? _react[\"default\"].createElement(_modal[\"default\"], {\n        title: modalPromptTitle,\n        okText: modalPromptOkButtonText,\n        cancelText: modalPromptCancelButtonText,\n        visible: this.state.showLabelPrompt,\n        closable: false,\n        onOk: this.onModalLabelOk,\n        onCancel: this.onModalLabelCancel\n      }, _react[\"default\"].createElement(TextArea, {\n        value: this.state.textLabel,\n        onChange: this.onLabelChange,\n        autosize: true\n      })) : null);\n    }\n  }]);\n\n  return DigitizeButton;\n}(_react[\"default\"].Component);\n\n_defineProperty(DigitizeButton, \"POINT_DRAW_TYPE\", 'Point');\n\n_defineProperty(DigitizeButton, \"LINESTRING_DRAW_TYPE\", 'LineString');\n\n_defineProperty(DigitizeButton, \"POLYGON_DRAW_TYPE\", 'Polygon');\n\n_defineProperty(DigitizeButton, \"CIRCLE_DRAW_TYPE\", 'Circle');\n\n_defineProperty(DigitizeButton, \"RECTANGLE_DRAW_TYPE\", 'Rectangle');\n\n_defineProperty(DigitizeButton, \"TEXT_DRAW_TYPE\", 'Text');\n\n_defineProperty(DigitizeButton, \"COPY_EDIT_TYPE\", 'Copy');\n\n_defineProperty(DigitizeButton, \"EDIT_EDIT_TYPE\", 'Edit');\n\n_defineProperty(DigitizeButton, \"DELETE_EDIT_TYPE\", 'Delete');\n\n_defineProperty(DigitizeButton, \"DEFAULT_FILL_COLOR\", 'rgba(154, 26, 56, 0.5)');\n\n_defineProperty(DigitizeButton, \"DEFAULT_STROKE_COLOR\", 'rgba(154, 26, 56, 0.8)');\n\n_defineProperty(DigitizeButton, \"HIT_TOLERANCE\", 5);\n\n_defineProperty(DigitizeButton, \"DEFAULT_POINT_STYLE\", new _Style[\"default\"]({\n  image: new _Circle[\"default\"]({\n    radius: 7,\n    fill: new _Fill[\"default\"]({\n      color: DigitizeButton.DEFAULT_FILL_COLOR\n    }),\n    stroke: new _Stroke[\"default\"]({\n      color: DigitizeButton.DEFAULT_STROKE_COLOR\n    })\n  })\n}));\n\n_defineProperty(DigitizeButton, \"DEFAULT_LINESTRING_STYLE\", new _Style[\"default\"]({\n  stroke: new _Stroke[\"default\"]({\n    color: DigitizeButton.DEFAULT_STROKE_COLOR,\n    width: 2\n  })\n}));\n\n_defineProperty(DigitizeButton, \"DEFAULT_POLYGON_STYLE\", new _Style[\"default\"]({\n  fill: new _Fill[\"default\"]({\n    color: DigitizeButton.DEFAULT_FILL_COLOR\n  }),\n  stroke: new _Stroke[\"default\"]({\n    color: DigitizeButton.DEFAULT_STROKE_COLOR,\n    width: 2\n  })\n}));\n\n_defineProperty(DigitizeButton, \"DEFAULT_TEXT_STYLE\", new _Style[\"default\"]({\n  text: new _Text[\"default\"]({\n    text: '',\n    offsetX: 5,\n    offsetY: 5,\n    font: '12px sans-serif',\n    fill: new _Fill[\"default\"]({\n      color: DigitizeButton.DEFAULT_FILL_COLOR\n    }),\n    stroke: new _Stroke[\"default\"]({\n      color: DigitizeButton.DEFAULT_STROKE_COLOR\n    })\n  })\n}));\n\n_defineProperty(DigitizeButton, \"propTypes\", {\n  /**\n   * The className which should be added.\n   *\n   * @type {String}\n   */\n  className: _propTypes[\"default\"].string,\n\n  /**\n   * Instance of OL map this component is bound to.\n   *\n   * @type {OlMap}\n   */\n  map: _propTypes[\"default\"].instanceOf(_Map[\"default\"]).isRequired,\n\n  /**\n   * Whether the line, point, polygon, circle, rectangle or text shape should\n   * be drawn.\n   *\n   * @type {String}\n   */\n  drawType: _propTypes[\"default\"].oneOf(['Point', 'LineString', 'Polygon', 'Circle', 'Rectangle', 'Text']),\n\n  /**\n   * Whether the digitize feature should be deleted, copied or modified.\n   * be drawn.\n   *\n   * @type {String}\n   */\n  editType: _propTypes[\"default\"].oneOf(['Copy', 'Edit', 'Delete']),\n\n  /**\n   * Name of system vector layer which will be used for digitize features.\n   *\n   * @type {String}\n   */\n  digitizeLayerName: _propTypes[\"default\"].string,\n\n  /**\n   * Fill color of selected digitize feature.\n   *\n   * @type {String}\n   */\n  selectFillColor: _propTypes[\"default\"].string,\n\n  /**\n   * Stroke color of selected digitize feature.\n   *\n   * @type {String}\n   */\n  selectStrokeColor: _propTypes[\"default\"].string,\n\n  /**\n   * Title for modal used for input of labels for digitize features.\n   *\n   * @type {String}\n   */\n  modalPromptTitle: _propTypes[\"default\"].string,\n\n  /**\n   * Text string for `OK` button of the modal.\n   *\n   * @type {String}\n   */\n  modalPromptOkButtonText: _propTypes[\"default\"].string,\n\n  /**\n   * Text string for `Cancel` button of the modal.\n   *\n   * @type {String}\n   */\n  modalPromptCancelButtonText: _propTypes[\"default\"].string,\n\n  /**\n   * Style object / style function for drawn feature.\n   *\n   * @type {OlStyleStyle | FeatureStyleFunction}\n   */\n  drawStyle: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].instanceOf(_Style[\"default\"]), _propTypes[\"default\"].func]),\n\n  /**\n   * Listener function for the 'drawend' event of an ol.interaction.Draw.\n   * See https://openlayers.org/en/latest/apidoc/module-ol_interaction_Draw-DrawEvent.html\n   * for more information.\n   */\n  onDrawEnd: _propTypes[\"default\"].func,\n\n  /**\n   * Listener function for the 'drawstart' event of an ol.interaction.Draw.\n   * See https://openlayers.org/en/latest/apidoc/module-ol_interaction_Draw-DrawEvent.html\n   * for more information.\n   */\n  onDrawStart: _propTypes[\"default\"].func,\n\n  /**\n   * Listener function for the 'modifystart' event of an ol.interaction.Modify.\n   * See https://openlayers.org/en/latest/apidoc/module-ol_interaction_Modify-ModifyEvent.html\n   * for more information.\n   */\n  onModifyStart: _propTypes[\"default\"].func,\n\n  /**\n   * Listener function for the 'modifyend' event of an ol.interaction.Modify.\n   * See https://openlayers.org/en/latest/apidoc/module-ol_interaction_Modify-ModifyEvent.html\n   * for more information.\n   */\n  onModifyEnd: _propTypes[\"default\"].func,\n\n  /**\n   * Listener function for the 'translatestart' event of an ol.interaction.Translate.\n   * See https://openlayers.org/en/latest/apidoc/module-ol_interaction_Translate-TranslateEvent.html\n   * for more information.\n   */\n  onTranslateStart: _propTypes[\"default\"].func,\n\n  /**\n   * Listener function for the 'translateend' event of an ol.interaction.Translate.\n   * See https://openlayers.org/en/latest/apidoc/module-ol_interaction_Translate-TranslateEvent.html\n   * for more information.\n   */\n  onTranslateEnd: _propTypes[\"default\"].func,\n\n  /**\n   * Listener function for the 'translating' event of an ol.interaction.Translate.\n   * See https://openlayers.org/en/latest/apidoc/module-ol_interaction_Translate-TranslateEvent.html\n   * for more information.\n   */\n  onTranslating: _propTypes[\"default\"].func,\n\n  /**\n   * Listener function for the 'select' event of the ol.interaction.Select\n   * if in `Delete` mode.\n   * See https://openlayers.org/en/latest/apidoc/module-ol_interaction_Select-SelectEvent.html\n   * for more information.\n   */\n  onFeatureRemove: _propTypes[\"default\"].func,\n\n  /**\n   * Listener function for the 'select' event of the ol.interaction.Select\n   * if in `Copy` mode.\n   * See https://openlayers.org/en/latest/apidoc/module-ol_interaction_Select-SelectEvent.html\n   * for more information.\n   */\n  onFeatureCopy: _propTypes[\"default\"].func,\n\n  /**\n   * Additional configuration object to apply to the ol.interaction.Draw.\n   * See https://openlayers.org/en/latest/apidoc/module-ol_interaction_Draw-Draw.html\n   * for more information\n   *\n   * Note: The keys source, type, geometryFunction, style and freehandCondition\n   *       are handled internally and shouldn't be overwritten without any\n   *       specific cause.\n   */\n  drawInteractionConfig: _propTypes[\"default\"].object,\n\n  /**\n   * Additional configuration object to apply to the ol.interaction.Select.\n   * See https://openlayers.org/en/latest/apidoc/module-ol_interaction_Select-Select.html\n   * for more information\n   *\n   * Note: The keys condition, hitTolerance and style are handled internally\n   *       and shouldn't be overwritten without any specific cause.\n   */\n  selectInteractionConfig: _propTypes[\"default\"].object,\n\n  /**\n   * Additional configuration object to apply to the ol.interaction.Modify.\n   * See https://openlayers.org/en/latest/apidoc/module-ol_interaction_Modify-Modify.html\n   * for more information\n   *\n   * Note: The keys features, deleteCondition and style are handled internally\n   *       and shouldn't be overwritten without any specific cause.\n   */\n  modifyInteractionConfig: _propTypes[\"default\"].object,\n\n  /**\n   * Additional configuration object to apply to the ol.interaction.Translate.\n   * See https://openlayers.org/en/latest/apidoc/module-ol_interaction_Translate-Translate.html\n   * for more information\n   *\n   * Note: The key feature is handled internally and shouldn't be overwritten\n   *       without any specific cause.\n   */\n  translateInteractionConfig: _propTypes[\"default\"].object,\n\n  /**\n   * A custom onToogle function that will be called\n   * if button is toggled\n   *\n   * @type {Function} onToggle\n   */\n  onToggle: _propTypes[\"default\"].func,\n\n  /**\n   * Callback function that will be called\n   * when the ok-button of the modal was clicked\n   *\n   * @type {Function} onModalLabelOk\n   */\n  onModalLabelOk: _propTypes[\"default\"].func,\n\n  /**\n   * Callback function that will be called\n   * when the cancel-button of the modal was clicked\n   *\n   * @type {Function} onModalLabelCancel\n   */\n  onModalLabelCancel: _propTypes[\"default\"].func,\n\n  /**\n   * Listener function for the 'select' event of the ol.interaction.Select\n   * if in `Edit` mode.\n   * Can be also called inside of 'select' listener function of\n   * the ol.interaction.Select in `Copy` and `Delete` mode if provided.\n   * See https://openlayers.org/en/latest/apidoc/module-ol_interaction_Select.html\n   * for more information.\n   */\n  onFeatureSelect: _propTypes[\"default\"].func,\n\n  /**\n   * Maximal length of feature label.\n   * If exceeded label will be divided into multiple lines. Optional.\n   *\n   * @type {Number} maxLabelLineLength\n   */\n  maxLabelLineLength: _propTypes[\"default\"].number\n});\n\n_defineProperty(DigitizeButton, \"defaultProps\", {\n  digitizeLayerName: 'react-geo_digitize',\n  selectFillColor: 'rgba(240, 240, 90, 0.5)',\n  selectStrokeColor: 'rgba(220, 120, 20, 0.8)',\n  modalPromptTitle: 'Label',\n  modalPromptOkButtonText: 'Ok',\n  modalPromptCancelButtonText: 'Cancel',\n  drawInteractionConfig: {},\n  selectInteractionConfig: {},\n  modifyInteractionConfig: {},\n  translateInteractionConfig: {},\n  onToggle: function onToggle() {}\n  /**\n   * Creates the DigitizeButton.\n   *\n   * @constructs DigitizeButton\n   */\n\n});\n\nvar _default = DigitizeButton;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/dirkmennecke77/Desktop/Lageplan/node_modules/@terrestris/react-geo/dist/Button/DigitizeButton/DigitizeButton.js"],"names":["Object","defineProperty","exports","value","require","_modal","_interopRequireDefault","_input","_react","_propTypes","_Map","_Vector","_Vector2","_Collection","_Style","_Stroke","_Fill","_Circle","_Text","_Draw","_interopRequireWildcard","_Select","_Modify","_Translate","_condition","_isFunction","_ToggleButton","_MapUtil","_StringUtil","_AnimateUtil","_Logger","_constants","obj","__esModule","newObj","key","prototype","hasOwnProperty","call","desc","getOwnPropertyDescriptor","get","set","_typeof","Symbol","iterator","constructor","_extends","assign","target","i","arguments","length","source","apply","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","indexOf","propertyIsEnumerable","sourceKeys","keys","_objectSpread","ownKeys","concat","filter","sym","enumerable","forEach","_defineProperty","defineProperties","getOwnPropertyDescriptors","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","descriptor","configurable","writable","_createClass","protoProps","staticProps","_possibleConstructorReturn","self","_assertThisInitialized","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","ReferenceError","_inherits","subClass","superClass","create","_setPrototypeOf","p","TextArea","DigitizeButton","_React$Component","_this","CSS_PREFIX","pressed","_this$props","map","drawType","editType","drawStyle","onFeatureSelect","_this$state","state","digitizeLayer","interactions","onToggle","_digitizeFeatures","getSource","getFeaturesCollection","setStyle","getDigitizeStyleFunction","createDrawInteraction","createSelectOrModifyInteraction","removeInteraction","TEXT_DRAW_TYPE","un","handleTextAdding","_selectInteraction","getFeatures","clear","DELETE_EDIT_TYPE","onFeatureRemove","COPY_EDIT_TYPE","onFeatureCopy","EDIT_EDIT_TYPE","onPointerMove","_this$props2","digitizeLayerName","getLayerByName","name","features","addLayer","setState","feature","styleObj","getGeometry","getType","POINT_DRAW_TYPE","image","radius","fill","color","DEFAULT_FILL_COLOR","stroke","DEFAULT_STROKE_COLOR","text","offsetX","offsetY","font","LINESTRING_DRAW_TYPE","width","POLYGON_DRAW_TYPE","CIRCLE_DRAW_TYPE","res","_this$props3","selectFillColor","selectStrokeColor","_this$props4","onDrawEnd","onDrawStart","drawInteractionConfig","geometryFunction","type","RECTANGLE_DRAW_TYPE","createBox","on","drawInteraction","style","freehandCondition","never","addInteraction","setActive","_this$props5","selectInteractionConfig","modifyInteractionConfig","translateInteractionConfig","condition","singleClick","hitTolerance","HIT_TOLERANCE","getSelectedStyleFunction","edit","deleteCondition","onModifyStart","onModifyEnd","translate","onTranslateStart","onTranslateEnd","onTranslating","push","evt","_this$props6","feat","selected","remove","removeFeature","renderSync","_this$props7","copy","clone","getStyle","moveFeature","getArray","_digitizeTextFeature","textLabel","getText","showLabelPrompt","element","onModalLabelOk","setTextOnFeature","onModalLabelCancel","onModalOkCbk","maxLabelLineLength","label","stringDivider","dragging","_this$props8","pixel","getEventPixel","originalEvent","hit","hasFeatureAtPixel","layerFilter","l","getTargetElement","cursor","warn","componentDidMount","createDigitizeLayer","componentWillUnmount","render","_this$props9","className","modalPromptTitle","modalPromptOkButtonText","modalPromptCancelButtonText","passThroughProps","finalClassName","btnWrapperClass","createElement","title","okText","cancelText","visible","closable","onOk","onCancel","onChange","onLabelChange","autosize","Component","string","instanceOf","isRequired","oneOf","oneOfType","func","object","number","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nrequire(\"antd/es/modal/style\");\n\nvar _modal = _interopRequireDefault(require(\"antd/es/modal\"));\n\nrequire(\"antd/es/input/style\");\n\nvar _input = _interopRequireDefault(require(\"antd/es/input\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _Map = _interopRequireDefault(require(\"ol/Map\"));\n\nvar _Vector = _interopRequireDefault(require(\"ol/layer/Vector\"));\n\nvar _Vector2 = _interopRequireDefault(require(\"ol/source/Vector\"));\n\nvar _Collection = _interopRequireDefault(require(\"ol/Collection\"));\n\nvar _Style = _interopRequireDefault(require(\"ol/style/Style\"));\n\nvar _Stroke = _interopRequireDefault(require(\"ol/style/Stroke\"));\n\nvar _Fill = _interopRequireDefault(require(\"ol/style/Fill\"));\n\nvar _Circle = _interopRequireDefault(require(\"ol/style/Circle\"));\n\nvar _Text = _interopRequireDefault(require(\"ol/style/Text\"));\n\nvar _Draw = _interopRequireWildcard(require(\"ol/interaction/Draw\"));\n\nvar _Select = _interopRequireDefault(require(\"ol/interaction/Select\"));\n\nvar _Modify = _interopRequireDefault(require(\"ol/interaction/Modify\"));\n\nvar _Translate = _interopRequireDefault(require(\"ol/interaction/Translate\"));\n\nvar _condition = require(\"ol/events/condition\");\n\nvar _isFunction = _interopRequireDefault(require(\"lodash/isFunction\"));\n\nvar _ToggleButton = _interopRequireDefault(require(\"../ToggleButton/ToggleButton.js\"));\n\nvar _MapUtil = _interopRequireDefault(require(\"@terrestris/ol-util/dist/MapUtil/MapUtil\"));\n\nvar _StringUtil = _interopRequireDefault(require(\"@terrestris/base-util/dist/StringUtil/StringUtil\"));\n\nvar _AnimateUtil = _interopRequireDefault(require(\"@terrestris/ol-util/dist/AnimateUtil/AnimateUtil\"));\n\nvar _Logger = _interopRequireDefault(require(\"@terrestris/base-util/dist/Logger\"));\n\nvar _constants = require(\"../../constants\");\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj[\"default\"] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { if (i % 2) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } else { Object.defineProperties(target, Object.getOwnPropertyDescriptors(arguments[i])); } } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar TextArea = _input[\"default\"].TextArea;\n\n/**\n * The DigitizeButton.\n *\n * @class The DigitizeButton\n * @extends React.Component\n *\n */\nvar DigitizeButton =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DigitizeButton, _React$Component);\n\n  /**\n   * The className added to this component.\n   *\n   * @type {String}\n   * @private\n   */\n\n  /**\n   * Currently existing digitize features as collection.\n   *\n   * @type {OlCollection}\n   * @private\n   */\n\n  /**\n   * Currently drawn feature which should be represent as label or postit.\n   * @type {OlFeature}\n   * @private\n   */\n\n  /**\n   * Reference to OL select interaction which will be used in edit mode.\n   * @type {OlInteractionSelect}\n   * @private\n   */\n\n  /**\n   * Name of point draw type.\n   * @private\n   */\n\n  /**\n   * Name of line string draw type.\n   * @private\n   */\n\n  /**\n   * Name of polygon draw type.\n   * @private\n   */\n\n  /**\n   * Name of circle draw type.\n   * @private\n   */\n\n  /**\n   * Name of rectangle draw type.\n   * @private\n   */\n\n  /**\n   * Name of text draw type.\n   * @private\n   */\n\n  /**\n   * Name of copy edit type.\n   * @private\n   */\n\n  /**\n   * Name of edit edit type.\n   * @private\n   */\n\n  /**\n   * Name of delete edit type.\n   * @private\n   */\n\n  /**\n   * Default fill color used in style object of drawn features.\n   *\n   * @type {String}\n   */\n\n  /**\n   * Default stroke color used in style object of drawn features.\n   *\n   * @type {String}\n   */\n\n  /**\n   * Hit detection in pixels used for select interaction.\n   *\n   * @type {Number}\n   */\n\n  /**\n   * Default style for digitized points.\n   *\n   * @type {OlStyleStyle}\n   */\n\n  /**\n   * Default style for digitized lines.\n   *\n   * @type {OlStyleStyle}\n   */\n\n  /**\n   * Default style for digitized polygons or circles.\n   *\n   * @type {OlStyleStyle}\n   */\n\n  /**\n   * Default style for digitized labels.\n   *\n   * @type {OlStyleStyle}\n   */\n\n  /**\n   * The properties.\n   * @type {Object}\n   */\n\n  /**\n   * The default properties.\n   * @type {Object}\n   */\n  function DigitizeButton(props) {\n    var _this;\n\n    _classCallCheck(this, DigitizeButton);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DigitizeButton).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"className\", \"\".concat(_constants.CSS_PREFIX, \"digitizebutton\"));\n\n    _defineProperty(_assertThisInitialized(_this), \"_digitizeFeatures\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_digitizeTextFeature\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_selectInteraction\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"onToggle\", function (pressed) {\n      var _this$props = _this.props,\n          map = _this$props.map,\n          drawType = _this$props.drawType,\n          editType = _this$props.editType,\n          drawStyle = _this$props.drawStyle,\n          onFeatureSelect = _this$props.onFeatureSelect;\n      var _this$state = _this.state,\n          digitizeLayer = _this$state.digitizeLayer,\n          interactions = _this$state.interactions;\n\n      _this.props.onToggle(pressed);\n\n      _this._digitizeFeatures = digitizeLayer.getSource().getFeaturesCollection();\n\n      if (pressed) {\n        if (drawStyle) {\n          digitizeLayer.setStyle(_this.getDigitizeStyleFunction);\n        }\n\n        if (drawType) {\n          _this.createDrawInteraction(pressed);\n        } else if (editType) {\n          _this.createSelectOrModifyInteraction();\n        }\n      } else {\n        interactions.forEach(function (i) {\n          return map.removeInteraction(i);\n        });\n\n        if (drawType === DigitizeButton.TEXT_DRAW_TYPE) {\n          _this._digitizeFeatures.un('add', _this.handleTextAdding);\n        } else {\n          if (_this._selectInteraction) {\n            _this._selectInteraction.getFeatures().clear();\n          }\n\n          if (editType === DigitizeButton.DELETE_EDIT_TYPE) {\n            _this._selectInteraction.un('select', _this.onFeatureRemove);\n          }\n\n          if (editType === DigitizeButton.COPY_EDIT_TYPE) {\n            _this._selectInteraction.un('select', _this.onFeatureCopy);\n          }\n\n          if ((0, _isFunction[\"default\"])(onFeatureSelect) && editType === DigitizeButton.EDIT_EDIT_TYPE) {\n            _this._selectInteraction.un('select', onFeatureSelect);\n          }\n\n          map.un('pointermove', _this.onPointerMove);\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"createDigitizeLayer\", function () {\n      var _this$props2 = _this.props,\n          digitizeLayerName = _this$props2.digitizeLayerName,\n          map = _this$props2.map;\n\n      var digitizeLayer = _MapUtil[\"default\"].getLayerByName(map, digitizeLayerName);\n\n      if (!digitizeLayer) {\n        digitizeLayer = new _Vector[\"default\"]({\n          name: digitizeLayerName,\n          source: new _Vector2[\"default\"]({\n            features: new _Collection[\"default\"]()\n          })\n        });\n        map.addLayer(digitizeLayer);\n      }\n\n      digitizeLayer.setStyle(_this.getDigitizeStyleFunction);\n\n      _this.setState({\n        digitizeLayer: digitizeLayer\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getDigitizeStyleFunction\", function (feature) {\n      var drawStyle = _this.props.drawStyle;\n      var styleObj;\n\n      switch (feature.getGeometry().getType()) {\n        case DigitizeButton.POINT_DRAW_TYPE:\n          {\n            if (!feature.get('isLabel')) {\n              styleObj = drawStyle || new _Style[\"default\"]({\n                image: new _Circle[\"default\"]({\n                  radius: 7,\n                  fill: new _Fill[\"default\"]({\n                    color: DigitizeButton.DEFAULT_FILL_COLOR\n                  }),\n                  stroke: new _Stroke[\"default\"]({\n                    color: DigitizeButton.DEFAULT_STROKE_COLOR\n                  })\n                })\n              });\n            } else {\n              styleObj = drawStyle || new _Style[\"default\"]({\n                text: new _Text[\"default\"]({\n                  text: feature.get('label'),\n                  offsetX: 5,\n                  offsetY: 5,\n                  font: '12px sans-serif',\n                  fill: new _Fill[\"default\"]({\n                    color: DigitizeButton.DEFAULT_FILL_COLOR\n                  }),\n                  stroke: new _Stroke[\"default\"]({\n                    color: DigitizeButton.DEFAULT_STROKE_COLOR\n                  })\n                })\n              });\n            }\n\n            return styleObj;\n          }\n\n        case DigitizeButton.LINESTRING_DRAW_TYPE:\n          {\n            styleObj = drawStyle || new _Style[\"default\"]({\n              stroke: new _Stroke[\"default\"]({\n                color: DigitizeButton.DEFAULT_STROKE_COLOR,\n                width: 2\n              })\n            });\n            return styleObj;\n          }\n\n        case DigitizeButton.POLYGON_DRAW_TYPE:\n        case DigitizeButton.CIRCLE_DRAW_TYPE:\n          {\n            styleObj = drawStyle || new _Style[\"default\"]({\n              fill: new _Fill[\"default\"]({\n                color: DigitizeButton.DEFAULT_FILL_COLOR\n              }),\n              stroke: new _Stroke[\"default\"]({\n                color: DigitizeButton.DEFAULT_STROKE_COLOR,\n                width: 2\n              })\n            });\n            return styleObj;\n          }\n\n        default:\n          {\n            break;\n          }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getSelectedStyleFunction\", function (feature, res, text) {\n      var _this$props3 = _this.props,\n          selectFillColor = _this$props3.selectFillColor,\n          selectStrokeColor = _this$props3.selectStrokeColor;\n\n      if (feature.get('label')) {\n        text = feature.get('label');\n      }\n\n      return new _Style[\"default\"]({\n        image: new _Circle[\"default\"]({\n          radius: 7,\n          fill: new _Fill[\"default\"]({\n            color: selectFillColor\n          }),\n          stroke: new _Stroke[\"default\"]({\n            color: selectStrokeColor\n          })\n        }),\n        text: new _Text[\"default\"]({\n          text: text ? text : '',\n          offsetX: 5,\n          offsetY: 5,\n          font: '12px sans-serif',\n          fill: new _Fill[\"default\"]({\n            color: selectFillColor\n          }),\n          stroke: new _Stroke[\"default\"]({\n            color: selectStrokeColor\n          })\n        }),\n        stroke: new _Stroke[\"default\"]({\n          color: selectStrokeColor,\n          width: 2\n        }),\n        fill: new _Fill[\"default\"]({\n          color: selectFillColor\n        })\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"createDrawInteraction\", function (pressed) {\n      var _this$props4 = _this.props,\n          drawType = _this$props4.drawType,\n          map = _this$props4.map,\n          onDrawEnd = _this$props4.onDrawEnd,\n          onDrawStart = _this$props4.onDrawStart,\n          digitizeLayerName = _this$props4.digitizeLayerName,\n          drawInteractionConfig = _this$props4.drawInteractionConfig;\n      var geometryFunction;\n      var type = drawType; // check whether the digitizeLayer is in map and set it from state if not\n\n      var digitizeLayer = _MapUtil[\"default\"].getLayerByName(map, digitizeLayerName);\n\n      if (!digitizeLayer) {\n        map.addLayer(_this.state.digitizeLayer);\n      }\n\n      if (drawType === DigitizeButton.RECTANGLE_DRAW_TYPE) {\n        geometryFunction = (0, _Draw.createBox)();\n        type = DigitizeButton.CIRCLE_DRAW_TYPE;\n      } else if (drawType === DigitizeButton.TEXT_DRAW_TYPE) {\n        type = DigitizeButton.POINT_DRAW_TYPE;\n\n        _this._digitizeFeatures.on('add', _this.handleTextAdding);\n      }\n\n      var drawInteraction = new _Draw[\"default\"](_objectSpread({\n        source: _this.state.digitizeLayer.getSource(),\n        type: type,\n        geometryFunction: geometryFunction,\n        style: _this.getDigitizeStyleFunction,\n        freehandCondition: _condition.never\n      }, drawInteractionConfig));\n\n      if (onDrawEnd) {\n        drawInteraction.on('drawend', onDrawEnd);\n      }\n\n      if (onDrawStart) {\n        drawInteraction.on('drawstart', onDrawStart);\n      }\n\n      map.addInteraction(drawInteraction);\n\n      _this.setState({\n        interactions: [drawInteraction]\n      }, function () {\n        drawInteraction.setActive(pressed);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"createSelectOrModifyInteraction\", function () {\n      var _this$props5 = _this.props,\n          editType = _this$props5.editType,\n          map = _this$props5.map,\n          selectInteractionConfig = _this$props5.selectInteractionConfig,\n          modifyInteractionConfig = _this$props5.modifyInteractionConfig,\n          translateInteractionConfig = _this$props5.translateInteractionConfig,\n          onFeatureSelect = _this$props5.onFeatureSelect;\n      _this._selectInteraction = new _Select[\"default\"](_objectSpread({\n        condition: _condition.singleClick,\n        hitTolerance: DigitizeButton.HIT_TOLERANCE,\n        style: _this.getSelectedStyleFunction\n      }, selectInteractionConfig));\n\n      if (editType === DigitizeButton.DELETE_EDIT_TYPE) {\n        _this._selectInteraction.on('select', _this.onFeatureRemove);\n      } else if (editType === DigitizeButton.COPY_EDIT_TYPE) {\n        _this._selectInteraction.on('select', _this.onFeatureCopy);\n      }\n\n      if ((0, _isFunction[\"default\"])(onFeatureSelect) && editType === DigitizeButton.EDIT_EDIT_TYPE) {\n        _this._selectInteraction.on('select', onFeatureSelect);\n      }\n\n      var interactions = [_this._selectInteraction];\n\n      if (editType === DigitizeButton.EDIT_EDIT_TYPE) {\n        var edit = new _Modify[\"default\"](_objectSpread({\n          features: _this._selectInteraction.getFeatures(),\n          deleteCondition: _condition.singleClick,\n          style: _this.getSelectedStyleFunction\n        }, modifyInteractionConfig));\n        edit.on('modifystart', _this.onModifyStart);\n        edit.on('modifyend', _this.onModifyEnd);\n        var translate = new _Translate[\"default\"](_objectSpread({\n          features: _this._selectInteraction.getFeatures()\n        }, translateInteractionConfig));\n        translate.on('translatestart', _this.onTranslateStart);\n        translate.on('translateend', _this.onTranslateEnd);\n        translate.on('translating', _this.onTranslating);\n        interactions.push(edit, translate);\n      }\n\n      interactions.forEach(function (i) {\n        return map.addInteraction(i);\n      });\n      map.on('pointermove', _this.onPointerMove);\n\n      _this.setState({\n        interactions: interactions\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onFeatureRemove\", function (evt) {\n      var _this$props6 = _this.props,\n          onFeatureRemove = _this$props6.onFeatureRemove,\n          onFeatureSelect = _this$props6.onFeatureSelect;\n\n      if ((0, _isFunction[\"default\"])(onFeatureRemove)) {\n        onFeatureRemove(evt);\n      }\n\n      if ((0, _isFunction[\"default\"])(onFeatureSelect)) {\n        onFeatureSelect(evt);\n      }\n\n      var feat = evt.selected[0];\n\n      _this._selectInteraction.getFeatures().remove(feat);\n\n      _this.state.digitizeLayer.getSource().removeFeature(feat);\n\n      _this.props.map.renderSync();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onFeatureCopy\", function (evt) {\n      var _this$props7 = _this.props,\n          onFeatureCopy = _this$props7.onFeatureCopy,\n          onFeatureSelect = _this$props7.onFeatureSelect;\n      var feat = evt.selected[0];\n\n      if (!feat) {\n        return;\n      }\n\n      if ((0, _isFunction[\"default\"])(onFeatureCopy)) {\n        onFeatureCopy(evt);\n      }\n\n      if ((0, _isFunction[\"default\"])(onFeatureSelect)) {\n        onFeatureSelect(evt);\n      }\n\n      var copy = feat.clone();\n      copy.setStyle(feat.getStyle());\n\n      _this._digitizeFeatures.push(copy);\n\n      _AnimateUtil[\"default\"].moveFeature(_this.props.map, copy, 500, 50, feat.getStyle());\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onModifyStart\", function (evt) {\n      var onModifyStart = _this.props.onModifyStart;\n\n      if ((0, _isFunction[\"default\"])(onModifyStart)) {\n        onModifyStart(evt);\n      }\n\n      var feature = evt.features.getArray()[0];\n\n      if (feature.get('isLabel')) {\n        _this._digitizeTextFeature = feature;\n        var textLabel = '';\n\n        if (feature.getStyle() && feature.getStyle().getText()) {\n          textLabel = feature.getStyle().getText().getText();\n        } else if (feature.get('label')) {\n          textLabel = feature.get('label');\n        }\n\n        _this.setState({\n          showLabelPrompt: true,\n          textLabel: textLabel\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onModifyEnd\", function (evt) {\n      var onModifyEnd = _this.props.onModifyEnd;\n\n      if ((0, _isFunction[\"default\"])(onModifyEnd)) {\n        onModifyEnd(evt);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onTranslateStart\", function (evt) {\n      var onTranslateStart = _this.props.onTranslateStart;\n\n      if ((0, _isFunction[\"default\"])(onTranslateStart)) {\n        onTranslateStart(evt);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onTranslateEnd\", function (evt) {\n      var onTranslateEnd = _this.props.onTranslateEnd;\n\n      if ((0, _isFunction[\"default\"])(onTranslateEnd)) {\n        onTranslateEnd(evt);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onTranslating\", function (evt) {\n      var onTranslating = _this.props.onTranslating;\n\n      if ((0, _isFunction[\"default\"])(onTranslating)) {\n        onTranslating(evt);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleTextAdding\", function (evt) {\n      _this.setState({\n        showLabelPrompt: true\n      });\n\n      _this._digitizeTextFeature = evt.element;\n\n      _this._digitizeTextFeature.set('isLabel', true);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onModalLabelOk\", function () {\n      var onModalLabelOk = _this.props.onModalLabelOk;\n\n      _this.setState({\n        showLabelPrompt: false\n      }, function () {\n        _this.setTextOnFeature(_this._digitizeTextFeature, onModalLabelOk);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onModalLabelCancel\", function () {\n      var onModalLabelCancel = _this.props.onModalLabelCancel;\n\n      _this.setState({\n        showLabelPrompt: false,\n        textLabel: ''\n      }, function () {\n        if (!(_this.state.interactions.length > 1)) {\n          _this._digitizeFeatures.remove(_this._digitizeTextFeature);\n\n          _this._digitizeTextFeature = null;\n        }\n\n        if ((0, _isFunction[\"default\"])(onModalLabelCancel)) {\n          onModalLabelCancel();\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setTextOnFeature\", function (feat, onModalOkCbk) {\n      var maxLabelLineLength = _this.props.maxLabelLineLength;\n      var textLabel = _this.state.textLabel;\n      var label = textLabel;\n\n      if (maxLabelLineLength) {\n        label = _StringUtil[\"default\"].stringDivider(textLabel, maxLabelLineLength, '\\n');\n      }\n\n      feat.set('label', label);\n\n      _this.setState({\n        textLabel: ''\n      }, function () {\n        if ((0, _isFunction[\"default\"])(onModalOkCbk)) {\n          onModalOkCbk(feat, label);\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onLabelChange\", function (evt) {\n      _this.setState({\n        textLabel: evt.target.value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onPointerMove\", function (evt) {\n      if (evt.dragging) {\n        return;\n      }\n\n      var _this$props8 = _this.props,\n          map = _this$props8.map,\n          digitizeLayerName = _this$props8.digitizeLayerName;\n      var pixel = map.getEventPixel(evt.originalEvent);\n      var hit = map.hasFeatureAtPixel(pixel, {\n        layerFilter: function layerFilter(l) {\n          return l.get('name') === digitizeLayerName;\n        },\n        hitTolerance: DigitizeButton.HIT_TOLERANCE\n      });\n      map.getTargetElement().style.cursor = hit ? 'pointer' : '';\n    });\n\n    if (!_this.props.drawType && !_this.props.editType) {\n      _Logger[\"default\"].warn('Neither \"drawType\" nor \"editType\" was provided. Digitize ' + 'button won\\'t work properly!');\n    }\n\n    _this.state = {\n      digitizeLayer: null,\n      interactions: [],\n      showLabelPrompt: false,\n      textLabel: ''\n    };\n    return _this;\n  }\n  /**\n   * `componentDidMount` method of the DigitizeButton. Just calls\n   * `createDigitizeLayer` method.\n   */\n\n\n  _createClass(DigitizeButton, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.createDigitizeLayer();\n    }\n    /**\n     * Called on componentWillUnmount lifecycle.\n     */\n\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var map = this.props.map;\n      var interactions = this.state.interactions;\n      interactions.forEach(function (i) {\n        return map.removeInteraction(i);\n      });\n    }\n    /**\n     * Called when the digitize button is toggled. If the button state is pressed,\n     * the appropriate draw, modify or select interaction will be created.\n     * Otherwise, by untoggling, the same previously created interaction will be\n     * removed from the map.\n     *\n     * @param {Boolean} pressed Whether the digitize button is pressed or not.\n     */\n\n  }, {\n    key: \"render\",\n\n    /**\n     * The render function.\n     */\n    value: function render() {\n      var _this$props9 = this.props,\n          className = _this$props9.className,\n          map = _this$props9.map,\n          drawType = _this$props9.drawType,\n          editType = _this$props9.editType,\n          digitizeLayerName = _this$props9.digitizeLayerName,\n          drawStyle = _this$props9.drawStyle,\n          selectFillColor = _this$props9.selectFillColor,\n          selectStrokeColor = _this$props9.selectStrokeColor,\n          modalPromptTitle = _this$props9.modalPromptTitle,\n          modalPromptOkButtonText = _this$props9.modalPromptOkButtonText,\n          modalPromptCancelButtonText = _this$props9.modalPromptCancelButtonText,\n          onDrawStart = _this$props9.onDrawStart,\n          onDrawEnd = _this$props9.onDrawEnd,\n          onModifyStart = _this$props9.onModifyStart,\n          onModifyEnd = _this$props9.onModifyEnd,\n          onTranslateStart = _this$props9.onTranslateStart,\n          onTranslateEnd = _this$props9.onTranslateEnd,\n          onTranslating = _this$props9.onTranslating,\n          onFeatureRemove = _this$props9.onFeatureRemove,\n          onFeatureCopy = _this$props9.onFeatureCopy,\n          onFeatureSelect = _this$props9.onFeatureSelect,\n          drawInteractionConfig = _this$props9.drawInteractionConfig,\n          selectInteractionConfig = _this$props9.selectInteractionConfig,\n          modifyInteractionConfig = _this$props9.modifyInteractionConfig,\n          translateInteractionConfig = _this$props9.translateInteractionConfig,\n          onToggle = _this$props9.onToggle,\n          onModalLabelOk = _this$props9.onModalLabelOk,\n          onModalLabelCancel = _this$props9.onModalLabelCancel,\n          maxLabelLineLength = _this$props9.maxLabelLineLength,\n          passThroughProps = _objectWithoutProperties(_this$props9, [\"className\", \"map\", \"drawType\", \"editType\", \"digitizeLayerName\", \"drawStyle\", \"selectFillColor\", \"selectStrokeColor\", \"modalPromptTitle\", \"modalPromptOkButtonText\", \"modalPromptCancelButtonText\", \"onDrawStart\", \"onDrawEnd\", \"onModifyStart\", \"onModifyEnd\", \"onTranslateStart\", \"onTranslateEnd\", \"onTranslating\", \"onFeatureRemove\", \"onFeatureCopy\", \"onFeatureSelect\", \"drawInteractionConfig\", \"selectInteractionConfig\", \"modifyInteractionConfig\", \"translateInteractionConfig\", \"onToggle\", \"onModalLabelOk\", \"onModalLabelCancel\", \"maxLabelLineLength\"]);\n\n      var finalClassName = className ? \"\".concat(className, \" \").concat(this.className) : this.className;\n      var btnWrapperClass = \"\".concat(_constants.CSS_PREFIX, \"digitize-button-wrapper\");\n      return _react[\"default\"].createElement(\"span\", {\n        className: btnWrapperClass\n      }, _react[\"default\"].createElement(_ToggleButton[\"default\"], _extends({\n        onToggle: this.onToggle,\n        className: finalClassName\n      }, passThroughProps)), this.state.showLabelPrompt ? _react[\"default\"].createElement(_modal[\"default\"], {\n        title: modalPromptTitle,\n        okText: modalPromptOkButtonText,\n        cancelText: modalPromptCancelButtonText,\n        visible: this.state.showLabelPrompt,\n        closable: false,\n        onOk: this.onModalLabelOk,\n        onCancel: this.onModalLabelCancel\n      }, _react[\"default\"].createElement(TextArea, {\n        value: this.state.textLabel,\n        onChange: this.onLabelChange,\n        autosize: true\n      })) : null);\n    }\n  }]);\n\n  return DigitizeButton;\n}(_react[\"default\"].Component);\n\n_defineProperty(DigitizeButton, \"POINT_DRAW_TYPE\", 'Point');\n\n_defineProperty(DigitizeButton, \"LINESTRING_DRAW_TYPE\", 'LineString');\n\n_defineProperty(DigitizeButton, \"POLYGON_DRAW_TYPE\", 'Polygon');\n\n_defineProperty(DigitizeButton, \"CIRCLE_DRAW_TYPE\", 'Circle');\n\n_defineProperty(DigitizeButton, \"RECTANGLE_DRAW_TYPE\", 'Rectangle');\n\n_defineProperty(DigitizeButton, \"TEXT_DRAW_TYPE\", 'Text');\n\n_defineProperty(DigitizeButton, \"COPY_EDIT_TYPE\", 'Copy');\n\n_defineProperty(DigitizeButton, \"EDIT_EDIT_TYPE\", 'Edit');\n\n_defineProperty(DigitizeButton, \"DELETE_EDIT_TYPE\", 'Delete');\n\n_defineProperty(DigitizeButton, \"DEFAULT_FILL_COLOR\", 'rgba(154, 26, 56, 0.5)');\n\n_defineProperty(DigitizeButton, \"DEFAULT_STROKE_COLOR\", 'rgba(154, 26, 56, 0.8)');\n\n_defineProperty(DigitizeButton, \"HIT_TOLERANCE\", 5);\n\n_defineProperty(DigitizeButton, \"DEFAULT_POINT_STYLE\", new _Style[\"default\"]({\n  image: new _Circle[\"default\"]({\n    radius: 7,\n    fill: new _Fill[\"default\"]({\n      color: DigitizeButton.DEFAULT_FILL_COLOR\n    }),\n    stroke: new _Stroke[\"default\"]({\n      color: DigitizeButton.DEFAULT_STROKE_COLOR\n    })\n  })\n}));\n\n_defineProperty(DigitizeButton, \"DEFAULT_LINESTRING_STYLE\", new _Style[\"default\"]({\n  stroke: new _Stroke[\"default\"]({\n    color: DigitizeButton.DEFAULT_STROKE_COLOR,\n    width: 2\n  })\n}));\n\n_defineProperty(DigitizeButton, \"DEFAULT_POLYGON_STYLE\", new _Style[\"default\"]({\n  fill: new _Fill[\"default\"]({\n    color: DigitizeButton.DEFAULT_FILL_COLOR\n  }),\n  stroke: new _Stroke[\"default\"]({\n    color: DigitizeButton.DEFAULT_STROKE_COLOR,\n    width: 2\n  })\n}));\n\n_defineProperty(DigitizeButton, \"DEFAULT_TEXT_STYLE\", new _Style[\"default\"]({\n  text: new _Text[\"default\"]({\n    text: '',\n    offsetX: 5,\n    offsetY: 5,\n    font: '12px sans-serif',\n    fill: new _Fill[\"default\"]({\n      color: DigitizeButton.DEFAULT_FILL_COLOR\n    }),\n    stroke: new _Stroke[\"default\"]({\n      color: DigitizeButton.DEFAULT_STROKE_COLOR\n    })\n  })\n}));\n\n_defineProperty(DigitizeButton, \"propTypes\", {\n  /**\n   * The className which should be added.\n   *\n   * @type {String}\n   */\n  className: _propTypes[\"default\"].string,\n\n  /**\n   * Instance of OL map this component is bound to.\n   *\n   * @type {OlMap}\n   */\n  map: _propTypes[\"default\"].instanceOf(_Map[\"default\"]).isRequired,\n\n  /**\n   * Whether the line, point, polygon, circle, rectangle or text shape should\n   * be drawn.\n   *\n   * @type {String}\n   */\n  drawType: _propTypes[\"default\"].oneOf(['Point', 'LineString', 'Polygon', 'Circle', 'Rectangle', 'Text']),\n\n  /**\n   * Whether the digitize feature should be deleted, copied or modified.\n   * be drawn.\n   *\n   * @type {String}\n   */\n  editType: _propTypes[\"default\"].oneOf(['Copy', 'Edit', 'Delete']),\n\n  /**\n   * Name of system vector layer which will be used for digitize features.\n   *\n   * @type {String}\n   */\n  digitizeLayerName: _propTypes[\"default\"].string,\n\n  /**\n   * Fill color of selected digitize feature.\n   *\n   * @type {String}\n   */\n  selectFillColor: _propTypes[\"default\"].string,\n\n  /**\n   * Stroke color of selected digitize feature.\n   *\n   * @type {String}\n   */\n  selectStrokeColor: _propTypes[\"default\"].string,\n\n  /**\n   * Title for modal used for input of labels for digitize features.\n   *\n   * @type {String}\n   */\n  modalPromptTitle: _propTypes[\"default\"].string,\n\n  /**\n   * Text string for `OK` button of the modal.\n   *\n   * @type {String}\n   */\n  modalPromptOkButtonText: _propTypes[\"default\"].string,\n\n  /**\n   * Text string for `Cancel` button of the modal.\n   *\n   * @type {String}\n   */\n  modalPromptCancelButtonText: _propTypes[\"default\"].string,\n\n  /**\n   * Style object / style function for drawn feature.\n   *\n   * @type {OlStyleStyle | FeatureStyleFunction}\n   */\n  drawStyle: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].instanceOf(_Style[\"default\"]), _propTypes[\"default\"].func]),\n\n  /**\n   * Listener function for the 'drawend' event of an ol.interaction.Draw.\n   * See https://openlayers.org/en/latest/apidoc/module-ol_interaction_Draw-DrawEvent.html\n   * for more information.\n   */\n  onDrawEnd: _propTypes[\"default\"].func,\n\n  /**\n   * Listener function for the 'drawstart' event of an ol.interaction.Draw.\n   * See https://openlayers.org/en/latest/apidoc/module-ol_interaction_Draw-DrawEvent.html\n   * for more information.\n   */\n  onDrawStart: _propTypes[\"default\"].func,\n\n  /**\n   * Listener function for the 'modifystart' event of an ol.interaction.Modify.\n   * See https://openlayers.org/en/latest/apidoc/module-ol_interaction_Modify-ModifyEvent.html\n   * for more information.\n   */\n  onModifyStart: _propTypes[\"default\"].func,\n\n  /**\n   * Listener function for the 'modifyend' event of an ol.interaction.Modify.\n   * See https://openlayers.org/en/latest/apidoc/module-ol_interaction_Modify-ModifyEvent.html\n   * for more information.\n   */\n  onModifyEnd: _propTypes[\"default\"].func,\n\n  /**\n   * Listener function for the 'translatestart' event of an ol.interaction.Translate.\n   * See https://openlayers.org/en/latest/apidoc/module-ol_interaction_Translate-TranslateEvent.html\n   * for more information.\n   */\n  onTranslateStart: _propTypes[\"default\"].func,\n\n  /**\n   * Listener function for the 'translateend' event of an ol.interaction.Translate.\n   * See https://openlayers.org/en/latest/apidoc/module-ol_interaction_Translate-TranslateEvent.html\n   * for more information.\n   */\n  onTranslateEnd: _propTypes[\"default\"].func,\n\n  /**\n   * Listener function for the 'translating' event of an ol.interaction.Translate.\n   * See https://openlayers.org/en/latest/apidoc/module-ol_interaction_Translate-TranslateEvent.html\n   * for more information.\n   */\n  onTranslating: _propTypes[\"default\"].func,\n\n  /**\n   * Listener function for the 'select' event of the ol.interaction.Select\n   * if in `Delete` mode.\n   * See https://openlayers.org/en/latest/apidoc/module-ol_interaction_Select-SelectEvent.html\n   * for more information.\n   */\n  onFeatureRemove: _propTypes[\"default\"].func,\n\n  /**\n   * Listener function for the 'select' event of the ol.interaction.Select\n   * if in `Copy` mode.\n   * See https://openlayers.org/en/latest/apidoc/module-ol_interaction_Select-SelectEvent.html\n   * for more information.\n   */\n  onFeatureCopy: _propTypes[\"default\"].func,\n\n  /**\n   * Additional configuration object to apply to the ol.interaction.Draw.\n   * See https://openlayers.org/en/latest/apidoc/module-ol_interaction_Draw-Draw.html\n   * for more information\n   *\n   * Note: The keys source, type, geometryFunction, style and freehandCondition\n   *       are handled internally and shouldn't be overwritten without any\n   *       specific cause.\n   */\n  drawInteractionConfig: _propTypes[\"default\"].object,\n\n  /**\n   * Additional configuration object to apply to the ol.interaction.Select.\n   * See https://openlayers.org/en/latest/apidoc/module-ol_interaction_Select-Select.html\n   * for more information\n   *\n   * Note: The keys condition, hitTolerance and style are handled internally\n   *       and shouldn't be overwritten without any specific cause.\n   */\n  selectInteractionConfig: _propTypes[\"default\"].object,\n\n  /**\n   * Additional configuration object to apply to the ol.interaction.Modify.\n   * See https://openlayers.org/en/latest/apidoc/module-ol_interaction_Modify-Modify.html\n   * for more information\n   *\n   * Note: The keys features, deleteCondition and style are handled internally\n   *       and shouldn't be overwritten without any specific cause.\n   */\n  modifyInteractionConfig: _propTypes[\"default\"].object,\n\n  /**\n   * Additional configuration object to apply to the ol.interaction.Translate.\n   * See https://openlayers.org/en/latest/apidoc/module-ol_interaction_Translate-Translate.html\n   * for more information\n   *\n   * Note: The key feature is handled internally and shouldn't be overwritten\n   *       without any specific cause.\n   */\n  translateInteractionConfig: _propTypes[\"default\"].object,\n\n  /**\n   * A custom onToogle function that will be called\n   * if button is toggled\n   *\n   * @type {Function} onToggle\n   */\n  onToggle: _propTypes[\"default\"].func,\n\n  /**\n   * Callback function that will be called\n   * when the ok-button of the modal was clicked\n   *\n   * @type {Function} onModalLabelOk\n   */\n  onModalLabelOk: _propTypes[\"default\"].func,\n\n  /**\n   * Callback function that will be called\n   * when the cancel-button of the modal was clicked\n   *\n   * @type {Function} onModalLabelCancel\n   */\n  onModalLabelCancel: _propTypes[\"default\"].func,\n\n  /**\n   * Listener function for the 'select' event of the ol.interaction.Select\n   * if in `Edit` mode.\n   * Can be also called inside of 'select' listener function of\n   * the ol.interaction.Select in `Copy` and `Delete` mode if provided.\n   * See https://openlayers.org/en/latest/apidoc/module-ol_interaction_Select.html\n   * for more information.\n   */\n  onFeatureSelect: _propTypes[\"default\"].func,\n\n  /**\n   * Maximal length of feature label.\n   * If exceeded label will be divided into multiple lines. Optional.\n   *\n   * @type {Number} maxLabelLineLength\n   */\n  maxLabelLineLength: _propTypes[\"default\"].number\n});\n\n_defineProperty(DigitizeButton, \"defaultProps\", {\n  digitizeLayerName: 'react-geo_digitize',\n  selectFillColor: 'rgba(240, 240, 90, 0.5)',\n  selectStrokeColor: 'rgba(220, 120, 20, 0.8)',\n  modalPromptTitle: 'Label',\n  modalPromptOkButtonText: 'Ok',\n  modalPromptCancelButtonText: 'Cancel',\n  drawInteractionConfig: {},\n  selectInteractionConfig: {},\n  modifyInteractionConfig: {},\n  translateInteractionConfig: {},\n  onToggle: function onToggle() {}\n  /**\n   * Creates the DigitizeButton.\n   *\n   * @constructs DigitizeButton\n   */\n\n});\n\nvar _default = DigitizeButton;\nexports[\"default\"] = _default;"]},"metadata":{},"sourceType":"script"}