{"ast":null,"code":"/**\n * @module ol/format/filter/And\n */\nimport LogicalNary from './LogicalNary.js';\n/**\n * @classdesc\n * Represents a logical `<And>` operator between two or more filter conditions.\n *\n * @abstract\n */\n\nvar And =\n/*@__PURE__*/\nfunction (LogicalNary) {\n  function And(conditions) {\n    LogicalNary.call(this, 'And', Array.prototype.slice.call(arguments));\n  }\n\n  if (LogicalNary) And.__proto__ = LogicalNary;\n  And.prototype = Object.create(LogicalNary && LogicalNary.prototype);\n  And.prototype.constructor = And;\n  return And;\n}(LogicalNary);\n\nexport default And;","map":{"version":3,"sources":["../../../../src/ol/format/filter/And.js"],"names":["super"],"mappings":"AAAA;;;AAGA,OAAO,WAAP,MAAwB,kBAAxB;;;;;;;;AAQA,IAAM,GAAG;AAAoB;AAAA,UAAA,WAAA,EAAA;AAK3B,WAAA,GAAA,CAAY,UAAZ,EAAwB;AACtBA,IAAAA,WAAAA,CAAAA,IAAAA,CAAK,IAALA,EAAM,KAANA,EAAa,KAAK,CAAC,SAAN,CAAgB,KAAhB,CAAsB,IAAtB,CAA2B,SAA3B,CAAbA;;;;;AACD,EAAA,GAAA,CAAA,SAAA,CAAA,WAAA,GAAA,GAAA;;CAP0B,CAAX,WAAW,CAA7B;;AAWA,eAAe,GAAf","sourcesContent":["/**\n * @module ol/format/filter/And\n */\nimport LogicalNary from './LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<And>` operator between two or more filter conditions.\n *\n * @abstract\n */\nclass And extends LogicalNary {\n\n  /**\n   * @param {...import(\"./Filter.js\").default} conditions Conditions.\n   */\n  constructor(conditions) {\n    super('And', Array.prototype.slice.call(arguments));\n  }\n\n}\n\nexport default And;\n"]},"metadata":{},"sourceType":"module"}